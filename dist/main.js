/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/a.js":
/*!******************!*\
  !*** ./src/a.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var a = 123456;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (a);

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ "./node_modules/react-dom/client.js");
/* harmony import */ var _eureka_hybrid_portal_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @eureka/hybrid-portal-adapter */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/index.js");
/* harmony import */ var lzx_test_plugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lzx-test-plugin */ "./node_modules/lzx-test-plugin/dist/esm/lzx-test-plugin.js");
/* harmony import */ var _a__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./a */ "./src/a.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }





debugger;
(0,_eureka_hybrid_portal_adapter__WEBPACK_IMPORTED_MODULE_4__.init)({
  env: 'stand_alone'
});
lzx_test_plugin__WEBPACK_IMPORTED_MODULE_2__.testFn();
var App = function App() {
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('666'),
    _useState2 = _slicedToArray(_useState, 2),
    a = _useState2[0],
    setA = _useState2[1];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, a);
};
var root = react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot(document.getElementById('app'));
root.render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(App, null));

/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_commonjsHelpers.js":
/*!*******************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_commonjsHelpers.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDefaultExportFromCjs: () => (/* binding */ getDefaultExportFromCjs)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_rollupPluginBabelHelpers.js":
/*!****************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_rollupPluginBabelHelpers.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extends": () => (/* binding */ _extends)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/index.js":
/*!********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __module: () => (/* binding */ propTypes)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

var propTypes = {exports: {}};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/factoryWithThrowingShims.js":
/*!******************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/factoryWithThrowingShims.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __require: () => (/* binding */ requireFactoryWithThrowingShims)
/* harmony export */ });
/* harmony import */ var _lib_ReactPropTypesSecret_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/ReactPropTypesSecret.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/lib/ReactPropTypesSecret.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithThrowingShims;
var hasRequiredFactoryWithThrowingShims;

function requireFactoryWithThrowingShims () {
	if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
	hasRequiredFactoryWithThrowingShims = 1;

	var ReactPropTypesSecret = (0,_lib_ReactPropTypesSecret_js__WEBPACK_IMPORTED_MODULE_0__.__require)();

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	factoryWithThrowingShims = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  }	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  }	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bigint: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithThrowingShims;
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/index.js":
/*!***********************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PropTypes)
/* harmony export */ });
/* harmony import */ var _virtual_commonjsHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_virtual/_commonjsHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_commonjsHelpers.js");
/* harmony import */ var _virtual_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_virtual/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/index.js");
/* harmony import */ var _factoryWithThrowingShims_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factoryWithThrowingShims.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/factoryWithThrowingShims.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

{
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  _virtual_index_js__WEBPACK_IMPORTED_MODULE_0__.__module.exports = (0,_factoryWithThrowingShims_js__WEBPACK_IMPORTED_MODULE_1__.__require)()();
}

var propTypesExports = _virtual_index_js__WEBPACK_IMPORTED_MODULE_0__.__module.exports;
const PropTypes = /*@__PURE__*/(0,_virtual_commonjsHelpers_js__WEBPACK_IMPORTED_MODULE_2__.getDefaultExportFromCjs)(propTypesExports);




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!******************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __require: () => (/* binding */ requireReactPropTypesSecret)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret_1;
var hasRequiredReactPropTypesSecret;

function requireReactPropTypesSecret () {
	if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
	hasRequiredReactPropTypesSecret = 1;

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	ReactPropTypesSecret_1 = ReactPropTypesSecret;
	return ReactPropTypesSecret_1;
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/AlertWrapper/AlertWrapper.js":
/*!**********************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/AlertWrapper/AlertWrapper.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AlertWrapper$1)
/* harmony export */ });
/* harmony import */ var _virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_virtual/_rollupPluginBabelHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_rollupPluginBabelHelpers.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/MessageStrip/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





const styles = {
  position: 'fixed',
  top: '20px',
  left: '50%',
  transform: 'translateX(-50%)',
  width: 'auto',
  zIndex: '999'
};
const AlertWrapper = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef((props, ref) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__.MessageStrip, (0,_virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_2__["extends"])({}, props, {
    ref: ref
  })));
});
AlertWrapper.displayName = 'AlertWrapper';
const AlertWrapper$1 = AlertWrapper;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingButton/LoadingButton.js":
/*!************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingButton/LoadingButton.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LoadingButton$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/prop-types/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/index.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js");
/* harmony import */ var _Svg_Svg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Svg/Svg.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/Svg.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






const LoadingButton = props => {
  const {
    className,
    style,
    loading,
    loadingText = 'Loading...',
    showIcon,
    design = 'Default',
    disabled,
    onClick,
    children
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__.Button, {
    className: className,
    style: style,
    design: design,
    disabled: disabled,
    onClick: onClick
  }, loading && showIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Svg_Svg_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
    name: "spinner-white",
    viewBox: "0 0 100 101",
    className: "inline mr-1 w-3.5 h-3.5 text-white animate-spin",
    style: {
      display: 'inline',
      marginRight: '0.25rem',
      width: '0.875rem',
      height: '0.875rem',
      color: 'rgb(255 255 255)',
      animation: 'spin 1s linear infinite',
      '@keyframes spin': {
        to: {
          transform: 'rotate(360deg)'
        }
      }
    }
  }), loading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, loadingText) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, children));
};
LoadingButton.propTypes = {
  className: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  style: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].object,
  loading: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].bool.isRequired,
  loadingText: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  showIcon: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].bool,
  design: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  disabled: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].bool,
  children: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].node,
  onClick: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].func
};
const LoadingButton$1 = LoadingButton;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingWithMask/LoadingWithMask.js":
/*!****************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingWithMask/LoadingWithMask.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LoadingWithMask)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/BusyIndicator/index.js");
/* harmony import */ var _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/prop-types/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





const maskStyles = {
  position: 'absolute',
  top: '0',
  left: '0',
  right: '0',
  bottom: '0',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
  backgroundColor: 'rgba(255, 255, 255, 0.5)'
};
const SearchingIcon = props => {
  const {
    size = _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__["default"].Medium,
    children
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: maskStyles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__.BusyIndicator, {
    active: true,
    size: size
  }), children);
};
SearchingIcon.propTypes = {
  size: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  children: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].node
};
const LoadingWithMask = SearchingIcon;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/Svg.js":
/*!****************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/Svg.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SapSvg)
/* harmony export */ });
/* harmony import */ var _virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_virtual/_rollupPluginBabelHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_rollupPluginBabelHelpers.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/prop-types/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/node_modules/prop-types/index.js");
/* harmony import */ var _paths_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./paths.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/paths.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






const setProperty = (target, prop, val) => {
  if (typeof target !== 'object') {
    return;
  }
  if (val == null) {
    return;
  }
  Reflect.set(target, prop, val);
};
const Svg = props => {
  const {
    className,
    style = {},
    width = '1rem',
    height = '1rem',
    tabIndex = 0,
    role = 'presentation',
    ariaLabel,
    ariaHidden = true,
    focusable = false,
    preserveAspectRatio = 'xMidYMid meet',
    path,
    name,
    fill = 'var(--sapContent_NonInteractiveIconColor)',
    stroke = 'none',
    onClick,
    viewBox = '0 0 512 512',
    ...restProps
  } = props;
  let pathData = path;
  if (name) {
    const localPath = (0,_paths_js__WEBPACK_IMPORTED_MODULE_1__.getPath)(name);
    if (localPath) {
      pathData = localPath;
    }
  }
  if (!pathData) {
    throw new Error('Invalid svg.');
  }
  const defaultSvgStyles = {
    display: 'inline-flex',
    verticalAlign: 'top',
    overflow: 'hidden',
    outline: 'none',
    // width: '1rem',
    // height: '1rem',
    color: '#758ca4'
  };
  const svgProps = {};
  svgProps.className = className ? `sap-svg ${className}` : `sap-svg`;
  svgProps.style = {
    ...defaultSvgStyles,
    ...style
  };
  if (onClick) {
    svgProps.style.cursor = 'pointer';
  }
  setProperty(svgProps, 'width', width);
  setProperty(svgProps, 'height', height);
  setProperty(svgProps, 'tabIndex', tabIndex);
  setProperty(svgProps, 'role', role);
  setProperty(svgProps, 'aria-label', ariaLabel);
  setProperty(svgProps, 'aria-hidden', ariaHidden);
  setProperty(svgProps, 'focusable', focusable);
  setProperty(svgProps, 'preserveAspectRatio', preserveAspectRatio);
  setProperty(svgProps, 'onClick', onClick);
  const pathProps = {};
  setProperty(pathProps, 'fill', fill);
  setProperty(pathProps, 'stroke', stroke);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", (0,_virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_2__["extends"])({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: viewBox
  }, svgProps, restProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    role: role
  }, Array.isArray(pathData) ? pathData.map((path, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    key: index,
    d: path.d,
    fill: path.fill
  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", (0,_virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_2__["extends"])({}, pathProps, {
    d: pathData
  }))));
};
Svg.propTypes = {
  className: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  style: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].object,
  width: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  height: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  viewBox: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  tabIndex: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].number,
  role: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  ariaLabel: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  ariaHidden: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].bool,
  focusable: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].bool,
  preserveAspectRatio: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  path: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  name: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  fill: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  stroke: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].string,
  onClick: _node_modules_prop_types_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].func
};
const SapSvg = Svg;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/paths.js":
/*!******************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/paths.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   acceptPath: () => (/* binding */ acceptPath),
/* harmony export */   addPath: () => (/* binding */ addPath),
/* harmony export */   alertPath: () => (/* binding */ alertPath),
/* harmony export */   declinePath: () => (/* binding */ declinePath),
/* harmony export */   editPath: () => (/* binding */ editPath),
/* harmony export */   errorPath: () => (/* binding */ errorPath),
/* harmony export */   getPath: () => (/* binding */ getPath),
/* harmony export */   informationPath: () => (/* binding */ informationPath),
/* harmony export */   navigationDownArrow: () => (/* binding */ navigationDownArrow),
/* harmony export */   navigationLeftArrow: () => (/* binding */ navigationLeftArrow),
/* harmony export */   navigationRightArrow: () => (/* binding */ navigationRightArrow),
/* harmony export */   navigationUpArrow: () => (/* binding */ navigationUpArrow),
/* harmony export */   pathMap: () => (/* binding */ pathMap),
/* harmony export */   searchPath: () => (/* binding */ searchPath),
/* harmony export */   spinnerWhitePath: () => (/* binding */ spinnerWhitePath),
/* harmony export */   sysCancel2Path: () => (/* binding */ sysCancel2Path),
/* harmony export */   sysEnter2Path: () => (/* binding */ sysEnter2Path)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

const acceptPath = 'M432 153q8 8 8 18v2q0 9-9 18L220 407q-8 8-18 8-12 0-21-9l-93-97q-8-7-8-18 0-12 9-21 7-7 18-7 12 0 21 9l75 76 191-197q7-7 18-7 13 0 20 9z';
const sysEnter2Path = 'M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zM128 256q-14 0-23 9t-9 23q0 12 9 23l64 64q11 9 23 9 13 0 23-9l192-192q9-11 9-23 0-13-9.5-22.5T384 128q-12 0-23 9L192 307l-41-42q-10-9-23-9z';
const sysCancel2Path = 'M375 183q9-10 9-23t-9-23q-10-9-23-9t-23 9l-73 74-73-74q-10-9-23-9t-23 9q-9 10-9 23t9 23l74 73-74 73q-9 10-9 23t9 23q10 9 23 9t23-9l73-74 73 74q10 9 23 9t23-9q9-10 9-23t-9-23l-74-73zM256 512q-53 0-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0t99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20z';
const addPath = 'M286 279v164q0 11-7.5 18.5T260 469q-10 0-18-8-8-6-8-18V279H70q-12 0-18-8-8-8-8-18 0-11 7.5-18.5T70 227h164V63q0-11 7.5-18.5T260 37t18.5 7.5T286 63v164h164q11 0 18.5 7.5T476 253t-7.5 18.5T450 279H286z';
const navigationLeftArrow = 'M340 358q9 9 9 22 0 11-9 22-10 9-22 9-13 0-22-9L172 278q-9-11-9-22 0-13 9-22l124-124q9-9 22-9 12 0 22 9 9 9 9 22 0 11-9 22L237 256z';
const navigationRightArrow = 'M172 155q-9-11-9-22 0-13 9-22t22-9q12 0 21 9l124 124q10 9 10 22 0 12-10 22L215 403q-9 9-21 9-13 0-22-9-9-11-9-22 0-13 9-22l102-102z';
const navigationUpArrow = 'M156.5 340q-9 9-22 9-11 0-22-9-9-11-9-22 0-13 9-22l124-124q11-9 22-9 13 0 22 9l124 124q9 9 9 22 0 11-9 22-9 9-22 9-11 0-22-9l-102-103z';
const navigationDownArrow = 'M360.5 172q11-9 22-9 13 0 22 9 9 10 9 22 0 11-9 22l-124 124q-9 9-22 9-11 0-22-9l-124-124q-9-11-9-22 0-12 9-22 11-9 22-9 13 0 22 9l102 103z';
const informationPath = 'M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm38 140q0-16-11-27.5T256 101t-27 11.5-11 27.5 11 27 27 11 27-11 11-27zm-6 110q0-14-9-23t-23-9-23 9-9 23v128q0 13 9 22.5t23 9.5 23-9.5 9-22.5V250z';
const errorPath = 'M375 183q9-11 9-23 0-13-9-23-10-9-23-9-12 0-23 9l-73 74-73-74q-10-9-23-9-12 0-23 9-9 10-9 23 0 12 9 23l74 73-74 73q-9 10-9 23 0 12 9 23 11 9 23 9 13 0 23-9l73-74 73 74q11 9 23 9 13 0 23-9 9-11 9-23 0-13-9-23l-74-73zM256 512q-53 0-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0t99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20z';
const alertPath = 'M200 34q9-17 24-25.5T256 0t32 8.5T312 34l192 353q8 13 8 30 0 25-18 44.5T448 481H64q-28 0-46-19.5T0 417q0-17 8-30zm88 119q0-13-9-22.5t-23-9.5-23 9.5-9 22.5v128q0 14 9 23.5t23 9.5 23-9.5 9-23.5V153zm6 238q0-16-11-27t-27-11-27 11-11 27q0 17 11 28t27 11 27-11 11-28z';
const declinePath = 'M292 256l117 117q7 7 7 18t-7 18-19 7q-11 0-18-7L256 293 140 409q-7 7-18 7-12 0-19-7t-7-18 7-18l117-117-117-116q-7-7-7-18t7-18q8-8 19-8 10 0 18 8l116 116 116-116q8-8 18-8 11 0 19 8 7 7 7 18t-7 18z';
const spinnerWhitePath = [{
  d: 'M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z',
  fill: '#E5E7EB'
}, {
  d: 'M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z',
  fill: 'currentColor'
}];
const editPath = 'M501.5 88q8 7 8 19 0 10-8 18l-373 379q-5 4-9 6t-10 2h-80q-12 0-19.5-7.5T2.5 485v-80q0-10 8-18l374-379q8-8 18-8 11 0 19 8zm-136 99l-43-43-256 261 43 43zm80-80l-43-43-42 43 42 42z';
const searchPath = 'M489 436q7 7 7 18t-7.5 18.5T470 480t-18-7L352 373q-26 20-58.5 31.5T224 416q-44 0-82-16t-66-44-44-66-16-82 16-82 44-66 66-44 82-16 82 16 66 44 44 66 16 82q0 37-11.5 69.5T389 336zm-265-71q33 0 61.5-12t50-33.5 33.5-50 12-61.5-12-61.5-33.5-50-50-33.5T224 51t-61.5 12-50 33.5-33.5 50T67 208t12 61.5 33.5 50 50 33.5 61.5 12z';
const pathMap = {
  accept: acceptPath,
  'sys-enter-2': sysEnter2Path,
  'sys-cancel-2': sysCancel2Path,
  add: addPath,
  'navigation-left-arrow': navigationLeftArrow,
  'navigation-right-arrow': navigationRightArrow,
  'navigation-up-arrow': navigationUpArrow,
  'navigation-down-arrow': navigationDownArrow,
  information: informationPath,
  error: errorPath,
  alert: alertPath,
  decline: declinePath,
  'spinner-white': spinnerWhitePath,
  edit: editPath,
  search: searchPath
};
const getPath = name => {
  const path = Reflect.get(pathMap, name);
  return path;
};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/index.js":
/*!**************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LoadingButton: () => (/* reexport safe */ _LoadingButton_LoadingButton_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   LoadingWithMask: () => (/* reexport safe */ _LoadingWithMask_LoadingWithMask_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   Svg: () => (/* reexport safe */ _Svg_Svg_js__WEBPACK_IMPORTED_MODULE_2__["default"])
/* harmony export */ });
/* harmony import */ var _LoadingButton_LoadingButton_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LoadingButton/LoadingButton.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingButton/LoadingButton.js");
/* harmony import */ var _LoadingWithMask_LoadingWithMask_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LoadingWithMask/LoadingWithMask.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingWithMask/LoadingWithMask.js");
/* harmony import */ var _Svg_Svg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Svg/Svg.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/Svg/Svg.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/index.js":
/*!*********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   renderDialog: () => (/* reexport safe */ _useDialog_js__WEBPACK_IMPORTED_MODULE_5__.renderDialog),
/* harmony export */   renderFooter: () => (/* reexport safe */ _useDialogWithFooter_js__WEBPACK_IMPORTED_MODULE_6__.renderFooter),
/* harmony export */   useDebounce: () => (/* reexport safe */ _useDebounce_js__WEBPACK_IMPORTED_MODULE_11__["default"]),
/* harmony export */   useDialog: () => (/* reexport safe */ _useDialog_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   useDialogHelper: () => (/* reexport safe */ _useDialogHelper_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   useDialogWithFooter: () => (/* reexport safe */ _useDialogWithFooter_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   useFormValidator: () => (/* reexport safe */ _useFormValidator_js__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   useGetPathParams: () => (/* reexport safe */ _useParams_useGetPathParams_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   useGetSearchParams: () => (/* reexport safe */ _useParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   useLuigiModalHelper: () => (/* reexport safe */ _useLuigiModalHelper_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   useMixSearchParams: () => (/* reexport safe */ _useParams_useMixSearchParams_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   useMount: () => (/* reexport safe */ _useMount_js__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   useMountedRef: () => (/* reexport safe */ _useMountedRef_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   useSearchParams: () => (/* reexport safe */ _useParams_useSearchParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   useSimpleDialog: () => (/* reexport safe */ _useSimpleDialog_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   useThrottle: () => (/* reexport safe */ _useThrottle_js__WEBPACK_IMPORTED_MODULE_12__["default"])
/* harmony export */ });
/* harmony import */ var _useParams_useGetPathParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useParams/useGetPathParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetPathParams.js");
/* harmony import */ var _useParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useParams/useGetSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetSearchParams.js");
/* harmony import */ var _useParams_useSearchParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useParams/useSearchParams/useGetSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useGetSearchParams.js");
/* harmony import */ var _useParams_useMixSearchParams_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useParams/useMixSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useMixSearchParams.js");
/* harmony import */ var _useDialogHelper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useDialogHelper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogHelper.js");
/* harmony import */ var _useDialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useDialog.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialog.js");
/* harmony import */ var _useDialogWithFooter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./useDialogWithFooter.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogWithFooter.js");
/* harmony import */ var _useSimpleDialog_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useSimpleDialog.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useSimpleDialog.js");
/* harmony import */ var _useLuigiModalHelper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./useLuigiModalHelper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useLuigiModalHelper.js");
/* harmony import */ var _useMount_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./useMount.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMount.js");
/* harmony import */ var _useMountedRef_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./useMountedRef.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMountedRef.js");
/* harmony import */ var _useDebounce_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./useDebounce.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDebounce.js");
/* harmony import */ var _useThrottle_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./useThrottle.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useThrottle.js");
/* harmony import */ var _useFormValidator_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./useFormValidator.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useFormValidator.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

















/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDebounce.js":
/*!***************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDebounce.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useDebounce$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



const useDebounce = (value, delay) => {
  const [debouncedValue, setDebouncedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const timeout = setTimeout(() => setDebouncedValue(value), delay);
    return () => clearTimeout(timeout);
  }, [value, delay]);
  return [debouncedValue, setDebouncedValue];
};
const useDebounce$1 = useDebounce;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialog.js":
/*!*************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialog.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useDialog),
/* harmony export */   renderDialog: () => (/* binding */ renderDialog)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Dialog/index.js");
/* harmony import */ var _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../luigi/Helper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js");
/* harmony import */ var _useDialogHelper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useDialogHelper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogHelper.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js");
/* harmony import */ var _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ModalHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js");
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */









const renderDialog = ({
  ref,
  Element,
  props,
  dialogProps,
  container
}) => {
  // if (isReactElement(Element)) {
  //   dialogProps = props;
  //   props = undefined;
  // }
  let root;
  let children;
  if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_1__.isReactComponent)(Element)) {
    children = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Element, props);
  } else {
    children = Element;
  }
  if (!container) {
    container = (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.getContainer)(container, 'modal');
  }
  return (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.renderComponent)(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__.Dialog, {
    ...dialogProps,
    ref,
    children,
    onAfterClose: event => {
      if (typeof dialogProps.onAfterClose === 'function') {
        dialogProps.onAfterClose(event);
      }
      (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.unmountComponent)(container, root);
    }
  }, container).then(componentRoot => {
    root = componentRoot;
  });
};
const useDialog = (globalDialogConfig, dxpDialogConfig) => {
  let {
    Element,
    props,
    dialogProps
  } = globalDialogConfig;
  const {
    path,
    modalSettings
  } = dxpDialogConfig;
  const {
    dialogRef,
    show,
    closeWithResolve,
    closeWithReject
  } = (0,_useDialogHelper_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
  const mount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(container => {
    return renderDialog({
      ref: dialogRef,
      Element,
      props,
      dialogProps,
      container
    });
  }, [dialogRef, Element, props, dialogProps]);
  const unmount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((container, root) => {
    (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.unmountComponent)(container, root);
  }, []);
  const onShow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (pramas = {}) => {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_5__.isDxp)()) {
      const {
        nodeParams = {}
      } = pramas;
      await _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_6__["default"].openAsModal(path, modalSettings, nodeParams);
    } else {
      try {
        await mount();
        await show();
      } catch (error) {
        throw error;
      }
    }
  }, [mount, show, path, modalSettings]);
  const onConfirm = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    closeWithResolve();
  }, [closeWithResolve]);
  const onCancel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    closeWithReject();
  }, [closeWithReject]);

  //   useEffect(() => {
  //     if (isMounted.current === false) {
  //       mount();
  //     }
  //   }, []);

  //   useEffect(() => {
  //     return unmount;
  //   }, [unmount]);

  return {
    dialogRef,
    show: onShow,
    confirm: onConfirm,
    cancel: onCancel,
    mount,
    unmount
  };
};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogHelper.js":
/*!*******************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogHelper.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useDialogHelper$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



const useDialogHelper = ref => {
  const dialogRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const resolveRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  const rejectRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  const resolve = val => resolveRef.current && resolveRef.current(val);
  const reject = val => rejectRef.current && rejectRef.current(val);
  const show = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((preventInitialFocus = true) => {
    try {
      dialogRef?.current?.show(preventInitialFocus);
      return new Promise((resolve, reject) => {
        resolveRef.current = resolve;
        rejectRef.current = reject;
      });
    } catch (error) {
      return Promise.reject();
    }
  }, []);
  const closeWithResolve = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(val => {
    dialogRef.current?.close();
    resolve(val);
  }, []);
  const closeWithReject = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(val => {
    dialogRef.current?.close();
    reject(val);
  }, []);
  react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle(ref, () => ({
    show,
    close: closeWithReject
  }));
  return {
    dialogRef,
    show,
    closeWithResolve,
    closeWithReject
  };
};
const useDialogHelper$1 = useDialogHelper;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogWithFooter.js":
/*!***********************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogWithFooter.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useDialogWithFooter$1),
/* harmony export */   renderFooter: () => (/* binding */ renderFooter)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Bar/index.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js");
/* harmony import */ var _useDialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useDialog.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialog.js");
/* harmony import */ var _utils_consts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/consts.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/consts.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






const renderFooter = ({
  actions = [],
  onButtonClick
}) => {
  let buttonActions = [];
  let defaultBtn = {
    text: 'Close',
    design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__["default"].Default,
    type: _utils_consts_js__WEBPACK_IMPORTED_MODULE_2__.DialogActionTypes.Cancel
  };
  if (!actions.length) {
    buttonActions = [defaultBtn];
  } else {
    if (typeof actions[0] === 'string') {
      defaultBtn.text = actions.pop();
      buttonActions = [...actions.map(text => ({
        text,
        design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_1__["default"].Emphasized,
        type: _utils_consts_js__WEBPACK_IMPORTED_MODULE_2__.DialogActionTypes.Confirm
      })), defaultBtn].filter(Boolean);
    } else if (typeof actions[0] === 'object') {
      buttonActions = actions;
    } else {
      throw new Error('Invalid actions, only accept string[] or object[].');
    }
  }
  const getActionEvent = (event, buttonAction) => {
    return new CustomEvent(event.type, {
      ...event,
      detail: {
        ...event.detail,
        action: buttonAction.text
      }
    });
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__.Bar, {
    design: "Footer",
    endContent: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, buttonActions.map((buttonAction, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_4__.Button, {
      key: `${index}-${buttonAction.text}`,
      design: buttonAction.design,
      onClick: event => {
        const modifiedEvent = getActionEvent(event, buttonAction);
        onButtonClick && onButtonClick(modifiedEvent, buttonAction);
      }
    }, buttonAction.text)))
  });
};
const useDialogWithFooter = (globalDialogConfig, dxpDialogConfig) => {
  let {
    Element,
    props,
    dialogProps
  } = globalDialogConfig;

  //   if (isReactElement(Element)) {
  //     dialogProps = props;
  //   }

  const {
    actions = [],
    onButtonClick,
    ...restDialogProps
  } = dialogProps;
  const getDialogProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    return {
      ...restDialogProps,
      footer: renderFooter({
        actions,
        onButtonClick: (event, buttonAction) => {
          onButtonClick && onButtonClick(event);
          if (buttonAction?.type === _utils_consts_js__WEBPACK_IMPORTED_MODULE_2__.DialogActionTypes.Confirm) {
            confirm();
          }
          if (buttonAction?.type === _utils_consts_js__WEBPACK_IMPORTED_MODULE_2__.DialogActionTypes.Cancel) {
            cancel();
          }
        }
      })
    };
  }, [restDialogProps, actions, onButtonClick, cancel, confirm]);

  //   if (isReactElement(Element)) {
  //     props = getDialogProps();
  //     dialogProps = undefined;
  //   }
  //   if (isReactComponent(Element)) {
  //     dialogProps = getDialogProps();
  //   }

  const {
    dialogRef,
    show,
    confirm,
    cancel
  } = (0,_useDialog_js__WEBPACK_IMPORTED_MODULE_5__["default"])({
    Element,
    props,
    dialogProps: getDialogProps()
  }, dxpDialogConfig);
  return {
    dialogRef,
    show
  };
};
const useDialogWithFooter$1 = useDialogWithFooter;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useFormValidator.js":
/*!********************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useFormValidator.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormError: () => (/* binding */ FormError),
/* harmony export */   "default": () => (/* binding */ useFormValidator$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



class FormError extends Error {
  field;
  constructor(field, message) {
    super(message);
    this.name = 'FormError';
    this.message = message;
    this.field = field;
  }
}
const isRequired = (rule, value) => {
  if (value == null) {
    return false;
  }
  if (typeof value === 'boolean') {
    return !0;
  }
  if (typeof value === 'number') {
    value = value.toString();
  }
  return value.length > 0;
};
const checkType = (rule, value) => {
  const {
    type
  } = rule;
  return typeof value === type;
};
const checkRange = (rule, value) => {
  const {
    min = -Infinity,
    max = Infinity
  } = rule;
  if (typeof value === 'number') {
    return value > min && value < max;
  }
  if (typeof value === 'string') {
    return value.length > min && value.length < max;
  }
  if (Array.isArray(value)) {
    return value.length > min && value.length < max;
  }
  return false;
};
const checkPattern = pattern => (rule, value) => pattern.test(value);
const useFormValidator = ({
  form,
  rules
}) => {
  const [errorList, setErrorList] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [errorMap, setErrorMap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const findValidator = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(rule => {
    if (rule.required) {
      return isRequired;
    }
    if (rule.type) {
      return checkType;
    }
    if (rule.min || rule.min) {
      return checkRange;
    }
    if (rule.pattern) {
      return checkPattern(rule.pattern);
    }
    if (rule.validator) {
      return rule.validator;
    }
  }, []);
  const validate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((rule, value) => {
    const validator = findValidator(rule);
    if (validator) {
      return validator.call(null, rule, value);
    }
    return false;
  }, [findValidator]);
  const validateField = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((field, val) => {
    const fVal = val || Reflect.get(form, field);
    const fRules = Reflect.get(rules, field);
    if (fRules) {
      for (const fRule of fRules) {
        if (!validate(fRule, fVal)) {
          throw new FormError(field, fRule.message);
        }
      }
    }
    return true;
  }, [form, rules, validate]);
  const validateForm = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    let pass = true;
    const errorList = [];
    const errorMap = {};
    const fields = Object.keys(form);
    for (const field of fields) {
      try {
        validateField(field);
      } catch (error) {
        if (error instanceof FormError) {
          pass = false;
          errorList.push(error);
          Reflect.set(errorMap, error.field, error);
        }
      }
    }
    setErrorList(errorList);
    setErrorMap(errorMap);
    return {
      pass,
      errorList,
      errorMap
    };
  }, [form, validateField]);
  const removeFieldStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(field => {
    const fields = Array.isArray(field) ? field : [field];
    setErrorList(prev => prev.filter(err => !fields.includes(err.field)));
    setErrorMap(prev => {
      const newErrorMap = {
        ...prev
      };
      for (const field of fields) {
        Reflect.deleteProperty(newErrorMap, field);
      }
      return newErrorMap;
    });
  }, []);
  const validateFormField = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((field, val) => {
    try {
      validateField(field, val);
      removeFieldStatus(field);
    } catch (error) {
      if (error instanceof FormError) {
        removeFieldStatus(field);
        setErrorList(prev => [...prev, error]);
        setErrorMap(prev => ({
          ...prev,
          field: error
        }));
      }
    }
  }, [validateField, removeFieldStatus]);
  return {
    validateForm,
    validateFormField,
    validateField,
    removeFieldStatus,
    errorList,
    setErrorList,
    errorMap,
    setErrorMap
  };
};
const useFormValidator$1 = useFormValidator;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useLuigiModalHelper.js":
/*!***********************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useLuigiModalHelper.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useLuigiModalHelper$1)
/* harmony export */ });
/* harmony import */ var _useParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useParams/useGetSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetSearchParams.js");
/* harmony import */ var _useParams_useGetPathParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useParams/useGetPathParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetPathParams.js");
/* harmony import */ var _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../luigi/Helper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





const useLuigiModalHelper = ({
  searchKeys,
  pathInfo
} = {}) => {
  const {
    loaded: loaded1,
    searchParams
  } = (0,_useParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"])(searchKeys);
  const {
    loaded: loaded2,
    pathParams
  } = (0,_useParams_useGetPathParams_js__WEBPACK_IMPORTED_MODULE_1__["default"])(pathInfo);
  const {
    remotePromiseId
  } = searchParams;
  const closeModalWithResolve = value => {
    _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_2__["default"].closeModal({
      remotePromiseId,
      action: 'resolve',
      ...value
    });
  };
  const closeModalWithReject = value => {
    _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_2__["default"].closeModal({
      remotePromiseId,
      action: 'reject',
      ...value
    });
  };
  return {
    loaded: loaded1 && loaded2,
    searchParams,
    pathParams,
    closeModalWithResolve,
    closeModalWithReject
  };
};
const useLuigiModalHelper$1 = useLuigiModalHelper;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMount.js":
/*!************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMount.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useMount$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



const useMount = callback => {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callback();
  }, [callback]);
};
const useMount$1 = useMount;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMountedRef.js":
/*!*****************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useMountedRef.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useMountedRef$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



/**
 * return a component's state, if not mounted or unmounted, return false, otherwise return true
 */
const useMountedRef = () => {
  const mountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    mountedRef.current = true;
    return () => {
      mountedRef.current = false;
    };
  });
  return mountedRef;
};
const useMountedRef$1 = useMountedRef;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetPathParams.js":
/*!******************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetPathParams.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useGetPathParams$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





/* eslint-disable no-continue */
const isDxpCtx = (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_2__.isDxp)();
const decode = val => decodeURIComponent(val.replace(/\+/g, ' '));
const useGetPathParams = (pathInfo = {}) => {
  const [loaded, setLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [pathParams, setPathParams] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
  const getLocalParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    const {
      params = {}
    } = pathInfo;
    setPathParams(params);
    setLoaded(true);
  }, [pathInfo]);
  const getDxpParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    const {
      path = ''
    } = pathInfo;
    const pathSegments = path.split('/').filter(Boolean);
    const pathParams = _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default().getPathParams();
    let i = 0;
    let j = 1;
    const len = pathSegments.length;
    let params = {};
    while (i < len) {
      const currentPath = pathSegments[i];
      const vs = Reflect.get(pathParams, `virtualSegment_${j}`);
      if (vs === '#') {
        j++;
        continue;
      }
      if (currentPath.startsWith(':')) {
        const key = currentPath.slice(1);
        if (key && vs) {
          Reflect.set(params, key, decode(vs));
        }
      } else if (currentPath === vs) {
        j++;
      }
      i++;
    }
    params = {
      ...params,
      ...pathParams
    };
    if (params && Object.keys(params).length) {
      setPathParams(params);
      setLoaded(true);
    }
  }, [pathInfo]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (loaded) {
      return;
    }
    isDxpCtx ? getDxpParams() : getLocalParams();
  }, [loaded, getDxpParams, getLocalParams]);
  return {
    loaded,
    pathParams
  };
};
const useGetPathParams$1 = useGetPathParams;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetSearchParams.js":
/*!********************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetSearchParams.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useGetSearchParams$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






const useGetSearchParams = (searchKeys = []) => {
  const location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_2__.useLocation)();
  const [loaded, setLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [retry, setRetry] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [searchParams, setSearchParams] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [iframeParams, setIframeParams] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [localSearchKeys] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(searchKeys);
  const hasSearchKeys = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !!localSearchKeys?.length, [localSearchKeys]);
  const hasIframeParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !!Object.keys(iframeParams).length, [iframeParams]);
  const getSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(search => {
    const searchParams = new URLSearchParams(search);
    const params = Object.fromEntries(searchParams);
    return localSearchKeys?.length ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_3__.getSubset)(params, localSearchKeys) : params;
  }, [localSearchKeys]);
  const checkParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(params => {
    if (!params || !Object.keys(params).length) {
      return false;
    }
    if (hasSearchKeys) {
      // let result = true;
      // for (const key of localSearchKeys) {
      //   if (!Reflect.has(params, key)) {
      //     result = false;
      //   }
      // }
      return true;
    }
    return true;
  }, [hasSearchKeys]);

  // For iframe url
  const getIframeSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((search = location.search) => {
    const params = getSearchParams(search);
    setSearchParams(params);
    setLoaded(true);
  }, [getSearchParams, location.search]);

  // For DXP url
  const getDxpSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    const params = _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default().getNodeParams(true);
    if (checkParams(params)) {
      setSearchParams({
        ...params
      });
      setLoaded(true);
    } else {
      setRetry(prev => prev + 1);
    }
  }, [checkParams]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const params = getSearchParams(location.search);
    setIframeParams(params);
  }, [location.search, getSearchParams]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (hasIframeParams) {
      getIframeSearchParams();
    } else {
      setLoaded(false);
      setRetry(0);
    }
  }, [hasIframeParams, getIframeSearchParams]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (loaded) {
      return;
    }
    if (retry >= 5) {
      setLoaded(true);
      return;
    }
    getDxpSearchParams();
  }, [loaded, retry, getDxpSearchParams]);

  // useEffect(() => {
  //   const id = helper.addEventListener('hashchange', (evt) => {
  //     const search = evt.location.hash.split('?')[1];
  //     if (search) {
  //       const params = getSearchParams(search);
  //       setSearchParams(params);
  //     }
  //   });
  //   return () => {
  //     helper.removeEventListener(id);
  //   };
  // }, [getSearchParams]);

  return {
    loaded,
    setLoaded,
    searchParams
  };
};
const useGetSearchParams$1 = useGetSearchParams;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useMixSearchParams.js":
/*!********************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useMixSearchParams.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useMixSearchParams$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useGetSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useGetSearchParams.js");
/* harmony import */ var _useSearchParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useSearchParams/useGetSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useGetSearchParams.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






const useMixSearchParams = (searchKeys = []) => {
  const location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_1__.useLocation)();
  const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [params, setParams] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
  const {
    loaded,
    searchParams: searchParams1
  } = (0,_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_2__["default"])(searchKeys);
  const [searchParams2, setSearchParams] = (0,_useSearchParams_useGetSearchParams_js__WEBPACK_IMPORTED_MODULE_3__["default"])(searchKeys);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isLoaded) {
      return;
    }
    if (loaded && searchParams1) {
      setParams(searchParams1);
      setIsLoaded(true);
    }
  }, [isLoaded, loaded, searchParams1]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isLoaded) {
      return;
    }
    if (searchParams2 && searchParams2.tab) {
      setParams(searchParams2);
      setIsLoaded(true);
    }
  }, [isLoaded, searchParams2]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setIsLoaded(false);
  }, [location.search]);
  return {
    isLoaded,
    setIsLoaded,
    searchParams: params,
    setSearchParams
  };
};
const useMixSearchParams$1 = useMixSearchParams;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useGetSearchParams.js":
/*!************************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useGetSearchParams.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useGetSearchParams$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _useSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSearchParams.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useSearchParams.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





const useGetSearchParams = (keys = []) => {
  const [searchParams, setSearchParams] = (0,_useSearchParams_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
  const [searchKeys] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(keys);
  return [(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const params = Object.fromEntries(searchParams);
    return searchKeys?.length ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.getSubset)(params, searchKeys) : params;
  }, [searchParams, searchKeys]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(params => {
    const o = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.getCleanObj)({
      ...Object.fromEntries(searchParams),
      ...params
    });
    return setSearchParams(o);
  }, [searchParams, setSearchParams])];
};
const useGetSearchParams$1 = useGetSearchParams;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useSearchParams.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useParams/useSearchParams/useSearchParams.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useSearchParams$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */





const useSearchParams = defaultInit => {
  const location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_1__.useLocation)();
  const history = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_1__.useHistory)();
  const defaultSearchParamsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.createSearchParams)(defaultInit));
  const searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const searchParams = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.createSearchParams)(location.search);
    for (const key of defaultSearchParamsRef.current.keys()) {
      if (!searchParams.has(key)) {
        defaultSearchParamsRef.current.getAll(key).forEach(value => {
          searchParams.append(key, value);
        });
      }
    }
    return searchParams;
  }, [location.search]);
  const setSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextInit, navigateOptions) => {
    if (navigateOptions?.replace) {
      history.replace(`?${(0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.createSearchParams)(nextInit)}`, navigateOptions?.state);
    } else {
      history.push(`?${(0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.createSearchParams)(nextInit)}`, navigateOptions?.state);
    }
  }, [history]);
  return [searchParams, setSearchParams];
};
const useSearchParams$1 = useSearchParams;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useSimpleDialog.js":
/*!*******************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useSimpleDialog.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useSimpleDialog$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Bar/index.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js");
/* harmony import */ var _components_LoadingButton_LoadingButton_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/LoadingButton/LoadingButton.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/LoadingButton/LoadingButton.js");
/* harmony import */ var _useDialogHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useDialogHelper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialogHelper.js");
/* harmony import */ var _luigi_Backdrop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../luigi/Backdrop.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Backdrop.js");
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */








const useSimpleDialog = ({
  ref,
  isLoading,
  params,
  onConfirm,
  onClear,
  isBtnDisabled
}) => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const {
    dialogRef,
    closeWithResolve,
    closeWithReject
  } = (0,_useDialogHelper_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ref);
  const isConfirmBtnLoading = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    return isLoading || loading;
  }, [isLoading, loading]);
  const isConfirmBtnDisabled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    return isBtnDisabled || isConfirmBtnLoading;
  }, [isBtnDisabled, isConfirmBtnLoading]);
  const onClickConfirm = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {
    try {
      setLoading(true);
      const res = await onConfirm(params);
      closeWithResolve({
        ...params,
        ...res
      });
      onClear && onClear();
    } catch (error) {
      console.error(error?.error || error?.message || error);
      // closeWithReject(error);
    } finally {
      setLoading(false);
    }
  }, [params, onConfirm, onClear, closeWithResolve]);
  const onClickCancel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    closeWithReject();
    onClear && onClear();
  }, [onClear, closeWithReject]);
  const renderDialogFooter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(({
    confirmText,
    loadingText
  }) => {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__.Bar, {
      design: "Footer",
      endContent: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        style: {
          display: 'flex',
          justifyContent: 'flex-end',
          margin: '0px',
          paddingTop: '0.25rem',
          paddingBottom: '0.25rem'
        }
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_LoadingButton_LoadingButton_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
        design: "Emphasized",
        showIcon: true,
        loadingText: loadingText,
        loading: isConfirmBtnLoading,
        disabled: isConfirmBtnDisabled,
        onClick: onClickConfirm
      }, confirmText), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_4__.Button, {
        style: {
          marginLeft: '0.5rem'
        },
        design: "Transparent",
        onClick: onClickCancel
      }, "Cancel"))
    });
  }, [isConfirmBtnLoading, isConfirmBtnDisabled, onClickConfirm, onClickCancel]);
  const onBeforeOpen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    setIsOpen(true);
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_5__.isDxp)()) {
      _luigi_Backdrop_js__WEBPACK_IMPORTED_MODULE_6__["default"].show();
    }
  }, []);
  const onBeforeClose = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    setIsOpen(false);
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_5__.isDxp)()) {
      _luigi_Backdrop_js__WEBPACK_IMPORTED_MODULE_6__["default"].hide();
    }
  }, []);
  return {
    dialogRef,
    isOpen,
    setIsOpen,
    onBeforeOpen,
    onBeforeClose,
    onClickConfirm,
    onClickCancel,
    renderDialogFooter
  };
};
const useSimpleDialog$1 = useSimpleDialog;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useThrottle.js":
/*!***************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useThrottle.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useThrottle$1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



const useThrottle = (value, delay) => {
  const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [throttledValue, setThrottledValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!timeoutRef.current) {
      timeoutRef.current = setTimeout(() => {
        timeoutRef.current = null;
        setThrottledValue(value);
      }, delay);
    }
  }, [value, delay]);
  return [throttledValue, setThrottledValue];
};
const useThrottle$1 = useThrottle;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/index.js":
/*!***************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Alert: () => (/* reexport safe */ _luigi_Alert_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   Backdrop: () => (/* reexport safe */ _luigi_Backdrop_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   Dialog: () => (/* reexport safe */ _luigi_Dialog_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   DialogActionTypes: () => (/* reexport safe */ _utils_consts_js__WEBPACK_IMPORTED_MODULE_1__.DialogActionTypes),
/* harmony export */   Indicator: () => (/* reexport safe */ _luigi_Indicator_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   LoadingButton: () => (/* binding */ LoadingButton),
/* harmony export */   LoadingWithMask: () => (/* binding */ LoadingWithMask),
/* harmony export */   LuigiHelper: () => (/* reexport safe */ _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   Modal: () => (/* reexport safe */ _luigi_Modal_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   Svg: () => (/* binding */ Svg),
/* harmony export */   VERSION: () => (/* reexport safe */ _utils_version_js__WEBPACK_IMPORTED_MODULE_2__.VERSION),
/* harmony export */   createModalContainer: () => (/* reexport safe */ _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_11__.createModalContainer),
/* harmony export */   getEnv: () => (/* reexport safe */ _utils_env_js__WEBPACK_IMPORTED_MODULE_0__.getEnv),
/* harmony export */   init: () => (/* binding */ init),
/* harmony export */   renderDialog: () => (/* binding */ renderDialog),
/* harmony export */   renderFooter: () => (/* binding */ renderFooter),
/* harmony export */   setEnv: () => (/* reexport safe */ _utils_env_js__WEBPACK_IMPORTED_MODULE_0__.setEnv),
/* harmony export */   useDebounce: () => (/* binding */ useDebounce),
/* harmony export */   useDialog: () => (/* binding */ useDialog),
/* harmony export */   useDialogHelper: () => (/* binding */ useDialogHelper),
/* harmony export */   useDialogWithFooter: () => (/* binding */ useDialogWithFooter),
/* harmony export */   useFormValidator: () => (/* binding */ useFormValidator),
/* harmony export */   useGetPathParams: () => (/* binding */ useGetPathParams),
/* harmony export */   useGetSearchParams: () => (/* binding */ useGetSearchParams),
/* harmony export */   useLuigiModalHelper: () => (/* binding */ useLuigiModalHelper),
/* harmony export */   useMixSearchParams: () => (/* binding */ useMixSearchParams),
/* harmony export */   useMount: () => (/* binding */ useMount),
/* harmony export */   useMountedRef: () => (/* binding */ useMountedRef),
/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),
/* harmony export */   useSimpleDialog: () => (/* binding */ useSimpleDialog),
/* harmony export */   useThrottle: () => (/* binding */ useThrottle)
/* harmony export */ });
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/* harmony import */ var _hooks_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./hooks/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/index.js");
/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/index.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/index.js");
/* harmony import */ var _utils_consts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/consts.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/consts.js");
/* harmony import */ var _utils_version_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/version.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/version.js");
/* harmony import */ var _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./luigi/Helper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js");
/* harmony import */ var _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/ModalHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js");
/* harmony import */ var _luigi_Alert_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./luigi/Alert.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Alert.js");
/* harmony import */ var _luigi_Indicator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./luigi/Indicator.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Indicator.js");
/* harmony import */ var _luigi_Backdrop_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./luigi/Backdrop.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Backdrop.js");
/* harmony import */ var _luigi_Modal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./luigi/Modal.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Modal.js");
/* harmony import */ var _luigi_Dialog_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./luigi/Dialog.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Dialog.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */















const {
  useGetPathParams,
  useGetSearchParams,
  useSearchParams,
  useMixSearchParams,
  useDialogHelper,
  useDialog,
  useDialogWithFooter,
  useSimpleDialog,
  useLuigiModalHelper,
  useMount,
  useMountedRef,
  useDebounce,
  useThrottle,
  useFormValidator,
  renderDialog,
  renderFooter
} = _hooks_index_js__WEBPACK_IMPORTED_MODULE_8__;
const {
  LoadingButton,
  LoadingWithMask,
  Svg
} = _components_index_js__WEBPACK_IMPORTED_MODULE_9__;
const init = ({
  env,
  container
}) => {
  (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.setEnv)(env);
  if (env === _utils_env_js__WEBPACK_IMPORTED_MODULE_0__.ENV_DXP) {
    const removeInitListener = _luigi_Helper_js__WEBPACK_IMPORTED_MODULE_10__["default"].init();
    return removeInitListener;
  }
  // TODO:
  if (env === _utils_env_js__WEBPACK_IMPORTED_MODULE_0__.ENV_STANDALONE) {
    // if (env === ENV_DXP) {
    if (container) {
      setTimeout(() => {
        (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_11__.createModalContainer)(container);
      }, 0);
    }
  }
  return () => {};
};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Alert.js":
/*!*********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Alert.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Alert)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js");
/* harmony import */ var _components_AlertWrapper_AlertWrapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/AlertWrapper/AlertWrapper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/components/AlertWrapper/AlertWrapper.js");
/* harmony import */ var _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ModalHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js");
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */








const DEFAULT_DELAY = 5000;
class Alert {
  static showGlobalAlert(props, container) {
    const ref = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef();
    const domContainer = (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.getContainer)(container, 'alert');
    const delay = props.closeAfter != null ? props.closeAfter : DEFAULT_DELAY;
    let root;
    return (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.renderComponent)(_components_AlertWrapper_AlertWrapper_js__WEBPACK_IMPORTED_MODULE_3__["default"], Object.assign(Object.assign({}, props), {
      ref,
      onClose: event => {
        if (typeof props.onClose === 'function') {
          props.onClose(event);
        }
        (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.unmountComponent)(domContainer, root);
      }
    }), domContainer).then(componentRoot => {
      root = componentRoot;
      setTimeout(() => {
        if (componentRoot) {
          componentRoot.unmount();
        } else {
          (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.unmountComponent)(domContainer);
        }
      }, delay);
    });
  }

  /**
   * Shows an alert.
   * @param {Object} settings the settings for the alert
   * @param {string} settings.text the content of the alert. To add a link to the content, you have to set up the link in the `links` object. The key(s) in the `links` object must be used in the text to reference the links, wrapped in curly brackets with no spaces. If you don't specify any text, the alert is not displayed
   * @param {('info'|'success'|'warning'|'error')} settings.type sets the type of alert
   * @param {Object} settings.links provides links data
   * @param {Object} settings.links.LINK_KEY object containing the data for a particular link. To properly render the link in the alert message refer to the description of the **settings.text** parameter
   * @param {string} settings.links.LINK_KEY.text text which replaces the link identifier in the alert content
   * @param {string} settings.links.LINK_KEY.url URL to navigate when you click the link. Currently, only internal links are supported in the form of relative or absolute paths
   * @param {string} settings.links.LINK_KEY.dismissKey dismissKey which represents the key of the link.
   * @param {number} settings.closeAfter (optional) time in milliseconds that tells Luigi when to close the Alert automatically. If not provided, the Alert will stay on until closed manually. It has to be greater than `100`
   * @returns {promise} which is resolved when the alert is dismissed
   */
  static showAlert({
    type,
    text,
    closeAfter = DEFAULT_DELAY
  }) {
    return _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default().uxManager().showAlert({
      type,
      text,
      closeAfter
    });
  }
  static showInfoAlert(text, closeAfter) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showAlert({
        type: 'info',
        text,
        closeAfter
      });
    }
    return this.showGlobalAlert({
      design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__["default"].Information,
      children: text,
      closeAfter
    });
  }
  static showSuccessAlert(text, closeAfter) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showAlert({
        type: 'success',
        text,
        closeAfter
      });
    }
    return this.showGlobalAlert({
      design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__["default"].Positive,
      children: text,
      closeAfter
    });
  }
  static showWarningAlert(text, closeAfter) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showAlert({
        type: 'warning',
        text,
        closeAfter
      });
    }
    return this.showGlobalAlert({
      design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__["default"].Warning,
      children: text,
      closeAfter
    });
  }
  static showErrorAlert(text, closeAfter) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showAlert({
        type: 'error',
        text,
        closeAfter
      });
    }
    return this.showGlobalAlert({
      design: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__["default"].Negative,
      children: text,
      closeAfter
    });
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Backdrop.js":
/*!************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Backdrop.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Backdrop)
/* harmony export */ });
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



class Backdrop {
  static show() {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().uxManager().addBackdrop();
  }
  static hide() {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().uxManager().removeBackdrop();
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Dialog.js":
/*!**********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Dialog.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GlobalDialog)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Helper.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js");
/* harmony import */ var _hooks_useDialog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useDialog.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/hooks/useDialog.js");
/* harmony import */ var _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ModalHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js");
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */







class GlobalDialog {
  #ref = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef();
  #resolve = null;
  #reject = null;
  globalDialogConfig = {};
  dxpDialogConfig = {};
  constructor(globalDialogConfig, dxpDialogConfig) {
    this.globalDialogConfig = globalDialogConfig;
    this.dxpDialogConfig = dxpDialogConfig;
  }
  mount(container = (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getContainer)(null, 'modal')) {
    const {
      Element,
      props,
      dialogProps
    } = this.globalDialogConfig;
    return (0,_hooks_useDialog_js__WEBPACK_IMPORTED_MODULE_2__.renderDialog)({
      ref: this.#ref,
      Element,
      props,
      dialogProps,
      container
    });
  }
  unmount(container, root) {
    (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_1__.unmountComponent)(container, root);
  }
  async showGlobalDialog(preventInitialFocus = true) {
    await this.mount();
    await new Promise((resolve, reject) => {
      this.#resolve = resolve;
      this.#reject = reject;
      this.#ref?.current?.show(preventInitialFocus);
    });
  }
  openAsModal(nodeParams = {}) {
    const {
      path,
      modalSettings
    } = this.dxpDialogConfig;
    return _Helper_js__WEBPACK_IMPORTED_MODULE_3__["default"].openAsModal(path, modalSettings, nodeParams);
  }
  show(pramas = {}) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      const {
        nodeParams = {}
      } = pramas;
      return this.openAsModal(nodeParams);
    }
    return this.showGlobalDialog();
  }
  confirm(val) {
    this.#ref?.current?.close();
    this.#resolve?.call(null, val);
    this.#resolve = null;
    this.#reject = null;
  }
  cancel(val) {
    this.#ref?.current?.close();
    this.#reject?.call(null, val);
    this.#resolve = null;
    this.#reject = null;
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js":
/*!**********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Helper.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LuigiHelper)
/* harmony export */ });
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/helpers.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */




class LuigiHelper {
  /**
   * @private
   * @returns {removeInitListener} the function will remove an init listener
   */
  static init() {
    const initListener = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().addInitListener(initialContext => {
      const {
        goBackContext
      } = initialContext;
      if (goBackContext?.remotePromiseId) {
        const {
          remotePromiseId,
          action
        } = goBackContext;
        const {
          resolve,
          reject
        } = _utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__["default"].unsubscribe(remotePromiseId);
        if (action && action === 'resolve') {
          resolve && resolve({
            msg: 'Luigi Modal Closed',
            ...goBackContext
          });
        } else {
          reject && reject({
            msg: 'Luigi Modal Closed',
            ...goBackContext
          });
        }
      }
      console.log('Initial Context', initialContext);
    });
    return () => {
      _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().removeInitListener(initListener);
    };
  }
  static getToken() {
    return _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().getToken();
  }
  static getContext() {
    return _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().getContext();
  }
  static navigate(path, config) {
    let lm = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager();
    if (config.withoutSync) {
      lm = lm.withoutSync();
    }
    if (config.fromVirtualTreeRoot === true) {
      lm = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().fromVirtualTreeRoot();
    } else if (config.fromContext === true) {
      lm = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().fromClosestContext();
    } else if (config.fromContext) {
      lm = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().fromContext(config.fromContext);
    }
    if (path) {
      console.log('luigi navigate', path);
      lm.navigate(path);
    }
  }
  static updateModalPathInternalNavigation(path, modalSettings, addHistoryEntry = false) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().updateModalPathInternalNavigation(path, modalSettings, addHistoryEntry);
  }
  static navigateToIntent(semanticSlug, params) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().navigateToIntent(semanticSlug, params);
  }
  static getCurrentRoute(config = {
    fromVirtualTreeRoot: true
  }) {
    return new Promise((resolve, reject) => {
      let lm = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager();
      if (config.fromVirtualTreeRoot) {
        lm = lm.fromVirtualTreeRoot();
      } else if (config.fromContext === true) {
        lm = lm.fromClosestContext();
      } else if (config.fromContext) {
        lm = lm.fromContext(config.fromContext);
      }
      lm.getCurrentRoute().then(resolve, reject);
    });
  }
  static getNodeParams(shouldDesanitise = true) {
    const params = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().getNodeParams(shouldDesanitise);
    return params;
  }
  static getPathParams() {
    const params = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().getPathParams();
    return params;
  }
  static getSearchParams() {
    const params = _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().getCoreSearchParams();
    return params;
  }
  static addNodeParams(params, keepBrowserHistory) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().addNodeParams(params, keepBrowserHistory);
  }
  static addSearchParams(params, keepBrowserHistory) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().addCoreSearchParams(params, keepBrowserHistory);
  }
  static openAsModal(path, modalSettings, nodeParams) {
    return new Promise((resolve, reject) => {
      if (path) {
        const id = _utils_helpers_js__WEBPACK_IMPORTED_MODULE_1__["default"].subscribe(null, {
          name: 'openAsModalCallback',
          resolve,
          reject
        });
        _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().fromVirtualTreeRoot().withParams({
          ...nodeParams,
          remotePromiseId: String(id)
        })
        // .withOptions({ preventHistoryEntry: true })
        .openAsModal(path, modalSettings);
      }
    });
  }
  static closeModal(value) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().goBack(value);
  }
  static goBack(value) {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().linkManager().goBack(value);
  }
  static broadcastMessageToAllIframes(message, options) {
    const {
      frames
    } = window.parent;
    for (let i = 0; i < frames.length; i++) {
      frames[i].postMessage(message, options);
    }
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Indicator.js":
/*!*************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Indicator.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Indicator)
/* harmony export */ });
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



class Indicator {
  static show() {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().uxManager().showLoadingIndicator();
  }
  static hide() {
    _luigi_project_client__WEBPACK_IMPORTED_MODULE_0___default().uxManager().hideLoadingIndicator();
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Modal.js":
/*!*********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/luigi/Modal.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Modal)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luigi-project/client */ "./node_modules/@luigi-project/client/luigi-client.js");
/* harmony import */ var _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_luigi_project_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxTypes.js");
/* harmony import */ var _utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ModalHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js");
/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/env.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */







const ACTIONS = {
  OK: 'OK',
  CANCEL: 'Cancel'
};
class Modal {
  static ref = null;
  static showGlobalModal(props, container) {
    Modal.ref = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef();
    const domContainer = (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.getContainer)(container, 'modal');
    let root;
    return new Promise((resolve, reject) => {
      (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.renderComponent)(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_3__.MessageBox, Object.assign(Object.assign({}, props), {
        ref: Modal.ref,
        open: true,
        actions: [ACTIONS.OK, ACTIONS.CANCEL],
        onClose: event => {
          if (typeof props.onClose === 'function') {
            props.onClose(event);
          }
          if (event.detail.action === ACTIONS.OK) {
            resolve();
          } else {
            reject();
          }
          (0,_utils_ModalHelpers_js__WEBPACK_IMPORTED_MODULE_2__.unmountComponent)(domContainer, root);
        }
      }), domContainer).then(componentRoot => {
        root = componentRoot;
      });
    });
    // return new Promise((resolve, reject) => {
    //   const { close } = Modals.showMessageBox(
    //     {
    //       actions: [ACTIONS.OK, ACTIONS.CANCEL],
    //       ...props,
    //       onClose: (evt) => {
    //         const { action } = evt.detail;
    //         if (action === ACTIONS.OK) {
    //           resolve();
    //         } else if (action === ACTIONS.CANCEL) {
    //           reject();
    //         } else {
    //           reject();
    //         }
    //       },
    //     },
    //     getContainer(container, 'modal'),
    //   );
    // });
  }

  /**
   * Shows a confirmation modal.
   * @param {Object} settings the settings of the confirmation modal. If you don't provide any value for any of the fields, a default value is used
   * @param {('confirmation'|'success'|'warning'|'error'|'information')} settings.type the content of the modal type. (Optional)
   * @param {string} [settings.header="Confirmation"] the content of the modal header
   * @param {string} [settings.body="Are you sure you want to do this?"] the content of the modal body. It supports HTML formatting elements such as `<br>`, `<b>`, `<strong>`, `<i>`, `<em>`, `<mark>`, `<small>`, `<del>`, `<ins>`, `<sub>`, `<sup>`.
   * @param {string|false} [settings.buttonConfirm="Yes"] the label for the modal confirmation button. If set to `false`, the button will not be shown.
   * @param {string} [settings.buttonDismiss="No"] the label for the modal dismiss button
   * @returns {promise} which is resolved when accepting the confirmation modal and rejected when dismissing it
   */
  static showModal({
    type = 'confirmation',
    header = '',
    body = '',
    buttonConfirm = ACTIONS.OK,
    buttonDismiss = ACTIONS.CANCEL
  }) {
    return _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default().uxManager().showConfirmationModal({
      type,
      header,
      body,
      buttonConfirm,
      buttonDismiss
    });
  }
  static showConfirmationModal(settings) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showModal({
        ...settings,
        type: 'confirmation'
      });
    }
    return this.showGlobalModal({
      type: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Confirm,
      children: settings.body
    });
  }
  static showSuccessModal(settings) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showModal({
        ...settings,
        type: 'success'
      });
    }
    return this.showGlobalModal({
      type: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Success,
      children: settings.body
    });
  }
  static showWarningModal(settings) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showModal({
        ...settings,
        type: 'warning'
      });
    }
    return this.showGlobalModal({
      type: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Warning,
      children: settings.body
    });
  }
  static showErrorModal(settings) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showModal({
        ...settings,
        type: 'error'
      });
    }
    return this.showGlobalModal({
      type: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Error,
      children: settings.body
    });
  }
  static showInformationModal(settings) {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      return this.showModal({
        ...settings,
        type: 'information'
      });
    }
    return this.showGlobalModal({
      type: _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Information,
      children: settings.body
    });
  }
  static closeCurrentModal() {
    if ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.isDxp)()) {
      _luigi_project_client__WEBPACK_IMPORTED_MODULE_1___default().uxManager().closeCurrentModal();
    } else {
      Modal.ref?.current?.close?.call(null);
    }
  }
}




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js":
/*!****************************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/ModalHelpers.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createModalContainer: () => (/* binding */ createModalContainer),
/* harmony export */   getContainer: () => (/* binding */ getContainer),
/* harmony export */   renderComponent: () => (/* binding */ renderComponent),
/* harmony export */   setContainer: () => (/* binding */ setContainer),
/* harmony export */   unmountComponent: () => (/* binding */ unmountComponent)
/* harmony export */ });
/* harmony import */ var _virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_virtual/_rollupPluginBabelHelpers.js */ "../../../code/eureka/hybrid-portal-adapter/dist/source/_virtual/_rollupPluginBabelHelpers.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ "./node_modules/react-dom/client.js");
/* harmony import */ var _ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-react */ "./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/index.js");
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */






let ModalContainer;
const MODAL_CONTAINER_ID = 'hpa-modal-container';
const getContainer = (givenContainer, type) => {
  if (givenContainer) {
    return givenContainer;
  }
  if (type === 'modal') {
    return ModalContainer;
  }
  const container = document.createElement('div');
  container.setAttribute('data-global-modal', '');
  document.body.appendChild(container);
  return container;
};
const setContainer = container => {
  ModalContainer = container;
};
const createModalContainer = mfeContainer => {
  const modalContainer = document.createElement('div');
  modalContainer.id = MODAL_CONTAINER_ID;
  mfeContainer.appendChild(modalContainer);
  ModalContainer = modalContainer;
  setContainer(modalContainer);
  return modalContainer;
};
const renderComponent = (Element, props, container) => {
  return new Promise(resolve => {
    const root = react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot(container);
    root.render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ui5_webcomponents_react__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Element, (0,_virtual_rollupPluginBabelHelpers_js__WEBPACK_IMPORTED_MODULE_3__["extends"])({}, props, {
      ref: el => {
        resolve(root);
        props.ref.current = el;
      }
    }))));
    // setTimeout(() => {
    //   ReactDOM.render(
    //     React.createElement(
    //       ThemeProvider,
    //       null,
    //       React.createElement(Element, Object.assign({}, props)),
    //     ),
    //     container,
    //     () => {
    //       resolve();
    //     },
    //   );
    // }, 0);
  });
};
const unmountComponent = (container, root) => {
  if (root) {
    root.unmount();
  }
  if (container?.hasAttribute('data-global-modal')) {
    container.remove();
  }
};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/consts.js":
/*!**********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/consts.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DialogActionTypes: () => (/* binding */ DialogActionTypes)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

const DialogActionTypes = {
  Confirm: 'Confirm',
  Cancel: 'Cancel'
};




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js":
/*!*******************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/env.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENV_DXP: () => (/* binding */ ENV_DXP),
/* harmony export */   ENV_STANDALONE: () => (/* binding */ ENV_STANDALONE),
/* harmony export */   getEnv: () => (/* binding */ getEnv),
/* harmony export */   isDxp: () => (/* binding */ isDxp),
/* harmony export */   setEnv: () => (/* binding */ setEnv)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

const ENV_DXP = 'dxp';
const ENV_STANDALONE = 'stand_alone';
let globalEnv = '';
const getEnv = () => globalEnv;
const setEnv = val => {
  if (val === ENV_DXP || val === ENV_STANDALONE) {
    globalEnv = val;
  } else {
    console.warn(`Invalid enviroment value! Expect to be 'dxp' or 'stand_alone'.`);
  }
};
const isDxp = () => globalEnv === ENV_DXP;




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/helpers.js":
/*!***********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/helpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ helpers)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

let configMap;
let eventMap;
class Helper {
  getRandomId() {
    // window.msCrypto for IE 11
    return (window.crypto || window.msCrypto).getRandomValues(new Uint32Array(1))[0];
  }
  getUrlParameter(name) {
    name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
    const regex = new RegExp(`[\\?&]${name}=([^&#]*)`);
    const result = regex.exec(window.location.search);
    return result && decodeURIComponent(result[1].replace(/\+/g, ' ')) || '';
  }
  qsParse(search) {
    const params = {};
    if (search) {
      const searchParams = new URLSearchParams(search);
      for (const [key, value] of searchParams.entries()) {
        Reflect.set(params, key, value);
      }
    }
    return params;
  }
  qsStringify(params) {
    let path = '';
    if (params) {
      const paramList = Object.entries(params);
      if (paramList.length > 0) {
        path += '?';
        for (const [key, value] of paramList) {
          path += `${key}=${value}&`;
        }
        path = path.slice(0, -1);
      }
    }
    return path;
  }
  createRemotePromise() {
    let res;
    let rej;
    const p = new Promise(resolve => {
      res = () => {
        resolve(true);
      };
      rej = () => {
        resolve(false);
      };
    });
    if (!configMap) {
      configMap = {
        counter: 0,
        promises: []
      };
    }
    p.id = configMap.counter++;
    configMap.promises[p.id] = p;
    p.doResolve = () => {
      delete configMap.promises[p.id];
      res();
    };
    p.doReject = () => {
      delete configMap.promises[p.id];
      rej();
    };
    return p;
  }
  getRemotePromise(id) {
    return configMap ? configMap.promises[id] : undefined;
  }
  subscribe(id, value) {
    if (!eventMap) {
      eventMap = {};
    }
    id = id || this.getRandomId();
    eventMap[id] = value;
    return id;
  }
  unsubscribe(id) {
    if (eventMap?.[id]) {
      const value = eventMap[id];
      Reflect.deleteProperty(eventMap, id);
      return value;
    }
  }
}
const helpers = new Helper();




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js":
/*!*********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSearchParams: () => (/* binding */ createSearchParams),
/* harmony export */   getCleanObj: () => (/* binding */ getCleanObj),
/* harmony export */   getSubset: () => (/* binding */ getSubset),
/* harmony export */   isReactComponent: () => (/* binding */ isReactComponent),
/* harmony export */   isVoid: () => (/* binding */ isVoid)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */



const isVoid = value => value === undefined || value === null || value === '';
const getCleanObj = object => {
  if (!object) {
    return {};
  }
  const result = {
    ...object
  };
  Object.keys(result).forEach(key => {
    const value = result[key];
    if (isVoid(value)) {
      delete result[key];
    }
  });
  return result;
};
const getSubset = (obj, keys) => {
  const filteredEntries = Object.entries(obj).filter(([key]) => keys.includes(key));
  return Object.fromEntries(filteredEntries);
};
const createSearchParams = (init = '') => {
  return new URLSearchParams(typeof init === 'string' || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    const value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);
  }, []));
};
const isReactComponent = object => typeof object === 'function';




/***/ }),

/***/ "../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/version.js":
/*!***********************************************************************************!*\
  !*** ../../../code/eureka/hybrid-portal-adapter/dist/source/src/utils/version.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
/**
 * @eureka/hybrid-portal-adapter v1.0.0-beta.1
 * Copyright (c) 2023 I566470 <zhuxian.luan@sap.com>
 * @license MIT
 */

const VERSION = '1.0.0';




/***/ }),

/***/ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);


/***/ }),

/***/ "./node_modules/@luigi-project/client/luigi-client.js":
/*!************************************************************!*\
  !*** ./node_modules/@luigi-project/client/luigi-client.js ***!
  \************************************************************/
/***/ ((module) => {

!function(e,t){ true?module.exports=t():0}(self,(function(){return function(){"use strict";var e={707:function(e){e.exports={i8:"2.7.3"}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};var r={};return function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}n.d(r,{default:function(){return Q}});var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.promises={}}var n,r;return n=e,(r=[{key:"setPromise",value:function(e,t){this.promises[e]=t}},{key:"getPromise",value:function(e){return this.promises[e]}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===i(o)?o:String(o)),r)}var o}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners=[],this.origin="";var t=function(e){if(e.data.msg)if("custom"===e.data.msg){var t=this.convertCustomMessageInternalToUser(e.data);this.listeners.filter((function(e){return e.name===t.id})).map((function(e){return e.eventFn(t,e.listenerId)}))}else this.listeners.filter((function(t){return t.name===e.data.msg})).map((function(t){return t.eventFn(e,t.listenerId)}))}.bind(this);window.addEventListener("message",t)}var t,n;return t=e,n=[{key:"convertCustomMessageInternalToUser",value:function(e){return e.data}},{key:"convertCustomMessageUserToInternal",value:function(e){return{msg:"custom",data:e}}},{key:"convertStorageMessageToInternal",value:function(e){return{msg:"storage",data:e}}},{key:"addEventListener",value:function(e,t){var n=this.getRandomId();return this.listeners.push({name:e,eventFn:t,listenerId:n}),n}},{key:"removeEventListener",value:function(e){return!!Boolean(this.listeners.find((function(t){return t.listenerId===e})))&&(this.listeners=this.listeners.filter((function(t){return t.listenerId!==e})),!0)}},{key:"getRandomId",value:function(){return(window.crypto||window.msCrypto).getRandomValues(new Uint32Array(1))[0]}},{key:"isFunction",value:function(e){return"function"==typeof e}},{key:"isObject",value:function(e){return"[object Object]"===Object.prototype.toString.call(e)}},{key:"getLuigiCoreDomain",value:function(){return this.origin}},{key:"setLuigiCoreDomain",value:function(e){e&&"null"!==e&&(this.origin=e)}},{key:"setTargetOrigin",value:function(e){this.setLuigiCoreDomain(e)}},{key:"sendPostMessageToLuigiCore",value:function(e){if(this.origin)try{window.parent.postMessage(e,this.origin)}catch(t){console.warn("Unable to post message "+e+" to Luigi Core from origin "+this.origin+": "+t)}else console.warn('There is no target origin set. You can specify the target origin by calling LuigiClient.setTargetOrigin("targetorigin") in your micro frontend.')}},{key:"hasIntent",value:function(e){return!!e&&e.toLowerCase().includes("#?intent=")}},{key:"deSanitizeParamsMap",value:function(e){var t=this;return Object.entries(e).reduce((function(e,n){return e[t.deSanitizeParam(n[0])]=t.deSanitizeParam(n[1]),e}),{})}},{key:"deSanitizeParam",value:function(){return String(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").replaceAll("&lt;","<").replaceAll("&gt;",">").replaceAll("&quot;",'"').replaceAll("&#39;","'").replaceAll("&sol;","/")}}],n&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),s=new u;function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(u,e);var t,r,o,i,a=(o=u,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(o);if(i){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(e=a.call(this)).luigiInitialized=!1,e.defaultContextKeys=["context","internal","nodeParams","pathParams","searchParams"],e.setCurrentContext(e.defaultContextKeys.reduce((function(e,t){return e[t]={},e}),{})),e._onContextUpdatedFns={},e._onInactiveFns={},e._onInitFns={},e.authData={},e._isDeferInitDefined()||e.luigiClientInit(),e}return t=u,r=[{key:"_isDeferInitDefined",value:function(){return window.document.head.hasAttribute("defer-luigi-init")}},{key:"isLuigiClientInitialized",value:function(){return this.luigiInitialized}},{key:"luigiClientInit",value:function(){var e=this;if(this.luigiInitialized)console.warn("Luigi Client has been already initialized");else{var t=function(t){for(var n=0;n<e.defaultContextKeys.length;n++){var r=e.defaultContextKeys[n];try{"string"==typeof t[r]&&(t[r]=JSON.parse(t[r]))}catch(e){console.info("unable to parse luigi context data for",r,t[r],e)}}e.setCurrentContext(t)},r=function(t){t&&(e.authData=t)};s.addEventListener("luigi.init",(function(n){t(n.data),r(n.data.authData),s.setLuigiCoreDomain(n.origin),e.luigiInitialized=!0,e._notifyInit(n.origin),s.sendPostMessageToLuigiCore({msg:"luigi.init.ok"})})),s.addEventListener("luigi-client.inactive-microfrontend",(function(t){e._notifyInactive(t.origin)})),s.addEventListener("luigi.auth.tokenIssued",(function(e){r(e.data.authData)})),s.addEventListener("luigi.navigate",(function(n){if(t(n.data),!e.currentContext.internal.isNavigateBack&&!e.currentContext.withoutSync){var r=window.location.hash;history.replaceState({luigiInduced:!0},"",n.data.viewUrl),window.dispatchEvent(new PopStateEvent("popstate",{state:"luiginavigation"})),window.location.hash!==r&&window.dispatchEvent(new HashChangeEvent("hashchange"))}e.currentContext.withoutSync&&Object.assign(e.currentContext.context,{viewUrl:n.data.viewUrl?n.data.viewUrl:void 0,pathParams:n.data.pathParams?n.data.pathParams:void 0}),e._notifyUpdate(),s.sendPostMessageToLuigiCore({msg:"luigi.navigate.ok"})})),window.parent.postMessage({msg:"luigi.get-context",clientVersion:n(707).i8},"*"),this._tpcCheck()}}},{key:"_tpcCheck",value:function(){var e,t,n="enabled",r=document.cookie;r&&(e=r.split(";").map((function(e){return e.trim()})).find((function(e){return"luigiCookie=true"==e}))),"luigiCookie=true"===e&&(t=e.split("=")[0],document.cookie=t+"=; Max-Age=-99999999;"),document.cookie="luigiCookie=true; SameSite=None; Secure",(r=document.cookie)&&(e=r.split(";").map((function(e){return e.trim()})).find((function(e){return"luigiCookie=true"==e}))),"luigiCookie=true"===e?(window.parent.postMessage({msg:"luigi.third-party-cookie",tpc:n},"*"),document.cookie=t+"=; Max-Age=-99999999;"):(n="disabled",window.parent.postMessage({msg:"luigi.third-party-cookie",tpc:n},"*"),console.warn("Third party cookies are not supported!"))}},{key:"_callAllFns",value:function(e,t,n){for(var r in e)e.hasOwnProperty(r)&&s.isFunction(e[r])&&e[r](t,n)}},{key:"_notifyInit",value:function(e){this._callAllFns(this._onInitFns,this.currentContext.context,e)}},{key:"_notifyUpdate",value:function(){this._callAllFns(this._onContextUpdatedFns,this.currentContext.context)}},{key:"_notifyInactive",value:function(){this._callAllFns(this._onInactiveFns)}},{key:"setCurrentContext",value:function(e){this.currentContext=e}},{key:"addInitListener",value:function(e){var t=s.getRandomId();return this._onInitFns[t]=e,this.luigiInitialized&&s.isFunction(e)&&e(this.currentContext.context,s.getLuigiCoreDomain()),t}},{key:"removeInitListener",value:function(e){return!!this._onInitFns[e]&&(this._onInitFns[e]=void 0,!0)}},{key:"addContextUpdateListener",value:function(e){var t=s.getRandomId();return this._onContextUpdatedFns[t]=e,this.luigiInitialized&&s.isFunction(e)&&e(this.currentContext.context),t}},{key:"removeContextUpdateListener",value:function(e){return!!this._onContextUpdatedFns[e]&&(this._onContextUpdatedFns[e]=void 0,!0)}},{key:"addInactiveListener",value:function(e){var t=s.getRandomId();return this._onInactiveFns[t]=e,t}},{key:"removeInactiveListener",value:function(e){return!!this._onInactiveFns[e]&&(this._onInactiveFns[e]=void 0,!0)}},{key:"addCustomMessageListener",value:function(e,t){return s.addEventListener(e,(function(e,n){return t(e,n)}))}},{key:"removeCustomMessageListener",value:function(e){return s.removeEventListener(e)}},{key:"getToken",value:function(){return this.authData.accessToken}},{key:"getContext",value:function(){return this.getEventData()}},{key:"getEventData",value:function(){return this.currentContext.context}},{key:"getActiveFeatureToggles",value:function(){return this.currentContext.internal.activeFeatureToggleList}},{key:"addNodeParams",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e&&s.sendPostMessageToLuigiCore({msg:"luigi.addNodeParams",data:e,keepBrowserHistory:t})}},{key:"getNodeParams",value:function(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?s.deSanitizeParamsMap(this.currentContext.nodeParams):this.currentContext.nodeParams}},{key:"getPathParams",value:function(){return this.currentContext.pathParams}},{key:"getCoreSearchParams",value:function(){return this.currentContext.searchParams||{}}},{key:"addCoreSearchParams",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e&&s.sendPostMessageToLuigiCore({msg:"luigi.addSearchParams",data:e,keepBrowserHistory:t})}},{key:"getClientPermissions",value:function(){return this.currentContext.internal.clientPermissions||{}}},{key:"setTargetOrigin",value:function(e){s.setTargetOrigin(e)}},{key:"sendCustomMessage",value:function(e){var t=s.convertCustomMessageUserToInternal(e);s.sendPostMessageToLuigiCore(t)}},{key:"getUserSettings",value:function(){return this.currentContext.internal.userSettings}},{key:"getAnchor",value:function(){return this.currentContext.internal.anchor||""}},{key:"setAnchor",value:function(e){s.sendPostMessageToLuigiCore({msg:"luigi.setAnchor",anchor:e})}},{key:"setViewGroupData",value:function(e){s.sendPostMessageToLuigiCore({msg:"luigi.setVGData",data:e})}}],r&&l(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(o),y=new d;function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this)).validSplitViewEvents=["expand","collapse","resize","close"],t.splitView={exists:!0,size:40,collapsed:!1},Object.assign(t.splitView,e),t.splitView.listeners=[s.addEventListener("luigi.navigation.splitview.internal",(function(e){Object.assign(t.splitView,e.data.data)}))],t.on("resize",(function(e){t.splitView.size=e})),t.on("close",(function(){t.splitView.listeners.forEach((function(e){return s.removeEventListener(e)}))})),t}return t=a,(n=[{key:"sendSplitViewEvent",value:function(e,t){s.sendPostMessageToLuigiCore({msg:"luigi.navigation.splitview.".concat(e),data:t})}},{key:"collapse",value:function(){this.sendSplitViewEvent("collapse")}},{key:"expand",value:function(){this.sendSplitViewEvent("expand")}},{key:"close",value:function(){this.sendSplitViewEvent("close")}},{key:"setSize",value:function(e){this.sendSplitViewEvent("resize",e)}},{key:"on",value:function(e,t){if(!this.validSplitViewEvents.includes(e))return console.warn(e+" is not a valid split view event"),!1;var n=s.addEventListener("luigi.navigation.splitview.".concat(e,".ok"),(function(e){var n="number"==typeof e.data.data?e.data.data:void 0;t(n)}));return this.splitView.listeners.push(n),n}},{key:"removeEventListener",value:function(e){return s.removeEventListener(e)}},{key:"exists",value:function(){return this.splitView.exists}},{key:"getSize",value:function(){return this.splitView.size}},{key:"isCollapsed",value:function(){return this.splitView.collapsed}},{key:"isExpanded",value:function(){return!this.splitView.collapsed}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(o);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function k(e,t){if(e){if("string"==typeof e)return P(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?P(e,t):void 0}}function P(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return x(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),t=i.call(this),Object.assign(x(t),e),t.options={preserveView:!1,nodeParams:{},errorSkipNavigation:!1,fromContext:null,fromClosestContext:!1,fromVirtualTreeRoot:!1,fromParent:!1,relative:!1,link:"",newTab:!1,preserveQueryParams:!1,anchor:"",preventContextUpdate:!1,preventHistoryEntry:!1},t}return t=a,n=[{key:"navigate",value:function(e,t,n,r,o,i){if(this.options.errorSkipNavigation)this.options.errorSkipNavigation=!1;else{r&&o&&i&&console.warn("modalSettings, splitViewSettings and drawerSettings cannot be used together. Only modal setting will be taken into account."),this.options.preserveView=n;var a="/"!==e[0];if("/"===e&&(r||o||i))console.warn("Navigation with an absolute path prevented.");else{var u={msg:"luigi.navigation.open",sessionId:t,params:Object.assign(this.options,{link:e,relative:a,intent:s.hasIntent(e),modal:r,splitView:o,drawer:i})};s.sendPostMessageToLuigiCore(u)}}}},{key:"updateModalPathInternalNavigation",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e){var r={msg:"luigi.navigation.updateModalDataPath",params:Object.assign(this.options,{link:e,modal:t,history:n})};s.sendPostMessageToLuigiCore(r)}else console.warn("Updating path of the modal upon internal navigation prevented. No path specified.")}},{key:"navigateToIntent",value:function(e){var t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o="#?intent=";if(o+=e,r){var i=Object.entries(r);if(i.length>0){o+="?";var a,u=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=k(e))){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){u=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}(i);try{for(u.s();!(a=u.n()).done;){var s=(t=a.value,n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,u=[],s=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(u.push(r.value),u.length!==t);s=!0);}catch(e){c=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,n)||k(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());o+=s[0]+"="+s[1]+"&"}}catch(e){u.e(e)}finally{u.f()}o=o.slice(0,-1)}}this.navigate(o)}},{key:"openAsModal",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.navigate(e,0,!0,t)}},{key:"updateModalSettings",value:function(){var e={msg:"luigi.navigation.updateModalSettings",updatedModalSettings:arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},addHistoryEntry:arguments.length>1&&void 0!==arguments[1]&&arguments[1]};s.sendPostMessageToLuigiCore(e)}},{key:"openAsSplitView",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.navigate(e,0,!0,void 0,t),new b(t)}},{key:"openAsDrawer",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.navigate(e,0,!0,void 0,void 0,t)}},{key:"fromContext",value:function(e){return this.currentContext.context.parentNavigationContexts&&-1!==this.currentContext.context.parentNavigationContexts.indexOf(e)?this.options.fromContext=e:(this.options.errorSkipNavigation=!0,console.error("Navigation not possible, navigationContext "+e+" not found.")),this}},{key:"fromClosestContext",value:function(){return this.currentContext&&this.currentContext.context.parentNavigationContexts.length>0?(this.options.fromContext=null,this.options.fromClosestContext=!0):console.error("Navigation not possible, no parent navigationContext found."),this}},{key:"fromVirtualTreeRoot",value:function(){return this.options.fromContext=null,this.options.fromClosestContext=!1,this.options.fromVirtualTreeRoot=!0,this}},{key:"fromParent",value:function(){return this.options.fromParent=!0,this}},{key:"withParams",value:function(e){return e&&Object.assign(this.options.nodeParams,e),this}},{key:"withOptions",value:function(e){return s.isObject(e)?(void 0!==e.preventHistoryEntry&&(this.options.preventHistoryEntry=e.preventHistoryEntry),void 0!==e.preventContextUpdate&&(this.options.preventContextUpdate=e.preventContextUpdate),this):this}},{key:"pathExists",value:function(e){var t=s.getRandomId(),n=this.getPromise("pathExistsPromises")||{};n[t]={resolveFn:function(){},then:function(e){this.resolveFn=e}},this.setPromise("pathExistsPromises",n),s.addEventListener("luigi.navigation.pathExists.answer",function(e,n){var r=e.data.data,o=this.getPromise("pathExistsPromises")||{};r.correlationId===t&&(o[r.correlationId]&&(o[r.correlationId].resolveFn(r.pathExists),delete o[r.correlationId],this.setPromise("pathExistsPromises",o)),s.removeEventListener(n))}.bind(this));var r={msg:"luigi.navigation.pathExists",data:Object.assign(this.options,{id:t,link:e,intent:s.hasIntent(e),relative:"/"!==e[0]})};return s.sendPostMessageToLuigiCore(r),n[t]}},{key:"hasBack",value:function(){return!!this.currentContext.internal.modal||0!==this.currentContext.internal.viewStackSize}},{key:"goBack",value:function(e){s.sendPostMessageToLuigiCore({msg:"luigi.navigation.back",goBackContext:e&&JSON.stringify(e)})}},{key:"withoutSync",value:function(){return this.options.withoutSync=!0,this}},{key:"newTab",value:function(){return this.options.newTab=!0,this}},{key:"preserveQueryParams",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.options.preserveQueryParams=e,this}},{key:"getCurrentRoute",value:function(){var e=this,t=s.getRandomId(),n=this.getPromise("getCurrentRoute")||{};return n[t]={resolveFn:function(){},then:function(e){this.resolveFn=e}},this.setPromise("getCurrentRoute",n),s.addEventListener("luigi.navigation.currentRoute.answer",(function(n,r){var o=n.data.data,i=e.getPromise("getCurrentRoute")||{};o.correlationId===t&&(i[o.correlationId]&&(i[o.correlationId].resolveFn(o.route),delete i[o.correlationId],e.setPromise("getCurrentRoute",i)),s.removeEventListener(r)),s.removeEventListener(r)})),s.sendPostMessageToLuigiCore({msg:"luigi.navigation.currentRoute",data:Object.assign(this.options,{id:t})}),n[t]}}],n&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(o);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===E(o)?o:String(o)),r)}var o}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var M=new(function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),e=i.call(this),s.addEventListener("luigi.current-locale-changed",(function(e){var t;e.data.currentLocale&&null!==(t=y.currentContext)&&void 0!==t&&t.internal&&(y.currentContext.internal.currentLocale=e.data.currentLocale,y._notifyUpdate())})),e}return t=a,(n=[{key:"showLoadingIndicator",value:function(){s.sendPostMessageToLuigiCore({msg:"luigi.show-loading-indicator"})}},{key:"hideLoadingIndicator",value:function(){s.sendPostMessageToLuigiCore({msg:"luigi.hide-loading-indicator"})}},{key:"closeCurrentModal",value:function(){s.sendPostMessageToLuigiCore({msg:"luigi.close-modal"})}},{key:"addBackdrop",value:function(){s.sendPostMessageToLuigiCore({msg:"luigi.add-backdrop"})}},{key:"removeBackdrop",value:function(){s.sendPostMessageToLuigiCore({msg:"luigi.remove-backdrop"})}},{key:"setDirtyStatus",value:function(e){s.sendPostMessageToLuigiCore({msg:"luigi.set-page-dirty",dirty:e})}},{key:"showConfirmationModal",value:function(e){var t=this;s.addEventListener("luigi.ux.confirmationModal.hide",(function(e,n){t.hideConfirmationModal(e.data.data),s.removeEventListener(n)})),s.sendPostMessageToLuigiCore({msg:"luigi.ux.confirmationModal.show",data:{settings:e}});var n={};return n.promise=new Promise((function(e,t){n.resolveFn=e,n.rejectFn=t})),this.setPromise("confirmationModal",n),n.promise}},{key:"hideConfirmationModal",value:function(e){var t=this.getPromise("confirmationModal");t&&(e.confirmed?t.resolveFn():t.rejectFn(),this.setPromise("confirmationModal",void 0))}},{key:"showAlert",value:function(e){var t=this;e.id=s.getRandomId(),s.addEventListener("luigi.ux.alert.hide",(function(n,r){n.data.id===e.id&&(t.hideAlert(n.data),s.removeEventListener(r))})),(null==e?void 0:e.closeAfter)<100&&(console.warn("Message with id='".concat(e.id,"' has too small 'closeAfter' value. It needs to be at least 100ms.")),e.closeAfter=void 0),s.sendPostMessageToLuigiCore({msg:"luigi.ux.alert.show",data:{settings:e}});var n=this.getPromise("alerts")||{};return n[e.id]={},n[e.id].promise=new Promise((function(t){n[e.id].resolveFn=t})),this.setPromise("alerts",n),n[e.id].promise}},{key:"hideAlert",value:function(e){var t=e.id,n=e.dismissKey,r=this.getPromise("alerts");t&&r[t]&&(r[t].resolveFn(n||t),delete r[t],this.setPromise("alerts",r))}},{key:"getCurrentLocale",value:function(){var e,t;return null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.currentLocale}},{key:"setCurrentLocale",value:function(e){e&&s.sendPostMessageToLuigiCore({msg:"luigi.ux.set-current-locale",data:{currentLocale:e}})}},{key:"isSplitView",value:function(){var e,t;return null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.splitView}},{key:"isModal",value:function(){var e,t;return null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.modal}},{key:"isDrawer",value:function(){var e,t;return null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.drawer}},{key:"getCurrentTheme",value:function(){var e,t;return null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.currentTheme}},{key:"getCSSVariables",value:function(){var e,t;return(null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.cssVariables)||{}}},{key:"applyCSS",value:function(){var e,t;document.querySelectorAll("head style[luigi-injected]").forEach((function(e){e.remove()}));var n=null===(e=y.currentContext)||void 0===e||null===(t=e.internal)||void 0===t?void 0:t.cssVariables;if(n){var r=":root {\n";Object.keys(n).forEach((function(e){var t=n[e];r+=(e.startsWith("--")?"":"--")+e+":"+t+";\n"})),r+="}";var o=document.createElement("style");o.setAttribute("luigi-injected",!0),o.innerHTML=r,document.head.appendChild(o)}}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(o));function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function R(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function F(e,t,n){return t&&A(e.prototype,t),n&&A(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var U=new Map,z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var o=D(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function o(){var e;return R(this,o),(e=r.call(this)).storageEventProcessor=new N,s.addEventListener("storage",(function(t,n){return e.storageEventProcessor.processEvent(t,n)})),e}return F(o,[{key:"setItem",value:function(e,t){var n=this;return new Promise((function(r,o){n.storageEventProcessor.execute(r,o,"setItem",{key:e,value:t})}))}},{key:"getItem",value:function(e){var t=this;return new Promise((function(n,r){t.storageEventProcessor.execute(n,r,"getItem",{key:e})}))}},{key:"removeItem",value:function(e){var t=this;return new Promise((function(n,r){t.storageEventProcessor.execute(n,r,"removeItem",{key:e})}))}},{key:"clear",value:function(){var e=this;return new Promise((function(t,n){e.storageEventProcessor.execute(t,n,"clear",{})}))}},{key:"has",value:function(e){var t=this;return new Promise((function(n,r){t.storageEventProcessor.execute(n,r,"has",{key:e})}))}},{key:"getAllKeys",value:function(){var e=this;return new Promise((function(t,n){e.storageEventProcessor.execute(t,n,"getAllKeys",{})}))}}]),o}(o),N=function(){function e(){R(this,e)}return F(e,[{key:"processEvent",value:function(e,t){try{var n=e.data.data;if(!U.has(n.id))return void console.log("Impossible to find Promise method for message "+n.id);var r=U.get(n.id);"ERROR"===n.status?r.reject(n.result):r.resolve(n.result),U.delete(n.id)}catch(e){console.error(e)}}},{key:"waitForSyncResult",value:function(e){for(var t=(new Date).getTime();!syncOperation.has(e);)if((new Date).getTime()-t>1e4)throw"Storage operation is taking more than 1 second...Some problem with Luigi Core communication";var n=syncOperation.get(e);return U.delete(e),n}},{key:"execute",value:function(e,t,n,r){var o=s.getRandomId();this.createPendingOperation(o,e,t),this.sendMessage(o,n,r)}},{key:"createPendingOperation",value:function(e,t,n){U.set(e,{resolve:t,reject:n})}},{key:"sendMessage",value:function(e,t,n){s.sendPostMessageToLuigiCore({msg:"storage",data:{id:e,operation:t,params:n}})}}]),e}(),B=new z;function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}var G=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),window!==window.top&&("true"!==window.document.head.getAttribute("disable-luigi-history-handling")&&(history.pushState=history.replaceState.bind(history)),"true"!==window.document.head.getAttribute("disable-luigi-runtime-error-handling")&&window.addEventListener("error",(function(e){var t={msg:"luigi-runtime-error-handling",errorObj:{filename:e.filename,message:e.message,lineno:e.lineno,colno:e.colno,error:e.error}};s.sendPostMessageToLuigiCore(t)})))}var t,n;return t=e,(n=[{key:"addInitListener",value:function(e){return y.addInitListener(e)}},{key:"removeInitListener",value:function(e){return y.removeInitListener(e)}},{key:"addContextUpdateListener",value:function(e){return y.addContextUpdateListener(e)}},{key:"removeContextUpdateListener",value:function(e){return y.removeContextUpdateListener(e)}},{key:"getToken",value:function(){return y.getToken()}},{key:"getEventData",value:function(){return y.getEventData()}},{key:"getContext",value:function(){return y.getContext()}},{key:"addNodeParams",value:function(e,t){return y.addNodeParams(e,t)}},{key:"getNodeParams",value:function(e){return y.getNodeParams(e)}},{key:"getActiveFeatureToggles",value:function(){return y.getActiveFeatureToggles()}},{key:"getPathParams",value:function(){return y.getPathParams()}},{key:"getCoreSearchParams",value:function(){return y.getCoreSearchParams()}},{key:"addCoreSearchParams",value:function(e,t){return y.addCoreSearchParams(e,t)}},{key:"getClientPermissions",value:function(){return y.getClientPermissions()}},{key:"sendCustomMessage",value:function(e){return y.sendCustomMessage(e)}},{key:"addCustomMessageListener",value:function(e,t){return y.addCustomMessageListener(e,t)}},{key:"removeCustomMessageListener",value:function(e){return y.removeCustomMessageListener(e)}},{key:"addInactiveListener",value:function(e,t){return y.addInactiveListener(e,t)}},{key:"removeInactiveListener",value:function(e){return y.removeInactiveListener(e)}},{key:"setTargetOrigin",value:function(e){return y.setTargetOrigin(e)}},{key:"getUserSettings",value:function(){return y.getUserSettings()}},{key:"isLuigiClientInitialized",value:function(){return y.isLuigiClientInitialized()}},{key:"luigiClientInit",value:function(){return y.luigiClientInit()}},{key:"getAnchor",value:function(){return y.getAnchor()}},{key:"setAnchor",value:function(e){return y.setAnchor(e)}},{key:"setViewGroupData",value:function(e){return y.setViewGroupData(e)}},{key:"linkManager",value:function(){return new j({currentContext:y.currentContext})}},{key:"uxManager",value:function(){return M}},{key:"lifecycleManager",value:function(){return y}},{key:"storageManager",value:function(){return B}}])&&K(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),Q=G=new G}(),r.default}()}));


/***/ }),

/***/ "./node_modules/ansi-html-community/index.js":
/*!***************************************************!*\
  !*** ./node_modules/ansi-html-community/index.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = ansiHTML

// Reference to https://github.com/sindresorhus/ansi-regex
var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/

var _defColors = {
  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
  black: '000',
  red: 'ff0000',
  green: '209805',
  yellow: 'e8bf03',
  blue: '0000ff',
  magenta: 'ff00ff',
  cyan: '00ffee',
  lightgrey: 'f0f0f0',
  darkgrey: '888'
}
var _styles = {
  30: 'black',
  31: 'red',
  32: 'green',
  33: 'yellow',
  34: 'blue',
  35: 'magenta',
  36: 'cyan',
  37: 'lightgrey'
}
var _openTags = {
  '1': 'font-weight:bold', // bold
  '2': 'opacity:0.5', // dim
  '3': '<i>', // italic
  '4': '<u>', // underscore
  '8': 'display:none', // hidden
  '9': '<del>' // delete
}
var _closeTags = {
  '23': '</i>', // reset italic
  '24': '</u>', // reset underscore
  '29': '</del>' // reset delete
}

;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
  _closeTags[n] = '</span>'
})

/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */
function ansiHTML (text) {
  // Returns the text if the string has no ANSI escape code.
  if (!_regANSI.test(text)) {
    return text
  }

  // Cache opened sequence.
  var ansiCodes = []
  // Replace with markup.
  var ret = text.replace(/\033\[(\d+)m/g, function (match, seq) {
    var ot = _openTags[seq]
    if (ot) {
      // If current sequence has been opened, close it.
      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast
        ansiCodes.pop()
        return '</span>'
      }
      // Open tag.
      ansiCodes.push(seq)
      return ot[0] === '<' ? ot : '<span style="' + ot + ';">'
    }

    var ct = _closeTags[seq]
    if (ct) {
      // Pop sequence
      ansiCodes.pop()
      return ct
    }
    return ''
  })

  // Make sure tags are closed.
  var l = ansiCodes.length
  ;(l > 0) && (ret += Array(l + 1).join('</span>'))

  return ret
}

/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */
ansiHTML.setColors = function (colors) {
  if (typeof colors !== 'object') {
    throw new Error('`colors` parameter must be an Object.')
  }

  var _finalColors = {}
  for (var key in _defColors) {
    var hex = colors.hasOwnProperty(key) ? colors[key] : null
    if (!hex) {
      _finalColors[key] = _defColors[key]
      continue
    }
    if ('reset' === key) {
      if (typeof hex === 'string') {
        hex = [hex]
      }
      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
        return typeof h !== 'string'
      })) {
        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')
      }
      var defHexColor = _defColors[key]
      if (!hex[0]) {
        hex[0] = defHexColor[0]
      }
      if (hex.length === 1 || !hex[1]) {
        hex = [hex[0]]
        hex.push(defHexColor[1])
      }

      hex = hex.slice(0, 2)
    } else if (typeof hex !== 'string') {
      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')
    }
    _finalColors[key] = hex
  }
  _setTags(_finalColors)
}

/**
 * Reset colors.
 */
ansiHTML.reset = function () {
  _setTags(_defColors)
}

/**
 * Expose tags, including open and close.
 * @type {Object}
 */
ansiHTML.tags = {}

if (Object.defineProperty) {
  Object.defineProperty(ansiHTML.tags, 'open', {
    get: function () { return _openTags }
  })
  Object.defineProperty(ansiHTML.tags, 'close', {
    get: function () { return _closeTags }
  })
} else {
  ansiHTML.tags.open = _openTags
  ansiHTML.tags.close = _closeTags
}

function _setTags (colors) {
  // reset all
  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]
  // inverse
  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]
  // dark grey
  _openTags['90'] = 'color:#' + colors.darkgrey

  for (var code in _styles) {
    var color = _styles[code]
    var oriColor = colors[color] || '000'
    _openTags[code] = 'color:#' + oriColor
    code = parseInt(code)
    _openTags[(code + 10).toString()] = 'background:#' + oriColor
  }
}

ansiHTML.reset()


/***/ }),

/***/ "./node_modules/css-jss/dist/css-jss.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/css-jss/dist/css-jss.esm.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   create: () => (/* binding */ createCss),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");
/* harmony import */ var jss_preset_default__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss-preset-default */ "./node_modules/jss-preset-default/dist/jss-preset-default.esm.js");



// Since we are in a single sheet mode, user shouldn't care about this.

var MAX_RULES_PER_SHEET = 10000;
var defaultJss = (0,jss__WEBPACK_IMPORTED_MODULE_0__.create)((0,jss_preset_default__WEBPACK_IMPORTED_MODULE_1__["default"])());

var createCss = function createCss(jss) {
  if (jss === void 0) {
    jss = defaultJss;
  }

  var cache = new Map();
  var ruleIndex = 0;
  var sheet;

  var getSheet = function getSheet() {
    if (!sheet || sheet.rules.index.length > MAX_RULES_PER_SHEET) {
      sheet = jss.createStyleSheet().attach();
    }

    return sheet;
  };

  function css() {
    // eslint-disable-next-line prefer-rest-params
    var args = arguments; // We can avoid the need for stringification with a babel plugin,
    // which could generate a hash at build time and add it to the object.

    var argsStr = JSON.stringify(args);
    var cached = cache.get(argsStr);
    if (cached) return cached.className;
    var flatArgs = []; // Flatten arguments which can be
    // - style objects
    // - array of style objects
    // - arrays of style objects

    for (var argIndex in args) {
      var arg = args[argIndex];

      if (!Array.isArray(arg)) {
        flatArgs.push(arg);
        continue;
      }

      for (var innerArgIndex = 0; innerArgIndex < arg.length; innerArgIndex++) {
        flatArgs.push(arg[innerArgIndex]);
      }
    }

    var mergedStyle = {};
    var labels = [];

    for (var i = 0; i < flatArgs.length; i++) {
      var style = flatArgs[i];
      if (!style) continue;
      var styleObject = style; // It can be a class name that css() has previously generated.

      if (typeof style === 'string') {
        // eslint-disable-next-line no-shadow
        var _cached = cache.get(style);

        if (_cached) {
          // eslint-disable-next-line prefer-spread
          if (_cached.labels.length) labels.push.apply(labels, _cached.labels);
          styleObject = _cached.style;
        }
      }

      if (styleObject.label && labels.indexOf(styleObject.label) === -1) labels.push(styleObject.label);
      Object.assign(mergedStyle, styleObject);
    }

    delete mergedStyle.label;
    var label = labels.length === 0 ? 'css' : labels.join('-');
    var key = label + "-" + ruleIndex++;
    getSheet().addRule(key, mergedStyle);
    var className = getSheet().classes[key];
    var cacheValue = {
      style: mergedStyle,
      labels: labels,
      className: className
    };
    cache.set(argsStr, cacheValue);
    cache.set(className, cacheValue);
    return className;
  } // For testing only.


  css.getSheet = getSheet;
  return css;
};

var css = createCss();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (css);



/***/ }),

/***/ "./node_modules/css-vendor/dist/css-vendor.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/css-vendor/dist/css-vendor.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prefix: () => (/* binding */ prefix),
/* harmony export */   supportedKeyframes: () => (/* binding */ supportedKeyframes),
/* harmony export */   supportedProperty: () => (/* binding */ supportedProperty),
/* harmony export */   supportedValue: () => (/* binding */ supportedValue)
/* harmony export */ });
/* harmony import */ var is_in_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-in-browser */ "./node_modules/is-in-browser/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");



// Export javascript style and css style vendor prefixes.
var js = '';
var css = '';
var vendor = '';
var browser = '';
var isTouch = is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"] && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  // Order matters. We need to check Webkit the last one because
  // other vendors use to add Webkit prefixes to some properties
  var jsCssMap = {
    Moz: '-moz-',
    ms: '-ms-',
    O: '-o-',
    Webkit: '-webkit-'
  };

  var _document$createEleme = document.createElement('p'),
      style = _document$createEleme.style;

  var testProp = 'Transform';

  for (var key in jsCssMap) {
    if (key + testProp in style) {
      js = key;
      css = jsCssMap[key];
      break;
    }
  } // Correctly detect the Edge browser.


  if (js === 'Webkit' && 'msHyphens' in style) {
    js = 'ms';
    css = jsCssMap.ms;
    browser = 'edge';
  } // Correctly detect the Safari browser.


  if (js === 'Webkit' && '-apple-trailing-word' in style) {
    vendor = 'apple';
  }
}
/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */


var prefix = {
  js: js,
  css: css,
  vendor: vendor,
  browser: browser,
  isTouch: isTouch
};

/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

function supportedKeyframes(key) {
  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
  // https://caniuse.com/#search=keyframes

  if (prefix.js === 'ms') return key;
  return "@" + prefix.css + "keyframes" + key.substr(10);
}

// https://caniuse.com/#search=appearance

var appearence = {
  noPrefill: ['appearance'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'appearance') return false;
    if (prefix.js === 'ms') return "-webkit-" + prop;
    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=color-adjust

var colorAdjust = {
  noPrefill: ['color-adjust'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'color-adjust') return false;
    if (prefix.js === 'Webkit') return prefix.css + "print-" + prop;
    return prop;
  }
};

var regExp = /[-\s]+(.)?/g;
/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

function toUpper(match, c) {
  return c ? c.toUpperCase() : '';
}
/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */


function camelize(str) {
  return str.replace(regExp, toUpper);
}

/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

function pascalize(str) {
  return camelize("-" + str);
}

// but we can use a longhand property instead.
// https://caniuse.com/#search=mask

var mask = {
  noPrefill: ['mask'],
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^mask/.test(prop)) return false;

    if (prefix.js === 'Webkit') {
      var longhand = 'mask-image';

      if (camelize(longhand) in style) {
        return prop;
      }

      if (prefix.js + pascalize(longhand) in style) {
        return prefix.css + prop;
      }
    }

    return prop;
  }
};

// https://caniuse.com/#search=text-orientation

var textOrientation = {
  noPrefill: ['text-orientation'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'text-orientation') return false;

    if (prefix.vendor === 'apple' && !prefix.isTouch) {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=transform

var transform = {
  noPrefill: ['transform'],
  supportedProperty: function supportedProperty(prop, style, options) {
    if (prop !== 'transform') return false;

    if (options.transform) {
      return prop;
    }

    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=transition

var transition = {
  noPrefill: ['transition'],
  supportedProperty: function supportedProperty(prop, style, options) {
    if (prop !== 'transition') return false;

    if (options.transition) {
      return prop;
    }

    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=writing-mode

var writingMode = {
  noPrefill: ['writing-mode'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'writing-mode') return false;

    if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=user-select

var userSelect = {
  noPrefill: ['user-select'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'user-select') return false;

    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=multicolumn
// https://github.com/postcss/autoprefixer/issues/491
// https://github.com/postcss/autoprefixer/issues/177

var breakPropsOld = {
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^break-/.test(prop)) return false;

    if (prefix.js === 'Webkit') {
      var jsProp = "WebkitColumn" + pascalize(prop);
      return jsProp in style ? prefix.css + "column-" + prop : false;
    }

    if (prefix.js === 'Moz') {
      var _jsProp = "page" + pascalize(prop);

      return _jsProp in style ? "page-" + prop : false;
    }

    return false;
  }
};

// See https://github.com/postcss/autoprefixer/issues/324.

var inlineLogicalOld = {
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^(border|margin|padding)-inline/.test(prop)) return false;
    if (prefix.js === 'Moz') return prop;
    var newProp = prop.replace('-inline', '');
    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
  }
};

// Camelization is required because we can't test using.
// CSS syntax for e.g. in FF.

var unprefixed = {
  supportedProperty: function supportedProperty(prop, style) {
    return camelize(prop) in style ? prop : false;
  }
};

var prefixed = {
  supportedProperty: function supportedProperty(prop, style) {
    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.

    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.

    if (prop[0] === '-' && prop[1] === '-') return prop;
    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.

    if (prefix.js !== 'Webkit' && "Webkit" + pascalized in style) return "-webkit-" + prop;
    return false;
  }
};

// https://caniuse.com/#search=scroll-snap

var scrollSnap = {
  supportedProperty: function supportedProperty(prop) {
    if (prop.substring(0, 11) !== 'scroll-snap') return false;

    if (prefix.js === 'ms') {
      return "" + prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=overscroll-behavior

var overscrollBehavior = {
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'overscroll-behavior') return false;

    if (prefix.js === 'ms') {
      return prefix.css + "scroll-chaining";
    }

    return prop;
  }
};

var propMap = {
  'flex-grow': 'flex-positive',
  'flex-shrink': 'flex-negative',
  'flex-basis': 'flex-preferred-size',
  'justify-content': 'flex-pack',
  order: 'flex-order',
  'align-items': 'flex-align',
  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.

}; // Support old flex spec from 2012.

var flex2012 = {
  supportedProperty: function supportedProperty(prop, style) {
    var newProp = propMap[prop];
    if (!newProp) return false;
    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
  }
};

var propMap$1 = {
  flex: 'box-flex',
  'flex-grow': 'box-flex',
  'flex-direction': ['box-orient', 'box-direction'],
  order: 'box-ordinal-group',
  'align-items': 'box-align',
  'flex-flow': ['box-orient', 'box-direction'],
  'justify-content': 'box-pack'
};
var propKeys = Object.keys(propMap$1);

var prefixCss = function prefixCss(p) {
  return prefix.css + p;
}; // Support old flex spec from 2009.


var flex2009 = {
  supportedProperty: function supportedProperty(prop, style, _ref) {
    var multiple = _ref.multiple;

    if (propKeys.indexOf(prop) > -1) {
      var newProp = propMap$1[prop];

      if (!Array.isArray(newProp)) {
        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
      }

      if (!multiple) return false;

      for (var i = 0; i < newProp.length; i++) {
        if (!(prefix.js + pascalize(newProp[0]) in style)) {
          return false;
        }
      }

      return newProp.map(prefixCss);
    }

    return false;
  }
};

// plugins = [
//   ...plugins,
//    breakPropsOld,
//    inlineLogicalOld,
//    unprefixed,
//    prefixed,
//    scrollSnap,
//    flex2012,
//    flex2009
// ]
// Plugins without 'noPrefill' value, going last.
// 'flex-*' plugins should be at the bottom.
// 'flex2009' going after 'flex2012'.
// 'prefixed' going after 'unprefixed'

var plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
var propertyDetectors = plugins.filter(function (p) {
  return p.supportedProperty;
}).map(function (p) {
  return p.supportedProperty;
});
var noPrefill = plugins.filter(function (p) {
  return p.noPrefill;
}).reduce(function (a, p) {
  a.push.apply(a, (0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(p.noPrefill));
  return a;
}, []);

var el;
var cache = {};

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  el = document.createElement('p'); // We test every property on vendor prefix requirement.
  // Once tested, result is cached. It gives us up to 70% perf boost.
  // http://jsperf.com/element-style-object-access-vs-plain-object
  //
  // Prefill cache with known css properties to reduce amount of
  // properties we need to feature test at runtime.
  // http://davidwalsh.name/vendor-prefix

  var computed = window.getComputedStyle(document.documentElement, '');

  for (var key$1 in computed) {
    // eslint-disable-next-line no-restricted-globals
    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];
  } // Properties that cannot be correctly detected using the
  // cache prefill method.


  noPrefill.forEach(function (x) {
    return delete cache[x];
  });
}
/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */


function supportedProperty(prop, options) {
  if (options === void 0) {
    options = {};
  }

  // For server-side rendering.
  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.

  if ( true && cache[prop] != null) {
    return cache[prop];
  } // Check if 'transition' or 'transform' natively supported in browser.


  if (prop === 'transition' || prop === 'transform') {
    options[prop] = prop in el.style;
  } // Find a plugin for current prefix property.


  for (var i = 0; i < propertyDetectors.length; i++) {
    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.

    if (cache[prop]) break;
  } // Reset styles for current property.
  // Firefox can even throw an error for invalid properties, e.g., "0".


  try {
    el.style[prop] = '';
  } catch (err) {
    return false;
  }

  return cache[prop];
}

var cache$1 = {};
var transitionProperties = {
  transition: 1,
  'transition-property': 1,
  '-webkit-transition': 1,
  '-webkit-transition-property': 1
};
var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
var el$1;
/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

function prefixTransitionCallback(match, p1, p2) {
  if (p1 === 'var') return 'var';
  if (p1 === 'all') return 'all';
  if (p2 === 'all') return ', all';
  var prefixedValue = p1 ? supportedProperty(p1) : ", " + supportedProperty(p2);
  if (!prefixedValue) return p1 || p2;
  return prefixedValue;
}

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) el$1 = document.createElement('p');
/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

function supportedValue(property, value) {
  // For server-side rendering.
  var prefixedValue = value;
  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.
  // We want only prefixable values here.
  // eslint-disable-next-line no-restricted-globals

  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {
    return prefixedValue;
  } // Create cache key for current value.


  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.

  if ( true && cache$1[cacheKey] != null) {
    return cache$1[cacheKey];
  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.


  try {
    // Test value as it is.
    el$1.style[property] = prefixedValue;
  } catch (err) {
    // Return false if value not supported.
    cache$1[cacheKey] = false;
    return false;
  } // If 'transition' or 'transition-property' property.


  if (transitionProperties[property]) {
    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
  } else if (el$1.style[property] === '') {
    // Value with a vendor prefix.
    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.

    el$1.style[property] = prefixedValue; // Return false if value not supported.

    if (el$1.style[property] === '') {
      cache$1[cacheKey] = false;
      return false;
    }
  } // Reset styles for current property.


  el$1.style[property] = ''; // Write current value to cache.

  cache$1[cacheKey] = prefixedValue;
  return cache$1[cacheKey];
}




/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),

/***/ "./node_modules/history/esm/history.js":
/*!*********************************************!*\
  !*** ./node_modules/history/esm/history.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createBrowserHistory: () => (/* binding */ createBrowserHistory),
/* harmony export */   createHashHistory: () => (/* binding */ createHashHistory),
/* harmony export */   createLocation: () => (/* binding */ createLocation),
/* harmony export */   createMemoryHistory: () => (/* binding */ createMemoryHistory),
/* harmony export */   createPath: () => (/* binding */ createPath),
/* harmony export */   locationsAreEqual: () => (/* binding */ locationsAreEqual),
/* harmony export */   parsePath: () => (/* binding */ parsePath)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/history/node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var resolve_pathname__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! resolve-pathname */ "./node_modules/resolve-pathname/esm/resolve-pathname.js");
/* harmony import */ var value_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! value-equal */ "./node_modules/value-equal/esm/value-equal.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/esm/tiny-invariant.js");






function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = (0,resolve_pathname__WEBPACK_IMPORTED_MODULE_1__["default"])(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0,value_equal__WEBPACK_IMPORTED_MODULE_2__["default"])(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(prompt == null, 'A history supports only one prompt at a time') : 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, 'Browser history needs a DOM') : 0 : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, 'Hash history needs a DOM') : 0 : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';

    if (baseTag && baseTag.getAttribute('href')) {
      href = stripHash(window.location.href);
    }

    return href + '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(state === undefined, 'Hash history cannot push state; it is ignored') : 0;
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : 0;
        setState();
      }
    });
  }

  function replace(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(state === undefined, 'Hash history cannot replace state; it is ignored') : 0;
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_4__["default"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}




/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "./node_modules/html-entities/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/html-entities/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var named_references_1 = __webpack_require__(/*! ./named-references */ "./node_modules/html-entities/lib/named-references.js");
var numeric_unicode_map_1 = __webpack_require__(/*! ./numeric-unicode-map */ "./node_modules/html-entities/lib/numeric-unicode-map.js");
var surrogate_pairs_1 = __webpack_require__(/*! ./surrogate-pairs */ "./node_modules/html-entities/lib/surrogate-pairs.js");
var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });
var encodeRegExps = {
    specialChars: /[<>'"&]/g,
    nonAscii: /[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
    nonAsciiPrintable: /[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
    nonAsciiPrintableOnly: /[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
    extensive: /[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g
};
var defaultEncodeOptions = {
    mode: 'specialChars',
    level: 'all',
    numeric: 'decimal'
};
/** Encodes all the necessary (specified by `level`) characters in the text */
function encode(text, _a) {
    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;
    if (!text) {
        return '';
    }
    var encodeRegExp = encodeRegExps[mode];
    var references = allNamedReferences[level].characters;
    var isHex = numeric === 'hexadecimal';
    encodeRegExp.lastIndex = 0;
    var _b = encodeRegExp.exec(text);
    var _c;
    if (_b) {
        _c = '';
        var _d = 0;
        do {
            if (_d !== _b.index) {
                _c += text.substring(_d, _b.index);
            }
            var _e = _b[0];
            var result_1 = references[_e];
            if (!result_1) {
                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);
                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';
            }
            _c += result_1;
            _d = _b.index + _e.length;
        } while ((_b = encodeRegExp.exec(text)));
        if (_d !== text.length) {
            _c += text.substring(_d);
        }
    }
    else {
        _c =
            text;
    }
    return _c;
}
exports.encode = encode;
var defaultDecodeOptions = {
    scope: 'body',
    level: 'all'
};
var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
var baseDecodeRegExps = {
    xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
    },
    html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
    },
    html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
    }
};
var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });
var fromCharCode = String.fromCharCode;
var outOfBoundsChar = fromCharCode(65533);
var defaultDecodeEntityOptions = {
    level: 'all'
};
/** Decodes a single entity */
function decodeEntity(entity, _a) {
    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;
    if (!entity) {
        return '';
    }
    var _b = entity;
    var decodeEntityLastChar_1 = entity[entity.length - 1];
    if (false) {}
    else if (false) {}
    else {
        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];
        if (decodeResultByReference_1) {
            _b = decodeResultByReference_1;
        }
        else if (entity[0] === '&' && entity[1] === '#') {
            var decodeSecondChar_1 = entity[2];
            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'
                ? parseInt(entity.substr(3), 16)
                : parseInt(entity.substr(2));
            _b =
                decodeCode_1 >= 0x10ffff
                    ? outOfBoundsChar
                    : decodeCode_1 > 65535
                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)
                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);
        }
    }
    return _b;
}
exports.decodeEntity = decodeEntity;
/** Decodes all entities in the text */
function decode(text, _a) {
    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;
    if (!text) {
        return '';
    }
    var decodeRegExp = decodeRegExps[level][scope];
    var references = allNamedReferences[level].entities;
    var isAttribute = scope === 'attribute';
    var isStrict = scope === 'strict';
    decodeRegExp.lastIndex = 0;
    var replaceMatch_1 = decodeRegExp.exec(text);
    var replaceResult_1;
    if (replaceMatch_1) {
        replaceResult_1 = '';
        var replaceLastIndex_1 = 0;
        do {
            if (replaceLastIndex_1 !== replaceMatch_1.index) {
                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);
            }
            var replaceInput_1 = replaceMatch_1[0];
            var decodeResult_1 = replaceInput_1;
            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];
            if (isAttribute
                && decodeEntityLastChar_2 === '=') {
                decodeResult_1 = replaceInput_1;
            }
            else if (isStrict
                && decodeEntityLastChar_2 !== ';') {
                decodeResult_1 = replaceInput_1;
            }
            else {
                var decodeResultByReference_2 = references[replaceInput_1];
                if (decodeResultByReference_2) {
                    decodeResult_1 = decodeResultByReference_2;
                }
                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {
                    var decodeSecondChar_2 = replaceInput_1[2];
                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'
                        ? parseInt(replaceInput_1.substr(3), 16)
                        : parseInt(replaceInput_1.substr(2));
                    decodeResult_1 =
                        decodeCode_2 >= 0x10ffff
                            ? outOfBoundsChar
                            : decodeCode_2 > 65535
                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)
                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);
                }
            }
            replaceResult_1 += decodeResult_1;
            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;
        } while ((replaceMatch_1 = decodeRegExp.exec(text)));
        if (replaceLastIndex_1 !== text.length) {
            replaceResult_1 += text.substring(replaceLastIndex_1);
        }
    }
    else {
        replaceResult_1 =
            text;
    }
    return replaceResult_1;
}
exports.decode = decode;


/***/ }),

/***/ "./node_modules/html-entities/lib/named-references.js":
/*!************************************************************!*\
  !*** ./node_modules/html-entities/lib/named-references.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));exports.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":" ","&nbsp;":" ","&iexcl":"¡","&iexcl;":"¡","&cent":"¢","&cent;":"¢","&pound":"£","&pound;":"£","&curren":"¤","&curren;":"¤","&yen":"¥","&yen;":"¥","&brvbar":"¦","&brvbar;":"¦","&sect":"§","&sect;":"§","&uml":"¨","&uml;":"¨","&copy":"©","&copy;":"©","&ordf":"ª","&ordf;":"ª","&laquo":"«","&laquo;":"«","&not":"¬","&not;":"¬","&shy":"­","&shy;":"­","&reg":"®","&reg;":"®","&macr":"¯","&macr;":"¯","&deg":"°","&deg;":"°","&plusmn":"±","&plusmn;":"±","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&acute":"´","&acute;":"´","&micro":"µ","&micro;":"µ","&para":"¶","&para;":"¶","&middot":"·","&middot;":"·","&cedil":"¸","&cedil;":"¸","&sup1":"¹","&sup1;":"¹","&ordm":"º","&ordm;":"º","&raquo":"»","&raquo;":"»","&frac14":"¼","&frac14;":"¼","&frac12":"½","&frac12;":"½","&frac34":"¾","&frac34;":"¾","&iquest":"¿","&iquest;":"¿","&Agrave":"À","&Agrave;":"À","&Aacute":"Á","&Aacute;":"Á","&Acirc":"Â","&Acirc;":"Â","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Aring":"Å","&Aring;":"Å","&AElig":"Æ","&AElig;":"Æ","&Ccedil":"Ç","&Ccedil;":"Ç","&Egrave":"È","&Egrave;":"È","&Eacute":"É","&Eacute;":"É","&Ecirc":"Ê","&Ecirc;":"Ê","&Euml":"Ë","&Euml;":"Ë","&Igrave":"Ì","&Igrave;":"Ì","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Iuml":"Ï","&Iuml;":"Ï","&ETH":"Ð","&ETH;":"Ð","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Ograve":"Ò","&Ograve;":"Ò","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Otilde":"Õ","&Otilde;":"Õ","&Ouml":"Ö","&Ouml;":"Ö","&times":"×","&times;":"×","&Oslash":"Ø","&Oslash;":"Ø","&Ugrave":"Ù","&Ugrave;":"Ù","&Uacute":"Ú","&Uacute;":"Ú","&Ucirc":"Û","&Ucirc;":"Û","&Uuml":"Ü","&Uuml;":"Ü","&Yacute":"Ý","&Yacute;":"Ý","&THORN":"Þ","&THORN;":"Þ","&szlig":"ß","&szlig;":"ß","&agrave":"à","&agrave;":"à","&aacute":"á","&aacute;":"á","&acirc":"â","&acirc;":"â","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&aring":"å","&aring;":"å","&aelig":"æ","&aelig;":"æ","&ccedil":"ç","&ccedil;":"ç","&egrave":"è","&egrave;":"è","&eacute":"é","&eacute;":"é","&ecirc":"ê","&ecirc;":"ê","&euml":"ë","&euml;":"ë","&igrave":"ì","&igrave;":"ì","&iacute":"í","&iacute;":"í","&icirc":"î","&icirc;":"î","&iuml":"ï","&iuml;":"ï","&eth":"ð","&eth;":"ð","&ntilde":"ñ","&ntilde;":"ñ","&ograve":"ò","&ograve;":"ò","&oacute":"ó","&oacute;":"ó","&ocirc":"ô","&ocirc;":"ô","&otilde":"õ","&otilde;":"õ","&ouml":"ö","&ouml;":"ö","&divide":"÷","&divide;":"÷","&oslash":"ø","&oslash;":"ø","&ugrave":"ù","&ugrave;":"ù","&uacute":"ú","&uacute;":"ú","&ucirc":"û","&ucirc;":"û","&uuml":"ü","&uuml;":"ü","&yacute":"ý","&yacute;":"ý","&thorn":"þ","&thorn;":"þ","&yuml":"ÿ","&yuml;":"ÿ","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"'":"&apos;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;","ª":"&ordf;","«":"&laquo;","¬":"&not;","­":"&shy;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;","µ":"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;","º":"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;","À":"&Agrave;","Á":"&Aacute;","Â":"&Acirc;","Ã":"&Atilde;","Ä":"&Auml;","Å":"&Aring;","Æ":"&AElig;","Ç":"&Ccedil;","È":"&Egrave;","É":"&Eacute;","Ê":"&Ecirc;","Ë":"&Euml;","Ì":"&Igrave;","Í":"&Iacute;","Î":"&Icirc;","Ï":"&Iuml;","Ð":"&ETH;","Ñ":"&Ntilde;","Ò":"&Ograve;","Ó":"&Oacute;","Ô":"&Ocirc;","Õ":"&Otilde;","Ö":"&Ouml;","×":"&times;","Ø":"&Oslash;","Ù":"&Ugrave;","Ú":"&Uacute;","Û":"&Ucirc;","Ü":"&Uuml;","Ý":"&Yacute;","Þ":"&THORN;","ß":"&szlig;","à":"&agrave;","á":"&aacute;","â":"&acirc;","ã":"&atilde;","ä":"&auml;","å":"&aring;","æ":"&aelig;","ç":"&ccedil;","è":"&egrave;","é":"&eacute;","ê":"&ecirc;","ë":"&euml;","ì":"&igrave;","í":"&iacute;","î":"&icirc;","ï":"&iuml;","ð":"&eth;","ñ":"&ntilde;","ò":"&ograve;","ó":"&oacute;","ô":"&ocirc;","õ":"&otilde;","ö":"&ouml;","÷":"&divide;","ø":"&oslash;","ù":"&ugrave;","ú":"&uacute;","û":"&ucirc;","ü":"&uuml;","ý":"&yacute;","þ":"&thorn;","ÿ":"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;","Œ":"&OElig;","œ":"&oelig;","Š":"&Scaron;","š":"&scaron;","Ÿ":"&Yuml;","ˆ":"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;","ƒ":"&fnof;","Α":"&Alpha;","Β":"&Beta;","Γ":"&Gamma;","Δ":"&Delta;","Ε":"&Epsilon;","Ζ":"&Zeta;","Η":"&Eta;","Θ":"&Theta;","Ι":"&Iota;","Κ":"&Kappa;","Λ":"&Lambda;","Μ":"&Mu;","Ν":"&Nu;","Ξ":"&Xi;","Ο":"&Omicron;","Π":"&Pi;","Ρ":"&Rho;","Σ":"&Sigma;","Τ":"&Tau;","Υ":"&Upsilon;","Φ":"&Phi;","Χ":"&Chi;","Ψ":"&Psi;","Ω":"&Omega;","α":"&alpha;","β":"&beta;","γ":"&gamma;","δ":"&delta;","ε":"&epsilon;","ζ":"&zeta;","η":"&eta;","θ":"&theta;","ι":"&iota;","κ":"&kappa;","λ":"&lambda;","μ":"&mu;","ν":"&nu;","ξ":"&xi;","ο":"&omicron;","π":"&pi;","ρ":"&rho;","ς":"&sigmaf;","σ":"&sigma;","τ":"&tau;","υ":"&upsilon;","φ":"&phi;","χ":"&chi;","ψ":"&psi;","ω":"&omega;","ϑ":"&thetasym;","ϒ":"&upsih;","ϖ":"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;","℘":"&weierp;","ℑ":"&image;","ℜ":"&real;","™":"&trade;","ℵ":"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"Æ","&AElig;":"Æ","&AMP":"&","&AMP;":"&","&Aacute":"Á","&Aacute;":"Á","&Abreve;":"Ă","&Acirc":"Â","&Acirc;":"Â","&Acy;":"А","&Afr;":"𝔄","&Agrave":"À","&Agrave;":"À","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"𝔸","&ApplyFunction;":"⁡","&Aring":"Å","&Aring;":"Å","&Ascr;":"𝒜","&Assign;":"≔","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"𝔅","&Bopf;":"𝔹","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"©","&COPY;":"©","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"Ç","&Ccedil;":"Ç","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"¸","&CenterDot;":"·","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"𝒞","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"𝔇","&DiacriticalAcute;":"´","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"𝔻","&Dot;":"¨","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"¨","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"𝒟","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"Ð","&ETH;":"Ð","&Eacute":"É","&Eacute;":"É","&Ecaron;":"Ě","&Ecirc":"Ê","&Ecirc;":"Ê","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"𝔈","&Egrave":"È","&Egrave;":"È","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"𝔼","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"Ë","&Euml;":"Ë","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"𝔉","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"𝔽","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"𝔊","&Gg;":"⋙","&Gopf;":"𝔾","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"𝒢","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"Ì","&Igrave;":"Ì","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"𝕀","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"Ï","&Iuml;":"Ï","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"𝔍","&Jopf;":"𝕁","&Jscr;":"𝒥","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"𝔎","&Kopf;":"𝕂","&Kscr;":"𝒦","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"𝔏","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"𝕃","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"𝔐","&MinusPlus;":"∓","&Mopf;":"𝕄","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\n","&Nfr;":"𝔑","&NoBreak;":"⁠","&NonBreakingSpace;":" ","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"𝒩","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"𝔒","&Ograve":"Ò","&Ograve;":"Ò","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"𝕆","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"𝒪","&Oslash":"Ø","&Oslash;":"Ø","&Otilde":"Õ","&Otilde;":"Õ","&Otimes;":"⨷","&Ouml":"Ö","&Ouml;":"Ö","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"𝔓","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"±","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"𝒫","&Psi;":"Ψ","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"𝔔","&Qopf;":"ℚ","&Qscr;":"𝒬","&RBarr;":"⤐","&REG":"®","&REG;":"®","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"𝔖","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"𝕊","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"𝒮","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"Þ","&THORN;":"Þ","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"\t","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"𝔗","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"𝕋","&TripleDot;":"⃛","&Tscr;":"𝒯","&Tstrok;":"Ŧ","&Uacute":"Ú","&Uacute;":"Ú","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"Û","&Ucirc;":"Û","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"𝔘","&Ugrave":"Ù","&Ugrave;":"Ù","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"𝕌","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"𝒰","&Utilde;":"Ũ","&Uuml":"Ü","&Uuml;":"Ü","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"𝔙","&Vopf;":"𝕍","&Vscr;":"𝒱","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"𝔚","&Wopf;":"𝕎","&Wscr;":"𝒲","&Xfr;":"𝔛","&Xi;":"Ξ","&Xopf;":"𝕏","&Xscr;":"𝒳","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"Ý","&Yacute;":"Ý","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"𝔜","&Yopf;":"𝕐","&Yscr;":"𝒴","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"𝒵","&aacute":"á","&aacute;":"á","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"â","&acirc;":"â","&acute":"´","&acute;":"´","&acy;":"а","&aelig":"æ","&aelig;":"æ","&af;":"⁡","&afr;":"𝔞","&agrave":"à","&agrave;":"à","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"Å","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"𝕒","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"'","&approx;":"≈","&approxeq;":"≊","&aring":"å","&aring;":"å","&ascr;":"𝒶","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"𝔟","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"𝕓","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"¦","&brvbar;":"¦","&bscr;":"𝒷","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"ç","&ccedil;":"ç","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"¸","&cedil;":"¸","&cemptyv;":"⦲","&cent":"¢","&cent;":"¢","&centerdot;":"·","&cfr;":"𝔠","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"®","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"𝕔","&coprod;":"∐","&copy":"©","&copy;":"©","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"𝒸","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"¤","&curren;":"¤","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"°","&deg;":"°","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"𝔡","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"¨","&digamma;":"ϝ","&disin;":"⋲","&div;":"÷","&divide":"÷","&divide;":"÷","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"𝕕","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"𝒹","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"é","&eacute;":"é","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"ê","&ecirc;":"ê","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"𝔢","&eg;":"⪚","&egrave":"è","&egrave;":"è","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"𝕖","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"ð","&eth;":"ð","&euml":"ë","&euml;":"ë","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"𝔣","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"𝕗","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"½","&frac12;":"½","&frac13;":"⅓","&frac14":"¼","&frac14;":"¼","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"¾","&frac34;":"¾","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"𝒻","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"𝔤","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"𝕘","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"½","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"𝔥","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"𝕙","&horbar;":"―","&hscr;":"𝒽","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"í","&iacute;":"í","&ic;":"⁣","&icirc":"î","&icirc;":"î","&icy;":"и","&iecy;":"е","&iexcl":"¡","&iexcl;":"¡","&iff;":"⇔","&ifr;":"𝔦","&igrave":"ì","&igrave;":"ì","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"𝕚","&iota;":"ι","&iprod;":"⨼","&iquest":"¿","&iquest;":"¿","&iscr;":"𝒾","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"ï","&iuml;":"ï","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"𝔧","&jmath;":"ȷ","&jopf;":"𝕛","&jscr;":"𝒿","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"𝔨","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"𝕜","&kscr;":"𝓀","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"«","&laquo;":"«","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"𝔩","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"𝕝","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"𝓁","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"¯","&macr;":"¯","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"𝔪","&mho;":"℧","&micro":"µ","&micro;":"µ","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"·","&middot;":"·","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"𝕞","&mp;":"∓","&mscr;":"𝓂","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":" ","&nbsp;":" ","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"𝔫","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"𝕟","&not":"¬","&not;":"¬","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"𝓃","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"ñ","&ntilde;":"ñ","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"ó","&oacute;":"ó","&oast;":"⊛","&ocir;":"⊚","&ocirc":"ô","&ocirc;":"ô","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"𝔬","&ogon;":"˛","&ograve":"ò","&ograve;":"ò","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"𝕠","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"ª","&ordf;":"ª","&ordm":"º","&ordm;":"º","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"ø","&oslash;":"ø","&osol;":"⊘","&otilde":"õ","&otilde;":"õ","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"ö","&ouml;":"ö","&ovbar;":"⌽","&par;":"∥","&para":"¶","&para;":"¶","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"𝔭","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"±","&plusmn;":"±","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"±","&pointint;":"⨕","&popf;":"𝕡","&pound":"£","&pound;":"£","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"𝓅","&psi;":"ψ","&puncsp;":" ","&qfr;":"𝔮","&qint;":"⨌","&qopf;":"𝕢","&qprime;":"⁗","&qscr;":"𝓆","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":'"',"&quot;":'"',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"»","&raquo;":"»","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"®","&reg;":"®","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"𝔯","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"𝕣","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"𝓇","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"§","&sect;":"§","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"𝔰","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"­","&shy;":"­","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"𝕤","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"𝓈","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"¯","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"¹","&sup1;":"¹","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"ß","&szlig;":"ß","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"𝔱","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"þ","&thorn;":"þ","&tilde;":"˜","&times":"×","&times;":"×","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"𝕥","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"𝓉","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"ú","&uacute;":"ú","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"û","&ucirc;":"û","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"𝔲","&ugrave":"ù","&ugrave;":"ù","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"¨","&uml;":"¨","&uogon;":"ų","&uopf;":"𝕦","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"𝓊","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"ü","&uuml;":"ü","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"𝔳","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"𝕧","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"𝓋","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"𝔴","&wopf;":"𝕨","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"𝓌","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"𝔵","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"𝕩","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"𝓍","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"ý","&yacute;":"ý","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"¥","&yen;":"¥","&yfr;":"𝔶","&yicy;":"ї","&yopf;":"𝕪","&yscr;":"𝓎","&yucy;":"ю","&yuml":"ÿ","&yuml;":"ÿ","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"𝔷","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"𝕫","&zscr;":"𝓏","&zwj;":"‍","&zwnj;":"‌"},characters:{"Æ":"&AElig;","&":"&amp;","Á":"&Aacute;","Ă":"&Abreve;","Â":"&Acirc;","А":"&Acy;","𝔄":"&Afr;","À":"&Agrave;","Α":"&Alpha;","Ā":"&Amacr;","⩓":"&And;","Ą":"&Aogon;","𝔸":"&Aopf;","⁡":"&af;","Å":"&angst;","𝒜":"&Ascr;","≔":"&coloneq;","Ã":"&Atilde;","Ä":"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;","Б":"&Bcy;","∵":"&because;","ℬ":"&bernou;","Β":"&Beta;","𝔅":"&Bfr;","𝔹":"&Bopf;","˘":"&breve;","≎":"&bump;","Ч":"&CHcy;","©":"&copy;","Ć":"&Cacute;","⋒":"&Cap;","ⅅ":"&DD;","ℭ":"&Cfr;","Č":"&Ccaron;","Ç":"&Ccedil;","Ĉ":"&Ccirc;","∰":"&Cconint;","Ċ":"&Cdot;","¸":"&cedil;","·":"&middot;","Χ":"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;","ℂ":"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;","𝒞":"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;","Ђ":"&DJcy;","Ѕ":"&DScy;","Џ":"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;","Ď":"&Dcaron;","Д":"&Dcy;","∇":"&nabla;","Δ":"&Delta;","𝔇":"&Dfr;","´":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;","ⅆ":"&dd;","𝔻":"&Dopf;","¨":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;","𝒟":"&Dscr;","Đ":"&Dstrok;","Ŋ":"&ENG;","Ð":"&ETH;","É":"&Eacute;","Ě":"&Ecaron;","Ê":"&Ecirc;","Э":"&Ecy;","Ė":"&Edot;","𝔈":"&Efr;","È":"&Egrave;","∈":"&isinv;","Ē":"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;","Ę":"&Eogon;","𝔼":"&Eopf;","Ε":"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;","ℰ":"&expectation;","⩳":"&Esim;","Η":"&Eta;","Ë":"&Euml;","∃":"&exist;","ⅇ":"&exponentiale;","Ф":"&Fcy;","𝔉":"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;","𝔽":"&Fopf;","∀":"&forall;","ℱ":"&Fscr;","Ѓ":"&GJcy;",">":"&gt;","Γ":"&Gamma;","Ϝ":"&Gammad;","Ğ":"&Gbreve;","Ģ":"&Gcedil;","Ĝ":"&Gcirc;","Г":"&Gcy;","Ġ":"&Gdot;","𝔊":"&Gfr;","⋙":"&ggg;","𝔾":"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;","𝒢":"&Gscr;","≫":"&gg;","Ъ":"&HARDcy;","ˇ":"&caron;","^":"&Hat;","Ĥ":"&Hcirc;","ℌ":"&Poincareplane;","ℋ":"&hamilt;","ℍ":"&quaternions;","─":"&boxh;","Ħ":"&Hstrok;","≏":"&bumpeq;","Е":"&IEcy;","Ĳ":"&IJlig;","Ё":"&IOcy;","Í":"&Iacute;","Î":"&Icirc;","И":"&Icy;","İ":"&Idot;","ℑ":"&imagpart;","Ì":"&Igrave;","Ī":"&Imacr;","ⅈ":"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;","Į":"&Iogon;","𝕀":"&Iopf;","Ι":"&Iota;","ℐ":"&imagline;","Ĩ":"&Itilde;","І":"&Iukcy;","Ï":"&Iuml;","Ĵ":"&Jcirc;","Й":"&Jcy;","𝔍":"&Jfr;","𝕁":"&Jopf;","𝒥":"&Jscr;","Ј":"&Jsercy;","Є":"&Jukcy;","Х":"&KHcy;","Ќ":"&KJcy;","Κ":"&Kappa;","Ķ":"&Kcedil;","К":"&Kcy;","𝔎":"&Kfr;","𝕂":"&Kopf;","𝒦":"&Kscr;","Љ":"&LJcy;","<":"&lt;","Ĺ":"&Lacute;","Λ":"&Lambda;","⟪":"&Lang;","ℒ":"&lagran;","↞":"&twoheadleftarrow;","Ľ":"&Lcaron;","Ļ":"&Lcedil;","Л":"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;","𝔏":"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;","Ŀ":"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;","𝕃":"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;","Ł":"&Lstrok;","≪":"&ll;","⤅":"&Map;","М":"&Mcy;"," ":"&MediumSpace;","ℳ":"&phmmat;","𝔐":"&Mfr;","∓":"&mp;","𝕄":"&Mopf;","Μ":"&Mu;","Њ":"&NJcy;","Ń":"&Nacute;","Ň":"&Ncaron;","Ņ":"&Ncedil;","Н":"&Ncy;","​":"&ZeroWidthSpace;","\n":"&NewLine;","𝔑":"&Nfr;","⁠":"&NoBreak;"," ":"&nbsp;","ℕ":"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;","𝒩":"&Nscr;","Ñ":"&Ntilde;","Ν":"&Nu;","Œ":"&OElig;","Ó":"&Oacute;","Ô":"&Ocirc;","О":"&Ocy;","Ő":"&Odblac;","𝔒":"&Ofr;","Ò":"&Ograve;","Ō":"&Omacr;","Ω":"&ohm;","Ο":"&Omicron;","𝕆":"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;","𝒪":"&Oscr;","Ø":"&Oslash;","Õ":"&Otilde;","⨷":"&Otimes;","Ö":"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;","П":"&Pcy;","𝔓":"&Pfr;","Φ":"&Phi;","Π":"&Pi;","±":"&pm;","ℙ":"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;","𝒫":"&Pscr;","Ψ":"&Psi;",'"':"&quot;","𝔔":"&Qfr;","ℚ":"&rationals;","𝒬":"&Qscr;","⤐":"&drbkarow;","®":"&reg;","Ŕ":"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;","Ř":"&Rcaron;","Ŗ":"&Rcedil;","Р":"&Rcy;","ℜ":"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;","Ρ":"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;","ℝ":"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;","ℛ":"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;","Щ":"&SHCHcy;","Ш":"&SHcy;","Ь":"&SOFTcy;","Ś":"&Sacute;","⪼":"&Sc;","Š":"&Scaron;","Ş":"&Scedil;","Ŝ":"&Scirc;","С":"&Scy;","𝔖":"&Sfr;","↑":"&uparrow;","Σ":"&Sigma;","∘":"&compfn;","𝕊":"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;","𝒮":"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;","Þ":"&THORN;","™":"&trade;","Ћ":"&TSHcy;","Ц":"&TScy;","\t":"&Tab;","Τ":"&Tau;","Ť":"&Tcaron;","Ţ":"&Tcedil;","Т":"&Tcy;","𝔗":"&Tfr;","∴":"&therefore;","Θ":"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;","𝕋":"&Topf;","⃛":"&tdot;","𝒯":"&Tscr;","Ŧ":"&Tstrok;","Ú":"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;","Ў":"&Ubrcy;","Ŭ":"&Ubreve;","Û":"&Ucirc;","У":"&Ucy;","Ű":"&Udblac;","𝔘":"&Ufr;","Ù":"&Ugrave;","Ū":"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;","Ų":"&Uogon;","𝕌":"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;","ϒ":"&upsih;","Υ":"&Upsilon;","Ů":"&Uring;","𝒰":"&Uscr;","Ũ":"&Utilde;","Ü":"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;","В":"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;","𝔙":"&Vfr;","𝕍":"&Vopf;","𝒱":"&Vscr;","⊪":"&Vvdash;","Ŵ":"&Wcirc;","⋀":"&xwedge;","𝔚":"&Wfr;","𝕎":"&Wopf;","𝒲":"&Wscr;","𝔛":"&Xfr;","Ξ":"&Xi;","𝕏":"&Xopf;","𝒳":"&Xscr;","Я":"&YAcy;","Ї":"&YIcy;","Ю":"&YUcy;","Ý":"&Yacute;","Ŷ":"&Ycirc;","Ы":"&Ycy;","𝔜":"&Yfr;","𝕐":"&Yopf;","𝒴":"&Yscr;","Ÿ":"&Yuml;","Ж":"&ZHcy;","Ź":"&Zacute;","Ž":"&Zcaron;","З":"&Zcy;","Ż":"&Zdot;","Ζ":"&Zeta;","ℨ":"&zeetrf;","ℤ":"&integers;","𝒵":"&Zscr;","á":"&aacute;","ă":"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;","â":"&acirc;","а":"&acy;","æ":"&aelig;","𝔞":"&afr;","à":"&agrave;","ℵ":"&aleph;","α":"&alpha;","ā":"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;","ą":"&aogon;","𝕒":"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","'":"&apos;","å":"&aring;","𝒶":"&ascr;","*":"&midast;","ã":"&atilde;","ä":"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;","б":"&bcy;","„":"&ldquor;","⦰":"&bemptyv;","β":"&beta;","ℶ":"&beth;","≬":"&twixt;","𝔟":"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;","𝕓":"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","¦":"&brvbar;","𝒷":"&bscr;","⁏":"&bsemi;","\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;","ć":"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;","č":"&ccaron;","ç":"&ccedil;","ĉ":"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;","ċ":"&cdot;","⦲":"&cemptyv;","¢":"&cent;","𝔠":"&cfr;","ч":"&chcy;","✓":"&checkmark;","χ":"&chi;","○":"&cir;","⧃":"&cirE;","ˆ":"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;","𝕔":"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;","𝒸":"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","¤":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;","ℸ":"&daleth;","‐":"&hyphen;","⤏":"&rBarr;","ď":"&dcaron;","д":"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","°":"&deg;","δ":"&delta;","⦱":"&demptyv;","⥿":"&dfisht;","𝔡":"&dfr;","♦":"&diams;","ϝ":"&gammad;","⋲":"&disin;","÷":"&divide;","⋇":"&divonx;","ђ":"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;","𝕕":"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;","𝒹":"&dscr;","ѕ":"&dscy;","⧶":"&dsol;","đ":"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;","џ":"&dzcy;","⟿":"&dzigrarr;","é":"&eacute;","⩮":"&easter;","ě":"&ecaron;","≖":"&eqcirc;","ê":"&ecirc;","≕":"&eqcolon;","э":"&ecy;","ė":"&edot;","≒":"&fallingdotseq;","𝔢":"&efr;","⪚":"&eg;","è":"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;","ℓ":"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;","ē":"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;","ŋ":"&eng;"," ":"&ensp;","ę":"&eogon;","𝕖":"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;","ε":"&epsilon;","ϵ":"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;","ℯ":"&escr;","η":"&eta;","ð":"&eth;","ë":"&euml;","€":"&euro;","!":"&excl;","ф":"&fcy;","♀":"&female;","ﬃ":"&ffilig;","ﬀ":"&fflig;","ﬄ":"&ffllig;","𝔣":"&ffr;","ﬁ":"&filig;",fj:"&fjlig;","♭":"&flat;","ﬂ":"&fllig;","▱":"&fltns;","ƒ":"&fnof;","𝕗":"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","½":"&half;","⅓":"&frac13;","¼":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","¾":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;","𝒻":"&fscr;","⪌":"&gtreqqless;","ǵ":"&gacute;","γ":"&gamma;","⪆":"&gtrapprox;","ğ":"&gbreve;","ĝ":"&gcirc;","г":"&gcy;","ġ":"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;","𝔤":"&gfr;","ℷ":"&gimel;","ѓ":"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;","𝕘":"&gopf;","ℊ":"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;","ъ":"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;","ℏ":"&plankv;","ĥ":"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;","𝔥":"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;","𝕙":"&hopf;","―":"&horbar;","𝒽":"&hscr;","ħ":"&hstrok;","⁃":"&hybull;","í":"&iacute;","î":"&icirc;","и":"&icy;","е":"&iecy;","¡":"&iexcl;","𝔦":"&ifr;","ì":"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;","ĳ":"&ijlig;","ī":"&imacr;","ı":"&inodot;","⊷":"&imof;","Ƶ":"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;","ё":"&iocy;","į":"&iogon;","𝕚":"&iopf;","ι":"&iota;","¿":"&iquest;","𝒾":"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;","ĩ":"&itilde;","і":"&iukcy;","ï":"&iuml;","ĵ":"&jcirc;","й":"&jcy;","𝔧":"&jfr;","ȷ":"&jmath;","𝕛":"&jopf;","𝒿":"&jscr;","ј":"&jsercy;","є":"&jukcy;","κ":"&kappa;","ϰ":"&varkappa;","ķ":"&kcedil;","к":"&kcy;","𝔨":"&kfr;","ĸ":"&kgreen;","х":"&khcy;","ќ":"&kjcy;","𝕜":"&kopf;","𝓀":"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;","ĺ":"&lacute;","⦴":"&laemptyv;","λ":"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","«":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;","ľ":"&lcaron;","ļ":"&lcedil;","л":"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;","𝔩":"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;","љ":"&ljcy;","⥫":"&llhard;","◺":"&lltri;","ŀ":"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;","𝕝":"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;","𝓁":"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;","ł":"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","¯":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;","м":"&mcy;","—":"&mdash;","𝔪":"&mfr;","℧":"&mho;","µ":"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;","𝕞":"&mopf;","𝓂":"&mscr;","μ":"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;","ń":"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;","ŉ":"&napos;","♮":"&natural;","⩃":"&ncap;","ň":"&ncaron;","ņ":"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;","н":"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;","𝔫":"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;","њ":"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;","𝕟":"&nopf;","¬":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;","𝓃":"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;","ñ":"&ntilde;","ν":"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;","ó":"&oacute;","ô":"&ocirc;","о":"&ocy;","ő":"&odblac;","⨸":"&odiv;","⦼":"&odsold;","œ":"&oelig;","⦿":"&ofcir;","𝔬":"&ofr;","˛":"&ogon;","ò":"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;","ō":"&omacr;","ω":"&omega;","ο":"&omicron;","⦶":"&omid;","𝕠":"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;","ℴ":"&oscr;","ª":"&ordf;","º":"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;","ø":"&oslash;","⊘":"&osol;","õ":"&otilde;","⨶":"&otimesas;","ö":"&ouml;","⌽":"&ovbar;","¶":"&para;","⫳":"&parsim;","⫽":"&parsl;","п":"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;","𝔭":"&pfr;","φ":"&phi;","ϕ":"&varphi;","☎":"&phone;","π":"&pi;","ϖ":"&varpi;","ℎ":"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;","𝕡":"&popf;","£":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;","𝓅":"&pscr;","ψ":"&psi;"," ":"&puncsp;","𝔮":"&qfr;","𝕢":"&qopf;","⁗":"&qprime;","𝓆":"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;","ŕ":"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","»":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;","ř":"&rcaron;","ŗ":"&rcedil;","р":"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;","𝔯":"&rfr;","⥬":"&rharul;","ρ":"&rho;","ϱ":"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;","𝕣":"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;","𝓇":"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;","ś":"&sacute;","⪴":"&scE;","⪸":"&succapprox;","š":"&scaron;","ş":"&scedil;","ŝ":"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;","с":"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","§":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;","𝔰":"&sfr;","♯":"&sharp;","щ":"&shchcy;","ш":"&shcy;","­":"&shy;","σ":"&sigma;","ς":"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;","ь":"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;","𝕤":"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;","𝓈":"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","¹":"&sup1;","²":"&sup2;","³":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;","ß":"&szlig;","⌖":"&target;","τ":"&tau;","ť":"&tcaron;","ţ":"&tcedil;","т":"&tcy;","⌕":"&telrec;","𝔱":"&tfr;","θ":"&theta;","ϑ":"&vartheta;","þ":"&thorn;","×":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;","𝕥":"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;","𝓉":"&tscr;","ц":"&tscy;","ћ":"&tshcy;","ŧ":"&tstrok;","⥣":"&uHar;","ú":"&uacute;","ў":"&ubrcy;","ŭ":"&ubreve;","û":"&ucirc;","у":"&ucy;","ű":"&udblac;","⥾":"&ufisht;","𝔲":"&ufr;","ù":"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;","ū":"&umacr;","ų":"&uogon;","𝕦":"&uopf;","υ":"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;","ů":"&uring;","◹":"&urtri;","𝓊":"&uscr;","⋰":"&utdot;","ũ":"&utilde;","ü":"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;","в":"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;","𝔳":"&vfr;","𝕧":"&vopf;","𝓋":"&vscr;","⦚":"&vzigzag;","ŵ":"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;","℘":"&wp;","𝔴":"&wfr;","𝕨":"&wopf;","𝓌":"&wscr;","𝔵":"&xfr;","ξ":"&xi;","⋻":"&xnis;","𝕩":"&xopf;","𝓍":"&xscr;","ý":"&yacute;","я":"&yacy;","ŷ":"&ycirc;","ы":"&ycy;","¥":"&yen;","𝔶":"&yfr;","ї":"&yicy;","𝕪":"&yopf;","𝓎":"&yscr;","ю":"&yucy;","ÿ":"&yuml;","ź":"&zacute;","ž":"&zcaron;","з":"&zcy;","ż":"&zdot;","ζ":"&zeta;","𝔷":"&zfr;","ж":"&zhcy;","⇝":"&zigrarr;","𝕫":"&zopf;","𝓏":"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}};

/***/ }),

/***/ "./node_modules/html-entities/lib/numeric-unicode-map.js":
/*!***************************************************************!*\
  !*** ./node_modules/html-entities/lib/numeric-unicode-map.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};

/***/ }),

/***/ "./node_modules/html-entities/lib/surrogate-pairs.js":
/*!***********************************************************!*\
  !*** ./node_modules/html-entities/lib/surrogate-pairs.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;

/***/ }),

/***/ "./node_modules/hyphenate-style-name/index.js":
/*!****************************************************!*\
  !*** ./node_modules/hyphenate-style-name/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* eslint-disable no-var, prefer-template */
var uppercasePattern = /[A-Z]/g
var msPattern = /^ms-/
var cache = {}

function toHyphenLower(match) {
  return '-' + match.toLowerCase()
}

function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name]
  }

  var hName = name.replace(uppercasePattern, toHyphenLower)
  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hyphenateStyleName);


/***/ }),

/***/ "./node_modules/is-in-browser/dist/module.js":
/*!***************************************************!*\
  !*** ./node_modules/is-in-browser/dist/module.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   isBrowser: () => (/* binding */ isBrowser)
/* harmony export */ });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isBrowser);


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/***/ ((module) => {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hyphenate-style-name */ "./node_modules/hyphenate-style-name/index.js");


/**
 * Convert camel cased property names to dash separated.
 */

function convertCase(style) {
  var converted = {};

  for (var prop in style) {
    var key = prop.indexOf('--') === 0 ? prop : (0,hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__["default"])(prop);
    converted[key] = style[prop];
  }

  if (style.fallbacks) {
    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
  }

  return converted;
}
/**
 * Allow camel cased property names by converting them back to dasherized.
 */


function camelCase() {
  function onProcessStyle(style) {
    if (Array.isArray(style)) {
      // Handle rules like @font-face, which can have multiple styles in an array
      for (var index = 0; index < style.length; index++) {
        style[index] = convertCase(style[index]);
      }

      return style;
    }

    return convertCase(style);
  }

  function onChangeValue(value, prop, rule) {
    if (prop.indexOf('--') === 0) {
      return value;
    }

    var hyphenatedProp = (0,hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__["default"])(prop); // There was no camel case in place

    if (prop === hyphenatedProp) return value;
    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.

    return null;
  }

  return {
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (camelCase);


/***/ }),

/***/ "./node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js":
/*!************************************************************************!*\
  !*** ./node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");


/**
 * Set selector.
 *
 * @param original rule
 * @param className class string
 * @return flag indicating function was successfull or not
 */

function registerClass(rule, className) {
  // Skip falsy values
  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`

  if (Array.isArray(className)) {
    for (var index = 0; index < className.length; index++) {
      var isSetted = registerClass(rule, className[index]);
      if (!isSetted) return false;
    }

    return true;
  } // Support space separated class names `{composes: 'foo bar'}`


  if (className.indexOf(' ') > -1) {
    return registerClass(rule, className.split(' '));
  }

  var parent = rule.options.parent; // It is a ref to a local rule.

  if (className[0] === '$') {
    var refRule = parent.getRule(className.substr(1));

    if (!refRule) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_0__["default"])(false, "[JSS] Referenced rule is not defined. \n" + rule.toString()) : 0;
      return false;
    }

    if (refRule === rule) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_0__["default"])(false, "[JSS] Cyclic composition detected. \n" + rule.toString()) : 0;
      return false;
    }

    parent.classes[rule.key] += " " + parent.classes[refRule.key];
    return true;
  }

  parent.classes[rule.key] += " " + className;
  return true;
}
/**
 * Convert compose property to additional class, remove property from original styles.
 */


function jssCompose() {
  function onProcessStyle(style, rule) {
    if (!('composes' in style)) return style;
    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.

    delete style.composes;
    return style;
  }

  return {
    onProcessStyle: onProcessStyle
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssCompose);


/***/ }),

/***/ "./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");


var px = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.px : 'px';
var ms = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.ms : 'ms';
var percent = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.percent : '%';
/**
 * Generated jss-plugin-default-unit CSS property units
 */

var defaultUnits = {
  // Animation properties
  'animation-delay': ms,
  'animation-duration': ms,
  // Background properties
  'background-position': px,
  'background-position-x': px,
  'background-position-y': px,
  'background-size': px,
  // Border Properties
  border: px,
  'border-bottom': px,
  'border-bottom-left-radius': px,
  'border-bottom-right-radius': px,
  'border-bottom-width': px,
  'border-left': px,
  'border-left-width': px,
  'border-radius': px,
  'border-right': px,
  'border-right-width': px,
  'border-top': px,
  'border-top-left-radius': px,
  'border-top-right-radius': px,
  'border-top-width': px,
  'border-width': px,
  'border-block': px,
  'border-block-end': px,
  'border-block-end-width': px,
  'border-block-start': px,
  'border-block-start-width': px,
  'border-block-width': px,
  'border-inline': px,
  'border-inline-end': px,
  'border-inline-end-width': px,
  'border-inline-start': px,
  'border-inline-start-width': px,
  'border-inline-width': px,
  'border-start-start-radius': px,
  'border-start-end-radius': px,
  'border-end-start-radius': px,
  'border-end-end-radius': px,
  // Margin properties
  margin: px,
  'margin-bottom': px,
  'margin-left': px,
  'margin-right': px,
  'margin-top': px,
  'margin-block': px,
  'margin-block-end': px,
  'margin-block-start': px,
  'margin-inline': px,
  'margin-inline-end': px,
  'margin-inline-start': px,
  // Padding properties
  padding: px,
  'padding-bottom': px,
  'padding-left': px,
  'padding-right': px,
  'padding-top': px,
  'padding-block': px,
  'padding-block-end': px,
  'padding-block-start': px,
  'padding-inline': px,
  'padding-inline-end': px,
  'padding-inline-start': px,
  // Mask properties
  'mask-position-x': px,
  'mask-position-y': px,
  'mask-size': px,
  // Width and height properties
  height: px,
  width: px,
  'min-height': px,
  'max-height': px,
  'min-width': px,
  'max-width': px,
  // Position properties
  bottom: px,
  left: px,
  top: px,
  right: px,
  inset: px,
  'inset-block': px,
  'inset-block-end': px,
  'inset-block-start': px,
  'inset-inline': px,
  'inset-inline-end': px,
  'inset-inline-start': px,
  // Shadow properties
  'box-shadow': px,
  'text-shadow': px,
  // Column properties
  'column-gap': px,
  'column-rule': px,
  'column-rule-width': px,
  'column-width': px,
  // Font and text properties
  'font-size': px,
  'font-size-delta': px,
  'letter-spacing': px,
  'text-decoration-thickness': px,
  'text-indent': px,
  'text-stroke': px,
  'text-stroke-width': px,
  'word-spacing': px,
  // Motion properties
  motion: px,
  'motion-offset': px,
  // Outline properties
  outline: px,
  'outline-offset': px,
  'outline-width': px,
  // Perspective properties
  perspective: px,
  'perspective-origin-x': percent,
  'perspective-origin-y': percent,
  // Transform properties
  'transform-origin': percent,
  'transform-origin-x': percent,
  'transform-origin-y': percent,
  'transform-origin-z': percent,
  // Transition properties
  'transition-delay': ms,
  'transition-duration': ms,
  // Alignment properties
  'vertical-align': px,
  'flex-basis': px,
  // Some random properties
  'shape-margin': px,
  size: px,
  gap: px,
  // Grid properties
  grid: px,
  'grid-gap': px,
  'row-gap': px,
  'grid-row-gap': px,
  'grid-column-gap': px,
  'grid-template-rows': px,
  'grid-template-columns': px,
  'grid-auto-rows': px,
  'grid-auto-columns': px,
  // Not existing properties.
  // Used to avoid issues with jss-plugin-expand integration.
  'box-shadow-x': px,
  'box-shadow-y': px,
  'box-shadow-blur': px,
  'box-shadow-spread': px,
  'font-line-height': px,
  'text-shadow-x': px,
  'text-shadow-y': px,
  'text-shadow-blur': px
};

/**
 * Clones the object and adds a camel cased property version.
 */

function addCamelCasedVersion(obj) {
  var regExp = /(-[a-z])/g;

  var replace = function replace(str) {
    return str[1].toUpperCase();
  };

  var newObj = {};

  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp, replace)] = obj[key];
  }

  return newObj;
}

var units = addCamelCasedVersion(defaultUnits);
/**
 * Recursive deep style passing function
 */

function iterate(prop, value, options) {
  if (value == null) return value;

  if (Array.isArray(value)) {
    for (var i = 0; i < value.length; i++) {
      value[i] = iterate(prop, value[i], options);
    }
  } else if (typeof value === 'object') {
    if (prop === 'fallbacks') {
      for (var innerProp in value) {
        value[innerProp] = iterate(innerProp, value[innerProp], options);
      }
    } else {
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options);
      }
    } // eslint-disable-next-line no-restricted-globals

  } else if (typeof value === 'number' && isNaN(value) === false) {
    var unit = options[prop] || units[prop]; // Add the unit if available, except for the special case of 0px.

    if (unit && !(value === 0 && unit === px)) {
      return typeof unit === 'function' ? unit(value).toString() : "" + value + unit;
    }

    return value.toString();
  }

  return value;
}
/**
 * Add unit to numeric values.
 */


function defaultUnit(options) {
  if (options === void 0) {
    options = {};
  }

  var camelCasedOptions = addCamelCasedVersion(options);

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    for (var prop in style) {
      style[prop] = iterate(prop, style[prop], camelCasedOptions);
    }

    return style;
  }

  function onChangeValue(value, prop) {
    return iterate(prop, value, camelCasedOptions);
  }

  return {
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaultUnit);


/***/ }),

/***/ "./node_modules/jss-plugin-expand/dist/jss-plugin-expand.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-expand/dist/jss-plugin-expand.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A scheme for converting properties from array to regular style.
 * All properties listed below will be transformed to a string separated by space.
 */
var propArray = {
  'background-size': true,
  'background-position': true,
  border: true,
  'border-bottom': true,
  'border-left': true,
  'border-top': true,
  'border-right': true,
  'border-radius': true,
  'border-image': true,
  'border-width': true,
  'border-style': true,
  'border-color': true,
  'box-shadow': true,
  flex: true,
  margin: true,
  padding: true,
  outline: true,
  'transform-origin': true,
  transform: true,
  transition: true
  /**
   * A scheme for converting arrays to regular styles inside of objects.
   * For e.g.: "{position: [0, 0]}" => "background-position: 0 0;".
   */

};
var propArrayInObj = {
  position: true,
  // background-position
  size: true // background-size

  /**
   * A scheme for parsing and building correct styles from passed objects.
   */

};
var propObj = {
  padding: {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  },
  margin: {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  },
  background: {
    attachment: null,
    color: null,
    image: null,
    position: null,
    repeat: null
  },
  border: {
    width: null,
    style: null,
    color: null
  },
  'border-top': {
    width: null,
    style: null,
    color: null
  },
  'border-right': {
    width: null,
    style: null,
    color: null
  },
  'border-bottom': {
    width: null,
    style: null,
    color: null
  },
  'border-left': {
    width: null,
    style: null,
    color: null
  },
  outline: {
    width: null,
    style: null,
    color: null
  },
  'list-style': {
    type: null,
    position: null,
    image: null
  },
  transition: {
    property: null,
    duration: null,
    'timing-function': null,
    timingFunction: null,
    // Needed for avoiding comilation issues with jss-plugin-camel-case
    delay: null
  },
  animation: {
    name: null,
    duration: null,
    'timing-function': null,
    timingFunction: null,
    // Needed to avoid compilation issues with jss-plugin-camel-case
    delay: null,
    'iteration-count': null,
    iterationCount: null,
    // Needed to avoid compilation issues with jss-plugin-camel-case
    direction: null,
    'fill-mode': null,
    fillMode: null,
    // Needed to avoid compilation issues with jss-plugin-camel-case
    'play-state': null,
    playState: null // Needed to avoid compilation issues with jss-plugin-camel-case

  },
  'box-shadow': {
    x: 0,
    y: 0,
    blur: 0,
    spread: 0,
    color: null,
    inset: null
  },
  'text-shadow': {
    x: 0,
    y: 0,
    blur: null,
    color: null
  }
  /**
   * A scheme for converting non-standart properties inside object.
   * For e.g.: include 'border-radius' property inside 'border' object.
   */

};
var customPropObj = {
  border: {
    radius: 'border-radius',
    image: 'border-image',
    width: 'border-width',
    style: 'border-style',
    color: 'border-color'
  },
  'border-bottom': {
    width: 'border-bottom-width',
    style: 'border-bottom-style',
    color: 'border-bottom-color'
  },
  'border-top': {
    width: 'border-top-width',
    style: 'border-top-style',
    color: 'border-top-color'
  },
  'border-left': {
    width: 'border-left-width',
    style: 'border-left-style',
    color: 'border-left-color'
  },
  'border-right': {
    width: 'border-right-width',
    style: 'border-right-style',
    color: 'border-right-color'
  },
  background: {
    size: 'background-size',
    image: 'background-image'
  },
  font: {
    style: 'font-style',
    variant: 'font-variant',
    weight: 'font-weight',
    stretch: 'font-stretch',
    size: 'font-size',
    family: 'font-family',
    lineHeight: 'line-height',
    // Needed to avoid compilation issues with jss-plugin-camel-case
    'line-height': 'line-height'
  },
  flex: {
    grow: 'flex-grow',
    basis: 'flex-basis',
    direction: 'flex-direction',
    wrap: 'flex-wrap',
    flow: 'flex-flow',
    shrink: 'flex-shrink'
  },
  align: {
    self: 'align-self',
    items: 'align-items',
    content: 'align-content'
  },
  grid: {
    'template-columns': 'grid-template-columns',
    templateColumns: 'grid-template-columns',
    'template-rows': 'grid-template-rows',
    templateRows: 'grid-template-rows',
    'template-areas': 'grid-template-areas',
    templateAreas: 'grid-template-areas',
    template: 'grid-template',
    'auto-columns': 'grid-auto-columns',
    autoColumns: 'grid-auto-columns',
    'auto-rows': 'grid-auto-rows',
    autoRows: 'grid-auto-rows',
    'auto-flow': 'grid-auto-flow',
    autoFlow: 'grid-auto-flow',
    row: 'grid-row',
    column: 'grid-column',
    'row-start': 'grid-row-start',
    rowStart: 'grid-row-start',
    'row-end': 'grid-row-end',
    rowEnd: 'grid-row-end',
    'column-start': 'grid-column-start',
    columnStart: 'grid-column-start',
    'column-end': 'grid-column-end',
    columnEnd: 'grid-column-end',
    area: 'grid-area',
    gap: 'grid-gap',
    'row-gap': 'grid-row-gap',
    rowGap: 'grid-row-gap',
    'column-gap': 'grid-column-gap',
    columnGap: 'grid-column-gap'
  }
};

/* eslint-disable no-use-before-define */
/**
 * Map values by given prop.
 *
 * @param {Array} array of values
 * @param {String} original property
 * @param {String} original rule
 * @return {String} mapped values
 */

function mapValuesByProp(value, prop, rule) {
  return value.map(function (item) {
    return objectToArray(item, prop, rule, false, true);
  });
}
/**
 * Convert array to nested array, if needed
 */


function processArray(value, prop, scheme, rule) {
  if (scheme[prop] == null) return value;
  if (value.length === 0) return [];
  if (Array.isArray(value[0])) return processArray(value[0], prop, scheme, rule);

  if (typeof value[0] === 'object') {
    return mapValuesByProp(value, prop, rule);
  }

  return [value];
}
/**
 * Convert object to array.
 */


function objectToArray(value, prop, rule, isFallback, isInArray) {
  if (!(propObj[prop] || customPropObj[prop])) return [];
  var result = []; // Check if exists any non-standard property

  if (customPropObj[prop]) {
    // eslint-disable-next-line no-param-reassign
    value = customPropsToStyle(value, rule, customPropObj[prop], isFallback);
  } // Pass throught all standart props


  if (Object.keys(value).length) {
    for (var baseProp in propObj[prop]) {
      if (value[baseProp]) {
        if (Array.isArray(value[baseProp])) {
          result.push(propArrayInObj[baseProp] === null ? value[baseProp] : value[baseProp].join(' '));
        } else result.push(value[baseProp]);

        continue;
      } // Add default value from props config.


      if (propObj[prop][baseProp] != null) {
        result.push(propObj[prop][baseProp]);
      }
    }
  }

  if (!result.length || isInArray) return result;
  return [result];
}
/**
 * Convert custom properties values to styles adding them to rule directly
 */


function customPropsToStyle(value, rule, customProps, isFallback) {
  for (var prop in customProps) {
    var propName = customProps[prop]; // If current property doesn't exist already in rule - add new one

    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {
      var _styleDetector;

      var appendedValue = styleDetector((_styleDetector = {}, _styleDetector[propName] = value[prop], _styleDetector), rule)[propName]; // Add style directly in rule

      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;
    } // Delete converted property to avoid double converting


    delete value[prop];
  }

  return value;
}
/**
 * Detect if a style needs to be converted.
 */


function styleDetector(style, rule, isFallback) {
  for (var prop in style) {
    var value = style[prop];

    if (Array.isArray(value)) {
      // Check double arrays to avoid recursion.
      if (!Array.isArray(value[0])) {
        if (prop === 'fallbacks') {
          for (var index = 0; index < style.fallbacks.length; index++) {
            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);
          }

          continue;
        }

        style[prop] = processArray(value, prop, propArray, rule); // Avoid creating properties with empty values

        if (!style[prop].length) delete style[prop];
      }
    } else if (typeof value === 'object') {
      if (prop === 'fallbacks') {
        style.fallbacks = styleDetector(style.fallbacks, rule, true);
        continue;
      }

      style[prop] = objectToArray(value, prop, rule, isFallback); // Avoid creating properties with empty values

      if (!style[prop].length) delete style[prop];
    } // Maybe a computed value resulting in an empty string
    else if (style[prop] === '') delete style[prop];
  }

  return style;
}
/**
 * Adds possibility to write expanded styles.
 */


function jssExpand() {
  function onProcessStyle(style, rule) {
    if (!style || rule.type !== 'style') return style;

    if (Array.isArray(style)) {
      // Pass rules one by one and reformat them
      for (var index = 0; index < style.length; index++) {
        style[index] = styleDetector(style[index], rule);
      }

      return style;
    }

    return styleDetector(style, rule);
  }

  return {
    onProcessStyle: onProcessStyle
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssExpand);


/***/ }),

/***/ "./node_modules/jss-plugin-extend/dist/jss-plugin-extend.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-extend/dist/jss-plugin-extend.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");



var isObject = function isObject(obj) {
  return obj && typeof obj === 'object' && !Array.isArray(obj);
};

var valueNs = "extendCurrValue" + Date.now();

function mergeExtend(style, rule, sheet, newStyle) {
  var extendType = typeof style.extend; // Extend using a rule name.

  if (extendType === 'string') {
    if (!sheet) return;
    var refRule = sheet.getRule(style.extend);
    if (!refRule) return;

    if (refRule === rule) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(false, "[JSS] A rule tries to extend itself \n" + rule.toString()) : 0;
      return;
    }

    var parent = refRule.options.parent;

    if (parent) {
      var originalStyle = parent.rules.raw[style.extend];
      extend(originalStyle, rule, sheet, newStyle);
    }

    return;
  } // Extend using an array.


  if (Array.isArray(style.extend)) {
    for (var index = 0; index < style.extend.length; index++) {
      var singleExtend = style.extend[index];
      var singleStyle = typeof singleExtend === 'string' ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, style, {
        extend: singleExtend
      }) : style.extend[index];
      extend(singleStyle, rule, sheet, newStyle);
    }

    return;
  } // Extend is a style object.


  for (var prop in style.extend) {
    if (prop === 'extend') {
      extend(style.extend.extend, rule, sheet, newStyle);
      continue;
    }

    if (isObject(style.extend[prop])) {
      if (!(prop in newStyle)) newStyle[prop] = {};
      extend(style.extend[prop], rule, sheet, newStyle[prop]);
      continue;
    }

    newStyle[prop] = style.extend[prop];
  }
}

function mergeRest(style, rule, sheet, newStyle) {
  // Copy base style.
  for (var prop in style) {
    if (prop === 'extend') continue;

    if (isObject(newStyle[prop]) && isObject(style[prop])) {
      extend(style[prop], rule, sheet, newStyle[prop]);
      continue;
    }

    if (isObject(style[prop])) {
      newStyle[prop] = extend(style[prop], rule, sheet);
      continue;
    }

    newStyle[prop] = style[prop];
  }
}
/**
 * Recursively extend styles.
 */


function extend(style, rule, sheet, newStyle) {
  if (newStyle === void 0) {
    newStyle = {};
  }

  mergeExtend(style, rule, sheet, newStyle);
  mergeRest(style, rule, sheet, newStyle);
  return newStyle;
}
/**
 * Handle `extend` property.
 */


function jssExtend() {
  function onProcessStyle(style, rule, sheet) {
    if ('extend' in style) return extend(style, rule, sheet);
    return style;
  }

  function onChangeValue(value, prop, rule) {
    if (prop !== 'extend') return value; // Value is empty, remove properties set previously.

    if (value == null || value === false) {
      for (var key in rule[valueNs]) {
        rule.prop(key, null);
      }

      rule[valueNs] = null;
      return null;
    }

    if (typeof value === 'object') {
      for (var _key in value) {
        rule.prop(_key, value[_key]);
      }

      rule[valueNs] = value;
    } // Make sure we don't set the value in the core.


    return null;
  }

  return {
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssExtend);


/***/ }),

/***/ "./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



var at = '@global';
var atPrefix = '@global ';

var GlobalContainerRule =
/*#__PURE__*/
function () {
  function GlobalContainerRule(key, styles, options) {
    this.type = 'global';
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    this.rules = new jss__WEBPACK_IMPORTED_MODULE_1__.RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var selector in styles) {
      this.rules.add(selector, styles[selector]);
    }

    this.rules.process();
  }
  /**
   * Get a rule.
   */


  var _proto = GlobalContainerRule.prototype;

  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  }
  /**
   * Create and register rule, run plugins.
   */
  ;

  _proto.addRule = function addRule(name, style, options) {
    var rule = this.rules.add(name, style, options);
    if (rule) this.options.jss.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Replace rule, run plugins.
   */
  ;

  _proto.replaceRule = function replaceRule(name, style, options) {
    var newRule = this.rules.replace(name, style, options);
    if (newRule) this.options.jss.plugins.onProcessRule(newRule);
    return newRule;
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    return this.rules.toString(options);
  };

  return GlobalContainerRule;
}();

var GlobalPrefixedRule =
/*#__PURE__*/
function () {
  function GlobalPrefixedRule(key, style, options) {
    this.type = 'global';
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    var selector = key.substr(atPrefix.length);
    this.rule = options.jss.createRule(selector, style, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));
  }

  var _proto2 = GlobalPrefixedRule.prototype;

  _proto2.toString = function toString(options) {
    return this.rule ? this.rule.toString(options) : '';
  };

  return GlobalPrefixedRule;
}();

var separatorRegExp = /\s*,\s*/g;

function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = '';

  for (var i = 0; i < parts.length; i++) {
    scoped += scope + " " + parts[i].trim();
    if (parts[i + 1]) scoped += ', ';
  }

  return scoped;
}

function handleNestedGlobalContainerRule(rule, sheet) {
  var options = rule.options,
      style = rule.style;
  var rules = style ? style[at] : null;
  if (!rules) return;

  for (var name in rules) {
    sheet.addRule(name, rules[name], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }

  delete style[at];
}

function handlePrefixedGlobalRule(rule, sheet) {
  var options = rule.options,
      style = rule.style;

  for (var prop in style) {
    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;
    var selector = addScope(prop.substr(at.length), rule.selector);
    sheet.addRule(selector, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      selector: selector
    }));
    delete style[prop];
  }
}
/**
 * Convert nested rules to separate, remove them from original styles.
 */


function jssGlobal() {
  function onCreateRule(name, styles, options) {
    if (!name) return null;

    if (name === at) {
      return new GlobalContainerRule(name, styles, options);
    }

    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {
      return new GlobalPrefixedRule(name, styles, options);
    }

    var parent = options.parent;

    if (parent) {
      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {
        options.scoped = false;
      }
    }

    if (!options.selector && options.scoped === false) {
      options.selector = name;
    }

    return null;
  }

  function onProcessRule(rule, sheet) {
    if (rule.type !== 'style' || !sheet) return;
    handleNestedGlobalContainerRule(rule, sheet);
    handlePrefixedGlobalRule(rule, sheet);
  }

  return {
    onCreateRule: onCreateRule,
    onProcessRule: onProcessRule
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssGlobal);


/***/ }),

/***/ "./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");



var separatorRegExp = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp = /\$([\w-]+)/g;
/**
 * Convert nested rules to separate, remove them from original styles.
 */

function jssNested() {
  // Get a function to be used for $ref replacement.
  function getReplaceRef(container, sheet) {
    return function (match, key) {
      var rule = container.getRule(key) || sheet && sheet.getRule(key);

      if (rule) {
        return rule.selector;
      }

       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(false, "[JSS] Could not find the referenced rule \"" + key + "\" in \"" + (container.options.meta || container.toString()) + "\".") : 0;
      return key;
    };
  }

  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp);
    var nestedSelectors = nestedProp.split(separatorRegExp);
    var result = '';

    for (var i = 0; i < parentSelectors.length; i++) {
      var parent = parentSelectors[i];

      for (var j = 0; j < nestedSelectors.length; j++) {
        var nested = nestedSelectors[j];
        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.

        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
      }
    }

    return result;
  }

  function getOptions(rule, container, prevOptions) {
    // Options has been already created, now we only increase index.
    if (prevOptions) return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, prevOptions, {
      index: prevOptions.index + 1
    });
    var nestingLevel = rule.options.nestingLevel;
    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

    var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, rule.options, {
      nestingLevel: nestingLevel,
      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.

    });

    delete options.name;
    return options;
  }

  function onProcessStyle(style, rule, sheet) {
    if (rule.type !== 'style') return style;
    var styleRule = rule;
    var container = styleRule.options.parent;
    var options;
    var replaceRef;

    for (var prop in style) {
      var isNested = prop.indexOf('&') !== -1;
      var isNestedConditional = prop[0] === '@';
      if (!isNested && !isNestedConditional) continue;
      options = getOptions(styleRule, container, options);

      if (isNested) {
        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for
        // all nested rules within the sheet.

        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.

        selector = selector.replace(refRegExp, replaceRef);
        var name = styleRule.key + "-" + prop;

        if ('replaceRule' in container) {
          // for backward compatibility
          container.replaceRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
            selector: selector
          }));
        } else {
          container.addRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
            selector: selector
          }));
        }
      } else if (isNestedConditional) {
        // Place conditional right after the parent rule to ensure right ordering.
        container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {
          selector: styleRule.selector
        });
      }

      delete style[prop];
    }

    return style;
  }

  return {
    onProcessStyle: onProcessStyle
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssNested);


/***/ }),

/***/ "./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Sort props by length.
 */
function jssPropsSort() {
  var sort = function sort(prop0, prop1) {
    if (prop0.length === prop1.length) {
      return prop0 > prop1 ? 1 : -1;
    }

    return prop0.length - prop1.length;
  };

  return {
    onProcessStyle: function onProcessStyle(style, rule) {
      if (rule.type !== 'style') return style;
      var newStyle = {};
      var props = Object.keys(style).sort(sort);

      for (var i = 0; i < props.length; i++) {
        newStyle[props[i]] = style[props[i]];
      }

      return newStyle;
    }
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssPropsSort);


/***/ }),

/***/ "./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



var now = Date.now();
var fnValuesNs = "fnValues" + now;
var fnRuleNs = "fnStyle" + ++now;

var functionPlugin = function functionPlugin() {
  return {
    onCreateRule: function onCreateRule(name, decl, options) {
      if (typeof decl !== 'function') return null;
      var rule = (0,jss__WEBPACK_IMPORTED_MODULE_0__.createRule)(name, {}, options);
      rule[fnRuleNs] = decl;
      return rule;
    },
    onProcessStyle: function onProcessStyle(style, rule) {
      // We need to extract function values from the declaration, so that we can keep core unaware of them.
      // We need to do that only once.
      // We don't need to extract functions on each style update, since this can happen only once.
      // We don't support function values inside of function rules.
      if (fnValuesNs in rule || fnRuleNs in rule) return style;
      var fnValues = {};

      for (var prop in style) {
        var value = style[prop];
        if (typeof value !== 'function') continue;
        delete style[prop];
        fnValues[prop] = value;
      }

      rule[fnValuesNs] = fnValues;
      return style;
    },
    onUpdate: function onUpdate(data, rule, sheet, options) {
      var styleRule = rule;
      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object
      // will be returned from that function.

      if (fnRule) {
        // Empty object will remove all currently defined props
        // in case function rule returns a falsy value.
        styleRule.style = fnRule(data) || {};

        if (true) {
          for (var prop in styleRule.style) {
            if (typeof styleRule.style[prop] === 'function') {
               true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(false, '[JSS] Function values inside function rules are not supported.') : 0;
              break;
            }
          }
        }
      }

      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.

      if (fnValues) {
        for (var _prop in fnValues) {
          styleRule.prop(_prop, fnValues[_prop](data), options);
        }
      }
    }
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (functionPlugin);


/***/ }),

/***/ "./node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! symbol-observable */ "./node_modules/symbol-observable/es/index.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



var isObservable = function isObservable(value) {
  return value && value[symbol_observable__WEBPACK_IMPORTED_MODULE_0__["default"]] && value === value[symbol_observable__WEBPACK_IMPORTED_MODULE_0__["default"]]();
};

var observablePlugin = function observablePlugin(updateOptions) {
  return {
    onCreateRule: function onCreateRule(name, decl, options) {
      if (!isObservable(decl)) return null;
      var style$ = decl;
      var rule = (0,jss__WEBPACK_IMPORTED_MODULE_1__.createRule)(name, {}, options); // TODO
      // Call `stream.subscribe()` returns a subscription, which should be explicitly
      // unsubscribed from when we know this sheet is no longer needed.

      style$.subscribe(function (style) {
        for (var prop in style) {
          rule.prop(prop, style[prop], updateOptions);
        }
      });
      return rule;
    },
    onProcessRule: function onProcessRule(rule) {
      if (rule && rule.type !== 'style') return;
      var styleRule = rule;
      var style = styleRule.style;

      var _loop = function _loop(prop) {
        var value = style[prop];
        if (!isObservable(value)) return "continue";
        delete style[prop];
        value.subscribe({
          next: function next(nextValue) {
            styleRule.prop(prop, nextValue, updateOptions);
          }
        });
      };

      for (var prop in style) {
        var _ret = _loop(prop);

        if (_ret === "continue") continue;
      }
    }
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (observablePlugin);


/***/ }),

/***/ "./node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");


var semiWithNl = /;\n/;
/**
 * Naive CSS parser.
 * - Supports only rule body (no selectors)
 * - Requires semicolon and new line after the value (except of last line)
 * - No nested rules support
 */

var parse = function parse(cssText) {
  var style = {};
  var split = cssText.split(semiWithNl);

  for (var i = 0; i < split.length; i++) {
    var decl = (split[i] || '').trim();
    if (!decl) continue;
    var colonIndex = decl.indexOf(':');

    if (colonIndex === -1) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_0__["default"])(false, "[JSS] Malformed CSS string \"" + decl + "\"") : 0;
      continue;
    }

    var prop = decl.substr(0, colonIndex).trim();
    var value = decl.substr(colonIndex + 1).trim();
    style[prop] = value;
  }

  return style;
};

var onProcessRule = function onProcessRule(rule) {
  if (typeof rule.style === 'string') {
    rule.style = parse(rule.style);
  }
};

function templatePlugin() {
  return {
    onProcessRule: onProcessRule
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (templatePlugin);


/***/ }),

/***/ "./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var css_vendor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! css-vendor */ "./node_modules/css-vendor/dist/css-vendor.esm.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



/**
 * Add vendor prefix to a property name when needed.
 */

function jssVendorPrefixer() {
  function onProcessRule(rule) {
    if (rule.type === 'keyframes') {
      var atRule = rule;
      atRule.at = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedKeyframes)(atRule.at);
    }
  }

  function prefixStyle(style) {
    for (var prop in style) {
      var value = style[prop];

      if (prop === 'fallbacks' && Array.isArray(value)) {
        style[prop] = value.map(prefixStyle);
        continue;
      }

      var changeProp = false;
      var supportedProp = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedProperty)(prop);
      if (supportedProp && supportedProp !== prop) changeProp = true;
      var changeValue = false;
      var supportedValue$1 = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedValue)(supportedProp, (0,jss__WEBPACK_IMPORTED_MODULE_1__.toCssValue)(value));
      if (supportedValue$1 && supportedValue$1 !== value) changeValue = true;

      if (changeProp || changeValue) {
        if (changeProp) delete style[prop];
        style[supportedProp || prop] = supportedValue$1 || value;
      }
    }

    return style;
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;
    return prefixStyle(style);
  }

  function onChangeValue(value, prop) {
    return (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedValue)(prop, (0,jss__WEBPACK_IMPORTED_MODULE_1__.toCssValue)(value)) || value;
  }

  return {
    onProcessRule: onProcessRule,
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssVendorPrefixer);


/***/ }),

/***/ "./node_modules/jss-preset-default/dist/jss-preset-default.esm.js":
/*!************************************************************************!*\
  !*** ./node_modules/jss-preset-default/dist/jss-preset-default.esm.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jss_plugin_rule_value_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss-plugin-rule-value-function */ "./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js");
/* harmony import */ var jss_plugin_rule_value_observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss-plugin-rule-value-observable */ "./node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js");
/* harmony import */ var jss_plugin_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jss-plugin-template */ "./node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js");
/* harmony import */ var jss_plugin_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jss-plugin-global */ "./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js");
/* harmony import */ var jss_plugin_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jss-plugin-extend */ "./node_modules/jss-plugin-extend/dist/jss-plugin-extend.esm.js");
/* harmony import */ var jss_plugin_nested__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jss-plugin-nested */ "./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js");
/* harmony import */ var jss_plugin_compose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jss-plugin-compose */ "./node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js");
/* harmony import */ var jss_plugin_camel_case__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jss-plugin-camel-case */ "./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js");
/* harmony import */ var jss_plugin_default_unit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jss-plugin-default-unit */ "./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js");
/* harmony import */ var jss_plugin_expand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jss-plugin-expand */ "./node_modules/jss-plugin-expand/dist/jss-plugin-expand.esm.js");
/* harmony import */ var jss_plugin_vendor_prefixer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! jss-plugin-vendor-prefixer */ "./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js");
/* harmony import */ var jss_plugin_props_sort__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! jss-plugin-props-sort */ "./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js");













var create = function create(options) {
  if (options === void 0) {
    options = {};
  }

  return {
    plugins: [(0,jss_plugin_rule_value_function__WEBPACK_IMPORTED_MODULE_0__["default"])(), (0,jss_plugin_rule_value_observable__WEBPACK_IMPORTED_MODULE_1__["default"])(options.observable), (0,jss_plugin_template__WEBPACK_IMPORTED_MODULE_2__["default"])(), (0,jss_plugin_global__WEBPACK_IMPORTED_MODULE_3__["default"])(), (0,jss_plugin_extend__WEBPACK_IMPORTED_MODULE_4__["default"])(), (0,jss_plugin_nested__WEBPACK_IMPORTED_MODULE_5__["default"])(), (0,jss_plugin_compose__WEBPACK_IMPORTED_MODULE_6__["default"])(), (0,jss_plugin_camel_case__WEBPACK_IMPORTED_MODULE_7__["default"])(), (0,jss_plugin_default_unit__WEBPACK_IMPORTED_MODULE_8__["default"])(options.defaultUnit), (0,jss_plugin_expand__WEBPACK_IMPORTED_MODULE_9__["default"])(), (0,jss_plugin_vendor_prefixer__WEBPACK_IMPORTED_MODULE_10__["default"])(), (0,jss_plugin_props_sort__WEBPACK_IMPORTED_MODULE_11__["default"])()]
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (create);


/***/ }),

/***/ "./node_modules/jss/dist/jss.esm.js":
/*!******************************************!*\
  !*** ./node_modules/jss/dist/jss.esm.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RuleList: () => (/* binding */ RuleList),
/* harmony export */   SheetsManager: () => (/* binding */ SheetsManager),
/* harmony export */   SheetsRegistry: () => (/* binding */ SheetsRegistry),
/* harmony export */   create: () => (/* binding */ createJss),
/* harmony export */   createGenerateId: () => (/* binding */ createGenerateId),
/* harmony export */   createRule: () => (/* binding */ createRule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getDynamicStyles: () => (/* binding */ getDynamicStyles),
/* harmony export */   hasCSSTOMSupport: () => (/* binding */ hasCSSTOMSupport),
/* harmony export */   sheets: () => (/* binding */ sheets),
/* harmony export */   toCssValue: () => (/* binding */ toCssValue)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var is_in_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! is-in-browser */ "./node_modules/is-in-browser/dist/module.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");








var plainObjectConstrurctor = {}.constructor;
function cloneStyle(style) {
  if (style == null || typeof style !== 'object') return style;
  if (Array.isArray(style)) return style.map(cloneStyle);
  if (style.constructor !== plainObjectConstrurctor) return style;
  var newStyle = {};

  for (var name in style) {
    newStyle[name] = cloneStyle(style[name]);
  }

  return newStyle;
}

/**
 * Create a rule instance.
 */

function createRule(name, decl, options) {
  if (name === void 0) {
    name = 'unnamed';
  }

  var jss = options.jss;
  var declCopy = cloneStyle(decl);
  var rule = jss.plugins.onCreateRule(name, declCopy, options);
  if (rule) return rule; // It is an at-rule and it has no instance.

  if (name[0] === '@') {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Unknown rule " + name) : 0;
  }

  return null;
}

var join = function join(value, by) {
  var result = '';

  for (var i = 0; i < value.length; i++) {
    // Remove !important from the value, it will be readded later.
    if (value[i] === '!important') break;
    if (result) result += by;
    result += value[i];
  }

  return result;
};
/**
 * Converts JSS array value to a CSS string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */


var toCssValue = function toCssValue(value) {
  if (!Array.isArray(value)) return value;
  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.

  if (Array.isArray(value[0])) {
    for (var i = 0; i < value.length; i++) {
      if (value[i] === '!important') break;
      if (cssValue) cssValue += ', ';
      cssValue += join(value[i], ' ');
    }
  } else cssValue = join(value, ', '); // Add !important, because it was ignored.


  if (value[value.length - 1] === '!important') {
    cssValue += ' !important';
  }

  return cssValue;
};

function getWhitespaceSymbols(options) {
  if (options && options.format === false) {
    return {
      linebreak: '',
      space: ''
    };
  }

  return {
    linebreak: '\n',
    space: ' '
  };
}

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */

function indentStr(str, indent) {
  var result = '';

  for (var index = 0; index < indent; index++) {
    result += '  ';
  }

  return result + str;
}
/**
 * Converts a Rule to CSS string.
 */


function toCss(selector, style, options) {
  if (options === void 0) {
    options = {};
  }

  var result = '';
  if (!style) return result;
  var _options = options,
      _options$indent = _options.indent,
      indent = _options$indent === void 0 ? 0 : _options$indent;
  var fallbacks = style.fallbacks;

  if (options.format === false) {
    indent = -Infinity;
  }

  var _getWhitespaceSymbols = getWhitespaceSymbols(options),
      linebreak = _getWhitespaceSymbols.linebreak,
      space = _getWhitespaceSymbols.space;

  if (selector) indent++; // Apply fallbacks first.

  if (fallbacks) {
    // Array syntax {fallbacks: [{prop: value}]}
    if (Array.isArray(fallbacks)) {
      for (var index = 0; index < fallbacks.length; index++) {
        var fallback = fallbacks[index];

        for (var prop in fallback) {
          var value = fallback[prop];

          if (value != null) {
            if (result) result += linebreak;
            result += indentStr(prop + ":" + space + toCssValue(value) + ";", indent);
          }
        }
      }
    } else {
      // Object syntax {fallbacks: {prop: value}}
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];

        if (_value != null) {
          if (result) result += linebreak;
          result += indentStr(_prop + ":" + space + toCssValue(_value) + ";", indent);
        }
      }
    }
  }

  for (var _prop2 in style) {
    var _value2 = style[_prop2];

    if (_value2 != null && _prop2 !== 'fallbacks') {
      if (result) result += linebreak;
      result += indentStr(_prop2 + ":" + space + toCssValue(_value2) + ";", indent);
    }
  } // Allow empty style in this case, because properties will be added dynamically.


  if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.

  if (!selector) return result;
  indent--;
  if (result) result = "" + linebreak + result + linebreak;
  return indentStr("" + selector + space + "{" + result, indent) + indentStr('}', indent);
}

var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
var nativeEscape = typeof CSS !== 'undefined' && CSS.escape;
var escape = (function (str) {
  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\$1');
});

var BaseStyleRule =
/*#__PURE__*/
function () {
  function BaseStyleRule(key, style, options) {
    this.type = 'style';
    this.isProcessed = false;
    var sheet = options.sheet,
        Renderer = options.Renderer;
    this.key = key;
    this.options = options;
    this.style = style;
    if (sheet) this.renderer = sheet.renderer;else if (Renderer) this.renderer = new Renderer();
  }
  /**
   * Get or set a style property.
   */


  var _proto = BaseStyleRule.prototype;

  _proto.prop = function prop(name, value, options) {
    // It's a getter.
    if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.

    var force = options ? options.force : false;
    if (!force && this.style[name] === value) return this;
    var newValue = value;

    if (!options || options.process !== false) {
      newValue = this.options.jss.plugins.onChangeValue(value, name, this);
    }

    var isEmpty = newValue == null || newValue === false;
    var isDefined = name in this.style; // Value is empty and wasn't defined before.

    if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.

    var remove = isEmpty && isDefined;
    if (remove) delete this.style[name];else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.

    if (this.renderable && this.renderer) {
      if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, newValue);
      return this;
    }

    var sheet = this.options.sheet;

    if (sheet && sheet.attached) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, '[JSS] Rule is not linked. Missing sheet option "link: true".') : 0;
    }

    return this;
  };

  return BaseStyleRule;
}();
var StyleRule =
/*#__PURE__*/
function (_BaseStyleRule) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__["default"])(StyleRule, _BaseStyleRule);

  function StyleRule(key, style, options) {
    var _this;

    _this = _BaseStyleRule.call(this, key, style, options) || this;
    var selector = options.selector,
        scoped = options.scoped,
        sheet = options.sheet,
        generateId = options.generateId;

    if (selector) {
      _this.selectorText = selector;
    } else if (scoped !== false) {
      _this.id = generateId((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this)), sheet);
      _this.selectorText = "." + escape(_this.id);
    }

    return _this;
  }
  /**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */


  var _proto2 = StyleRule.prototype;

  /**
   * Apply rule to an element inline.
   */
  _proto2.applyTo = function applyTo(renderable) {
    var renderer = this.renderer;

    if (renderer) {
      var json = this.toJSON();

      for (var prop in json) {
        renderer.setProperty(renderable, prop, json[prop]);
      }
    }

    return this;
  }
  /**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */
  ;

  _proto2.toJSON = function toJSON() {
    var json = {};

    for (var prop in this.style) {
      var value = this.style[prop];
      if (typeof value !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = toCssValue(value);
    }

    return json;
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto2.toString = function toString(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.selectorText, this.style, opts);
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(StyleRule, [{
    key: "selector",
    set: function set(selector) {
      if (selector === this.selectorText) return;
      this.selectorText = selector;
      var renderer = this.renderer,
          renderable = this.renderable;
      if (!renderable || !renderer) return;
      var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.

      if (!hasChanged) {
        renderer.replaceRule(renderable, this);
      }
    }
    /**
     * Get selector string.
     */
    ,
    get: function get() {
      return this.selectorText;
    }
  }]);

  return StyleRule;
}(BaseStyleRule);
var pluginStyleRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    if (key[0] === '@' || options.parent && options.parent.type === 'keyframes') {
      return null;
    }

    return new StyleRule(key, style, options);
  }
};

var defaultToStringOptions = {
  indent: 1,
  children: true
};
var atRegExp = /@([\w-]+)/;
/**
 * Conditional rule for @media, @supports
 */

var ConditionalRule =
/*#__PURE__*/
function () {
  function ConditionalRule(key, styles, options) {
    this.type = 'conditional';
    this.isProcessed = false;
    this.key = key;
    var atMatch = key.match(atRegExp);
    this.at = atMatch ? atMatch[1] : 'unknown'; // Key might contain a unique suffix in case the `name` passed by user was duplicate.

    this.query = options.name || "@" + this.at;
    this.options = options;
    this.rules = new RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }
  /**
   * Get a rule.
   */


  var _proto = ConditionalRule.prototype;

  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Create and register rule, run plugins.
   */
  ;

  _proto.addRule = function addRule(name, style, options) {
    var rule = this.rules.add(name, style, options);
    if (!rule) return null;
    this.options.jss.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Replace rule, run plugins.
   */
  ;

  _proto.replaceRule = function replaceRule(name, style, options) {
    var newRule = this.rules.replace(name, style, options);
    if (newRule) this.options.jss.plugins.onProcessRule(newRule);
    return newRule;
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    if (options === void 0) {
      options = defaultToStringOptions;
    }

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (options.indent == null) options.indent = defaultToStringOptions.indent;
    if (options.children == null) options.children = defaultToStringOptions.children;

    if (options.children === false) {
      return this.query + " {}";
    }

    var children = this.rules.toString(options);
    return children ? this.query + " {" + linebreak + children + linebreak + "}" : '';
  };

  return ConditionalRule;
}();
var keyRegExp = /@container|@media|@supports\s+/;
var pluginConditionalRule = {
  onCreateRule: function onCreateRule(key, styles, options) {
    return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;
  }
};

var defaultToStringOptions$1 = {
  indent: 1,
  children: true
};
var nameRegExp = /@keyframes\s+([\w-]+)/;
/**
 * Rule for @keyframes
 */

var KeyframesRule =
/*#__PURE__*/
function () {
  function KeyframesRule(key, frames, options) {
    this.type = 'keyframes';
    this.at = '@keyframes';
    this.isProcessed = false;
    var nameMatch = key.match(nameRegExp);

    if (nameMatch && nameMatch[1]) {
      this.name = nameMatch[1];
    } else {
      this.name = 'noname';
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Bad keyframes name " + key) : 0;
    }

    this.key = this.type + "-" + this.name;
    this.options = options;
    var scoped = options.scoped,
        sheet = options.sheet,
        generateId = options.generateId;
    this.id = scoped === false ? this.name : escape(generateId(this, sheet));
    this.rules = new RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var name in frames) {
      this.rules.add(name, frames[name], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
        parent: this
      }));
    }

    this.rules.process();
  }
  /**
   * Generates a CSS string.
   */


  var _proto = KeyframesRule.prototype;

  _proto.toString = function toString(options) {
    if (options === void 0) {
      options = defaultToStringOptions$1;
    }

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (options.indent == null) options.indent = defaultToStringOptions$1.indent;
    if (options.children == null) options.children = defaultToStringOptions$1.children;

    if (options.children === false) {
      return this.at + " " + this.id + " {}";
    }

    var children = this.rules.toString(options);
    if (children) children = "" + linebreak + children + linebreak;
    return this.at + " " + this.id + " {" + children + "}";
  };

  return KeyframesRule;
}();
var keyRegExp$1 = /@keyframes\s+/;
var refRegExp = /\$([\w-]+)/g;

var findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {
  if (typeof val === 'string') {
    return val.replace(refRegExp, function (match, name) {
      if (name in keyframes) {
        return keyframes[name];
      }

       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Referenced keyframes rule \"" + name + "\" is not defined.") : 0;
      return match;
    });
  }

  return val;
};
/**
 * Replace the reference for a animation name.
 */


var replaceRef = function replaceRef(style, prop, keyframes) {
  var value = style[prop];
  var refKeyframe = findReferencedKeyframe(value, keyframes);

  if (refKeyframe !== value) {
    style[prop] = refKeyframe;
  }
};

var pluginKeyframesRule = {
  onCreateRule: function onCreateRule(key, frames, options) {
    return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;
  },
  // Animation name ref replacer.
  onProcessStyle: function onProcessStyle(style, rule, sheet) {
    if (rule.type !== 'style' || !sheet) return style;
    if ('animation-name' in style) replaceRef(style, 'animation-name', sheet.keyframes);
    if ('animation' in style) replaceRef(style, 'animation', sheet.keyframes);
    return style;
  },
  onChangeValue: function onChangeValue(val, prop, rule) {
    var sheet = rule.options.sheet;

    if (!sheet) {
      return val;
    }

    switch (prop) {
      case 'animation':
        return findReferencedKeyframe(val, sheet.keyframes);

      case 'animation-name':
        return findReferencedKeyframe(val, sheet.keyframes);

      default:
        return val;
    }
  }
};

var KeyframeRule =
/*#__PURE__*/
function (_BaseStyleRule) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__["default"])(KeyframeRule, _BaseStyleRule);

  function KeyframeRule() {
    return _BaseStyleRule.apply(this, arguments) || this;
  }

  var _proto = KeyframeRule.prototype;

  /**
   * Generates a CSS string.
   */
  _proto.toString = function toString(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.key, this.style, opts);
  };

  return KeyframeRule;
}(BaseStyleRule);
var pluginKeyframeRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    if (options.parent && options.parent.type === 'keyframes') {
      return new KeyframeRule(key, style, options);
    }

    return null;
  }
};

var FontFaceRule =
/*#__PURE__*/
function () {
  function FontFaceRule(key, style, options) {
    this.type = 'font-face';
    this.at = '@font-face';
    this.isProcessed = false;
    this.key = key;
    this.style = style;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */


  var _proto = FontFaceRule.prototype;

  _proto.toString = function toString(options) {
    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (Array.isArray(this.style)) {
      var str = '';

      for (var index = 0; index < this.style.length; index++) {
        str += toCss(this.at, this.style[index]);
        if (this.style[index + 1]) str += linebreak;
      }

      return str;
    }

    return toCss(this.at, this.style, options);
  };

  return FontFaceRule;
}();
var keyRegExp$2 = /@font-face/;
var pluginFontFaceRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null;
  }
};

var ViewportRule =
/*#__PURE__*/
function () {
  function ViewportRule(key, style, options) {
    this.type = 'viewport';
    this.at = '@viewport';
    this.isProcessed = false;
    this.key = key;
    this.style = style;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */


  var _proto = ViewportRule.prototype;

  _proto.toString = function toString(options) {
    return toCss(this.key, this.style, options);
  };

  return ViewportRule;
}();
var pluginViewportRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null;
  }
};

var SimpleRule =
/*#__PURE__*/
function () {
  function SimpleRule(key, value, options) {
    this.type = 'simple';
    this.isProcessed = false;
    this.key = key;
    this.value = value;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */
  // eslint-disable-next-line no-unused-vars


  var _proto = SimpleRule.prototype;

  _proto.toString = function toString(options) {
    if (Array.isArray(this.value)) {
      var str = '';

      for (var index = 0; index < this.value.length; index++) {
        str += this.key + " " + this.value[index] + ";";
        if (this.value[index + 1]) str += '\n';
      }

      return str;
    }

    return this.key + " " + this.value + ";";
  };

  return SimpleRule;
}();
var keysMap = {
  '@charset': true,
  '@import': true,
  '@namespace': true
};
var pluginSimpleRule = {
  onCreateRule: function onCreateRule(key, value, options) {
    return key in keysMap ? new SimpleRule(key, value, options) : null;
  }
};

var plugins = [pluginStyleRule, pluginConditionalRule, pluginKeyframesRule, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];

var defaultUpdateOptions = {
  process: true
};
var forceUpdateOptions = {
  force: true,
  process: true
  /**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

};

var RuleList =
/*#__PURE__*/
function () {
  // Rules registry for access by .get() method.
  // It contains the same rule registered by name and by selector.
  // Original styles object.
  // Used to ensure correct rules order.
  function RuleList(options) {
    this.map = {};
    this.raw = {};
    this.index = [];
    this.counter = 0;
    this.options = options;
    this.classes = options.classes;
    this.keyframes = options.keyframes;
  }
  /**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */


  var _proto = RuleList.prototype;

  _proto.add = function add(name, decl, ruleOptions) {
    var _this$options = this.options,
        parent = _this$options.parent,
        sheet = _this$options.sheet,
        jss = _this$options.jss,
        Renderer = _this$options.Renderer,
        generateId = _this$options.generateId,
        scoped = _this$options.scoped;

    var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      classes: this.classes,
      parent: parent,
      sheet: sheet,
      jss: jss,
      Renderer: Renderer,
      generateId: generateId,
      scoped: scoped,
      name: name,
      keyframes: this.keyframes,
      selector: undefined
    }, ruleOptions); // When user uses .createStyleSheet(), duplicate names are not possible, but
    // `sheet.addRule()` opens the door for any duplicate rule name. When this happens
    // we need to make the key unique within this RuleList instance scope.


    var key = name;

    if (name in this.raw) {
      key = name + "-d" + this.counter++;
    } // We need to save the original decl before creating the rule
    // because cache plugin needs to use it as a key to return a cached rule.


    this.raw[key] = decl;

    if (key in this.classes) {
      // E.g. rules inside of @media container
      options.selector = "." + escape(this.classes[key]);
    }

    var rule = createRule(key, decl, options);
    if (!rule) return null;
    this.register(rule);
    var index = options.index === undefined ? this.index.length : options.index;
    this.index.splice(index, 0, rule);
    return rule;
  }
  /**
   * Replace rule.
   * Create a new rule and remove old one instead of overwriting
   * because we want to invoke onCreateRule hook to make plugins work.
   */
  ;

  _proto.replace = function replace(name, decl, ruleOptions) {
    var oldRule = this.get(name);
    var oldIndex = this.index.indexOf(oldRule);

    if (oldRule) {
      this.remove(oldRule);
    }

    var options = ruleOptions;
    if (oldIndex !== -1) options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, ruleOptions, {
      index: oldIndex
    });
    return this.add(name, decl, options);
  }
  /**
   * Get a rule by name or selector.
   */
  ;

  _proto.get = function get(nameOrSelector) {
    return this.map[nameOrSelector];
  }
  /**
   * Delete a rule.
   */
  ;

  _proto.remove = function remove(rule) {
    this.unregister(rule);
    delete this.raw[rule.key];
    this.index.splice(this.index.indexOf(rule), 1);
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.index.indexOf(rule);
  }
  /**
   * Run `onProcessRule()` plugins on every rule.
   */
  ;

  _proto.process = function process() {
    var plugins = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop
    // we end up with very hard-to-track-down side effects.

    this.index.slice(0).forEach(plugins.onProcessRule, plugins);
  }
  /**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */
  ;

  _proto.register = function register(rule) {
    this.map[rule.key] = rule;

    if (rule instanceof StyleRule) {
      this.map[rule.selector] = rule;
      if (rule.id) this.classes[rule.key] = rule.id;
    } else if (rule instanceof KeyframesRule && this.keyframes) {
      this.keyframes[rule.name] = rule.id;
    }
  }
  /**
   * Unregister a rule.
   */
  ;

  _proto.unregister = function unregister(rule) {
    delete this.map[rule.key];

    if (rule instanceof StyleRule) {
      delete this.map[rule.selector];
      delete this.classes[rule.key];
    } else if (rule instanceof KeyframesRule) {
      delete this.keyframes[rule.name];
    }
  }
  /**
   * Update the function values with a new data.
   */
  ;

  _proto.update = function update() {
    var name;
    var data;
    var options;

    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {
      name = arguments.length <= 0 ? undefined : arguments[0];
      data = arguments.length <= 1 ? undefined : arguments[1];
      options = arguments.length <= 2 ? undefined : arguments[2];
    } else {
      data = arguments.length <= 0 ? undefined : arguments[0];
      options = arguments.length <= 1 ? undefined : arguments[1];
      name = null;
    }

    if (name) {
      this.updateOne(this.get(name), data, options);
    } else {
      for (var index = 0; index < this.index.length; index++) {
        this.updateOne(this.index[index], data, options);
      }
    }
  }
  /**
   * Execute plugins, update rule props.
   */
  ;

  _proto.updateOne = function updateOne(rule, data, options) {
    if (options === void 0) {
      options = defaultUpdateOptions;
    }

    var _this$options2 = this.options,
        plugins = _this$options2.jss.plugins,
        sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.

    if (rule.rules instanceof RuleList) {
      rule.rules.update(data, options);
      return;
    }

    var style = rule.style;
    plugins.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.

    if (options.process && style && style !== rule.style) {
      // We need to run the plugins in case new `style` relies on syntax plugins.
      plugins.onProcessStyle(rule.style, rule, sheet); // Update and add props.

      for (var prop in rule.style) {
        var nextValue = rule.style[prop];
        var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

        if (nextValue !== prevValue) {
          rule.prop(prop, nextValue, forceUpdateOptions);
        }
      } // Remove props.


      for (var _prop in style) {
        var _nextValue = rule.style[_prop];
        var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

        if (_nextValue == null && _nextValue !== _prevValue) {
          rule.prop(_prop, null, forceUpdateOptions);
        }
      }
    }
  }
  /**
   * Convert rules to a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    var str = '';
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    for (var index = 0; index < this.index.length; index++) {
      var rule = this.index[index];
      var css = rule.toString(options); // No need to render an empty rule.

      if (!css && !link) continue;
      if (str) str += linebreak;
      str += css;
    }

    return str;
  };

  return RuleList;
}();

var StyleSheet =
/*#__PURE__*/
function () {
  function StyleSheet(styles, options) {
    this.attached = false;
    this.deployed = false;
    this.classes = {};
    this.keyframes = {};
    this.options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      sheet: this,
      parent: this,
      classes: this.classes,
      keyframes: this.keyframes
    });

    if (options.Renderer) {
      this.renderer = new options.Renderer(this);
    }

    this.rules = new RuleList(this.options);

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }
  /**
   * Attach renderable to the render tree.
   */


  var _proto = StyleSheet.prototype;

  _proto.attach = function attach() {
    if (this.attached) return this;
    if (this.renderer) this.renderer.attach();
    this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.

    if (!this.deployed) this.deploy();
    return this;
  }
  /**
   * Remove renderable from render tree.
   */
  ;

  _proto.detach = function detach() {
    if (!this.attached) return this;
    if (this.renderer) this.renderer.detach();
    this.attached = false;
    return this;
  }
  /**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */
  ;

  _proto.addRule = function addRule(name, decl, options) {
    var queue = this.queue; // Plugins can create rules.
    // In order to preserve the right order, we need to queue all `.addRule` calls,
    // which happen after the first `rules.add()` call.

    if (this.attached && !queue) this.queue = [];
    var rule = this.rules.add(name, decl, options);
    if (!rule) return null;
    this.options.jss.plugins.onProcessRule(rule);

    if (this.attached) {
      if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.
      // It will be inserted all together when .attach is called.

      if (queue) queue.push(rule);else {
        this.insertRule(rule);

        if (this.queue) {
          this.queue.forEach(this.insertRule, this);
          this.queue = undefined;
        }
      }
      return rule;
    } // We can't add rules to a detached style node.
    // We will redeploy the sheet once user will attach it.


    this.deployed = false;
    return rule;
  }
  /**
   * Replace a rule in the current stylesheet.
   */
  ;

  _proto.replaceRule = function replaceRule(nameOrSelector, decl, options) {
    var oldRule = this.rules.get(nameOrSelector);
    if (!oldRule) return this.addRule(nameOrSelector, decl, options);
    var newRule = this.rules.replace(nameOrSelector, decl, options);

    if (newRule) {
      this.options.jss.plugins.onProcessRule(newRule);
    }

    if (this.attached) {
      if (!this.deployed) return newRule; // Don't replace / delete rule directly if there is no stringified version yet.
      // It will be inserted all together when .attach is called.

      if (this.renderer) {
        if (!newRule) {
          this.renderer.deleteRule(oldRule);
        } else if (oldRule.renderable) {
          this.renderer.replaceRule(oldRule.renderable, newRule);
        }
      }

      return newRule;
    } // We can't replace rules to a detached style node.
    // We will redeploy the sheet once user will attach it.


    this.deployed = false;
    return newRule;
  }
  /**
   * Insert rule into the StyleSheet
   */
  ;

  _proto.insertRule = function insertRule(rule) {
    if (this.renderer) {
      this.renderer.insertRule(rule);
    }
  }
  /**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */
  ;

  _proto.addRules = function addRules(styles, options) {
    var added = [];

    for (var name in styles) {
      var rule = this.addRule(name, styles[name], options);
      if (rule) added.push(rule);
    }

    return added;
  }
  /**
   * Get a rule by name or selector.
   */
  ;

  _proto.getRule = function getRule(nameOrSelector) {
    return this.rules.get(nameOrSelector);
  }
  /**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */
  ;

  _proto.deleteRule = function deleteRule(name) {
    var rule = typeof name === 'object' ? name : this.rules.get(name);

    if (!rule || // Style sheet was created without link: true and attached, in this case we
    // won't be able to remove the CSS rule from the DOM.
    this.attached && !rule.renderable) {
      return false;
    }

    this.rules.remove(rule);

    if (this.attached && rule.renderable && this.renderer) {
      return this.renderer.deleteRule(rule.renderable);
    }

    return true;
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Deploy pure CSS string to a renderable.
   */
  ;

  _proto.deploy = function deploy() {
    if (this.renderer) this.renderer.deploy();
    this.deployed = true;
    return this;
  }
  /**
   * Update the function values with a new data.
   */
  ;

  _proto.update = function update() {
    var _this$rules;

    (_this$rules = this.rules).update.apply(_this$rules, arguments);

    return this;
  }
  /**
   * Updates a single rule.
   */
  ;

  _proto.updateOne = function updateOne(rule, data, options) {
    this.rules.updateOne(rule, data, options);
    return this;
  }
  /**
   * Convert rules to a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    return this.rules.toString(options);
  };

  return StyleSheet;
}();

var PluginsRegistry =
/*#__PURE__*/
function () {
  function PluginsRegistry() {
    this.plugins = {
      internal: [],
      external: []
    };
    this.registry = {};
  }

  var _proto = PluginsRegistry.prototype;

  /**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */
  _proto.onCreateRule = function onCreateRule(name, decl, options) {
    for (var i = 0; i < this.registry.onCreateRule.length; i++) {
      var rule = this.registry.onCreateRule[i](name, decl, options);
      if (rule) return rule;
    }

    return null;
  }
  /**
   * Call `onProcessRule` hooks.
   */
  ;

  _proto.onProcessRule = function onProcessRule(rule) {
    if (rule.isProcessed) return;
    var sheet = rule.options.sheet;

    for (var i = 0; i < this.registry.onProcessRule.length; i++) {
      this.registry.onProcessRule[i](rule, sheet);
    }

    if (rule.style) this.onProcessStyle(rule.style, rule, sheet);
    rule.isProcessed = true;
  }
  /**
   * Call `onProcessStyle` hooks.
   */
  ;

  _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {
    for (var i = 0; i < this.registry.onProcessStyle.length; i++) {
      rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);
    }
  }
  /**
   * Call `onProcessSheet` hooks.
   */
  ;

  _proto.onProcessSheet = function onProcessSheet(sheet) {
    for (var i = 0; i < this.registry.onProcessSheet.length; i++) {
      this.registry.onProcessSheet[i](sheet);
    }
  }
  /**
   * Call `onUpdate` hooks.
   */
  ;

  _proto.onUpdate = function onUpdate(data, rule, sheet, options) {
    for (var i = 0; i < this.registry.onUpdate.length; i++) {
      this.registry.onUpdate[i](data, rule, sheet, options);
    }
  }
  /**
   * Call `onChangeValue` hooks.
   */
  ;

  _proto.onChangeValue = function onChangeValue(value, prop, rule) {
    var processedValue = value;

    for (var i = 0; i < this.registry.onChangeValue.length; i++) {
      processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);
    }

    return processedValue;
  }
  /**
   * Register a plugin.
   */
  ;

  _proto.use = function use(newPlugin, options) {
    if (options === void 0) {
      options = {
        queue: 'external'
      };
    }

    var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.

    if (plugins.indexOf(newPlugin) !== -1) {
      return;
    }

    plugins.push(newPlugin);
    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) {
      for (var name in plugin) {
        if (name in registry) {
          registry[name].push(plugin[name]);
        } else {
           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Unknown hook \"" + name + "\".") : 0;
        }
      }

      return registry;
    }, {
      onCreateRule: [],
      onProcessRule: [],
      onProcessStyle: [],
      onProcessSheet: [],
      onChangeValue: [],
      onUpdate: []
    });
  };

  return PluginsRegistry;
}();

/**
 * Sheets registry to access all instances in one place.
 */

var SheetsRegistry =
/*#__PURE__*/
function () {
  function SheetsRegistry() {
    this.registry = [];
  }

  var _proto = SheetsRegistry.prototype;

  /**
   * Register a Style Sheet.
   */
  _proto.add = function add(sheet) {
    var registry = this.registry;
    var index = sheet.options.index;
    if (registry.indexOf(sheet) !== -1) return;

    if (registry.length === 0 || index >= this.index) {
      registry.push(sheet);
      return;
    } // Find a position.


    for (var i = 0; i < registry.length; i++) {
      if (registry[i].options.index > index) {
        registry.splice(i, 0, sheet);
        return;
      }
    }
  }
  /**
   * Reset the registry.
   */
  ;

  _proto.reset = function reset() {
    this.registry = [];
  }
  /**
   * Remove a Style Sheet.
   */
  ;

  _proto.remove = function remove(sheet) {
    var index = this.registry.indexOf(sheet);
    this.registry.splice(index, 1);
  }
  /**
   * Convert all attached sheets to a CSS string.
   */
  ;

  _proto.toString = function toString(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        attached = _ref.attached,
        options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__["default"])(_ref, ["attached"]);

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    var css = '';

    for (var i = 0; i < this.registry.length; i++) {
      var sheet = this.registry[i];

      if (attached != null && sheet.attached !== attached) {
        continue;
      }

      if (css) css += linebreak;
      css += sheet.toString(options);
    }

    return css;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SheetsRegistry, [{
    key: "index",

    /**
     * Current highest index number.
     */
    get: function get() {
      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
    }
  }]);

  return SheetsRegistry;
}();

/**
 * This is a global sheets registry. Only DomRenderer will add sheets to it.
 * On the server one should use an own SheetsRegistry instance and add the
 * sheets to it, because you need to make sure to create a new registry for
 * each request in order to not leak sheets across requests.
 */

var sheets = new SheetsRegistry();

/* eslint-disable */

/**
 * Now that `globalThis` is available on most platforms
 * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis#browser_compatibility)
 * we check for `globalThis` first. `globalThis` is necessary for jss
 * to run in Agoric's secure version of JavaScript (SES). Under SES,
 * `globalThis` exists, but `window`, `self`, and `Function('return
 * this')()` are all undefined for security reasons.
 *
 * https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
 */
var globalThis$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();

var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
if (globalThis$1[ns] == null) globalThis$1[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify
// the current version with just one short number and use it for classes generation
// we use a counter. Also it is more accurate, because user can manually reevaluate
// the module.

var moduleId = globalThis$1[ns]++;

var maxRules = 1e10;
/**
 * Returns a function which generates unique class names based on counters.
 * When new generator function is created, rule counter is reseted.
 * We need to reset the rule counter for SSR for each request.
 */

var createGenerateId = function createGenerateId(options) {
  if (options === void 0) {
    options = {};
  }

  var ruleCounter = 0;

  var generateId = function generateId(rule, sheet) {
    ruleCounter += 1;

    if (ruleCounter > maxRules) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] You might have a memory leak. Rule counter is at " + ruleCounter + ".") : 0;
    }

    var jssId = '';
    var prefix = '';

    if (sheet) {
      if (sheet.options.classNamePrefix) {
        prefix = sheet.options.classNamePrefix;
      }

      if (sheet.options.jss.id != null) {
        jssId = String(sheet.options.jss.id);
      }
    }

    if (options.minify) {
      // Using "c" because a number can't be the first char in a class name.
      return "" + (prefix || 'c') + moduleId + jssId + ruleCounter;
    }

    return prefix + rule.key + "-" + moduleId + (jssId ? "-" + jssId : '') + "-" + ruleCounter;
  };

  return generateId;
};

/**
 * Cache the value from the first time a function is called.
 */

var memoize = function memoize(fn) {
  var value;
  return function () {
    if (!value) value = fn();
    return value;
  };
};
/**
 * Get a style property value.
 */


var getPropertyValue = function getPropertyValue(cssRule, prop) {
  try {
    // Support CSSTOM.
    if (cssRule.attributeStyleMap) {
      return cssRule.attributeStyleMap.get(prop);
    }

    return cssRule.style.getPropertyValue(prop);
  } catch (err) {
    // IE may throw if property is unknown.
    return '';
  }
};
/**
 * Set a style property.
 */


var setProperty = function setProperty(cssRule, prop, value) {
  try {
    var cssValue = value;

    if (Array.isArray(value)) {
      cssValue = toCssValue(value);
    } // Support CSSTOM.


    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.set(prop, cssValue);
    } else {
      var indexOfImportantFlag = cssValue ? cssValue.indexOf('!important') : -1;
      var cssValueWithoutImportantFlag = indexOfImportantFlag > -1 ? cssValue.substr(0, indexOfImportantFlag - 1) : cssValue;
      cssRule.style.setProperty(prop, cssValueWithoutImportantFlag, indexOfImportantFlag > -1 ? 'important' : '');
    }
  } catch (err) {
    // IE may throw if property is unknown.
    return false;
  }

  return true;
};
/**
 * Remove a style property.
 */


var removeProperty = function removeProperty(cssRule, prop) {
  try {
    // Support CSSTOM.
    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.delete(prop);
    } else {
      cssRule.style.removeProperty(prop);
    }
  } catch (err) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] DOMException \"" + err.message + "\" was thrown. Tried to remove property \"" + prop + "\".") : 0;
  }
};
/**
 * Set the selector.
 */


var setSelector = function setSelector(cssRule, selectorText) {
  cssRule.selectorText = selectorText; // Return false if setter was not successful.
  // Currently works in chrome only.

  return cssRule.selectorText === selectorText;
};
/**
 * Gets the `head` element upon the first call and caches it.
 * We assume it can't be null.
 */


var getHead = memoize(function () {
  return document.querySelector('head');
});
/**
 * Find attached sheet with an index higher than the passed one.
 */

function findHigherSheet(registry, options) {
  for (var i = 0; i < registry.length; i++) {
    var sheet = registry[i];

    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }

  return null;
}
/**
 * Find attached sheet with the highest index.
 */


function findHighestSheet(registry, options) {
  for (var i = registry.length - 1; i >= 0; i--) {
    var sheet = registry[i];

    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }

  return null;
}
/**
 * Find a comment with "jss" inside.
 */


function findCommentNode(text) {
  var head = getHead();

  for (var i = 0; i < head.childNodes.length; i++) {
    var node = head.childNodes[i];

    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
      return node;
    }
  }

  return null;
}
/**
 * Find a node before which we can insert the sheet.
 */


function findPrevNode(options) {
  var registry = sheets.registry;

  if (registry.length > 0) {
    // Try to insert before the next higher sheet.
    var sheet = findHigherSheet(registry, options);

    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element
      };
    } // Otherwise insert after the last attached.


    sheet = findHighestSheet(registry, options);

    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element.nextSibling
      };
    }
  } // Try to find a comment placeholder if registry is empty.


  var insertionPoint = options.insertionPoint;

  if (insertionPoint && typeof insertionPoint === 'string') {
    var comment = findCommentNode(insertionPoint);

    if (comment) {
      return {
        parent: comment.parentNode,
        node: comment.nextSibling
      };
    } // If user specifies an insertion point and it can't be found in the document -
    // bad specificity issues may appear.


     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Insertion point \"" + insertionPoint + "\" not found.") : 0;
  }

  return false;
}
/**
 * Insert style element into the DOM.
 */


function insertStyle(style, options) {
  var insertionPoint = options.insertionPoint;
  var nextNode = findPrevNode(options);

  if (nextNode !== false && nextNode.parent) {
    nextNode.parent.insertBefore(style, nextNode.node);
    return;
  } // Works with iframes and any node types.


  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
    var insertionPointElement = insertionPoint;
    var parentNode = insertionPointElement.parentNode;
    if (parentNode) parentNode.insertBefore(style, insertionPointElement.nextSibling);else  true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, '[JSS] Insertion point is not in the DOM.') : 0;
    return;
  }

  getHead().appendChild(style);
}
/**
 * Read jss nonce setting from the page if the user has set it.
 */


var getNonce = memoize(function () {
  var node = document.querySelector('meta[property="csp-nonce"]');
  return node ? node.getAttribute('content') : null;
});

var _insertRule = function insertRule(container, rule, index) {
  try {
    if ('insertRule' in container) {
      container.insertRule(rule, index);
    } // Keyframes rule.
    else if ('appendRule' in container) {
        container.appendRule(rule);
      }
  } catch (err) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] " + err.message) : 0;
    return false;
  }

  return container.cssRules[index];
};

var getValidRuleInsertionIndex = function getValidRuleInsertionIndex(container, index) {
  var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong

  if (index === undefined || index > maxIndex) {
    // eslint-disable-next-line no-param-reassign
    return maxIndex;
  }

  return index;
};

var createStyle = function createStyle() {
  var el = document.createElement('style'); // Without it, IE will have a broken source order specificity if we
  // insert rules after we insert the style tag.
  // It seems to kick-off the source order specificity algorithm.

  el.textContent = '\n';
  return el;
};

var DomRenderer =
/*#__PURE__*/
function () {
  // Will be empty if link: true option is not set, because
  // it is only for use together with insertRule API.
  function DomRenderer(sheet) {
    this.getPropertyValue = getPropertyValue;
    this.setProperty = setProperty;
    this.removeProperty = removeProperty;
    this.setSelector = setSelector;
    this.hasInsertedRules = false;
    this.cssRules = [];
    // There is no sheet when the renderer is used from a standalone StyleRule.
    if (sheet) sheets.add(sheet);
    this.sheet = sheet;

    var _ref = this.sheet ? this.sheet.options : {},
        media = _ref.media,
        meta = _ref.meta,
        element = _ref.element;

    this.element = element || createStyle();
    this.element.setAttribute('data-jss', '');
    if (media) this.element.setAttribute('media', media);
    if (meta) this.element.setAttribute('data-meta', meta);
    var nonce = getNonce();
    if (nonce) this.element.setAttribute('nonce', nonce);
  }
  /**
   * Insert style element into render tree.
   */


  var _proto = DomRenderer.prototype;

  _proto.attach = function attach() {
    // In the case the element node is external and it is already in the DOM.
    if (this.element.parentNode || !this.sheet) return;
    insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
    // most browsers create a new CSSStyleSheet, except of all IEs.

    var deployed = Boolean(this.sheet && this.sheet.deployed);

    if (this.hasInsertedRules && deployed) {
      this.hasInsertedRules = false;
      this.deploy();
    }
  }
  /**
   * Remove style element from render tree.
   */
  ;

  _proto.detach = function detach() {
    if (!this.sheet) return;
    var parentNode = this.element.parentNode;
    if (parentNode) parentNode.removeChild(this.element); // In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.
    // Though IE will keep them and we need a consistent behavior.

    if (this.sheet.options.link) {
      this.cssRules = [];
      this.element.textContent = '\n';
    }
  }
  /**
   * Inject CSS string into element.
   */
  ;

  _proto.deploy = function deploy() {
    var sheet = this.sheet;
    if (!sheet) return;

    if (sheet.options.link) {
      this.insertRules(sheet.rules);
      return;
    }

    this.element.textContent = "\n" + sheet.toString() + "\n";
  }
  /**
   * Insert RuleList into an element.
   */
  ;

  _proto.insertRules = function insertRules(rules, nativeParent) {
    for (var i = 0; i < rules.index.length; i++) {
      this.insertRule(rules.index[i], i, nativeParent);
    }
  }
  /**
   * Insert a rule into element.
   */
  ;

  _proto.insertRule = function insertRule(rule, index, nativeParent) {
    if (nativeParent === void 0) {
      nativeParent = this.element.sheet;
    }

    if (rule.rules) {
      var parent = rule;
      var latestNativeParent = nativeParent;

      if (rule.type === 'conditional' || rule.type === 'keyframes') {
        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index); // We need to render the container without children first.


        latestNativeParent = _insertRule(nativeParent, parent.toString({
          children: false
        }), _insertionIndex);

        if (latestNativeParent === false) {
          return false;
        }

        this.refCssRule(rule, _insertionIndex, latestNativeParent);
      }

      this.insertRules(parent.rules, latestNativeParent);
      return latestNativeParent;
    }

    var ruleStr = rule.toString();
    if (!ruleStr) return false;
    var insertionIndex = getValidRuleInsertionIndex(nativeParent, index);

    var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);

    if (nativeRule === false) {
      return false;
    }

    this.hasInsertedRules = true;
    this.refCssRule(rule, insertionIndex, nativeRule);
    return nativeRule;
  };

  _proto.refCssRule = function refCssRule(rule, index, cssRule) {
    rule.renderable = cssRule; // We only want to reference the top level rules, deleteRule API doesn't support removing nested rules
    // like rules inside media queries or keyframes

    if (rule.options.parent instanceof StyleSheet) {
      this.cssRules.splice(index, 0, cssRule);
    }
  }
  /**
   * Delete a rule.
   */
  ;

  _proto.deleteRule = function deleteRule(cssRule) {
    var sheet = this.element.sheet;
    var index = this.indexOf(cssRule);
    if (index === -1) return false;
    sheet.deleteRule(index);
    this.cssRules.splice(index, 1);
    return true;
  }
  /**
   * Get index of a CSS Rule.
   */
  ;

  _proto.indexOf = function indexOf(cssRule) {
    return this.cssRules.indexOf(cssRule);
  }
  /**
   * Generate a new CSS rule and replace the existing one.
   */
  ;

  _proto.replaceRule = function replaceRule(cssRule, rule) {
    var index = this.indexOf(cssRule);
    if (index === -1) return false;
    this.element.sheet.deleteRule(index);
    this.cssRules.splice(index, 1);
    return this.insertRule(rule, index);
  }
  /**
   * Get all rules elements.
   */
  ;

  _proto.getRules = function getRules() {
    return this.element.sheet.cssRules;
  };

  return DomRenderer;
}();

var instanceCounter = 0;

var Jss =
/*#__PURE__*/
function () {
  function Jss(options) {
    this.id = instanceCounter++;
    this.version = "10.10.0";
    this.plugins = new PluginsRegistry();
    this.options = {
      id: {
        minify: false
      },
      createGenerateId: createGenerateId,
      Renderer: is_in_browser__WEBPACK_IMPORTED_MODULE_1__["default"] ? DomRenderer : null,
      plugins: []
    };
    this.generateId = createGenerateId({
      minify: false
    });

    for (var i = 0; i < plugins.length; i++) {
      this.plugins.use(plugins[i], {
        queue: 'internal'
      });
    }

    this.setup(options);
  }
  /**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */


  var _proto = Jss.prototype;

  _proto.setup = function setup(options) {
    if (options === void 0) {
      options = {};
    }

    if (options.createGenerateId) {
      this.options.createGenerateId = options.createGenerateId;
    }

    if (options.id) {
      this.options.id = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options.id, options.id);
    }

    if (options.createGenerateId || options.id) {
      this.generateId = this.options.createGenerateId(this.options.id);
    }

    if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;

    if ('Renderer' in options) {
      this.options.Renderer = options.Renderer;
    } // eslint-disable-next-line prefer-spread


    if (options.plugins) this.use.apply(this, options.plugins);
    return this;
  }
  /**
   * Create a Style Sheet.
   */
  ;

  _proto.createStyleSheet = function createStyleSheet(styles, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        index = _options.index;

    if (typeof index !== 'number') {
      index = sheets.index === 0 ? 0 : sheets.index + 1;
    }

    var sheet = new StyleSheet(styles, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      jss: this,
      generateId: options.generateId || this.generateId,
      insertionPoint: this.options.insertionPoint,
      Renderer: this.options.Renderer,
      index: index
    }));
    this.plugins.onProcessSheet(sheet);
    return sheet;
  }
  /**
   * Detach the Style Sheet and remove it from the registry.
   */
  ;

  _proto.removeStyleSheet = function removeStyleSheet(sheet) {
    sheet.detach();
    sheets.remove(sheet);
    return this;
  }
  /**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */
  ;

  _proto.createRule = function createRule$1(name, style, options) {
    if (style === void 0) {
      style = {};
    }

    if (options === void 0) {
      options = {};
    }

    // Enable rule without name for inline styles.
    if (typeof name === 'object') {
      return this.createRule(undefined, name, style);
    }

    var ruleOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      name: name,
      jss: this,
      Renderer: this.options.Renderer
    });

    if (!ruleOptions.generateId) ruleOptions.generateId = this.generateId;
    if (!ruleOptions.classes) ruleOptions.classes = {};
    if (!ruleOptions.keyframes) ruleOptions.keyframes = {};

    var rule = createRule(name, style, ruleOptions);

    if (rule) this.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Register plugin. Passed function will be invoked with a rule instance.
   */
  ;

  _proto.use = function use() {
    var _this = this;

    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
      plugins[_key] = arguments[_key];
    }

    plugins.forEach(function (plugin) {
      _this.plugins.use(plugin);
    });
    return this;
  };

  return Jss;
}();

var createJss = function createJss(options) {
  return new Jss(options);
};

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 * Used in react-jss.
 */

var SheetsManager =
/*#__PURE__*/
function () {
  function SheetsManager() {
    this.length = 0;
    this.sheets = new WeakMap();
  }

  var _proto = SheetsManager.prototype;

  _proto.get = function get(key) {
    var entry = this.sheets.get(key);
    return entry && entry.sheet;
  };

  _proto.add = function add(key, sheet) {
    if (this.sheets.has(key)) return;
    this.length++;
    this.sheets.set(key, {
      sheet: sheet,
      refs: 0
    });
  };

  _proto.manage = function manage(key) {
    var entry = this.sheets.get(key);

    if (entry) {
      if (entry.refs === 0) {
        entry.sheet.attach();
      }

      entry.refs++;
      return entry.sheet;
    }

    (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] SheetsManager: can't find sheet to manage");
    return undefined;
  };

  _proto.unmanage = function unmanage(key) {
    var entry = this.sheets.get(key);

    if (entry) {
      if (entry.refs > 0) {
        entry.refs--;
        if (entry.refs === 0) entry.sheet.detach();
      }
    } else {
      (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "SheetsManager: can't find sheet to unmanage");
    }
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SheetsManager, [{
    key: "size",
    get: function get() {
      return this.length;
    }
  }]);

  return SheetsManager;
}();

/**
* Export a constant indicating if this browser has CSSTOM support.
* https://developers.google.com/web/updates/2018/03/cssom
*/
var hasCSSTOMSupport = typeof CSS === 'object' && CSS != null && 'number' in CSS;

/**
 * Extracts a styles object with only props that contain function values.
 */
function getDynamicStyles(styles) {
  var to = null;

  for (var key in styles) {
    var value = styles[key];
    var type = typeof value;

    if (type === 'function') {
      if (!to) to = {};
      to[key] = value;
    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);

      if (extracted) {
        if (!to) to = {};
        to[key] = extracted;
      }
    }
  }

  return to;
}

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */
var index = createJss();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);



/***/ }),

/***/ "./node_modules/lzx-test-plugin/dist/esm/lzx-test-plugin.js":
/*!******************************************************************!*\
  !*** ./node_modules/lzx-test-plugin/dist/esm/lzx-test-plugin.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ a),
/* harmony export */   b: () => (/* binding */ b),
/* harmony export */   c: () => (/* binding */ c),
/* harmony export */   testFn: () => (/* binding */ testFn)
/* harmony export */ });
var a = 1;

var b = 2;

var c = a + b;
var testFn = function testFn() {
  debugger;
  console.log('a', a);
  console.log('b', b);
  console.log('c', c);
};




/***/ }),

/***/ "./node_modules/mini-create-react-context/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/mini-create-react-context/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");





var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : {};

function getUniqueId() {
  var key = '__global_unique_id__';
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
}

function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + getUniqueId() + '__';

  var Provider = /*#__PURE__*/function (_Component) {
    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Provider, _Component);

    function Provider() {
      var _this;

      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

          if (true) {
            (0,tiny_warning__WEBPACK_IMPORTED_MODULE_2__["default"])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
          }

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    _proto.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object).isRequired, _Provider$childContex);

  var Consumer = /*#__PURE__*/function (_Component2) {
    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Consumer, _Component2);

    function Consumer() {
      var _this2;

      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };

      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;

        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };

      return _this2;
    }

    var _proto2 = Consumer.prototype;

    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }

      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object), _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var index = (react__WEBPACK_IMPORTED_MODULE_0___default().createContext) || createReactContext;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) { /**/ }
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data: {};
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError(
          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
          {expectedType: expectedType}
        );
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError(
      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
    );
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/react-display-name/lib/getDisplayName.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-display-name/lib/getDisplayName.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getDisplayName;
function getDisplayName(Component) {
  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');
}

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var Scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var suppressWarning = false;
function setSuppressWarning(newSuppressWarning) {
  {
    suppressWarning = newSuppressWarning;
  }
} // In DEV, calls to console.warn and console.error get replaced
// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    if (!suppressWarning) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    if (!suppressWarning) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var ScopeComponent = 21;
var OffscreenComponent = 22;
var LegacyHiddenComponent = 23;
var CacheComponent = 24;
var TracingMarkerComponent = 25;

// -----------------------------------------------------------------------------

var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
// the react-reconciler package.

var enableNewReconciler = false; // Support legacy Primer support on internal FB www

var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber

var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
// React DOM Chopping Block
//
// Similar to main Chopping Block but only flags related to React DOM. These are
// grouped because we will likely batch all of them into a single major release.
// -----------------------------------------------------------------------------
// Disable support for comment nodes as React DOM containers. Already disabled
// in open source, but www codebase still relies on it. Need to remove.

var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
// and client rendering, mostly to allow JSX attributes to apply to the custom
// element's object properties instead of only HTML attributes.
// https://github.com/facebook/react/issues/11347

var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
var warnAboutStringRefs = false; // -----------------------------------------------------------------------------
// Debugging and DevTools
// -----------------------------------------------------------------------------
// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
// for an experimental timeline tool.

var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState

var enableProfilerTimer = true; // Record durations for commit and passive effects phases.

var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".

var allNativeEvents = new Set();
/**
 * Mapping from registration name to event name
 */


var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames =  {} ; // Trust the developer to only use possibleRegistrationNames in true

function registerTwoPhaseEvent(registrationName, dependencies) {
  registerDirectEvent(registrationName, dependencies);
  registerDirectEvent(registrationName + 'Capture', dependencies);
}
function registerDirectEvent(registrationName, dependencies) {
  {
    if (registrationNameDependencies[registrationName]) {
      error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
    }
  }

  registrationNameDependencies[registrationName] = dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }

  for (var i = 0; i < dependencies.length; i++) {
    allNativeEvents.add(dependencies[i]);
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

var hasOwnProperty = Object.prototype.hasOwnProperty;

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}

function checkAttributeStringCoercion(value, attributeName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` attribute is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', attributeName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkPropStringCoercion(value, propName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkCSSPropertyStringCoercion(value, propName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` CSS property is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkHtmlStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided HTML markup uses a value of unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkFormFieldValueStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('Form field values (value, checked, defaultValue, or defaultChecked props)' + ' must be strings, not %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    error('Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {

    return false;
  }

  if (propertyInfo !== null) {

    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];

reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */

var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  {
    if (!didWarn && isJavaScriptProtocol.test(url)) {
      didWarn = true;

      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
    }
  }
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      // This check protects multiple uses of `expected`, which is why the
      // react-internal/safe-string-coercion rule is disabled in several spots
      // below.
      {
        checkAttributeStringCoercion(expected, name);
      }

      if ( propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        // eslint-disable-next-line react-internal/safe-string-coercion
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          } // eslint-disable-next-line react-internal/safe-string-coercion


          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected, isCustomComponentTag) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    {
      checkAttributeStringCoercion(expected, name);
    }

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        {
          checkAttributeStringCoercion(value, name);
        }

        node.setAttribute(_attributeName,  '' + value);
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      {
        {
          checkAttributeStringCoercion(value, attributeName);
        }

        attributeValue = '' + value;
      }

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_SCOPE_TYPE = Symbol.for('react.scope');
var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
var REACT_CACHE_TYPE = Symbol.for('react.cache');
var REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var assign = Object.assign;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}

function describeClassComponentFrame(ctor, source, ownerFn) {
  {
    return describeNativeComponentFrame(ctor, true);
  }
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

function describeFiber(fiber) {
  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;
  var source =  fiber._debugSource ;

  switch (fiber.tag) {
    case HostComponent:
      return describeBuiltInComponentFrame(fiber.type);

    case LazyComponent:
      return describeBuiltInComponentFrame('Lazy');

    case SuspenseComponent:
      return describeBuiltInComponentFrame('Suspense');

    case SuspenseListComponent:
      return describeBuiltInComponentFrame('SuspenseList');

    case FunctionComponent:
    case IndeterminateComponent:
    case SimpleMemoComponent:
      return describeFunctionComponentFrame(fiber.type);

    case ForwardRef:
      return describeFunctionComponentFrame(fiber.type.render);

    case ClassComponent:
      return describeClassComponentFrame(fiber.type);

    default:
      return '';
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  try {
    var info = '';
    var node = workInProgress;

    do {
      info += describeFiber(node);
      node = node.return;
    } while (node);

    return info;
  } catch (x) {
    return '\nError generating stack: ' + x.message + '\n' + x.stack;
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

function getWrappedName$1(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
} // Keep in sync with shared/getComponentNameFromType


function getContextName$1(type) {
  return type.displayName || 'Context';
}

function getComponentNameFromFiber(fiber) {
  var tag = fiber.tag,
      type = fiber.type;

  switch (tag) {
    case CacheComponent:
      return 'Cache';

    case ContextConsumer:
      var context = type;
      return getContextName$1(context) + '.Consumer';

    case ContextProvider:
      var provider = type;
      return getContextName$1(provider._context) + '.Provider';

    case DehydratedFragment:
      return 'DehydratedFragment';

    case ForwardRef:
      return getWrappedName$1(type, type.render, 'ForwardRef');

    case Fragment:
      return 'Fragment';

    case HostComponent:
      // Host component type is the display name (e.g. "div", "View")
      return type;

    case HostPortal:
      return 'Portal';

    case HostRoot:
      return 'Root';

    case HostText:
      return 'Text';

    case LazyComponent:
      // Name comes from the type in this case; we don't have a tag.
      return getComponentNameFromType(type);

    case Mode:
      if (type === REACT_STRICT_MODE_TYPE) {
        // Don't be less specific than shared/getComponentNameFromType
        return 'StrictMode';
      }

      return 'Mode';

    case OffscreenComponent:
      return 'Offscreen';

    case Profiler:
      return 'Profiler';

    case ScopeComponent:
      return 'Scope';

    case SuspenseComponent:
      return 'Suspense';

    case SuspenseListComponent:
      return 'SuspenseList';

    case TracingMarkerComponent:
      return 'TracingMarker';
    // The display name for this tags come from the user-provided type:

    case ClassComponent:
    case FunctionComponent:
    case IncompleteClassComponent:
    case IndeterminateComponent:
    case MemoComponent:
    case SimpleMemoComponent:
      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      break;

  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
var current = null;
var isRendering = false;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentNameFromFiber(owner);
    }
  }

  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    isRendering = false;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
    current = fiber;
    isRendering = false;
  }
}
function getCurrentFiber() {
  {
    return current;
  }
}
function setIsRendering(rendering) {
  {
    isRendering = rendering;
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  // The coercion safety check is performed in getToStringValue().
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'string':
    case 'undefined':
      return value;

    case 'object':
      {
        checkFormFieldValueStringCoercion(value);
      }

      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};
function checkControlledValueProps(tagName, props) {
  {
    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }

    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  }
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  {
    checkFormFieldValueStringCoercion(node[valueField]);
  }

  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      {
        checkFormFieldValueStringCoercion(value);
      }

      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      {
        checkFormFieldValueStringCoercion(value);
      }

      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;
  var hostProps = assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });
  return hostProps;
}
function initWrapperState(element, props) {
  {
    checkControlledValueProps('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    {
      checkAttributeStringCoercion(name, 'name');
    }

    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode(otherNode);

      if (!otherProps) {
        throw new Error('ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.');
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;
var didWarnInvalidInnerHTML = false;
/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  {
    // If a value is not provided, then the children must be simple.
    if (props.value == null) {
      if (typeof props.children === 'object' && props.children !== null) {
        React.Children.forEach(props.children, function (child) {
          if (child == null) {
            return;
          }

          if (typeof child === 'string' || typeof child === 'number') {
            return;
          }

          if (!didWarnInvalidChild) {
            didWarnInvalidChild = true;

            error('Cannot infer the option value of complex children. ' + 'Pass a `value` prop or use a plain string as children to <option>.');
          }
        });
      } else if (props.dangerouslySetInnerHTML != null) {
        if (!didWarnInvalidInnerHTML) {
          didWarnInvalidInnerHTML = true;

          error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' + 'which value should be selected.');
        }
      }
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');

      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  {
    checkControlledValueProps('select', props);

    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];

      if (props[propName] == null) {
        continue;
      }

      var propNameIsArray = isArray(props[propName]);

      if (props.multiple && !propNameIsArray) {
        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
      } else if (!props.multiple && propNameIsArray) {
        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
      }
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$1(element, props) {
  return assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$2(element, props) {
  var node = element;

  if (props.dangerouslySetInnerHTML != null) {
    throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    checkControlledValueProps('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');

      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var children = props.children,
        defaultValue = props.defaultValue;

    if (children != null) {
      {
        error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      {
        if (defaultValue != null) {
          throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');
        }

        if (isArray(children)) {
          if (children.length > 1) {
            throw new Error('<textarea> can only have at most one child.');
          }

          children = children[0];
        }

        defaultValue = children;
      }
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$2(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === SVG_NAMESPACE) {

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  {
    checkCSSPropertyStringCoercion(value, name);
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;

    error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;

    error('`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;

    error('`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  {
    if (!nextStyles) {
      return;
    }

    var expandedUpdates = expandShorthandMap(styleUpdates);
    var expandedStyles = expandShorthandMap(nextStyles);
    var warnedAbout = {};

    for (var key in expandedUpdates) {
      var originalKey = expandedUpdates[key];
      var correctOriginalKey = expandedStyles[key];

      if (correctOriginalKey && originalKey !== correctOriginalKey) {
        var warningKey = originalKey + ',' + correctOriginalKey;

        if (warnedAbout[warningKey]) {
          continue;
        }

        warnedAbout[warningKey] = true;

        error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
      }
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a list for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = assign({
  menuitem: true
}, omittedCloseTags);

var HTML = '__html';

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (props.children != null || props.dangerouslySetInnerHTML != null) {
      throw new Error(tag + " is a void element tag and must neither have `children` nor " + 'use `dangerouslySetInnerHTML`.');
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (props.children != null) {
      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');
    }

    if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) {
      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');
    }
  }

  {
    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
    }
  }

  if (props.style != null && typeof props.style !== 'object') {
    throw new Error('The `style` prop expects a mapping from style properties to values, ' + "not a string. For example, style={{marginRight: spacing + 'em'}} when " + 'using JSX.');
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this list too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG allowed attribute list, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  disableremoteplayback: 'disableRemotePlayback',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  enterkeyhint: 'enterKeyHint',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  imagesizes: 'imageSizes',
  imagesrcset: 'imageSrcSet',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-description': 0,
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name) {
  {
    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
      return true;
    }

    if (rARIACamel.test(name)) {
      var ariaName = 'aria-' + name.slice(4).toLowerCase();
      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (correctName == null) {
        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);

        warnedProperties[name] = true;
        return true;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== correctName) {
        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);

        warnedProperties[name] = true;
        return true;
      }
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== standardName) {
        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties[name] = true;
        return true;
      }
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  {
    var invalidProps = [];

    for (var key in props) {
      var isValid = validateProperty(type, key);

      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    } else if (invalidProps.length > 1) {
      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    }
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  {
    if (type !== 'input' && type !== 'textarea' && type !== 'select') {
      return;
    }

    if (props != null && props.value === null && !didWarnValueNull) {
      didWarnValueNull = true;

      if (type === 'select' && props.multiple) {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
      } else {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
      }
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, eventRegistry) {
    if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');

      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (eventRegistry != null) {
      var registrationNameDependencies = eventRegistry.registrationNameDependencies,
          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

      if (registrationNameDependencies.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);

        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        error('Unknown event handler property `%s`. It will be ignored.', name);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);

      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);

      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, eventRegistry) {
  {
    var unknownProps = [];

    for (var key in props) {
      var isValid = validateProperty$1(type, key, props[key], eventRegistry);

      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    } else if (unknownProps.length > 1) {
      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    }
  }
};

function validateProperties$2(type, props, eventRegistry) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, eventRegistry);
}

var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
var IS_NON_DELEGATED = 1 << 1;
var IS_CAPTURE_PHASE = 1 << 2;
// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
// we call willDeferLaterForLegacyFBSupport, thus not bailing out
// will result in endless cycles like an infinite loop.
// We also don't want to defer during event replaying.

var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;

// This exists to avoid circular dependency between ReactDOMEventReplaying
// and DOMPluginEventSystem.
var currentReplayingEvent = null;
function setReplayingEvent(event) {
  {
    if (currentReplayingEvent !== null) {
      error('Expected currently replaying event to be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');
    }
  }

  currentReplayingEvent = event;
}
function resetReplayingEvent() {
  {
    if (currentReplayingEvent === null) {
      error('Expected currently replaying event to not be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');
    }
  }

  currentReplayingEvent = null;
}
function isReplayingEvent(event) {
  return event === currentReplayingEvent;
}

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (typeof restoreImpl !== 'function') {
    throw new Error('setRestoreImplementation() needs to be called to handle a target for controlled ' + 'events. This error is likely caused by a bug in React. Please file an issue.');
  }

  var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.

  if (stateNode) {
    var _props = getFiberCurrentPropsFromNode(stateNode);

    restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
  }
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var flushSyncImpl = function () {};

var isInsideEventHandler = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    // TODO: Restore state in the microtask, after the discrete updates flush,
    // instead of early flushing them here.
    flushSyncImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, a, b) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, a, b);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
} // TODO: Replace with flushSync
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  flushSyncImpl = _flushSyncImpl;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */


function getListener(inst, registrationName) {
  var stateNode = inst.stateNode;

  if (stateNode === null) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (props === null) {
    // Work in progress.
    return null;
  }

  var listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (listener && typeof listener !== 'function') {
    throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
  }

  return listener;
}

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
}

var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebook/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (typeof document === 'undefined' || document === null) {
        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');
      }

      var evt = document.createEvent('Event');
      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      function restoreAfterDispatch() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }
      } // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.


      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        didCall = true;
        restoreAfterDispatch();
        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didCall && didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          // eslint-disable-next-line react-internal/prod-error-codes
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          // eslint-disable-next-line react-internal/prod-error-codes
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);

      if (!didCall) {
        // Something went really wrong, and our event was not dispatched.
        // https://github.com/facebook/react/issues/16734
        // https://github.com/facebook/react/issues/16585
        // Fall back to the production implementation.
        restoreAfterDispatch();
        return invokeGuardedCallbackProd.apply(this, arguments);
      }
    };
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');
  }
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */
function get(key) {
  return key._reactInternals;
}
function has(key) {
  return key._reactInternals !== undefined;
}
function set(key, value) {
  key._reactInternals = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoFlags =
/*                      */
0;
var PerformedWork =
/*                */
1; // You can change the rest (and add more).

var Placement =
/*                    */
2;
var Update =
/*                       */
4;
var ChildDeletion =
/*                */
16;
var ContentReset =
/*                 */
32;
var Callback =
/*                     */
64;
var DidCapture =
/*                   */
128;
var ForceClientRender =
/*            */
256;
var Ref =
/*                          */
512;
var Snapshot =
/*                     */
1024;
var Passive =
/*                      */
2048;
var Hydrating =
/*                    */
4096;
var Visibility =
/*                   */
8192;
var StoreConsistency =
/*             */
16384;
var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)

var HostEffectMask =
/*               */
32767; // These are not really side effects, but we still reuse this field.

var Incomplete =
/*                   */
32768;
var ShouldCapture =
/*                */
65536;
var ForceUpdateForLegacySuspense =
/* */
131072;
var Forked =
/*                       */
1048576; // Static tags describe aspects of a fiber that are not specific to a render,
// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
// This enables us to defer more work in the unmount case,
// since we can defer traversing the tree during layout to look for Passive effects,
// and instead rely on the static flag as a signal that there may be cleanup work.

var RefStatic =
/*                    */
2097152;
var LayoutStatic =
/*                 */
4194304;
var PassiveStatic =
/*                */
8388608; // These flags allow us to traverse to fibers that have effects on mount
// without traversing the entire tree after every commit for
// double invoking

var MountLayoutDev =
/*               */
16777216;
var MountPassiveDev =
/*              */
33554432; // Groups of flags that are used in the commit phase to skip over trees that
// don't contain effects, by checking subtreeFlags.

var BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility
// flag logic (see #20043)
Update | Snapshot | ( 0);
var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask

var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
// This allows certain concepts to persist without recalculating them,
// e.g. whether a subtree contains passive effects or portals.

var StaticMask = LayoutStatic | PassiveStatic | RefStatic;

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;

      if (!instance._warnedAboutRefsInRender) {
        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');
      }

      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (getNearestMountedFiber(fiber) !== fiber) {
    throw new Error('Unable to find node on an unmounted component.');
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (nearestMounted === null) {
      throw new Error('Unable to find node on an unmounted component.');
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      throw new Error('Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');
        }
      }
    }

    if (a.alternate !== b) {
      throw new Error("Return fibers should always be each others' alternates. " + 'This error is likely caused by a bug in React. Please file an issue.');
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (a.tag !== HostRoot) {
    throw new Error('Unable to find node on an unmounted component.');
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
}

function findCurrentHostFiberImpl(node) {
  // Next we'll drill down this component to find the first HostComponent/Text.
  if (node.tag === HostComponent || node.tag === HostText) {
    return node;
  }

  var child = node.child;

  while (child !== null) {
    var match = findCurrentHostFiberImpl(child);

    if (match !== null) {
      return match;
    }

    child = child.sibling;
  }

  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
}

function findCurrentHostFiberWithNoPortalsImpl(node) {
  // Next we'll drill down this component to find the first HostComponent/Text.
  if (node.tag === HostComponent || node.tag === HostText) {
    return node;
  }

  var child = node.child;

  while (child !== null) {
    if (child.tag !== HostPortal) {
      var match = findCurrentHostFiberWithNoPortalsImpl(child);

      if (match !== null) {
        return match;
      }
    }

    child = child.sibling;
  }

  return null;
}

// This module only exists as an ESM wrapper around the external CommonJS
var scheduleCallback = Scheduler.unstable_scheduleCallback;
var cancelCallback = Scheduler.unstable_cancelCallback;
var shouldYield = Scheduler.unstable_shouldYield;
var requestPaint = Scheduler.unstable_requestPaint;
var now = Scheduler.unstable_now;
var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
var NormalPriority = Scheduler.unstable_NormalPriority;
var LowPriority = Scheduler.unstable_LowPriority;
var IdlePriority = Scheduler.unstable_IdlePriority;
// this doesn't actually exist on the scheduler, but it *does*
// on scheduler/unstable_mock, which we'll need for internal testing
var unstable_yieldValue = Scheduler.unstable_yieldValue;
var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;

var rendererID = null;
var injectedHook = null;
var injectedProfilingHooks = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    if (enableSchedulingProfiler) {
      // Conditionally inject these hooks only if Timeline profiler is supported by this build.
      // This gives DevTools a way to feature detect that isn't tied to version number
      // (since profiling and timeline are controlled by different feature flags).
      internals = assign({}, internals, {
        getLaneLabelMap: getLaneLabelMap,
        injectProfilingHooks: injectProfilingHooks
      });
    }

    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    injectedHook = hook;
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      error('React instrumentation encountered an error: %s.', err);
    }
  }

  if (hook.checkDCE) {
    // This is the real DevTools.
    return true;
  } else {
    // This is likely a hook installed by Fast Refresh runtime.
    return false;
  }
}
function onScheduleRoot(root, children) {
  {
    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {
      try {
        injectedHook.onScheduleFiberRoot(rendererID, root, children);
      } catch (err) {
        if ( !hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitRoot(root, eventPriority) {
  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {
    try {
      var didError = (root.current.flags & DidCapture) === DidCapture;

      if (enableProfilerTimer) {
        var schedulerPriority;

        switch (eventPriority) {
          case DiscreteEventPriority:
            schedulerPriority = ImmediatePriority;
            break;

          case ContinuousEventPriority:
            schedulerPriority = UserBlockingPriority;
            break;

          case DefaultEventPriority:
            schedulerPriority = NormalPriority;
            break;

          case IdleEventPriority:
            schedulerPriority = IdlePriority;
            break;

          default:
            schedulerPriority = NormalPriority;
            break;
        }

        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
      } else {
        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
      }
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onPostCommitRoot(root) {
  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {
    try {
      injectedHook.onPostCommitFiberRoot(rendererID, root);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitUnmount(fiber) {
  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {
    try {
      injectedHook.onCommitFiberUnmount(rendererID, fiber);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function setIsStrictModeForDevtools(newIsStrictMode) {
  {
    if (typeof unstable_yieldValue === 'function') {
      // We're in a test because Scheduler.unstable_yieldValue only exists
      // in SchedulerMock. To reduce the noise in strict mode tests,
      // suppress warnings and disable scheduler yielding during the double render
      unstable_setDisableYieldValue(newIsStrictMode);
      setSuppressWarning(newIsStrictMode);
    }

    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {
      try {
        injectedHook.setStrictMode(rendererID, newIsStrictMode);
      } catch (err) {
        {
          if (!hasLoggedError) {
            hasLoggedError = true;

            error('React instrumentation encountered an error: %s', err);
          }
        }
      }
    }
  }
} // Profiler API hooks

function injectProfilingHooks(profilingHooks) {
  injectedProfilingHooks = profilingHooks;
}

function getLaneLabelMap() {
  {
    var map = new Map();
    var lane = 1;

    for (var index = 0; index < TotalLanes; index++) {
      var label = getLabelForLane(lane);
      map.set(lane, label);
      lane *= 2;
    }

    return map;
  }
}

function markCommitStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') {
      injectedProfilingHooks.markCommitStarted(lanes);
    }
  }
}
function markCommitStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') {
      injectedProfilingHooks.markCommitStopped();
    }
  }
}
function markComponentRenderStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') {
      injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
  }
}
function markComponentRenderStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') {
      injectedProfilingHooks.markComponentRenderStopped();
    }
  }
}
function markComponentPassiveEffectMountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
  }
}
function markComponentPassiveEffectMountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
  }
}
function markComponentPassiveEffectUnmountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
  }
}
function markComponentPassiveEffectUnmountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
  }
}
function markComponentLayoutEffectMountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
  }
}
function markComponentLayoutEffectMountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
  }
}
function markComponentLayoutEffectUnmountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
  }
}
function markComponentLayoutEffectUnmountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
  }
}
function markComponentErrored(fiber, thrownValue, lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') {
      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
  }
}
function markComponentSuspended(fiber, wakeable, lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') {
      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
  }
}
function markLayoutEffectsStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') {
      injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
  }
}
function markLayoutEffectsStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') {
      injectedProfilingHooks.markLayoutEffectsStopped();
    }
  }
}
function markPassiveEffectsStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') {
      injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
  }
}
function markPassiveEffectsStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') {
      injectedProfilingHooks.markPassiveEffectsStopped();
    }
  }
}
function markRenderStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') {
      injectedProfilingHooks.markRenderStarted(lanes);
    }
  }
}
function markRenderYielded() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') {
      injectedProfilingHooks.markRenderYielded();
    }
  }
}
function markRenderStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') {
      injectedProfilingHooks.markRenderStopped();
    }
  }
}
function markRenderScheduled(lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') {
      injectedProfilingHooks.markRenderScheduled(lane);
    }
  }
}
function markForceUpdateScheduled(fiber, lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') {
      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
  }
}
function markStateUpdateScheduled(fiber, lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') {
      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
  }
}

var NoMode =
/*                         */
0; // TODO: Remove ConcurrentMode by reading from the root tag instead

var ConcurrentMode =
/*                 */
1;
var ProfileMode =
/*                    */
2;
var StrictLegacyMode =
/*               */
8;
var StrictEffectsMode =
/*              */
16;

// TODO: This is pretty well supported by browsers. Maybe we can drop it.
var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
// Based on:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

var log = Math.log;
var LN2 = Math.LN2;

function clz32Fallback(x) {
  var asUint = x >>> 0;

  if (asUint === 0) {
    return 32;
  }

  return 31 - (log(asUint) / LN2 | 0) | 0;
}

// If those values are changed that package should be rebuilt and redeployed.

var TotalLanes = 31;
var NoLanes =
/*                        */
0;
var NoLane =
/*                          */
0;
var SyncLane =
/*                        */
1;
var InputContinuousHydrationLane =
/*    */
2;
var InputContinuousLane =
/*             */
4;
var DefaultHydrationLane =
/*            */
8;
var DefaultLane =
/*                     */
16;
var TransitionHydrationLane =
/*                */
32;
var TransitionLanes =
/*                       */
4194240;
var TransitionLane1 =
/*                        */
64;
var TransitionLane2 =
/*                        */
128;
var TransitionLane3 =
/*                        */
256;
var TransitionLane4 =
/*                        */
512;
var TransitionLane5 =
/*                        */
1024;
var TransitionLane6 =
/*                        */
2048;
var TransitionLane7 =
/*                        */
4096;
var TransitionLane8 =
/*                        */
8192;
var TransitionLane9 =
/*                        */
16384;
var TransitionLane10 =
/*                       */
32768;
var TransitionLane11 =
/*                       */
65536;
var TransitionLane12 =
/*                       */
131072;
var TransitionLane13 =
/*                       */
262144;
var TransitionLane14 =
/*                       */
524288;
var TransitionLane15 =
/*                       */
1048576;
var TransitionLane16 =
/*                       */
2097152;
var RetryLanes =
/*                            */
130023424;
var RetryLane1 =
/*                             */
4194304;
var RetryLane2 =
/*                             */
8388608;
var RetryLane3 =
/*                             */
16777216;
var RetryLane4 =
/*                             */
33554432;
var RetryLane5 =
/*                             */
67108864;
var SomeRetryLane = RetryLane1;
var SelectiveHydrationLane =
/*          */
134217728;
var NonIdleLanes =
/*                          */
268435455;
var IdleHydrationLane =
/*               */
268435456;
var IdleLane =
/*                        */
536870912;
var OffscreenLane =
/*                   */
1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
// It should be kept in sync with the Lanes values above.

function getLabelForLane(lane) {
  {
    if (lane & SyncLane) {
      return 'Sync';
    }

    if (lane & InputContinuousHydrationLane) {
      return 'InputContinuousHydration';
    }

    if (lane & InputContinuousLane) {
      return 'InputContinuous';
    }

    if (lane & DefaultHydrationLane) {
      return 'DefaultHydration';
    }

    if (lane & DefaultLane) {
      return 'Default';
    }

    if (lane & TransitionHydrationLane) {
      return 'TransitionHydration';
    }

    if (lane & TransitionLanes) {
      return 'Transition';
    }

    if (lane & RetryLanes) {
      return 'Retry';
    }

    if (lane & SelectiveHydrationLane) {
      return 'SelectiveHydration';
    }

    if (lane & IdleHydrationLane) {
      return 'IdleHydration';
    }

    if (lane & IdleLane) {
      return 'Idle';
    }

    if (lane & OffscreenLane) {
      return 'Offscreen';
    }
  }
}
var NoTimestamp = -1;
var nextTransitionLane = TransitionLane1;
var nextRetryLane = RetryLane1;

function getHighestPriorityLanes(lanes) {
  switch (getHighestPriorityLane(lanes)) {
    case SyncLane:
      return SyncLane;

    case InputContinuousHydrationLane:
      return InputContinuousHydrationLane;

    case InputContinuousLane:
      return InputContinuousLane;

    case DefaultHydrationLane:
      return DefaultHydrationLane;

    case DefaultLane:
      return DefaultLane;

    case TransitionHydrationLane:
      return TransitionHydrationLane;

    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
      return lanes & TransitionLanes;

    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      return lanes & RetryLanes;

    case SelectiveHydrationLane:
      return SelectiveHydrationLane;

    case IdleHydrationLane:
      return IdleHydrationLane;

    case IdleLane:
      return IdleLane;

    case OffscreenLane:
      return OffscreenLane;

    default:
      {
        error('Should have found matching lanes. This is a bug in React.');
      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.


      return lanes;
  }
}

function getNextLanes(root, wipLanes) {
  // Early bailout if there's no pending work left.
  var pendingLanes = root.pendingLanes;

  if (pendingLanes === NoLanes) {
    return NoLanes;
  }

  var nextLanes = NoLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
  // even if the work is suspended.

  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;

  if (nonIdlePendingLanes !== NoLanes) {
    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;

    if (nonIdleUnblockedLanes !== NoLanes) {
      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
    } else {
      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;

      if (nonIdlePingedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
      }
    }
  } else {
    // The only remaining work is Idle.
    var unblockedLanes = pendingLanes & ~suspendedLanes;

    if (unblockedLanes !== NoLanes) {
      nextLanes = getHighestPriorityLanes(unblockedLanes);
    } else {
      if (pingedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(pingedLanes);
      }
    }
  }

  if (nextLanes === NoLanes) {
    // This should only be reachable if we're suspended
    // TODO: Consider warning in this path if a fallback timer is not scheduled.
    return NoLanes;
  } // If we're already in the middle of a render, switching lanes will interrupt
  // it and we'll lose our progress. We should only do this if the new lanes are
  // higher priority.


  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
  // bother waiting until the root is complete.
  (wipLanes & suspendedLanes) === NoLanes) {
    var nextLane = getHighestPriorityLane(nextLanes);
    var wipLane = getHighestPriorityLane(wipLanes);

    if ( // Tests whether the next lane is equal or lower priority than the wip
    // one. This works because the bits decrease in priority as you go left.
    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
    // only difference between default updates and transition updates is that
    // default updates do not support refresh transitions.
    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {
      // Keep working on the existing in-progress tree. Do not interrupt.
      return wipLanes;
    }
  }

  if ((nextLanes & InputContinuousLane) !== NoLanes) {
    // When updates are sync by default, we entangle continuous priority updates
    // and default updates, so they render in the same batch. The only reason
    // they use separate lanes is because continuous updates should interrupt
    // transitions, but default updates should not.
    nextLanes |= pendingLanes & DefaultLane;
  } // Check for entangled lanes and add them to the batch.
  //
  // A lane is said to be entangled with another when it's not allowed to render
  // in a batch that does not also include the other lane. Typically we do this
  // when multiple updates have the same source, and we only want to respond to
  // the most recent event from that source.
  //
  // Note that we apply entanglements *after* checking for partial work above.
  // This means that if a lane is entangled during an interleaved event while
  // it's already rendering, we won't interrupt it. This is intentional, since
  // entanglement is usually "best effort": we'll try our best to render the
  // lanes in the same batch, but it's not worth throwing out partially
  // completed work in order to do it.
  // TODO: Reconsider this. The counter-argument is that the partial work
  // represents an intermediate state, which we don't want to show to the user.
  // And by spending extra time finishing it, we're increasing the amount of
  // time it takes to show the final state, which is what they are actually
  // waiting for.
  //
  // For those exceptions where entanglement is semantically important, like
  // useMutableSource, we should ensure that there is no partial work at the
  // time we apply the entanglement.


  var entangledLanes = root.entangledLanes;

  if (entangledLanes !== NoLanes) {
    var entanglements = root.entanglements;
    var lanes = nextLanes & entangledLanes;

    while (lanes > 0) {
      var index = pickArbitraryLaneIndex(lanes);
      var lane = 1 << index;
      nextLanes |= entanglements[index];
      lanes &= ~lane;
    }
  }

  return nextLanes;
}
function getMostRecentEventTime(root, lanes) {
  var eventTimes = root.eventTimes;
  var mostRecentEventTime = NoTimestamp;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var eventTime = eventTimes[index];

    if (eventTime > mostRecentEventTime) {
      mostRecentEventTime = eventTime;
    }

    lanes &= ~lane;
  }

  return mostRecentEventTime;
}

function computeExpirationTime(lane, currentTime) {
  switch (lane) {
    case SyncLane:
    case InputContinuousHydrationLane:
    case InputContinuousLane:
      // User interactions should expire slightly more quickly.
      //
      // NOTE: This is set to the corresponding constant as in Scheduler.js.
      // When we made it larger, a product metric in www regressed, suggesting
      // there's a user interaction that's being starved by a series of
      // synchronous updates. If that theory is correct, the proper solution is
      // to fix the starvation. However, this scenario supports the idea that
      // expiration times are an important safeguard when starvation
      // does happen.
      return currentTime + 250;

    case DefaultHydrationLane:
    case DefaultLane:
    case TransitionHydrationLane:
    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
      return currentTime + 5000;

    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      // TODO: Retries should be allowed to expire if they are CPU bound for
      // too long, but when I made this change it caused a spike in browser
      // crashes. There must be some other underlying bug; not super urgent but
      // ideally should figure out why and fix it. Unfortunately we don't have
      // a repro for the crashes, only detected via production metrics.
      return NoTimestamp;

    case SelectiveHydrationLane:
    case IdleHydrationLane:
    case IdleLane:
    case OffscreenLane:
      // Anything idle priority or lower should never expire.
      return NoTimestamp;

    default:
      {
        error('Should have found matching lanes. This is a bug in React.');
      }

      return NoTimestamp;
  }
}

function markStarvedLanesAsExpired(root, currentTime) {
  // TODO: This gets called every time we yield. We can optimize by storing
  // the earliest expiration time on the root. Then use that to quickly bail out
  // of this function.
  var pendingLanes = root.pendingLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes;
  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
  // expiration time. If so, we'll assume the update is being starved and mark
  // it as expired to force it to finish.

  var lanes = pendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var expirationTime = expirationTimes[index];

    if (expirationTime === NoTimestamp) {
      // Found a pending lane with no expiration time. If it's not suspended, or
      // if it's pinged, assume it's CPU-bound. Compute a new expiration time
      // using the current time.
      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
        // Assumes timestamps are monotonically increasing.
        expirationTimes[index] = computeExpirationTime(lane, currentTime);
      }
    } else if (expirationTime <= currentTime) {
      // This lane expired
      root.expiredLanes |= lane;
    }

    lanes &= ~lane;
  }
} // This returns the highest priority pending lanes regardless of whether they
// are suspended.

function getHighestPriorityPendingLanes(root) {
  return getHighestPriorityLanes(root.pendingLanes);
}
function getLanesToRetrySynchronouslyOnError(root) {
  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;

  if (everythingButOffscreen !== NoLanes) {
    return everythingButOffscreen;
  }

  if (everythingButOffscreen & OffscreenLane) {
    return OffscreenLane;
  }

  return NoLanes;
}
function includesSyncLane(lanes) {
  return (lanes & SyncLane) !== NoLanes;
}
function includesNonIdleWork(lanes) {
  return (lanes & NonIdleLanes) !== NoLanes;
}
function includesOnlyRetries(lanes) {
  return (lanes & RetryLanes) === lanes;
}
function includesOnlyNonUrgentLanes(lanes) {
  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
  return (lanes & UrgentLanes) === NoLanes;
}
function includesOnlyTransitions(lanes) {
  return (lanes & TransitionLanes) === lanes;
}
function includesBlockingLane(root, lanes) {

  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
  return (lanes & SyncDefaultLanes) !== NoLanes;
}
function includesExpiredLane(root, lanes) {
  // This is a separate check from includesBlockingLane because a lane can
  // expire after a render has already started.
  return (lanes & root.expiredLanes) !== NoLanes;
}
function isTransitionLane(lane) {
  return (lane & TransitionLanes) !== NoLanes;
}
function claimNextTransitionLane() {
  // Cycle through the lanes, assigning each new transition to the next lane.
  // In most cases, this means every transition gets its own lane, until we
  // run out of lanes and cycle back to the beginning.
  var lane = nextTransitionLane;
  nextTransitionLane <<= 1;

  if ((nextTransitionLane & TransitionLanes) === NoLanes) {
    nextTransitionLane = TransitionLane1;
  }

  return lane;
}
function claimNextRetryLane() {
  var lane = nextRetryLane;
  nextRetryLane <<= 1;

  if ((nextRetryLane & RetryLanes) === NoLanes) {
    nextRetryLane = RetryLane1;
  }

  return lane;
}
function getHighestPriorityLane(lanes) {
  return lanes & -lanes;
}
function pickArbitraryLane(lanes) {
  // This wrapper function gets inlined. Only exists so to communicate that it
  // doesn't matter which bit is selected; you can pick any bit without
  // affecting the algorithms where its used. Here I'm using
  // getHighestPriorityLane because it requires the fewest operations.
  return getHighestPriorityLane(lanes);
}

function pickArbitraryLaneIndex(lanes) {
  return 31 - clz32(lanes);
}

function laneToIndex(lane) {
  return pickArbitraryLaneIndex(lane);
}

function includesSomeLane(a, b) {
  return (a & b) !== NoLanes;
}
function isSubsetOfLanes(set, subset) {
  return (set & subset) === subset;
}
function mergeLanes(a, b) {
  return a | b;
}
function removeLanes(set, subset) {
  return set & ~subset;
}
function intersectLanes(a, b) {
  return a & b;
} // Seems redundant, but it changes the type from a single lane (used for
// updates) to a group of lanes (used for flushing work).

function laneToLanes(lane) {
  return lane;
}
function higherPriorityLane(a, b) {
  // This works because the bit ranges decrease in priority as you go left.
  return a !== NoLane && a < b ? a : b;
}
function createLaneMap(initial) {
  // Intentionally pushing one by one.
  // https://v8.dev/blog/elements-kinds#avoid-creating-holes
  var laneMap = [];

  for (var i = 0; i < TotalLanes; i++) {
    laneMap.push(initial);
  }

  return laneMap;
}
function markRootUpdated(root, updateLane, eventTime) {
  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
  // could unblock them. Clear the suspended lanes so that we can try rendering
  // them again.
  //
  // TODO: We really only need to unsuspend only lanes that are in the
  // `subtreeLanes` of the updated fiber, or the update lanes of the return
  // path. This would exclude suspended updates in an unrelated sibling tree,
  // since there's no way for this update to unblock it.
  //
  // We don't do this if the incoming update is idle, because we never process
  // idle updates until after all the regular updates have finished; there's no
  // way it could unblock a transition.

  if (updateLane !== IdleLane) {
    root.suspendedLanes = NoLanes;
    root.pingedLanes = NoLanes;
  }

  var eventTimes = root.eventTimes;
  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
  // recent event, and we assume time is monotonically increasing.

  eventTimes[index] = eventTime;
}
function markRootSuspended(root, suspendedLanes) {
  root.suspendedLanes |= suspendedLanes;
  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.

  var expirationTimes = root.expirationTimes;
  var lanes = suspendedLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootPinged(root, pingedLanes, eventTime) {
  root.pingedLanes |= root.suspendedLanes & pingedLanes;
}
function markRootFinished(root, remainingLanes) {
  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
  root.pendingLanes = remainingLanes; // Let's try everything again

  root.suspendedLanes = NoLanes;
  root.pingedLanes = NoLanes;
  root.expiredLanes &= remainingLanes;
  root.mutableReadLanes &= remainingLanes;
  root.entangledLanes &= remainingLanes;
  var entanglements = root.entanglements;
  var eventTimes = root.eventTimes;
  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work

  var lanes = noLongerPendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] = NoLanes;
    eventTimes[index] = NoTimestamp;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootEntangled(root, entangledLanes) {
  // In addition to entangling each of the given lanes with each other, we also
  // have to consider _transitive_ entanglements. For each lane that is already
  // entangled with *any* of the given lanes, that lane is now transitively
  // entangled with *all* the given lanes.
  //
  // Translated: If C is entangled with A, then entangling A with B also
  // entangles C with B.
  //
  // If this is hard to grasp, it might help to intentionally break this
  // function and look at the tests that fail in ReactTransition-test.js. Try
  // commenting out one of the conditions below.
  var rootEntangledLanes = root.entangledLanes |= entangledLanes;
  var entanglements = root.entanglements;
  var lanes = rootEntangledLanes;

  while (lanes) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;

    if ( // Is this one of the newly entangled lanes?
    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
    entanglements[index] & entangledLanes) {
      entanglements[index] |= entangledLanes;
    }

    lanes &= ~lane;
  }
}
function getBumpedLaneForHydration(root, renderLanes) {
  var renderLane = getHighestPriorityLane(renderLanes);
  var lane;

  switch (renderLane) {
    case InputContinuousLane:
      lane = InputContinuousHydrationLane;
      break;

    case DefaultLane:
      lane = DefaultHydrationLane;
      break;

    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      lane = TransitionHydrationLane;
      break;

    case IdleLane:
      lane = IdleHydrationLane;
      break;

    default:
      // Everything else is already either a hydration lane, or shouldn't
      // be retried at a hydration lane.
      lane = NoLane;
      break;
  } // Check if the lane we chose is suspended. If so, that indicates that we
  // already attempted and failed to hydrate at that level. Also check if we're
  // already rendering that lane, which is rare but could happen.


  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {
    // Give up trying to hydrate and fall back to client render.
    return NoLane;
  }

  return lane;
}
function addFiberToLanesMap(root, fiber, lanes) {

  if (!isDevToolsPresent) {
    return;
  }

  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;

  while (lanes > 0) {
    var index = laneToIndex(lanes);
    var lane = 1 << index;
    var updaters = pendingUpdatersLaneMap[index];
    updaters.add(fiber);
    lanes &= ~lane;
  }
}
function movePendingFibersToMemoized(root, lanes) {

  if (!isDevToolsPresent) {
    return;
  }

  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
  var memoizedUpdaters = root.memoizedUpdaters;

  while (lanes > 0) {
    var index = laneToIndex(lanes);
    var lane = 1 << index;
    var updaters = pendingUpdatersLaneMap[index];

    if (updaters.size > 0) {
      updaters.forEach(function (fiber) {
        var alternate = fiber.alternate;

        if (alternate === null || !memoizedUpdaters.has(alternate)) {
          memoizedUpdaters.add(fiber);
        }
      });
      updaters.clear();
    }

    lanes &= ~lane;
  }
}
function getTransitionsForLanes(root, lanes) {
  {
    return null;
  }
}

var DiscreteEventPriority = SyncLane;
var ContinuousEventPriority = InputContinuousLane;
var DefaultEventPriority = DefaultLane;
var IdleEventPriority = IdleLane;
var currentUpdatePriority = NoLane;
function getCurrentUpdatePriority() {
  return currentUpdatePriority;
}
function setCurrentUpdatePriority(newPriority) {
  currentUpdatePriority = newPriority;
}
function runWithPriority(priority, fn) {
  var previousPriority = currentUpdatePriority;

  try {
    currentUpdatePriority = priority;
    return fn();
  } finally {
    currentUpdatePriority = previousPriority;
  }
}
function higherEventPriority(a, b) {
  return a !== 0 && a < b ? a : b;
}
function lowerEventPriority(a, b) {
  return a === 0 || a > b ? a : b;
}
function isHigherEventPriority(a, b) {
  return a !== 0 && a < b;
}
function lanesToEventPriority(lanes) {
  var lane = getHighestPriorityLane(lanes);

  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
    return DiscreteEventPriority;
  }

  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
    return ContinuousEventPriority;
  }

  if (includesNonIdleWork(lane)) {
    return DefaultEventPriority;
  }

  return IdleEventPriority;
}

// This is imported by the event replaying implementation in React DOM. It's
// in a separate file to break a circular dependency between the renderer and
// the reconciler.
function isRootDehydrated(root) {
  var currentState = root.current.memoizedState;
  return currentState.isDehydrated;
}

var _attemptSynchronousHydration;

function setAttemptSynchronousHydration(fn) {
  _attemptSynchronousHydration = fn;
}
function attemptSynchronousHydration(fiber) {
  _attemptSynchronousHydration(fiber);
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
}
var getCurrentUpdatePriority$1;
function setGetCurrentUpdatePriority(fn) {
  getCurrentUpdatePriority$1 = fn;
}
var attemptHydrationAtPriority;
function setAttemptHydrationAtPriority(fn) {
  attemptHydrationAtPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
// has this definition built-in.

var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
var discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase
'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];
function isDiscreteEventThatRequiresHydration(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  return {
    blockedOn: blockedOn,
    domEventName: domEventName,
    eventSystemFlags: eventSystemFlags,
    nativeEvent: nativeEvent,
    targetContainers: [targetContainer]
  };
}

function clearIfContinuousEvent(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'focusin':
    case 'focusout':
      queuedFocus = null;
      break;

    case 'dragenter':
    case 'dragleave':
      queuedDrag = null;
      break;

    case 'mouseover':
    case 'mouseout':
      queuedMouse = null;
      break;

    case 'pointerover':
    case 'pointerout':
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case 'gotpointercapture':
    case 'lostpointercapture':
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags, and the targetContainers, and
  // store a single event to be replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  var targetContainers = existingQueuedEvent.targetContainers;

  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
    targetContainers.push(targetContainer);
  }

  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (domEventName) {
    case 'focusin':
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
        return true;
      }

    case 'dragenter':
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
        return true;
      }

    case 'mouseover':
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
        return true;
      }

    case 'pointerover':
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
        return true;
      }

    case 'gotpointercapture':
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          attemptHydrationAtPriority(queuedTarget.priority, function () {
            attemptHydrationAtCurrentPriority(nearestMounted);
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (isRootDehydrated(root)) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function queueExplicitHydrationTarget(target) {
  // TODO: This will read the priority if it's dispatched by the React
  // event system but not native events. Should read window.event.type, like
  // we do for updates (getCurrentEventPriority).
  var updatePriority = getCurrentUpdatePriority$1();
  var queuedTarget = {
    blockedOn: null,
    target: target,
    priority: updatePriority
  };
  var i = 0;

  for (; i < queuedExplicitHydrationTargets.length; i++) {
    // Stop once we hit the first target with lower priority than
    if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {
      break;
    }
  }

  queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);

  if (i === 0) {
    attemptExplicitHydrationTarget(queuedTarget);
  }
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var targetContainers = queuedEvent.targetContainers;

  while (targetContainers.length > 0) {
    var targetContainer = targetContainers[0];
    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);

    if (nextBlockedOn === null) {
      {
        var nativeEvent = queuedEvent.nativeEvent;
        var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
        setReplayingEvent(nativeEventClone);
        nativeEvent.target.dispatchEvent(nativeEventClone);
        resetReplayingEvent();
      }
    } else {
      // We're still blocked. Try again later.
      var _fiber3 = getInstanceFromNode(nextBlockedOn);

      if (_fiber3 !== null) {
        attemptContinuousHydration(_fiber3);
      }

      queuedEvent.blockedOn = nextBlockedOn;
      return false;
    } // This target container was successfully dispatched. Try the next.


    targetContainers.shift();
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false;


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?

var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
// We'd like to remove this but it's not clear if this is safe.

function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
  var eventPriority = getEventPriority(domEventName);
  var listenerWrapper;

  switch (eventPriority) {
    case DiscreteEventPriority:
      listenerWrapper = dispatchDiscreteEvent;
      break;

    case ContinuousEventPriority:
      listenerWrapper = dispatchContinuousEvent;
      break;

    case DefaultEventPriority:
    default:
      listenerWrapper = dispatchEvent;
      break;
  }

  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
}

function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = null;

  try {
    setCurrentUpdatePriority(DiscreteEventPriority);
    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig.transition = prevTransition;
  }
}

function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = null;

  try {
    setCurrentUpdatePriority(ContinuousEventPriority);
    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig.transition = prevTransition;
  }
}

function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (!_enabled) {
    return;
  }

  {
    dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
  }
}

function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

  if (blockedOn === null) {
    dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
    clearIfContinuousEvent(domEventName, nativeEvent);
    return;
  }

  if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
    nativeEvent.stopPropagation();
    return;
  } // We need to clear only if we didn't queue because
  // queueing is accumulative.


  clearIfContinuousEvent(domEventName, nativeEvent);

  if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
    while (blockedOn !== null) {
      var fiber = getInstanceFromNode(blockedOn);

      if (fiber !== null) {
        attemptSynchronousHydration(fiber);
      }

      var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

      if (nextBlockedOn === null) {
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
      }

      if (nextBlockedOn === blockedOn) {
        break;
      }

      blockedOn = nextBlockedOn;
    }

    if (blockedOn !== null) {
      nativeEvent.stopPropagation();
    }

    return;
  } // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.


  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
}

var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
// The return_targetInst field above is conceptually part of the return value.

function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // TODO: Warn if _enabled is false.
  return_targetInst = null;
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (isRootDehydrated(root)) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  return_targetInst = targetInst; // We're not blocked on anything.

  return null;
}
function getEventPriority(domEventName) {
  switch (domEventName) {
    // Used by SimpleEventPlugin:
    case 'cancel':
    case 'click':
    case 'close':
    case 'contextmenu':
    case 'copy':
    case 'cut':
    case 'auxclick':
    case 'dblclick':
    case 'dragend':
    case 'dragstart':
    case 'drop':
    case 'focusin':
    case 'focusout':
    case 'input':
    case 'invalid':
    case 'keydown':
    case 'keypress':
    case 'keyup':
    case 'mousedown':
    case 'mouseup':
    case 'paste':
    case 'pause':
    case 'play':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointerup':
    case 'ratechange':
    case 'reset':
    case 'resize':
    case 'seeked':
    case 'submit':
    case 'touchcancel':
    case 'touchend':
    case 'touchstart':
    case 'volumechange': // Used by polyfills:
    // eslint-disable-next-line no-fallthrough

    case 'change':
    case 'selectionchange':
    case 'textInput':
    case 'compositionstart':
    case 'compositionend':
    case 'compositionupdate': // Only enableCreateEventHandleAPI:
    // eslint-disable-next-line no-fallthrough

    case 'beforeblur':
    case 'afterblur': // Not used by React but could be by user code:
    // eslint-disable-next-line no-fallthrough

    case 'beforeinput':
    case 'blur':
    case 'fullscreenchange':
    case 'focus':
    case 'hashchange':
    case 'popstate':
    case 'select':
    case 'selectstart':
      return DiscreteEventPriority;

    case 'drag':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'mousemove':
    case 'mouseout':
    case 'mouseover':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'scroll':
    case 'toggle':
    case 'touchmove':
    case 'wheel': // Not used by React but could be by user code:
    // eslint-disable-next-line no-fallthrough

    case 'mouseenter':
    case 'mouseleave':
    case 'pointerenter':
    case 'pointerleave':
      return ContinuousEventPriority;

    case 'message':
      {
        // We might be in the Scheduler callback.
        // Eventually this mechanism will be replaced by a check
        // of the current priority on the native scheduler.
        var schedulerPriority = getCurrentPriorityLevel();

        switch (schedulerPriority) {
          case ImmediatePriority:
            return DiscreteEventPriority;

          case UserBlockingPriority:
            return ContinuousEventPriority;

          case NormalPriority:
          case LowPriority:
            // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
            return DefaultEventPriority;

          case IdlePriority:
            return IdleEventPriority;

          default:
            return DefaultEventPriority;
        }
      }

    default:
      return DefaultEventPriority;
  }
}

function addEventBubbleListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, false);
  return listener;
}
function addEventCaptureListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, true);
  return listener;
}
function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
  return listener;
}
function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    passive: passive
  });
  return listener;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
} // This is intentionally a factory so that we have different returned constructors.
// If we had a single constructor, it would be megamorphic and engines would deopt.


function createSyntheticEvent(Interface) {
  /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */
  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
    this._reactName = reactName;
    this._targetInst = targetInst;
    this.type = reactEventType;
    this.nativeEvent = nativeEvent;
    this.target = nativeEventTarget;
    this.currentTarget = null;

    for (var _propName in Interface) {
      if (!Interface.hasOwnProperty(_propName)) {
        continue;
      }

      var normalize = Interface[_propName];

      if (normalize) {
        this[_propName] = normalize(nativeEvent);
      } else {
        this[_propName] = nativeEvent[_propName];
      }
    }

    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

    if (defaultPrevented) {
      this.isDefaultPrevented = functionThatReturnsTrue;
    } else {
      this.isDefaultPrevented = functionThatReturnsFalse;
    }

    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  assign(SyntheticBaseEvent.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.preventDefault) {
        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.returnValue !== 'unknown') {
        event.returnValue = false;
      }

      this.isDefaultPrevented = functionThatReturnsTrue;
    },
    stopPropagation: function () {
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.stopPropagation) {
        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.cancelBubble !== 'unknown') {
        // The ChangeEventPlugin registers a "propertychange" event for
        // IE. This event does not support bubbling or cancelling, and
        // any references to cancelBubble throw "Member not found".  A
        // typeof check of "unknown" circumvents this issue (and is also
        // IE specific).
        event.cancelBubble = true;
      }

      this.isPropagationStopped = functionThatReturnsTrue;
    },

    /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */
    persist: function () {// Modern event system doesn't use pooling.
    },

    /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */
    isPersistent: functionThatReturnsTrue
  });
  return SyntheticBaseEvent;
}
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var EventInterface = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
};
var SyntheticEvent = createSyntheticEvent(EventInterface);

var UIEventInterface = assign({}, EventInterface, {
  view: 0,
  detail: 0
});

var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
var lastMovementX;
var lastMovementY;
var lastMouseEvent;

function updateMouseMovementPolyfillState(event) {
  if (event !== lastMouseEvent) {
    if (lastMouseEvent && event.type === 'mousemove') {
      lastMovementX = event.screenX - lastMouseEvent.screenX;
      lastMovementY = event.screenY - lastMouseEvent.screenY;
    } else {
      lastMovementX = 0;
      lastMovementY = 0;
    }

    lastMouseEvent = event;
  }
}
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var MouseEventInterface = assign({}, UIEventInterface, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: getEventModifierState,
  button: 0,
  buttons: 0,
  relatedTarget: function (event) {
    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
    return event.relatedTarget;
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    updateMouseMovementPolyfillState(event);
    return lastMovementX;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    } // Don't need to call updateMouseMovementPolyfillState() here
    // because it's guaranteed to have already run when movementX
    // was copied.


    return lastMovementY;
  }
});

var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var DragEventInterface = assign({}, MouseEventInterface, {
  dataTransfer: 0
});

var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var FocusEventInterface = assign({}, UIEventInterface, {
  relatedTarget: 0
});

var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var AnimationEventInterface = assign({}, EventInterface, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var ClipboardEventInterface = assign({}, EventInterface, {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var CompositionEventInterface = assign({}, EventInterface, {
  data: 0
});

var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
// Happens to share the same list for now.

var SyntheticInputEvent = SyntheticCompositionEvent;
/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */


var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}
/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var KeyboardEventInterface = assign({}, UIEventInterface, {
  key: getEventKey,
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var PointerEventInterface = assign({}, MouseEventInterface, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
});

var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var TouchEventInterface = assign({}, UIEventInterface, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: getEventModifierState
});

var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var TransitionEventInterface = assign({}, EventInterface, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var WheelEventInterface = assign({}, MouseEventInterface, {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: 0,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: 0
});

var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

function registerEvents() {
  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
} // Track whether we've ever handled a keypress on the space key.


var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 */


function getCompositionEventType(domEventName) {
  switch (domEventName) {
    case 'compositionstart':
      return 'onCompositionStart';

    case 'compositionend':
      return 'onCompositionEnd';

    case 'compositionupdate':
      return 'onCompositionUpdate';
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */


function isFallbackCompositionStart(domEventName, nativeEvent) {
  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 */


function isFallbackCompositionEnd(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'keyup':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case 'keydown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case 'keypress':
    case 'mousedown':
    case 'focusout':
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(domEventName);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(domEventName, nativeEvent)) {
      eventType = 'onCompositionStart';
    }
  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
    eventType = 'onCompositionEnd';
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === 'onCompositionStart') {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === 'onCompositionEnd') {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, eventType);

  if (listeners.length > 0) {
    var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });

    if (fallbackData) {
      // Inject data generated from fallback path into the synthetic event.
      // This matches the property of native CompositionEventInterface.
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);

      if (customData !== null) {
        event.data = customData;
      }
    }
  }
}

function getNativeBeforeInputChars(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'compositionend':
      return getDataFromCustomEvent(nativeEvent);

    case 'keypress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'textInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */


function getFallbackBeforeInputChars(domEventName, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (domEventName) {
    case 'paste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case 'keypress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case 'compositionend':
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(domEventName, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');

  if (listeners.length > 0) {
    var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
    event.data = chars;
  }
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = (eventName in document);

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function registerEvents$1() {
  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);
}

function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  var listeners = accumulateTwoPhaseListeners(inst, 'onChange');

  if (listeners.length > 0) {
    var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var dispatchQueue = [];
  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, dispatchQueue);
}

function runEventInBatch(dispatchQueue) {
  processDispatchQueue(dispatchQueue, 0);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(domEventName, targetInst) {
  if (domEventName === 'change') {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
  if (domEventName === 'focusin') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (domEventName === 'focusout') {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(domEventName, targetInst) {
  if (domEventName === 'click') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
  if (domEventName === 'input' || domEventName === 'change') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
  var getTargetInstFunc, handleEventFunc;

  if (shouldUseChangeEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForChangeEvent;
  } else if (isTextInputElement(targetNode)) {
    if (isInputEventSupported) {
      getTargetInstFunc = getTargetInstForInputOrChangeEvent;
    } else {
      getTargetInstFunc = getTargetInstForInputEventPolyfill;
      handleEventFunc = handleEventsForInputEventPolyfill;
    }
  } else if (shouldUseClickEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForClickEvent;
  }

  if (getTargetInstFunc) {
    var inst = getTargetInstFunc(domEventName, targetInst);

    if (inst) {
      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
      return;
    }
  }

  if (handleEventFunc) {
    handleEventFunc(domEventName, targetNode, targetInst);
  } // When blurring, set the value attribute for number inputs


  if (domEventName === 'focusout') {
    handleControlledInputBlur(targetNode);
  }
}

function registerEvents$2() {
  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);
  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);
  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);
  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);
}
/**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */


function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
  var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';

  if (isOverEvent && !isReplayingEvent(nativeEvent)) {
    // If this is an over event with a target, we might have already dispatched
    // the event in the out event of the other target. If this is replayed,
    // then it's because we couldn't dispatch against this target previously
    // so we have to do it now instead.
    var related = nativeEvent.relatedTarget || nativeEvent.fromElement;

    if (related) {
      // If the related node is managed by React, we can assume that we have
      // already dispatched the corresponding events during its mouseout.
      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
        return;
      }
    }
  }

  if (!isOutEvent && !isOverEvent) {
    // Must not be a mouse or pointer in or out - ignoring.
    return;
  }

  var win; // TODO: why is this nullable in the types but we read from it?

  if (nativeEventTarget.window === nativeEventTarget) {
    // `nativeEventTarget` is probably a window object.
    win = nativeEventTarget;
  } else {
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    var doc = nativeEventTarget.ownerDocument;

    if (doc) {
      win = doc.defaultView || doc.parentWindow;
    } else {
      win = window;
    }
  }

  var from;
  var to;

  if (isOutEvent) {
    var _related = nativeEvent.relatedTarget || nativeEvent.toElement;

    from = targetInst;
    to = _related ? getClosestInstanceFromNode(_related) : null;

    if (to !== null) {
      var nearestMounted = getNearestMountedFiber(to);

      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
        to = null;
      }
    }
  } else {
    // Moving to a node from outside the window.
    from = null;
    to = targetInst;
  }

  if (from === to) {
    // Nothing pertains to our managed components.
    return;
  }

  var SyntheticEventCtor = SyntheticMouseEvent;
  var leaveEventType = 'onMouseLeave';
  var enterEventType = 'onMouseEnter';
  var eventTypePrefix = 'mouse';

  if (domEventName === 'pointerout' || domEventName === 'pointerover') {
    SyntheticEventCtor = SyntheticPointerEvent;
    leaveEventType = 'onPointerLeave';
    enterEventType = 'onPointerEnter';
    eventTypePrefix = 'pointer';
  }

  var fromNode = from == null ? win : getNodeFromInstance(from);
  var toNode = to == null ? win : getNodeFromInstance(to);
  var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
  leave.target = fromNode;
  leave.relatedTarget = toNode;
  var enter = null; // We should only process this nativeEvent if we are processing
  // the first ancestor. Next time, we will ignore the event.

  var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (nativeTargetInst === targetInst) {
    var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
    enterEvent.target = toNode;
    enterEvent.relatedTarget = fromNode;
    enter = enterEvent;
  }

  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
}

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var objectIs = typeof Object.is === 'function' ? Object.is : is;

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (objectIs(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    var currentKey = keysA[i];

    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
      return false;
    }
  }

  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start;
  var end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

function registerEvents$3() {
  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);
}

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');

    if (listeners.length > 0) {
      var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
      dispatchQueue.push({
        event: event,
        listeners: listeners
      });
      event.target = activeElement$1;
    }
  }
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;

  switch (domEventName) {
    // Track the input node that has focus.
    case 'focusin':
      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
        activeElement$1 = targetNode;
        activeElementInst$1 = targetInst;
        lastSelection = null;
      }

      break;

    case 'focusout':
      activeElement$1 = null;
      activeElementInst$1 = null;
      lastSelection = null;
      break;
    // Don't fire the event while the user is dragging. This matches the
    // semantics of the native select event.

    case 'mousedown':
      mouseDown = true;
      break;

    case 'contextmenu':
    case 'mouseup':
    case 'dragend':
      mouseDown = false;
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      break;
    // Chrome and IE fire non-standard event when selection is changed (and
    // sometimes when it hasn't). IE's event fires out of order with respect
    // to key and input events on deletion, so we discard it.
    //
    // Firefox doesn't support selectionchange, so check selection status
    // after each key entry. The selection changes after keydown and before
    // keyup, but we check on keydown as well in the case of holding down a
    // key, when multiple keydown events are fired but only one keyup is.
    // This is also our approach for IE handling, for the reason above.

    case 'selectionchange':
      if (skipSelectionChangeEvent) {
        break;
      }

    // falls through

    case 'keydown':
    case 'keyup':
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
  }
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

var ANIMATION_END = getVendorPrefixedEventName('animationend');
var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
var ANIMATION_START = getVendorPrefixedEventName('animationstart');
var TRANSITION_END = getVendorPrefixedEventName('transitionend');

var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
//
// E.g. it needs "pointerDown", not "pointerdown".
// This is because we derive both React name ("onPointerDown")
// and DOM name ("pointerdown") from the same list.
//
// Exceptions that don't match this convention are listed separately.
//
// prettier-ignore

var simpleEventPluginEvents = ['abort', 'auxClick', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'gotPointerCapture', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'lostPointerCapture', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'pointerCancel', 'pointerDown', 'pointerMove', 'pointerOut', 'pointerOver', 'pointerUp', 'progress', 'rateChange', 'reset', 'resize', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchStart', 'volumeChange', 'scroll', 'toggle', 'touchMove', 'waiting', 'wheel'];

function registerSimpleEvent(domEventName, reactName) {
  topLevelEventsToReactNames.set(domEventName, reactName);
  registerTwoPhaseEvent(reactName, [domEventName]);
}

function registerSimpleEvents() {
  for (var i = 0; i < simpleEventPluginEvents.length; i++) {
    var eventName = simpleEventPluginEvents[i];
    var domEventName = eventName.toLowerCase();
    var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
    registerSimpleEvent(domEventName, 'on' + capitalizedEvent);
  } // Special cases where event names don't match.


  registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');
  registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');
  registerSimpleEvent(ANIMATION_START, 'onAnimationStart');
  registerSimpleEvent('dblclick', 'onDoubleClick');
  registerSimpleEvent('focusin', 'onFocus');
  registerSimpleEvent('focusout', 'onBlur');
  registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');
}

function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var reactName = topLevelEventsToReactNames.get(domEventName);

  if (reactName === undefined) {
    return;
  }

  var SyntheticEventCtor = SyntheticEvent;
  var reactEventType = domEventName;

  switch (domEventName) {
    case 'keypress':
      // Firefox creates a keypress event for function keys too. This removes
      // the unwanted keypress events. Enter is however both printable and
      // non-printable. One would expect Tab to be as well (but it isn't).
      if (getEventCharCode(nativeEvent) === 0) {
        return;
      }

    /* falls through */

    case 'keydown':
    case 'keyup':
      SyntheticEventCtor = SyntheticKeyboardEvent;
      break;

    case 'focusin':
      reactEventType = 'focus';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'focusout':
      reactEventType = 'blur';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'beforeblur':
    case 'afterblur':
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'click':
      // Firefox creates a click event on right mouse clicks. This removes the
      // unwanted click events.
      if (nativeEvent.button === 2) {
        return;
      }

    /* falls through */

    case 'auxclick':
    case 'dblclick':
    case 'mousedown':
    case 'mousemove':
    case 'mouseup': // TODO: Disabled elements should not respond to mouse events

    /* falls through */

    case 'mouseout':
    case 'mouseover':
    case 'contextmenu':
      SyntheticEventCtor = SyntheticMouseEvent;
      break;

    case 'drag':
    case 'dragend':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'dragstart':
    case 'drop':
      SyntheticEventCtor = SyntheticDragEvent;
      break;

    case 'touchcancel':
    case 'touchend':
    case 'touchmove':
    case 'touchstart':
      SyntheticEventCtor = SyntheticTouchEvent;
      break;

    case ANIMATION_END:
    case ANIMATION_ITERATION:
    case ANIMATION_START:
      SyntheticEventCtor = SyntheticAnimationEvent;
      break;

    case TRANSITION_END:
      SyntheticEventCtor = SyntheticTransitionEvent;
      break;

    case 'scroll':
      SyntheticEventCtor = SyntheticUIEvent;
      break;

    case 'wheel':
      SyntheticEventCtor = SyntheticWheelEvent;
      break;

    case 'copy':
    case 'cut':
    case 'paste':
      SyntheticEventCtor = SyntheticClipboardEvent;
      break;

    case 'gotpointercapture':
    case 'lostpointercapture':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'pointerup':
      SyntheticEventCtor = SyntheticPointerEvent;
      break;
  }

  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  {
    // Some events don't bubble in the browser.
    // In the past, React has always bubbled them, but this can be surprising.
    // We're going to try aligning closer to the browser behavior by not bubbling
    // them in React either. We'll start by not bubbling onScroll, and then expand.
    var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
    // nonDelegatedEvents list in DOMPluginEventSystem.
    // Then we can remove this special list.
    // This is a breaking change that can wait until React 18.
    domEventName === 'scroll';

    var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);

    if (_listeners.length > 0) {
      // Intentionally create event lazily.
      var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);

      dispatchQueue.push({
        event: _event,
        listeners: _listeners
      });
    }
  }
}

// TODO: remove top-level side effect.
registerSimpleEvents();
registerEvents$2();
registerEvents$1();
registerEvents$3();
registerEvents();

function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  // TODO: we should remove the concept of a "SimpleEventPlugin".
  // This is the basic functionality of the event system. All
  // the other plugins are essentially polyfills. So the plugin
  // should probably be inlined somewhere and have its logic
  // be core the to event system. This would potentially allow
  // us to ship builds of React without the polyfilled plugins below.
  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
  // event's native "bubble" phase, which means that we're
  // not in the capture phase. That's because we emulate
  // the capture phase here still. This is a trade-off,
  // because in an ideal world we would not emulate and use
  // the phases properly, like we do with the SimpleEvent
  // plugin. However, the plugins below either expect
  // emulation (EnterLeave) or use state localized to that
  // plugin (BeforeInput, Change, Select). The state in
  // these modules complicates things, as you'll essentially
  // get the case where the capture phase event might change
  // state, only for the following bubble event to come in
  // later and not trigger anything as the state now
  // invalidates the heuristics of the event plugin. We
  // could alter all these plugins to work in such ways, but
  // that might cause other unknown side-effects that we
  // can't foresee right now.

  if (shouldProcessPolyfillPlugins) {
    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  }
} // List of events that need to be individually attached to media elements.


var mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'resize', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather
// set them on the actual target element itself. This is primarily
// because these events do not consistently bubble in the DOM.

var nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));

function executeDispatch(event, listener, currentTarget) {
  var type = event.type || 'unknown-event';
  event.currentTarget = currentTarget;
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
  var previousInstance;

  if (inCapturePhase) {
    for (var i = dispatchListeners.length - 1; i >= 0; i--) {
      var _dispatchListeners$i = dispatchListeners[i],
          instance = _dispatchListeners$i.instance,
          currentTarget = _dispatchListeners$i.currentTarget,
          listener = _dispatchListeners$i.listener;

      if (instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, listener, currentTarget);
      previousInstance = instance;
    }
  } else {
    for (var _i = 0; _i < dispatchListeners.length; _i++) {
      var _dispatchListeners$_i = dispatchListeners[_i],
          _instance = _dispatchListeners$_i.instance,
          _currentTarget = _dispatchListeners$_i.currentTarget,
          _listener = _dispatchListeners$_i.listener;

      if (_instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, _listener, _currentTarget);
      previousInstance = _instance;
    }
  }
}

function processDispatchQueue(dispatchQueue, eventSystemFlags) {
  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  for (var i = 0; i < dispatchQueue.length; i++) {
    var _dispatchQueue$i = dispatchQueue[i],
        event = _dispatchQueue$i.event,
        listeners = _dispatchQueue$i.listeners;
    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var nativeEventTarget = getEventTarget(nativeEvent);
  var dispatchQueue = [];
  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  processDispatchQueue(dispatchQueue, eventSystemFlags);
}

function listenToNonDelegatedEvent(domEventName, targetElement) {
  {
    if (!nonDelegatedEvents.has(domEventName)) {
      error('Did not expect a listenToNonDelegatedEvent() call for "%s". ' + 'This is a bug in React. Please file an issue.', domEventName);
    }
  }

  var isCapturePhaseListener = false;
  var listenerSet = getEventListenerSet(targetElement);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);

  if (!listenerSet.has(listenerSetKey)) {
    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}
function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
  {
    if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
      error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. ' + 'This is a bug in React. Please file an issue.', domEventName);
    }
  }

  var eventSystemFlags = 0;

  if (isCapturePhaseListener) {
    eventSystemFlags |= IS_CAPTURE_PHASE;
  }

  addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
} // This is only used by createEventHandle when the
var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
function listenToAllSupportedEvents(rootContainerElement) {
  if (!rootContainerElement[listeningMarker]) {
    rootContainerElement[listeningMarker] = true;
    allNativeEvents.forEach(function (domEventName) {
      // We handle selectionchange separately because it
      // doesn't bubble and needs to be on the document.
      if (domEventName !== 'selectionchange') {
        if (!nonDelegatedEvents.has(domEventName)) {
          listenToNativeEvent(domEventName, false, rootContainerElement);
        }

        listenToNativeEvent(domEventName, true, rootContainerElement);
      }
    });
    var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;

    if (ownerDocument !== null) {
      // The selectionchange event also needs deduplication
      // but it is attached to the document.
      if (!ownerDocument[listeningMarker]) {
        ownerDocument[listeningMarker] = true;
        listenToNativeEvent('selectionchange', false, ownerDocument);
      }
    }
  }
}

function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
  var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
  // active and not passive.

  var isPassiveListener = undefined;

  if (passiveBrowserEventsSupported) {
    // Browsers introduced an intervention, making these events
    // passive by default on document. React doesn't bind them
    // to document anymore, but changing this now would undo
    // the performance wins from the change. So we emulate
    // the existing behavior manually on the roots now.
    // https://github.com/facebook/react/issues/19651
    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {
      isPassiveListener = true;
    }
  }

  targetContainer =  targetContainer;
  var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we


  if (isCapturePhaseListener) {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
    }
  } else {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
  }
}

function isMatchingRootContainer(grandContainer, targetContainer) {
  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
}

function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var ancestorInst = targetInst;

  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
    var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we

    if (targetInst !== null) {
      // The below logic attempts to work out if we need to change
      // the target fiber to a different ancestor. We had similar logic
      // in the legacy event system, except the big difference between
      // systems is that the modern event system now has an event listener
      // attached to each React Root and React Portal Root. Together,
      // the DOM nodes representing these roots are the "rootContainer".
      // To figure out which ancestor instance we should use, we traverse
      // up the fiber tree from the target instance and attempt to find
      // root boundaries that match that of our current "rootContainer".
      // If we find that "rootContainer", we find the parent fiber
      // sub-tree for that root and make that our ancestor instance.
      var node = targetInst;

      mainLoop: while (true) {
        if (node === null) {
          return;
        }

        var nodeTag = node.tag;

        if (nodeTag === HostRoot || nodeTag === HostPortal) {
          var container = node.stateNode.containerInfo;

          if (isMatchingRootContainer(container, targetContainerNode)) {
            break;
          }

          if (nodeTag === HostPortal) {
            // The target is a portal, but it's not the rootContainer we're looking for.
            // Normally portals handle their own events all the way down to the root.
            // So we should be able to stop now. However, we don't know if this portal
            // was part of *our* root.
            var grandNode = node.return;

            while (grandNode !== null) {
              var grandTag = grandNode.tag;

              if (grandTag === HostRoot || grandTag === HostPortal) {
                var grandContainer = grandNode.stateNode.containerInfo;

                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                  // This is the rootContainer we're looking for and we found it as
                  // a parent of the Portal. That means we can ignore it because the
                  // Portal will bubble through to us.
                  return;
                }
              }

              grandNode = grandNode.return;
            }
          } // Now we need to find it's corresponding host fiber in the other
          // tree. To do this we can use getClosestInstanceFromNode, but we
          // need to validate that the fiber is a host instance, otherwise
          // we need to traverse up through the DOM till we find the correct
          // node that is from the other tree.


          while (container !== null) {
            var parentNode = getClosestInstanceFromNode(container);

            if (parentNode === null) {
              return;
            }

            var parentTag = parentNode.tag;

            if (parentTag === HostComponent || parentTag === HostText) {
              node = ancestorInst = parentNode;
              continue mainLoop;
            }

            container = container.parentNode;
          }
        }

        node = node.return;
      }
    }
  }

  batchedUpdates(function () {
    return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
  });
}

function createDispatchListener(instance, listener, currentTarget) {
  return {
    instance: instance,
    listener: listener,
    currentTarget: currentTarget
  };
}

function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
  var captureName = reactName !== null ? reactName + 'Capture' : null;
  var reactEventName = inCapturePhase ? captureName : reactName;
  var listeners = [];
  var instance = targetFiber;
  var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance2 = instance,
        stateNode = _instance2.stateNode,
        tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      lastHostComponent = stateNode; // createEventHandle listeners


      if (reactEventName !== null) {
        var listener = getListener(instance, reactEventName);

        if (listener != null) {
          listeners.push(createDispatchListener(instance, listener, lastHostComponent));
        }
      }
    } // If we are only accumulating events for the target, then we don't
    // continue to propagate through the React fiber tree to find other
    // listeners.


    if (accumulateTargetOnly) {
      break;
    } // If we are processing the onBeforeBlur event, then we need to take

    instance = instance.return;
  }

  return listeners;
} // We should only use this function for:
// - BeforeInputEventPlugin
// - ChangeEventPlugin
// - SelectEventPlugin
// This is because we only process these plugins
// in the bubble phase, so we need to accumulate two
// phase event listeners (via emulation).

function accumulateTwoPhaseListeners(targetFiber, reactName) {
  var captureName = reactName + 'Capture';
  var listeners = [];
  var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance3 = instance,
        stateNode = _instance3.stateNode,
        tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;
      var captureListener = getListener(instance, captureName);

      if (captureListener != null) {
        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
      }

      var bubbleListener = getListener(instance, reactName);

      if (bubbleListener != null) {
        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
      }
    }

    instance = instance.return;
  }

  return listeners;
}

function getParent(inst) {
  if (inst === null) {
    return null;
  }

  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var nodeA = instA;
  var nodeB = instB;
  var depthA = 0;

  for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    nodeA = getParent(nodeA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    nodeB = getParent(nodeB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
      return nodeA;
    }

    nodeA = getParent(nodeA);
    nodeB = getParent(nodeB);
  }

  return null;
}

function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
  var registrationName = event._reactName;
  var listeners = [];
  var instance = target;

  while (instance !== null) {
    if (instance === common) {
      break;
    }

    var _instance4 = instance,
        alternate = _instance4.alternate,
        stateNode = _instance4.stateNode,
        tag = _instance4.tag;

    if (alternate !== null && alternate === common) {
      break;
    }

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;

      if (inCapturePhase) {
        var captureListener = getListener(instance, registrationName);

        if (captureListener != null) {
          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
        }
      } else if (!inCapturePhase) {
        var bubbleListener = getListener(instance, registrationName);

        if (bubbleListener != null) {
          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
        }
      }
    }

    instance = instance.return;
  }

  if (listeners.length !== 0) {
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
} // We should only use this function for:
// - EnterLeaveEventPlugin
// This is because we only process this plugin
// in the bubble phase, so we need to accumulate two
// phase event listeners.


function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;

  if (from !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
  }

  if (to !== null && enterEvent !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
  }
}
function getListenerSetKey(domEventName, capture) {
  return domEventName + "__" + (capture ? 'capture' : 'bubble');
}

var didWarnInvalidHydration = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML$1 = '__html';
var warnedUnknownTags;
var validatePropertiesInDevelopment;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeHTML;

{
  warnedUnknownTags = {
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, {
      registrationNameDependencies: registrationNameDependencies,
      possibleRegistrationNames: possibleRegistrationNames
    });
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });

    error('Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      error('Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
} // HTML parsing normalizes CR and CRLF to LF.
// It also can turn \u0000 into \uFFFD inside attributes.
// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
// If we have a mismatch, it might be caused by that.
// We will still patch up in this case but not fire the warning.


var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

function normalizeMarkupForTextOrAttribute(markup) {
  {
    checkHtmlStringCoercion(markup);
  }

  var markupString = typeof markup === 'string' ? markup : '' + markup;
  return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
}

function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
  var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
  var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

  if (normalizedServerText === normalizedClientText) {
    return;
  }

  if (shouldWarnDev) {
    {
      if (!didWarnInvalidHydration) {
        didWarnInvalidHydration = true;

        error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      }
    }
  }

  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
    // In concurrent roots, we throw when there's a text mismatch and revert to
    // client rendering, up to the nearest Suspense boundary.
    throw new Error('Text content does not match server-rendered HTML.');
  }
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      if (!isCustomComponentTag && type !== type.toLowerCase()) {
        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);
      }
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;

        error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      props = rawProps;
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = rawProps;
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the allowed property list in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
      var lastHtml = lastProp ? lastProp[HTML$1] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, nextHtml);
        }
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string' || typeof nextProp === 'number') {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the allowed property list during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
    }

    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);

      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') ; else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

        if (nextHtml != null) {
          var expectedHTML = normalizeHTML(domElement, nextHtml);

          if (expectedHTML !== serverHTML) {
            warnForPropDifference(propKey, serverHTML, expectedHTML);
          }
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        var dontWarnCustomElement = enableCustomElementPropertySupport  ;

        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    if (shouldWarnDev) {
      if ( // $FlowFixMe - Should be inferred as not undefined.
      extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        // $FlowFixMe - Should be inferred as not undefined.
        warnForExtraAttributes(extraAttributeNames);
      }
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text, isConcurrentMode) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$3(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$2(domElement, props);
      return;

    case 'select':
      restoreControlledState$1(domElement, props);
      return;
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      if (childTag != null) {
        error('validateDOMNesting: when childText is passed, childTag should be null');
      }

      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
    } else {
      error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);
    }
  };
}

var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE$1 = 'style';
var eventsEnabled = null;
var selectionInformation = null;
function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  var activeInstance = null;

  setEnabled(false);
  return activeInstance;
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  setEnabled(eventsEnabled);
  eventsEnabled = null;
  selectionInformation = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);

  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;

    case 'img':
      return true;

    default:
      return false;
  }
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
function getCurrentEventPriority() {
  var currentEvent = window.event;

  if (currentEvent === undefined) {
    return DefaultEventPriority;
  }

  return getEventPriority(currentEvent.type);
}
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1;
var localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------
var scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function (callback) {
  return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
} : scheduleTimeout; // TODO: Determine the best fallback here.

function handleErrorInNextTick(error) {
  setTimeout(function () {
    throw error;
  });
} // -------------------
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      if (newProps.autoFocus) {
        domElement.focus();
      }

      return;

    case 'img':
      {
        if (newProps.src) {
          domElement.src = newProps.src;
        }

        return;
      }
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
  // with current event handlers.

  updateFiberProps(domElement, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}
function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance; // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);

    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

          retryIfBlockedOn(suspenseInstance);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
        depth++;
      }
    }

    node = nextNode;
  } while (node); // TODO: Warn, we didn't find the end comment boundary.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(suspenseInstance);
}
function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(container);
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE$1];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}
function clearContainer(container) {
  if (container.nodeType === ELEMENT_NODE) {
    container.textContent = '';
  } else if (container.nodeType === DOCUMENT_NODE) {
    if (container.documentElement) {
      container.removeChild(container.documentElement);
    }
  }
} // -------------------
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a suspense node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}
function getSuspenseInstanceFallbackErrorDetails(instance) {
  var dataset = instance.nextSibling && instance.nextSibling.dataset;
  var digest, message, stack;

  if (dataset) {
    digest = dataset.dgst;

    {
      message = dataset.msg;
      stack = dataset.stck;
    }
  }

  {
    return {
      message: message,
      digest: digest,
      stack: stack
    };
  } // let value = {message: undefined, hash: undefined};
  // const nextSibling = instance.nextSibling;
  // if (nextSibling) {
  //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
  //   value.message = dataset.msg;
  //   value.hash = dataset.hash;
  //   if (true) {
  //     value.stack = dataset.stack;
  //   }
  // }
  // return value;

}
function registerSuspenseInstanceRetry(instance, callback) {
  instance._reactRetry = callback;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }

    if (nodeType === COMMENT_NODE) {
      var nodeData = node.data;

      if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
        break;
      }

      if (nodeData === SUSPENSE_END_DATA) {
        return null;
      }
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function getFirstHydratableChildWithinContainer(parentContainer) {
  return getNextHydratable(parentContainer.firstChild);
}
function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
  return getNextHydratable(parentInstance.nextSibling);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  } // TODO: Temporary hack to check if we're in a concurrent root. We can delete
  // when the legacy root API is removed.


  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
  precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
  // when the legacy root API is removed.

  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
  return diffHydratedText(textInstance, text);
}
function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, suspenseInstance);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function shouldDeleteUnhydratedTailInstances(parentType) {
  return parentType !== 'head' && parentType !== 'body';
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
  var shouldWarnDev = true;
  checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
  if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    var shouldWarnDev = true;
    checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
  }
}
function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;

    if (parentNode !== null) {
      if (instance.nodeType === ELEMENT_NODE) {
        warnForDeletedHydratableElement(parentNode, instance);
      } else if (instance.nodeType === COMMENT_NODE) ; else {
        warnForDeletedHydratableText(parentNode, instance);
      }
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      if (instance.nodeType === ELEMENT_NODE) {
        warnForDeletedHydratableElement(parentInstance, instance);
      } else if (instance.nodeType === COMMENT_NODE) ; else {
        warnForDeletedHydratableText(parentInstance, instance);
      }
    }
  }
}
function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type);
  }
}
function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}
function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;
    if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
  }
}
function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;
    if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
  }
}
function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      warnForInsertedHydratedElement(parentInstance, type);
    }
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      warnForInsertedHydratedText(parentInstance, text);
    }
  }
}
function errorHydratingContainer(parentContainer) {
  {
    // TODO: This gets logged by onRecoverableError, too, so we should be
    // able to remove it.
    error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());
  }
}
function preparePortalMount(portalInstance) {
  listenToAllSupportedEvents(portalInstance);
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactFiber$' + randomKey;
var internalPropsKey = '__reactProps$' + randomKey;
var internalContainerInstanceKey = '__reactContainer$' + randomKey;
var internalEventHandlersKey = '__reactEvents$' + randomKey;
var internalEventHandlerListenersKey = '__reactListeners$' + randomKey;
var internalEventHandlesSetKey = '__reactHandles$' + randomKey;
function detachDeletedInstance(node) {
  // TODO: This function is only called on host components. I don't think all of
  // these fields are relevant.
  delete node[internalInstanceKey];
  delete node[internalPropsKey];
  delete node[internalEventHandlersKey];
  delete node[internalEventHandlerListenersKey];
  delete node[internalEventHandlesSetKey];
}
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  throw new Error('getNodeFromInstance: Invalid argument.');
}
function getFiberCurrentPropsFromNode(node) {
  return node[internalPropsKey] || null;
}
function updateFiberProps(node, props) {
  node[internalPropsKey] = props;
}
function getEventListenerSet(node) {
  var elementListenerSet = node[internalEventHandlersKey];

  if (elementListenerSet === undefined) {
    elementListenerSet = node[internalEventHandlersKey] = new Set();
  }

  return elementListenerSet;
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      error('Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      error('Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';
      checkPropTypes(contextTypes, context, 'context', name);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  {
    if (contextStackCursor.current !== emptyContextObject) {
      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;

          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext = instance.getChildContext();

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
      }
    }

    {
      var name = getComponentNameFromFiber(fiber) || 'Unknown';
      checkPropTypes(childContextTypes, childContext, 'child context', name);
    }

    return assign({}, parentContext, childContext);
  }
}

function pushContextProvider(workInProgress) {
  {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  {
    var instance = workInProgress.stateNode;

    if (!instance) {
      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }
}

var LegacyRoot = 0;
var ConcurrentRoot = 1;

var syncQueue = null;
var includesLegacySyncCallbacks = false;
var isFlushingSyncQueue = false;
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback];
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }
}
function scheduleLegacySyncCallback(callback) {
  includesLegacySyncCallbacks = true;
  scheduleSyncCallback(callback);
}
function flushSyncCallbacksOnlyInLegacyMode() {
  // Only flushes the queue if there's a legacy sync callback scheduled.
  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
  // it might make more sense for the queue to be a list of roots instead of a
  // list of generic callbacks. Then we can have two: one for legacy roots, one
  // for concurrent roots. And this method would only flush the legacy ones.
  if (includesLegacySyncCallbacks) {
    flushSyncCallbacks();
  }
}
function flushSyncCallbacks() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrance.
    isFlushingSyncQueue = true;
    var i = 0;
    var previousUpdatePriority = getCurrentUpdatePriority();

    try {
      var isSync = true;
      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
      // queue is in the render or commit phases.

      setCurrentUpdatePriority(DiscreteEventPriority);

      for (; i < queue.length; i++) {
        var callback = queue[i];

        do {
          callback = callback(isSync);
        } while (callback !== null);
      }

      syncQueue = null;
      includesLegacySyncCallbacks = false;
    } catch (error) {
      // If something throws, leave the remaining callbacks on the queue.
      if (syncQueue !== null) {
        syncQueue = syncQueue.slice(i + 1);
      } // Resume flushing in the next tick


      scheduleCallback(ImmediatePriority, flushSyncCallbacks);
      throw error;
    } finally {
      setCurrentUpdatePriority(previousUpdatePriority);
      isFlushingSyncQueue = false;
    }
  }

  return null;
}

// TODO: Use the unified fiber stack module instead of this local one?
// Intentionally not using it yet to derisk the initial implementation, because
// the way we push/pop these values is a bit unusual. If there's a mistake, I'd
// rather the ids be wrong than crash the whole reconciler.
var forkStack = [];
var forkStackIndex = 0;
var treeForkProvider = null;
var treeForkCount = 0;
var idStack = [];
var idStackIndex = 0;
var treeContextProvider = null;
var treeContextId = 1;
var treeContextOverflow = '';
function isForkedChild(workInProgress) {
  warnIfNotHydrating();
  return (workInProgress.flags & Forked) !== NoFlags;
}
function getForksAtLevel(workInProgress) {
  warnIfNotHydrating();
  return treeForkCount;
}
function getTreeId() {
  var overflow = treeContextOverflow;
  var idWithLeadingBit = treeContextId;
  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
  return id.toString(32) + overflow;
}
function pushTreeFork(workInProgress, totalChildren) {
  // This is called right after we reconcile an array (or iterator) of child
  // fibers, because that's the only place where we know how many children in
  // the whole set without doing extra work later, or storing addtional
  // information on the fiber.
  //
  // That's why this function is separate from pushTreeId — it's called during
  // the render phase of the fork parent, not the child, which is where we push
  // the other context values.
  //
  // In the Fizz implementation this is much simpler because the child is
  // rendered in the same callstack as the parent.
  //
  // It might be better to just add a `forks` field to the Fiber type. It would
  // make this module simpler.
  warnIfNotHydrating();
  forkStack[forkStackIndex++] = treeForkCount;
  forkStack[forkStackIndex++] = treeForkProvider;
  treeForkProvider = workInProgress;
  treeForkCount = totalChildren;
}
function pushTreeId(workInProgress, totalChildren, index) {
  warnIfNotHydrating();
  idStack[idStackIndex++] = treeContextId;
  idStack[idStackIndex++] = treeContextOverflow;
  idStack[idStackIndex++] = treeContextProvider;
  treeContextProvider = workInProgress;
  var baseIdWithLeadingBit = treeContextId;
  var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
  // of the id; we use it to account for leading 0s.

  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
  var slot = index + 1;
  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
  // consideration the leading 1 we use to mark the end of the sequence.

  if (length > 30) {
    // We overflowed the bitwise-safe range. Fall back to slower algorithm.
    // This branch assumes the length of the base id is greater than 5; it won't
    // work for smaller ids, because you need 5 bits per character.
    //
    // We encode the id in multiple steps: first the base id, then the
    // remaining digits.
    //
    // Each 5 bit sequence corresponds to a single base 32 character. So for
    // example, if the current id is 23 bits long, we can convert 20 of those
    // bits into a string of 4 characters, with 3 bits left over.
    //
    // First calculate how many bits in the base id represent a complete
    // sequence of characters.
    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.

    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.

    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.

    var restOfBaseId = baseId >> numberOfOverflowBits;
    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
    // we made more room, this time it won't overflow.

    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
    var restOfNewBits = slot << restOfBaseLength;
    var id = restOfNewBits | restOfBaseId;
    var overflow = newOverflow + baseOverflow;
    treeContextId = 1 << restOfLength | id;
    treeContextOverflow = overflow;
  } else {
    // Normal path
    var newBits = slot << baseLength;

    var _id = newBits | baseId;

    var _overflow = baseOverflow;
    treeContextId = 1 << length | _id;
    treeContextOverflow = _overflow;
  }
}
function pushMaterializedTreeId(workInProgress) {
  warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
  // in its children.

  var returnFiber = workInProgress.return;

  if (returnFiber !== null) {
    var numberOfForks = 1;
    var slotIndex = 0;
    pushTreeFork(workInProgress, numberOfForks);
    pushTreeId(workInProgress, numberOfForks, slotIndex);
  }
}

function getBitLength(number) {
  return 32 - clz32(number);
}

function getLeadingBit(id) {
  return 1 << getBitLength(id) - 1;
}

function popTreeContext(workInProgress) {
  // Restore the previous values.
  // This is a bit more complicated than other context-like modules in Fiber
  // because the same Fiber may appear on the stack multiple times and for
  // different reasons. We have to keep popping until the work-in-progress is
  // no longer at the top of the stack.
  while (workInProgress === treeForkProvider) {
    treeForkProvider = forkStack[--forkStackIndex];
    forkStack[forkStackIndex] = null;
    treeForkCount = forkStack[--forkStackIndex];
    forkStack[forkStackIndex] = null;
  }

  while (workInProgress === treeContextProvider) {
    treeContextProvider = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
    treeContextOverflow = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
    treeContextId = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
  }
}
function getSuspendedTreeContext() {
  warnIfNotHydrating();

  if (treeContextProvider !== null) {
    return {
      id: treeContextId,
      overflow: treeContextOverflow
    };
  } else {
    return null;
  }
}
function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
  warnIfNotHydrating();
  idStack[idStackIndex++] = treeContextId;
  idStack[idStackIndex++] = treeContextOverflow;
  idStack[idStackIndex++] = treeContextProvider;
  treeContextId = suspendedContext.id;
  treeContextOverflow = suspendedContext.overflow;
  treeContextProvider = workInProgress;
}

function warnIfNotHydrating() {
  {
    if (!getIsHydrating()) {
      error('Expected to be hydrating. This is a bug in React. Please file ' + 'an issue.');
    }
  }
}

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
// due to earlier mismatches or a suspended fiber.

var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary

var hydrationErrors = null;

function warnIfHydrating() {
  {
    if (isHydrating) {
      error('We should not be hydrating here. This is a bug in React. Please file a bug.');
    }
  }
}

function markDidThrowWhileHydratingDEV() {
  {
    didSuspendOrErrorDEV = true;
  }
}
function didSuspendOrErrorWhileHydratingDEV() {
  {
    return didSuspendOrErrorDEV;
  }
}

function enterHydrationState(fiber) {

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  hydrationErrors = null;
  didSuspendOrErrorDEV = false;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {

  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  hydrationErrors = null;
  didSuspendOrErrorDEV = false;

  if (treeContext !== null) {
    restoreSuspendedTreeContext(fiber, treeContext);
  }

  return true;
}

function warnUnhydratedInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
          break;
        }

      case HostComponent:
        {
          var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, // TODO: Delete this argument when we remove the legacy root API.
          isConcurrentMode);
          break;
        }

      case SuspenseComponent:
        {
          var suspenseState = returnFiber.memoizedState;
          if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
          break;
        }
    }
  }
}

function deleteHydratableInstance(returnFiber, instance) {
  warnUnhydratedInstance(returnFiber, instance);
  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  var deletions = returnFiber.deletions;

  if (deletions === null) {
    returnFiber.deletions = [childToDelete];
    returnFiber.flags |= ChildDeletion;
  } else {
    deletions.push(childToDelete);
  }
}

function warnNonhydratedInstance(returnFiber, fiber) {
  {
    if (didSuspendOrErrorDEV) {
      // Inside a boundary that already suspended. We're currently rendering the
      // siblings of a suspended node. The mismatch may be due to the missing
      // data, so it's probably a false positive.
      return;
    }

    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableInstanceWithinContainer(parentContainer, type);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              {
                var _type = fiber.type;
                var _props = fiber.pendingProps;
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, // TODO: Delete this argument when we remove the legacy root API.
                isConcurrentMode);
                break;
              }

            case HostText:
              {
                var _text = fiber.pendingProps;

                var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;

                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, // TODO: Delete this argument when we remove the legacy root API.
                _isConcurrentMode);
                break;
              }
          }

          break;
        }

      case SuspenseComponent:
        {
          var suspenseState = returnFiber.memoizedState;
          var _parentInstance = suspenseState.dehydrated;
          if (_parentInstance !== null) switch (fiber.tag) {
            case HostComponent:
              var _type2 = fiber.type;
              var _props2 = fiber.pendingProps;
              didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
              break;

            case HostText:
              var _text2 = fiber.pendingProps;
              didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
              break;
          }
          break;
        }

      default:
        return;
    }
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.flags = fiber.flags & ~Hydrating | Placement;
  warnNonhydratedInstance(returnFiber, fiber);
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type);

        if (instance !== null) {
          fiber.stateNode = instance;
          hydrationParentFiber = fiber;
          nextHydratableInstance = getFirstHydratableChild(instance);
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.

          nextHydratableInstance = null;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {
        var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

        if (suspenseInstance !== null) {
          var suspenseState = {
            dehydrated: suspenseInstance,
            treeContext: getSuspendedTreeContext(),
            retryLane: OffscreenLane
          };
          fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
          // This simplifies the code for getHostSibling and deleting nodes,
          // since it doesn't have to consider all Suspense boundaries and
          // check if they're dehydrated ones or not.

          var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
          dehydratedFragment.return = fiber;
          fiber.child = dehydratedFragment;
          hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
          // it during the first pass. Instead, we'll reenter it later.

          nextHydratableInstance = null;
          return true;
        }

        return false;
      }

    default:
      return false;
  }
}

function shouldClientRenderOnMismatch(fiber) {
  return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
}

function throwOnHydrationMismatch(fiber) {
  throw new Error('Hydration failed because the initial UI does not match what was ' + 'rendered on the server.');
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    if (shouldClientRenderOnMismatch(fiber)) {
      warnNonhydratedInstance(hydrationParentFiber, fiber);
      throwOnHydrationMismatch();
    } // Nothing to hydrate. Make it an insertion.


    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    if (shouldClientRenderOnMismatch(fiber)) {
      warnNonhydratedInstance(hydrationParentFiber, fiber);
      throwOnHydrationMismatch();
    } // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.


    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    var prevHydrationParentFiber = hydrationParentFiber;

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
  }
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {

  var instance = fiber.stateNode;
  var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  if (shouldUpdate) {
    // We assume that prepareToHydrateHostTextInstance is called in a context where the
    // hydration parent is the parent host component of this host text.
    var returnFiber = hydrationParentFiber;

    if (returnFiber !== null) {
      switch (returnFiber.tag) {
        case HostRoot:
          {
            var parentContainer = returnFiber.stateNode.containerInfo;
            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
            didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.
            isConcurrentMode);
            break;
          }

        case HostComponent:
          {
            var parentType = returnFiber.type;
            var parentProps = returnFiber.memoizedProps;
            var parentInstance = returnFiber.stateNode;

            var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;

            didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.
            _isConcurrentMode2);
            break;
          }
      }
    }
  }

  return shouldUpdate;
}

function prepareToHydrateHostSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }

  hydrateSuspenseInstance(suspenseInstance, fiber);
}

function skipPastDehydratedSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  } // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them. We also don't delete anything inside the root container.


  if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
    var nextInstance = nextHydratableInstance;

    if (nextInstance) {
      if (shouldClientRenderOnMismatch(fiber)) {
        warnIfUnhydratedTailNodes(fiber);
        throwOnHydrationMismatch();
      } else {
        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function hasUnhydratedTailNodes() {
  return isHydrating && nextHydratableInstance !== null;
}

function warnIfUnhydratedTailNodes(fiber) {
  var nextInstance = nextHydratableInstance;

  while (nextInstance) {
    warnUnhydratedInstance(fiber, nextInstance);
    nextInstance = getNextHydratableSibling(nextInstance);
  }
}

function resetHydrationState() {

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
  didSuspendOrErrorDEV = false;
}

function upgradeHydrationErrorsToRecoverable() {
  if (hydrationErrors !== null) {
    // Successfully completed a forced client render. The errors that occurred
    // during the hydration attempt are now recovered. We will log them in
    // commit phase, once the entire tree has finished.
    queueRecoverableErrors(hydrationErrors);
    hydrationErrors = null;
  }
}

function getIsHydrating() {
  return isHydrating;
}

function queueHydrationError(error) {
  if (hydrationErrors === null) {
    hydrationErrors = [error];
  } else {
    hydrationErrors.push(error);
  }
}

var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var NoTransition = null;
function requestCurrentTransition() {
  return ReactCurrentBatchConfig$1.transition;
}

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictLegacyMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedupe strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);

      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');

      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      if (fiberArray.length === 0) {
        return;
      }

      var firstFiber = fiberArray[0];
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);

      try {
        setCurrentFiber(firstFiber);

        error('Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);
      } finally {
        resetCurrentFiber();
      }
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = assign({}, baseProps);
    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastFullyObservedContext = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastFullyObservedContext = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, context, nextValue) {
  {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');
      }

      context._currentRenderer = rendererSigil;
    }
  }
}
function popProvider(context, providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);

  {
    {
      context._currentValue = currentValue;
    }
  }
}
function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
  // Update the child lanes of all the ancestors, including the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
      node.childLanes = mergeLanes(node.childLanes, renderLanes);

      if (alternate !== null) {
        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
      }
    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {
      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
    }

    if (node === propagationRoot) {
      break;
    }

    node = node.return;
  }

  {
    if (node !== propagationRoot) {
      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }
  }
}
function propagateContextChange(workInProgress, context, renderLanes) {
  {
    propagateContextChange_eager(workInProgress, context, renderLanes);
  }
}

function propagateContextChange_eager(workInProgress, context, renderLanes) {

  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var lane = pickArbitraryLane(renderLanes);
            var update = createUpdate(NoTimestamp, lane);
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.
            // Inlined `enqueueUpdate` to remove interleaved update check

            var updateQueue = fiber.updateQueue;

            if (updateQueue === null) ; else {
              var sharedQueue = updateQueue.shared;
              var pending = sharedQueue.pending;

              if (pending === null) {
                // This is the first update. Create a circular list.
                update.next = update;
              } else {
                update.next = pending.next;
                pending.next = update;
              }

              sharedQueue.pending = update;
            }
          }

          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
          var alternate = fiber.alternate;

          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
          }

          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.

          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
          // dependency list.

          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (fiber.tag === DehydratedFragment) {
      // If a dehydrated suspense boundary is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates.
      var parentSuspense = fiber.return;

      if (parentSuspense === null) {
        throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');
      }

      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
      var _alternate = parentSuspense.alternate;

      if (_alternate !== null) {
        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
      } // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childLanes on
      // this fiber to indicate that a context has changed.


      scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderLanes) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastFullyObservedContext = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    {
      var firstContext = dependencies.firstContext;

      if (firstContext !== null) {
        if (includesSomeLane(dependencies.lanes, renderLanes)) {
          // Context list has a pending update. Mark that this fiber performed work.
          markWorkInProgressReceivedUpdate();
        } // Reset the work-in-progress list


        dependencies.firstContext = null;
      }
    }
  }
}
function readContext(context) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    if (isDisallowedContextReadInDEV) {
      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
    }
  }

  var value =  context._currentValue ;

  if (lastFullyObservedContext === context) ; else {
    var contextItem = {
      context: context,
      memoizedValue: value,
      next: null
    };

    if (lastContextDependency === null) {
      if (currentlyRenderingFiber === null) {
        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        lanes: NoLanes,
        firstContext: contextItem
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return value;
}

// render. When this render exits, either because it finishes or because it is
// interrupted, the interleaved updates will be transferred onto the main part
// of the queue.

var concurrentQueues = null;
function pushConcurrentUpdateQueue(queue) {
  if (concurrentQueues === null) {
    concurrentQueues = [queue];
  } else {
    concurrentQueues.push(queue);
  }
}
function finishQueueingConcurrentUpdates() {
  // Transfer the interleaved updates onto the main queue. Each queue has a
  // `pending` field and an `interleaved` field. When they are not null, they
  // point to the last node in a circular linked list. We need to append the
  // interleaved list to the end of the pending list by joining them into a
  // single, circular list.
  if (concurrentQueues !== null) {
    for (var i = 0; i < concurrentQueues.length; i++) {
      var queue = concurrentQueues[i];
      var lastInterleavedUpdate = queue.interleaved;

      if (lastInterleavedUpdate !== null) {
        queue.interleaved = null;
        var firstInterleavedUpdate = lastInterleavedUpdate.next;
        var lastPendingUpdate = queue.pending;

        if (lastPendingUpdate !== null) {
          var firstPendingUpdate = lastPendingUpdate.next;
          lastPendingUpdate.next = firstInterleavedUpdate;
          lastInterleavedUpdate.next = firstPendingUpdate;
        }

        queue.pending = lastInterleavedUpdate;
      }
    }

    concurrentQueues = null;
  }
}
function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
  return markUpdateLaneFromFiberToRoot(fiber, lane);
}
function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
}
function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
  return markUpdateLaneFromFiberToRoot(fiber, lane);
}
function enqueueConcurrentRenderForLane(fiber, lane) {
  return markUpdateLaneFromFiberToRoot(fiber, lane);
} // Calling this function outside this module should only be done for backwards
// compatibility and should always be accompanied by a warning.

var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;

function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
  // Update the source fiber's lanes
  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
  var alternate = sourceFiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, lane);
  }

  {
    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
    }
  } // Walk the parent path to the root and update the child lanes.


  var node = sourceFiber;
  var parent = sourceFiber.return;

  while (parent !== null) {
    parent.childLanes = mergeLanes(parent.childLanes, lane);
    alternate = parent.alternate;

    if (alternate !== null) {
      alternate.childLanes = mergeLanes(alternate.childLanes, lane);
    } else {
      {
        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        }
      }
    }

    node = parent;
    parent = parent.return;
  }

  if (node.tag === HostRoot) {
    var root = node.stateNode;
    return root;
  } else {
    return null;
  }
}

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;

{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
}

function initializeUpdateQueue(fiber) {
  var queue = {
    baseState: fiber.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null,
      interleaved: null,
      lanes: NoLanes
    },
    effects: null
  };
  fiber.updateQueue = queue;
}
function cloneUpdateQueue(current, workInProgress) {
  // Clone the update queue from current. Unless it's already a clone.
  var queue = workInProgress.updateQueue;
  var currentQueue = current.updateQueue;

  if (queue === currentQueue) {
    var clone = {
      baseState: currentQueue.baseState,
      firstBaseUpdate: currentQueue.firstBaseUpdate,
      lastBaseUpdate: currentQueue.lastBaseUpdate,
      shared: currentQueue.shared,
      effects: currentQueue.effects
    };
    workInProgress.updateQueue = clone;
  }
}
function createUpdate(eventTime, lane) {
  var update = {
    eventTime: eventTime,
    lane: lane,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null
  };
  return update;
}
function enqueueUpdate(fiber, update, lane) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return null;
  }

  var sharedQueue = updateQueue.shared;

  {
    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');

      didWarnUpdateInsideUpdate = true;
    }
  }

  if (isUnsafeClassRenderPhaseUpdate()) {
    // This is an unsafe render phase update. Add directly to the update
    // queue so we can process it immediately during the current render.
    var pending = sharedQueue.pending;

    if (pending === null) {
      // This is the first update. Create a circular list.
      update.next = update;
    } else {
      update.next = pending.next;
      pending.next = update;
    }

    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
    // this fiber. This is for backwards compatibility in the case where you
    // update a different component during render phase than the one that is
    // currently renderings (a pattern that is accompanied by a warning).

    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
  } else {
    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
  }
}
function entangleTransitions(root, fiber, lane) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return;
  }

  var sharedQueue = updateQueue.shared;

  if (isTransitionLane(lane)) {
    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
    // have finished. We can remove them from the shared queue, which represents
    // a superset of the actually pending lanes. In some cases we may entangle
    // more than we need to, but that's OK. In fact it's worse if we *don't*
    // entangle when we should.

    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.

    var newQueueLanes = mergeLanes(queueLanes, lane);
    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
    // the lane finished since the last time we entangled it. So we need to
    // entangle it again, just to be sure.

    markRootEntangled(root, newQueueLanes);
  }
}
function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
  // Captured updates are updates that are thrown by a child during the render
  // phase. They should be discarded if the render is aborted. Therefore,
  // we should only put them on the work-in-progress queue, not the current one.
  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.

  var current = workInProgress.alternate;

  if (current !== null) {
    var currentQueue = current.updateQueue;

    if (queue === currentQueue) {
      // The work-in-progress queue is the same as current. This happens when
      // we bail out on a parent fiber that then captures an error thrown by
      // a child. Since we want to append the update only to the work-in
      // -progress queue, we need to clone the updates. We usually clone during
      // processUpdateQueue, but that didn't happen in this case because we
      // skipped over the parent when we bailed out.
      var newFirst = null;
      var newLast = null;
      var firstBaseUpdate = queue.firstBaseUpdate;

      if (firstBaseUpdate !== null) {
        // Loop through the updates and clone them.
        var update = firstBaseUpdate;

        do {
          var clone = {
            eventTime: update.eventTime,
            lane: update.lane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };

          if (newLast === null) {
            newFirst = newLast = clone;
          } else {
            newLast.next = clone;
            newLast = clone;
          }

          update = update.next;
        } while (update !== null); // Append the captured update the end of the cloned list.


        if (newLast === null) {
          newFirst = newLast = capturedUpdate;
        } else {
          newLast.next = capturedUpdate;
          newLast = capturedUpdate;
        }
      } else {
        // There are no base updates.
        newFirst = newLast = capturedUpdate;
      }

      queue = {
        baseState: currentQueue.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: currentQueue.shared,
        effects: currentQueue.effects
      };
      workInProgress.updateQueue = queue;
      return;
    }
  } // Append the update to the end of the list.


  var lastBaseUpdate = queue.lastBaseUpdate;

  if (lastBaseUpdate === null) {
    queue.firstBaseUpdate = capturedUpdate;
  } else {
    lastBaseUpdate.next = capturedUpdate;
  }

  queue.lastBaseUpdate = capturedUpdate;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);

              try {
                payload.call(instance, prevState, nextProps);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }

            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);

              try {
                _payload.call(instance, prevState, nextProps);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }

            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, props, instance, renderLanes) {
  // This is always non-null on a ClassComponent or HostRoot
  var queue = workInProgress.updateQueue;
  hasForceUpdate = false;

  {
    currentlyProcessingQueue = queue.shared;
  }

  var firstBaseUpdate = queue.firstBaseUpdate;
  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.

  var pendingQueue = queue.shared.pending;

  if (pendingQueue !== null) {
    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
    // and last so that it's non-circular.

    var lastPendingUpdate = pendingQueue;
    var firstPendingUpdate = lastPendingUpdate.next;
    lastPendingUpdate.next = null; // Append pending updates to base queue

    if (lastBaseUpdate === null) {
      firstBaseUpdate = firstPendingUpdate;
    } else {
      lastBaseUpdate.next = firstPendingUpdate;
    }

    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
    // we need to transfer the updates to that queue, too. Because the base
    // queue is a singly-linked list with no cycles, we can append to both
    // lists and take advantage of structural sharing.
    // TODO: Pass `current` as argument

    var current = workInProgress.alternate;

    if (current !== null) {
      // This is always non-null on a ClassComponent or HostRoot
      var currentQueue = current.updateQueue;
      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;

      if (currentLastBaseUpdate !== lastBaseUpdate) {
        if (currentLastBaseUpdate === null) {
          currentQueue.firstBaseUpdate = firstPendingUpdate;
        } else {
          currentLastBaseUpdate.next = firstPendingUpdate;
        }

        currentQueue.lastBaseUpdate = lastPendingUpdate;
      }
    }
  } // These values may change as we process the queue.


  if (firstBaseUpdate !== null) {
    // Iterate through the list of updates to compute the result.
    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
    // from the original lanes.

    var newLanes = NoLanes;
    var newBaseState = null;
    var newFirstBaseUpdate = null;
    var newLastBaseUpdate = null;
    var update = firstBaseUpdate;

    do {
      var updateLane = update.lane;
      var updateEventTime = update.eventTime;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          eventTime: updateEventTime,
          lane: updateLane,
          tag: update.tag,
          payload: update.payload,
          callback: update.callback,
          next: null
        };

        if (newLastBaseUpdate === null) {
          newFirstBaseUpdate = newLastBaseUpdate = clone;
          newBaseState = newState;
        } else {
          newLastBaseUpdate = newLastBaseUpdate.next = clone;
        } // Update the remaining priority in the queue.


        newLanes = mergeLanes(newLanes, updateLane);
      } else {
        // This update does have sufficient priority.
        if (newLastBaseUpdate !== null) {
          var _clone = {
            eventTime: updateEventTime,
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };
          newLastBaseUpdate = newLastBaseUpdate.next = _clone;
        } // Process this update.


        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
        var callback = update.callback;

        if (callback !== null && // If the update was already committed, we should not queue its
        // callback again.
        update.lane !== NoLane) {
          workInProgress.flags |= Callback;
          var effects = queue.effects;

          if (effects === null) {
            queue.effects = [update];
          } else {
            effects.push(update);
          }
        }
      }

      update = update.next;

      if (update === null) {
        pendingQueue = queue.shared.pending;

        if (pendingQueue === null) {
          break;
        } else {
          // An update was scheduled from inside a reducer. Add the new
          // pending updates to the end of the list and keep processing.
          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
          // unravel them when transferring them to the base queue.

          var _firstPendingUpdate = _lastPendingUpdate.next;
          _lastPendingUpdate.next = null;
          update = _firstPendingUpdate;
          queue.lastBaseUpdate = _lastPendingUpdate;
          queue.shared.pending = null;
        }
      }
    } while (true);

    if (newLastBaseUpdate === null) {
      newBaseState = newState;
    }

    queue.baseState = newBaseState;
    queue.firstBaseUpdate = newFirstBaseUpdate;
    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
    // process them during this render, but we do need to track which lanes
    // are remaining.

    var lastInterleaved = queue.shared.interleaved;

    if (lastInterleaved !== null) {
      var interleaved = lastInterleaved;

      do {
        newLanes = mergeLanes(newLanes, interleaved.lane);
        interleaved = interleaved.next;
      } while (interleaved !== lastInterleaved);
    } else if (firstBaseUpdate === null) {
      // `queue.lanes` is used for entangling transitions. We can set it back to
      // zero once the queue is empty.
      queue.shared.lanes = NoLanes;
    } // Set the remaining expiration time to be whatever is remaining in the queue.
    // This should be fine because the only two other things that contribute to
    // expiration time are props and context. We're already in the middle of the
    // begin phase by the time we start processing the queue, so we've already
    // dealt with the props. Context in components that specify
    // shouldComponentUpdate is tricky; but we'll have to account for
    // that regardless.


    markSkippedUpdateLanes(newLanes);
    workInProgress.lanes = newLanes;
    workInProgress.memoizedState = newState;
  }

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (typeof callback !== 'function') {
    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + ("received: " + callback));
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance) {
  // Commit the effects
  var effects = finishedQueue.effects;
  finishedQueue.effects = null;

  if (effects !== null) {
    for (var i = 0; i < effects.length; i++) {
      var effect = effects[i];
      var callback = effect.callback;

      if (callback !== null) {
        effect.callback = null;
        callCallback(callback, instance);
      }
    }
  }
}

var fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + '_' + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);

      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentNameFromType(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);

        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + "unstable_renderSubtreeIntoContainer, which isn't supported. Try " + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;
  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        // Invoke the function an extra time to help detect side-effects.
        partialState = getDerivedStateFromProps(nextProps, prevState);
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  if (workInProgress.lanes === NoLanes) {
    // Queue is always non-null for classes
    var updateQueue = workInProgress.updateQueue;
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'setState');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markStateUpdateScheduled(fiber, lane);
    }
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markStateUpdateScheduled(fiber, lane);
    }
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markForceUpdateScheduled(fiber, lane);
    }
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);

    {
      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          // Invoke the function an extra time to help detect side-effects.
          shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }

      if (shouldUpdate === undefined) {
        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');
      }
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentNameFromType(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
    }

    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
    }

    if (instance.propTypes) {
      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
    }

    if (instance.contextType) {
      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);
    }

    {
      if (instance.contextTypes) {
        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      }

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);

        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    if (typeof instance.componentShouldUpdate === 'function') {
      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
    }

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');
    }

    if (typeof instance.componentDidUnmount === 'function') {
      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
    }

    if (typeof instance.componentDidReceiveProps === 'function') {
      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
    }

    if (typeof instance.componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
    }

    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);
    }

    var hasMutatedProps = instance.props !== newProps;

    if (instance.props !== undefined && hasMutatedProps) {
      error('%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
    }

    if (instance.defaultProps) {
      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);

      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));
    }

    if (typeof instance.getDerivedStateFromProps === 'function') {
      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof instance.getDerivedStateFromError === 'function') {
      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);
    }

    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      error('%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {
      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  }

  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.

  {
    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        instance = new ctor(props, context); // eslint-disable-line no-new
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }
  }

  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentNameFromType(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);

        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentNameFromType(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);

          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  if (oldState !== instance.state) {
    {
      error('%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  if (instance.state !== oldState) {
    {
      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);

        error('%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  initializeUpdateQueue(workInProgress);
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentNameFromType(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);

        error('%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictLegacyMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  instance.state = workInProgress.memoizedState;
  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    processUpdateQueue(workInProgress, newProps, instance, renderLanes);
    instance.state = workInProgress.memoizedState;
  }

  if (typeof instance.componentDidMount === 'function') {
    var fiberFlags = Update;

    {
      fiberFlags |= LayoutStatic;
    }

    if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
      fiberFlags |= MountLayoutDev;
    }

    workInProgress.flags |= fiberFlags;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      var fiberFlags = Update;

      {
        fiberFlags |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        fiberFlags |= MountLayoutDev;
      }

      workInProgress.flags |= fiberFlags;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
    }

    if (typeof instance.componentDidMount === 'function') {
      var _fiberFlags = Update;

      {
        _fiberFlags |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        _fiberFlags |= MountLayoutDev;
      }

      workInProgress.flags |= _fiberFlags;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      var _fiberFlags2 = Update;

      {
        _fiberFlags2 |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        _fiberFlags2 |= MountLayoutDev;
      }

      workInProgress.flags |= _fiberFlags2;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  cloneUpdateQueue(current, workInProgress);
  var unresolvedOldProps = workInProgress.memoizedProps;
  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
  instance.props = oldProps;
  var unresolvedNewProps = workInProgress.pendingProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
  // both before and after `shouldComponentUpdate` has been called. Not ideal,
  // but I'm loath to refactor this function. This only happens for memoized
  // components so it's not that common.
  enableLazyContextPropagation   ;

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.flags |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.flags |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child, returnFiber) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child, returnFiber) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (typeof child._store !== 'object') {
      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    child._store.validated = true;
    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

    if (ownerHasKeyUseWarning[componentName]) {
      return;
    }

    ownerHasKeyUseWarning[componentName] = true;

    error('Each child in a list should have a unique ' + '"key" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');
  };
}

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
      // because these cannot be automatically converted to an arrow function
      // using a codemod. Therefore, we don't have to warn about string refs again.
      !(element._owner && element._self && element._owner.stateNode !== element._self)) {
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          {
            error('A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (ownerFiber.tag !== ClassComponent) {
          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + 'bug in React. Please file an issue.');
      } // Assigning this to a const so Flow knows it won't change in the closure


      var resolvedInst = inst;

      {
        checkPropStringCoercion(mixedRef, 'ref');
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }

      var ref = function (value) {
        var refs = resolvedInst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = resolvedInst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (typeof mixedRef !== 'string') {
        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');
      }

      if (!element._owner) {
        throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + ' the following reasons:\n' + '1. You may be adding a ref to a function component\n' + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + '3. You have multiple copies of React loaded\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  var childString = Object.prototype.toString.call(newChild);
  throw new Error("Objects are not valid as a React child (found: " + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
}

function warnOnFunctionType(returnFiber) {
  {
    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

    if (ownerHasFunctionTypeWarning[componentName]) {
      return;
    }

    ownerHasFunctionTypeWarning[componentName] = true;

    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
  }
}

function resolveLazy(lazyType) {
  var payload = lazyType._payload;
  var init = lazyType._init;
  return init(payload);
} // This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }

    var deletions = returnFiber.deletions;

    if (deletions === null) {
      returnFiber.deletions = [childToDelete];
      returnFiber.flags |= ChildDeletion;
    } else {
      deletions.push(childToDelete);
    }
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // During hydration, the useId algorithm needs to know which fibers are
      // part of a list of children (arrays, iterators).
      newFiber.flags |= Forked;
      return lastPlacedIndex;
    }

    var current = newFiber.alternate;

    if (current !== null) {
      var oldIndex = current.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.flags |= Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.flags |= Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.flags |= Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, lanes) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, lanes) {
    var elementType = element.type;

    if (elementType === REACT_FRAGMENT_TYPE) {
      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
    }

    if (current !== null) {
      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:
       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.
      // We need to do this after the Hot Reloading check above,
      // because hot reloading has different semantics than prod because
      // it doesn't resuspend. So we can't let the call below suspend.
      typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
        // Move based on index
        var existing = useFiber(current, element.props);
        existing.ref = coerceRef(returnFiber, current, element);
        existing.return = returnFiber;

        {
          existing._debugSource = element._source;
          existing._debugOwner = element._owner;
        }

        return existing;
      }
    } // Insert


    var created = createFiberFromElement(element, returnFiber.mode, lanes);
    created.ref = coerceRef(returnFiber, current, element);
    created.return = returnFiber;
    return created;
  }

  function updatePortal(returnFiber, current, portal, lanes) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || []);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, lanes, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, lanes) {
    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);

            _created2.return = returnFiber;
            return _created2;
          }

        case REACT_LAZY_TYPE:
          {
            var payload = newChild._payload;
            var init = newChild._init;
            return createChild(returnFiber, init(payload), lanes);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, lanes) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              return updateElement(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_LAZY_TYPE:
          {
            var payload = newChild._payload;
            var init = newChild._init;
            return updateSlot(returnFiber, oldFiber, init(payload), lanes);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updateElement(returnFiber, _matchedFiber, newChild, lanes);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
          }

        case REACT_LAZY_TYPE:
          var payload = newChild._payload;
          var init = newChild._init;
          return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys, returnFiber) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child, returnFiber);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);

          break;

        case REACT_LAZY_TYPE:
          var payload = child._payload;
          var init = child._init;
          warnOnInvalidKey(init(payload), knownKeys, returnFiber);
          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);

      if (getIsHydrating()) {
        var numberOfForks = newIdx;
        pushTreeFork(returnFiber, numberOfForks);
      }

      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      if (getIsHydrating()) {
        var _numberOfForks = newIdx;
        pushTreeFork(returnFiber, _numberOfForks);
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    if (getIsHydrating()) {
      var _numberOfForks2 = newIdx;
      pushTreeFork(returnFiber, _numberOfForks2);
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (typeof iteratorFn !== 'function') {
      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        if (!didWarnAboutGenerators) {
          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');
        }

        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        if (!didWarnAboutMaps) {
          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
        }

        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (newChildren == null) {
      throw new Error('An iterable object provided no iterator.');
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);

      if (getIsHydrating()) {
        var numberOfForks = newIdx;
        pushTreeFork(returnFiber, numberOfForks);
      }

      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, lanes);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      if (getIsHydrating()) {
        var _numberOfForks3 = newIdx;
        pushTreeFork(returnFiber, _numberOfForks3);
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    if (getIsHydrating()) {
      var _numberOfForks4 = newIdx;
      pushTreeFork(returnFiber, _numberOfForks4);
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        var elementType = element.type;

        if (elementType === REACT_FRAGMENT_TYPE) {
          if (child.tag === Fragment) {
            deleteRemainingChildren(returnFiber, child.sibling);
            var existing = useFiber(child, element.props.children);
            existing.return = returnFiber;

            {
              existing._debugSource = element._source;
              existing._debugOwner = element._owner;
            }

            return existing;
          }
        } else {
          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:
           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.
          // We need to do this after the Hot Reloading check above,
          // because hot reloading has different semantics than prod because
          // it doesn't resuspend. So we can't let the call below suspend.
          typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
            deleteRemainingChildren(returnFiber, child.sibling);

            var _existing = useFiber(child, element.props);

            _existing.ref = coerceRef(returnFiber, child, element);
            _existing.return = returnFiber;

            {
              _existing._debugSource = element._source;
              _existing._debugOwner = element._owner;
            }

            return _existing;
          }
        } // Didn't match.


        deleteRemainingChildren(returnFiber, child);
        break;
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || []);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_LAZY_TYPE:
          var payload = newChild._payload;
          var init = newChild._init; // TODO: This function is supposed to be non-recursive.

          return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
      }

      if (isArray(newChild)) {
        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
      }

      if (getIteratorFn(newChild)) {
        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current, workInProgress) {
  if (current !== null && workInProgress.child !== current.child) {
    throw new Error('Resuming work not yet implemented.');
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, lanes) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, lanes);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (c === NO_CONTEXT) {
    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // Regular boundaries always capture.

  {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.flags & DidCapture) !== NoFlags;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var NoFlags$1 =
/*   */
0; // Represents whether effect should fire.

var HasEffect =
/* */
1; // Represents the phase in which the effect (not the clean-up) fires.

var Insertion =
/*  */
2;
var Layout =
/*    */
4;
var Passive$1 =
/*   */
8;

// and should be reset before starting a new render.
// This tracks which mutable sources need to be reset after a render.

var workInProgressSources = [];
function resetWorkInProgressVersions() {
  for (var i = 0; i < workInProgressSources.length; i++) {
    var mutableSource = workInProgressSources[i];

    {
      mutableSource._workInProgressVersionPrimary = null;
    }
  }

  workInProgressSources.length = 0;
}
// This ensures that the version used for server rendering matches the one
// that is eventually read during hydration.
// If they don't match there's a potential tear and a full deopt render is required.

function registerMutableSourceForHydration(root, mutableSource) {
  var getVersion = mutableSource._getVersion;
  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
  // Retaining it forever may interfere with GC.

  if (root.mutableSourceEagerHydrationData == null) {
    root.mutableSourceEagerHydrationData = [mutableSource, version];
  } else {
    root.mutableSourceEagerHydrationData.push(mutableSource, version);
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;
var didWarnUncachedGetSnapshot;

{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
// does not get reset if we do another render pass; only when we're completely
// finished evaluating this component. This is an optimization so we know
// whether we need to clear render phase updates after a throw.

var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
// gets reset after each attempt.
// TODO: Maybe there's some way to consolidate this with
// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.

var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.

var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
// hydration). This counter is global, so client ids are not stable across
// render attempts.

var globalClientIdCounter = 0;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (objectIs(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
  renderLanes = nextRenderLanes;
  currentlyRenderingFiber$1 = workInProgress;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  }

  workInProgress.memoizedState = null;
  workInProgress.updateQueue = null;
  workInProgress.lanes = NoLanes; // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // didScheduleRenderPhaseUpdate = false;
  // localIdCounter = 0;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because memoizedState === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so memoizedState would be null during updates and mounts.

  {
    if (current !== null && current.memoizedState !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, secondArg); // Check if there was a render phase update

  if (didScheduleRenderPhaseUpdateDuringThisPass) {
    // Keep rendering in a loop for as long as render phase updates continue to
    // be scheduled. Use a counter to prevent infinite loops.
    var numberOfReRenders = 0;

    do {
      didScheduleRenderPhaseUpdateDuringThisPass = false;
      localIdCounter = 0;

      if (numberOfReRenders >= RE_RENDER_LIMIT) {
        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');
      }

      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      currentHook = null;
      workInProgressHook = null;
      workInProgress.updateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrance.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  {
    workInProgress._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
    // render. If this fires, it suggests that we incorrectly reset the static
    // flags in some other part of the codebase. This has happened before, for
    // example, in the SuspenseList implementation.

    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
    // and creates false positives. To make this work in legacy mode, we'd
    // need to mark fibers that commit in an incomplete state, somehow. For
    // now I'll disable the warning that most of the bugs that would trigger
    // it are either exclusive to concurrent mode or exist in both.
    (current.mode & ConcurrentMode) !== NoMode) {
      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');
    }
  }

  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
  // localIdCounter = 0;

  if (didRenderTooFewHooks) {
    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');
  }

  return children;
}
function checkDidRenderIdHook() {
  // This should be called immediately after every renderWithHooks call.
  // Conceptually, it's part of the return value of renderWithHooks; it's only a
  // separate function to avoid using an array tuple.
  var didRenderIdHook = localIdCounter !== 0;
  localIdCounter = 0;
  return didRenderIdHook;
}
function bailoutHooks(current, workInProgress, lanes) {
  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
  // complete phase (bubbleProperties).

  if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
    workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
  } else {
    workInProgress.flags &= ~(Passive | Update);
  }

  current.lanes = removeLanes(current.lanes, lanes);
}
function resetHooksAfterThrow() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrance.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  if (didScheduleRenderPhaseUpdate) {
    // There were render phase updates. These are only valid for this render
    // phase, which we are now aborting. Remove the updates from the queues so
    // they do not persist to the next render. Do not remove updates from hooks
    // that weren't processed.
    //
    // Only reset the updates from the queue if it has a clone. If it does
    // not have a clone, that means it wasn't processed, and the updates were
    // scheduled before we entered the render phase.
    var hook = currentlyRenderingFiber$1.memoizedState;

    while (hook !== null) {
      var queue = hook.queue;

      if (queue !== null) {
        queue.pending = null;
      }

      hook = hook.next;
    }

    didScheduleRenderPhaseUpdate = false;
  }

  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
    isUpdatingOpaqueValueInRenderPhase = false;
  }

  didScheduleRenderPhaseUpdateDuringThisPass = false;
  localIdCounter = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  var nextCurrentHook;

  if (currentHook === null) {
    var current = currentlyRenderingFiber$1.alternate;

    if (current !== null) {
      nextCurrentHook = current.memoizedState;
    } else {
      nextCurrentHook = null;
    }
  } else {
    nextCurrentHook = currentHook.next;
  }

  var nextWorkInProgressHook;

  if (workInProgressHook === null) {
    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
  } else {
    nextWorkInProgressHook = workInProgressHook.next;
  }

  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
  } else {
    // Clone from the current hook.
    if (nextCurrentHook === null) {
      throw new Error('Rendered more hooks than during the previous render.');
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      baseQueue: currentHook.baseQueue,
      queue: currentHook.queue,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null,
    stores: null
  };
}

function basicStateReducer(state, action) {
  // $FlowFixMe: Flow doesn't like mixed types
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = {
    pending: null,
    interleaved: null,
    lanes: NoLanes,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  hook.queue = queue;
  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (queue === null) {
    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
  }

  queue.lastRenderedReducer = reducer;
  var current = currentHook; // The last rebase update that is NOT part of the base state.

  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.

  var pendingQueue = queue.pending;

  if (pendingQueue !== null) {
    // We have new updates that haven't been processed yet.
    // We'll add them to the base queue.
    if (baseQueue !== null) {
      // Merge the pending queue and the base queue.
      var baseFirst = baseQueue.next;
      var pendingFirst = pendingQueue.next;
      baseQueue.next = pendingFirst;
      pendingQueue.next = baseFirst;
    }

    {
      if (current.baseQueue !== baseQueue) {
        // Internal invariant that should never happen, but feasibly could in
        // the future if we implement resuming, or some form of that.
        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');
      }
    }

    current.baseQueue = baseQueue = pendingQueue;
    queue.pending = null;
  }

  if (baseQueue !== null) {
    // We have a queue to process.
    var first = baseQueue.next;
    var newState = current.baseState;
    var newBaseState = null;
    var newBaseQueueFirst = null;
    var newBaseQueueLast = null;
    var update = first;

    do {
      var updateLane = update.lane;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          lane: updateLane,
          action: update.action,
          hasEagerState: update.hasEagerState,
          eagerState: update.eagerState,
          next: null
        };

        if (newBaseQueueLast === null) {
          newBaseQueueFirst = newBaseQueueLast = clone;
          newBaseState = newState;
        } else {
          newBaseQueueLast = newBaseQueueLast.next = clone;
        } // Update the remaining priority in the queue.
        // TODO: Don't need to accumulate this. Instead, we can remove
        // renderLanes from the original lanes.


        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
        markSkippedUpdateLanes(updateLane);
      } else {
        // This update does have sufficient priority.
        if (newBaseQueueLast !== null) {
          var _clone = {
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          };
          newBaseQueueLast = newBaseQueueLast.next = _clone;
        } // Process this update.


        if (update.hasEagerState) {
          // If this update is a state update (not a reducer) and was processed eagerly,
          // we can use the eagerly computed state
          newState = update.eagerState;
        } else {
          var action = update.action;
          newState = reducer(newState, action);
        }
      }

      update = update.next;
    } while (update !== null && update !== first);

    if (newBaseQueueLast === null) {
      newBaseState = newState;
    } else {
      newBaseQueueLast.next = newBaseQueueFirst;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState;
    hook.baseState = newBaseState;
    hook.baseQueue = newBaseQueueLast;
    queue.lastRenderedState = newState;
  } // Interleaved updates are stored on a separate queue. We aren't going to
  // process them during this render, but we do need to track which lanes
  // are remaining.


  var lastInterleaved = queue.interleaved;

  if (lastInterleaved !== null) {
    var interleaved = lastInterleaved;

    do {
      var interleavedLane = interleaved.lane;
      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
      markSkippedUpdateLanes(interleavedLane);
      interleaved = interleaved.next;
    } while (interleaved !== lastInterleaved);
  } else if (baseQueue === null) {
    // `queue.lanes` is used for entangling transitions. We can set it back to
    // zero once the queue is empty.
    queue.lanes = NoLanes;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function rerenderReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (queue === null) {
    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
  }

  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
  // work-in-progress hook.

  var dispatch = queue.dispatch;
  var lastRenderPhaseUpdate = queue.pending;
  var newState = hook.memoizedState;

  if (lastRenderPhaseUpdate !== null) {
    // The queue doesn't persist past this render pass.
    queue.pending = null;
    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
    var update = firstRenderPhaseUpdate;

    do {
      // Process this render phase update. We don't have to check the
      // priority because it will always be the same as the current
      // render's.
      var action = update.action;
      newState = reducer(newState, action);
      update = update.next;
    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
    // the base state unless the queue is empty.
    // TODO: Not sure if this is the desired semantics, but it's what we
    // do for gDSFP. I can't remember why.

    if (hook.baseQueue === null) {
      hook.baseState = newState;
    }

    queue.lastRenderedState = newState;
  }

  return [newState, dispatch];
}

function mountMutableSource(source, getSnapshot, subscribe) {
  {
    return undefined;
  }
}

function updateMutableSource(source, getSnapshot, subscribe) {
  {
    return undefined;
  }
}

function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var fiber = currentlyRenderingFiber$1;
  var hook = mountWorkInProgressHook();
  var nextSnapshot;
  var isHydrating = getIsHydrating();

  if (isHydrating) {
    if (getServerSnapshot === undefined) {
      throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');
    }

    nextSnapshot = getServerSnapshot();

    {
      if (!didWarnUncachedGetSnapshot) {
        if (nextSnapshot !== getServerSnapshot()) {
          error('The result of getServerSnapshot should be cached to avoid an infinite loop');

          didWarnUncachedGetSnapshot = true;
        }
      }
    }
  } else {
    nextSnapshot = getSnapshot();

    {
      if (!didWarnUncachedGetSnapshot) {
        var cachedSnapshot = getSnapshot();

        if (!objectIs(nextSnapshot, cachedSnapshot)) {
          error('The result of getSnapshot should be cached to avoid an infinite loop');

          didWarnUncachedGetSnapshot = true;
        }
      }
    } // Unless we're rendering a blocking lane, schedule a consistency check.
    // Right before committing, we will walk the tree and check if any of the
    // stores were mutated.
    //
    // We won't do this if we're hydrating server-rendered content, because if
    // the content is stale, it's already visible anyway. Instead we'll patch
    // it up in a passive effect.


    var root = getWorkInProgressRoot();

    if (root === null) {
      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
    }

    if (!includesBlockingLane(root, renderLanes)) {
      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
  } // Read the current snapshot from the store on every render. This breaks the
  // normal rules of React, and only works because store updates are
  // always synchronous.


  hook.memoizedState = nextSnapshot;
  var inst = {
    value: nextSnapshot,
    getSnapshot: getSnapshot
  };
  hook.queue = inst; // Schedule an effect to subscribe to the store.

  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update
  // this whenever subscribe, getSnapshot, or value changes. Because there's no
  // clean-up function, and we track the deps correctly, we can call pushEffect
  // directly, without storing any additional state. For the same reason, we
  // don't need to set a static flag, either.
  // TODO: We can move this to the passive phase once we add a pre-commit
  // consistency check. See the next comment.

  fiber.flags |= Passive;
  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
  return nextSnapshot;
}

function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var fiber = currentlyRenderingFiber$1;
  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
  // normal rules of React, and only works because store updates are
  // always synchronous.

  var nextSnapshot = getSnapshot();

  {
    if (!didWarnUncachedGetSnapshot) {
      var cachedSnapshot = getSnapshot();

      if (!objectIs(nextSnapshot, cachedSnapshot)) {
        error('The result of getSnapshot should be cached to avoid an infinite loop');

        didWarnUncachedGetSnapshot = true;
      }
    }
  }

  var prevSnapshot = hook.memoizedState;
  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);

  if (snapshotChanged) {
    hook.memoizedState = nextSnapshot;
    markWorkInProgressReceivedUpdate();
  }

  var inst = hook.queue;
  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the
  // commit phase if there was an interleaved mutation. In concurrent mode
  // this can happen all the time, but even in synchronous mode, an earlier
  // effect may have mutated the store.

  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
  // checking whether we scheduled a subscription effect above.
  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
    fiber.flags |= Passive;
    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
    // Right before committing, we will walk the tree and check if any of the
    // stores were mutated.

    var root = getWorkInProgressRoot();

    if (root === null) {
      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
    }

    if (!includesBlockingLane(root, renderLanes)) {
      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
  }

  return nextSnapshot;
}

function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
  fiber.flags |= StoreConsistency;
  var check = {
    getSnapshot: getSnapshot,
    value: renderedSnapshot
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.stores = [check];
  } else {
    var stores = componentUpdateQueue.stores;

    if (stores === null) {
      componentUpdateQueue.stores = [check];
    } else {
      stores.push(check);
    }
  }
}

function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
  // These are updated in the passive phase
  inst.value = nextSnapshot;
  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
  // have been in an event that fired before the passive effects, or it could
  // have been in a layout effect. In that case, we would have used the old
  // snapsho and getSnapshot values to bail out. We need to check one more time.

  if (checkIfSnapshotChanged(inst)) {
    // Force a re-render.
    forceStoreRerender(fiber);
  }
}

function subscribeToStore(fiber, inst, subscribe) {
  var handleStoreChange = function () {
    // The store changed. Check if the snapshot changed since the last time we
    // read from the store.
    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceStoreRerender(fiber);
    }
  }; // Subscribe to the store and return a clean-up function.


  return subscribe(handleStoreChange);
}

function checkIfSnapshotChanged(inst) {
  var latestGetSnapshot = inst.getSnapshot;
  var prevValue = inst.value;

  try {
    var nextValue = latestGetSnapshot();
    return !objectIs(prevValue, nextValue);
  } catch (error) {
    return true;
  }
}

function forceStoreRerender(fiber) {
  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

  if (root !== null) {
    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
  }
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    // $FlowFixMe: Flow doesn't like mixed types
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = {
    pending: null,
    interleaved: null,
    lanes: NoLanes,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  hook.queue = queue;
  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer);
}

function rerenderState(initialState) {
  return rerenderReducer(basicStateReducer);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();

  {
    var _ref2 = {
      current: initialValue
    };
    hook.memoizedState = _ref2;
    return _ref2;
  }
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
}

function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
        return;
      }
    }
  }

  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
  } else {
    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
  }
}

function updateEffect(create, deps) {
  return updateEffectImpl(Passive, Passive$1, create, deps);
}

function mountInsertionEffect(create, deps) {
  return mountEffectImpl(Update, Insertion, create, deps);
}

function updateInsertionEffect(create, deps) {
  return updateEffectImpl(Update, Insertion, create, deps);
}

function mountLayoutEffect(create, deps) {
  var fiberFlags = Update;

  {
    fiberFlags |= LayoutStatic;
  }

  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    fiberFlags |= MountLayoutDev;
  }

  return mountEffectImpl(fiberFlags, Layout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, Layout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      if (!refObject.hasOwnProperty('current')) {
        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
      }
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  var fiberFlags = Update;

  {
    fiberFlags |= LayoutStatic;
  }

  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    fiberFlags |= MountLayoutDev;
  }

  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value) {
  var hook = mountWorkInProgressHook();
  hook.memoizedState = value;
  return value;
}

function updateDeferredValue(value) {
  var hook = updateWorkInProgressHook();
  var resolvedCurrentHook = currentHook;
  var prevValue = resolvedCurrentHook.memoizedState;
  return updateDeferredValueImpl(hook, prevValue, value);
}

function rerenderDeferredValue(value) {
  var hook = updateWorkInProgressHook();

  if (currentHook === null) {
    // This is a rerender during a mount.
    hook.memoizedState = value;
    return value;
  } else {
    // This is a rerender during an update.
    var prevValue = currentHook.memoizedState;
    return updateDeferredValueImpl(hook, prevValue, value);
  }
}

function updateDeferredValueImpl(hook, prevValue, value) {
  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);

  if (shouldDeferValue) {
    // This is an urgent update. If the value has changed, keep using the
    // previous value and spawn a deferred render to update it later.
    if (!objectIs(value, prevValue)) {
      // Schedule a deferred render
      var deferredLane = claimNextTransitionLane();
      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
      // from the latest value. The name "baseState" doesn't really match how we
      // use it because we're reusing a state hook field instead of creating a
      // new one.

      hook.baseState = true;
    } // Reuse the previous value


    return prevValue;
  } else {
    // This is not an urgent update, so we can use the latest value regardless
    // of what it is. No need to defer it.
    // However, if we're currently inside a spawned render, then we need to mark
    // this as an update to prevent the fiber from bailing out.
    //
    // `baseState` is true when the current value is different from the rendered
    // value. The name doesn't really match how we use it because we're reusing
    // a state hook field instead of creating a new one.
    if (hook.baseState) {
      // Flip this back to false.
      hook.baseState = false;
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = value;
    return value;
  }
}

function startTransition(setPending, callback, options) {
  var previousPriority = getCurrentUpdatePriority();
  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
  setPending(true);
  var prevTransition = ReactCurrentBatchConfig$2.transition;
  ReactCurrentBatchConfig$2.transition = {};
  var currentTransition = ReactCurrentBatchConfig$2.transition;

  {
    ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
  }

  try {
    setPending(false);
    callback();
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$2.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

function mountTransition() {
  var _mountState = mountState(false),
      isPending = _mountState[0],
      setPending = _mountState[1]; // The `start` method never changes.


  var start = startTransition.bind(null, setPending);
  var hook = mountWorkInProgressHook();
  hook.memoizedState = start;
  return [isPending, start];
}

function updateTransition() {
  var _updateState = updateState(),
      isPending = _updateState[0];

  var hook = updateWorkInProgressHook();
  var start = hook.memoizedState;
  return [isPending, start];
}

function rerenderTransition() {
  var _rerenderState = rerenderState(),
      isPending = _rerenderState[0];

  var hook = updateWorkInProgressHook();
  var start = hook.memoizedState;
  return [isPending, start];
}

var isUpdatingOpaqueValueInRenderPhase = false;
function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
  {
    return isUpdatingOpaqueValueInRenderPhase;
  }
}

function mountId() {
  var hook = mountWorkInProgressHook();
  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
  // should do this in Fiber, too? Deferring this decision for now because
  // there's no other place to store the prefix except for an internal field on
  // the public createRoot object, which the fiber tree does not currently have
  // a reference to.

  var identifierPrefix = root.identifierPrefix;
  var id;

  if (getIsHydrating()) {
    var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.

    id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end
    // that represents the position of this useId hook among all the useId
    // hooks for this fiber.

    var localId = localIdCounter++;

    if (localId > 0) {
      id += 'H' + localId.toString(32);
    }

    id += ':';
  } else {
    // Use a lowercase r prefix for client-generated ids.
    var globalClientId = globalClientIdCounter++;
    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';
  }

  hook.memoizedState = id;
  return id;
}

function updateId() {
  var hook = updateWorkInProgressHook();
  var id = hook.memoizedState;
  return id;
}

function dispatchReducerAction(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    hasEagerState: false,
    eagerState: null,
    next: null
  };

  if (isRenderPhaseUpdate(fiber)) {
    enqueueRenderPhaseUpdate(queue, update);
  } else {
    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);

    if (root !== null) {
      var eventTime = requestEventTime();
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitionUpdate(root, queue, lane);
    }
  }

  markUpdateInDevTools(fiber, lane);
}

function dispatchSetState(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    hasEagerState: false,
    eagerState: null,
    next: null
  };

  if (isRenderPhaseUpdate(fiber)) {
    enqueueRenderPhaseUpdate(queue, update);
  } else {
    var alternate = fiber.alternate;

    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          update.hasEagerState = true;
          update.eagerState = eagerState;

          if (objectIs(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            // TODO: Do we still need to entangle transitions in this case?
            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);

    if (root !== null) {
      var eventTime = requestEventTime();
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitionUpdate(root, queue, lane);
    }
  }

  markUpdateInDevTools(fiber, lane);
}

function isRenderPhaseUpdate(fiber) {
  var alternate = fiber.alternate;
  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
}

function enqueueRenderPhaseUpdate(queue, update) {
  // This is a render phase update. Stash it in a lazily-created map of
  // queue -> linked list of updates. After this render pass, we'll restart
  // and apply the stashed updates on top of the work-in-progress hook.
  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
  var pending = queue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  queue.pending = update;
} // TODO: Move to ReactFiberConcurrentUpdates?


function entangleTransitionUpdate(root, queue, lane) {
  if (isTransitionLane(lane)) {
    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
    // must have finished. We can remove them from the shared queue, which
    // represents a superset of the actually pending lanes. In some cases we
    // may entangle more than we need to, but that's OK. In fact it's worse if
    // we *don't* entangle when we should.

    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.

    var newQueueLanes = mergeLanes(queueLanes, lane);
    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
    // the lane finished since the last time we entangled it. So we need to
    // entangle it again, just to be sure.

    markRootEntangled(root, newQueueLanes);
  }
}

function markUpdateInDevTools(fiber, lane, action) {

  {
    markStateUpdateScheduled(fiber, lane);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useInsertionEffect: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError,
  useMutableSource: throwInvalidHookError,
  useSyncExternalStore: throwInvalidHookError,
  useId: throwInvalidHookError,
  unstable_isNewReconciler: enableNewReconciler
};

var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var HooksDispatcherOnRerenderInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnRerenderInDEV = null;

{
  var warnInvalidContextAccess = function () {
    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      mountHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      mountHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      mountHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnRerenderInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnRerenderInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
}

var now$1 = Scheduler.unstable_now;
var commitTime = 0;
var layoutEffectStartTime = -1;
var profilerStartTime = -1;
var passiveEffectStartTime = -1;
/**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */

var currentUpdateIsNested = false;
var nestedUpdateScheduled = false;

function isCurrentUpdateNested() {
  return currentUpdateIsNested;
}

function markNestedUpdateScheduled() {
  {
    nestedUpdateScheduled = true;
  }
}

function resetNestedUpdateFlag() {
  {
    currentUpdateIsNested = false;
    nestedUpdateScheduled = false;
  }
}

function syncNestedUpdateFlag() {
  {
    currentUpdateIsNested = nestedUpdateScheduled;
    nestedUpdateScheduled = false;
  }
}

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {

  commitTime = now$1();
}

function startProfilerTimer(fiber) {

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

function recordLayoutEffectDuration(fiber) {

  if (layoutEffectStartTime >= 0) {
    var elapsedTime = now$1() - layoutEffectStartTime;
    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
    // Or the root (for the DevTools Profiler to read)

    var parentFiber = fiber.return;

    while (parentFiber !== null) {
      switch (parentFiber.tag) {
        case HostRoot:
          var root = parentFiber.stateNode;
          root.effectDuration += elapsedTime;
          return;

        case Profiler:
          var parentStateNode = parentFiber.stateNode;
          parentStateNode.effectDuration += elapsedTime;
          return;
      }

      parentFiber = parentFiber.return;
    }
  }
}

function recordPassiveEffectDuration(fiber) {

  if (passiveEffectStartTime >= 0) {
    var elapsedTime = now$1() - passiveEffectStartTime;
    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
    // Or the root (for the DevTools Profiler to read)

    var parentFiber = fiber.return;

    while (parentFiber !== null) {
      switch (parentFiber.tag) {
        case HostRoot:
          var root = parentFiber.stateNode;

          if (root !== null) {
            root.passiveEffectDuration += elapsedTime;
          }

          return;

        case Profiler:
          var parentStateNode = parentFiber.stateNode;

          if (parentStateNode !== null) {
            // Detached fibers have their state node cleared out.
            // In this case, the return pointer is also cleared out,
            // so we won't be able to report the time spent in this Profiler's subtree.
            parentStateNode.passiveEffectDuration += elapsedTime;
          }

          return;
      }

      parentFiber = parentFiber.return;
    }
  }
}

function startLayoutEffectTimer() {

  layoutEffectStartTime = now$1();
}

function startPassiveEffectTimer() {

  passiveEffectStartTime = now$1();
}

function transferActualDuration(fiber) {
  // Transfer time spent rendering these children so we don't lose it
  // after we rerender. This is used as a helper in special cases
  // where we should count the work of multiple passes.
  var child = fiber.child;

  while (child) {
    fiber.actualDuration += child.actualDuration;
    child = child.sibling;
  }
}

function createCapturedValueAtFiber(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source),
    digest: null
  };
}
function createCapturedValue(value, digest, stack) {
  return {
    value: value,
    source: null,
    stack: stack != null ? stack : null,
    digest: digest != null ? digest : null
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(boundary, errorInfo) {
  return true;
}

function logCapturedError(boundary, errorInfo) {
  try {
    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
    // This enables renderers like ReactNative to better manage redbox behavior.

    if (logError === false) {
      return;
    }

    var error = errorInfo.value;

    if (true) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;
      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
      // `preventDefault()` in window `error` handler.
      // We record this information as an expando on the error.

      if (error != null && error._suppressLogging) {
        if (boundary.tag === ClassComponent) {
          // The error is recoverable and was silenced.
          // Ignore it and don't print the stack addendum.
          // This is handy for testing error boundaries without noise.
          return;
        } // The error is fatal. Since the silencing might have
        // been accidental, we'll surface it anyway.
        // However, the browser would have silenced the original error
        // so we'll print it first, and then print the stack addendum.


        console['error'](error); // Don't transform to our wrapper
        // For a more detailed description of this block, see:
        // https://github.com/facebook/react/pull/13384
      }

      var componentName = source ? getComponentNameFromFiber(source) : null;
      var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
      var errorBoundaryMessage;

      if (boundary.tag === HostRoot) {
        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';
      } else {
        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      }

      var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
      // We don't include the original error message and JS stack because the browser
      // has already printed it. Even if the application swallows the error, it is still
      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

      console['error'](combinedMessage); // Don't transform to our wrapper
    } else {}
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logCapturedError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error$1 = errorInfo.value;

    update.payload = function () {
      return getDerivedStateFromError(error$1);
    };

    update.callback = function () {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      logCapturedError(fiber, errorInfo);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      logCapturedError(fiber, errorInfo);

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }

      var error$1 = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error$1, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          if (!includesSomeLane(fiber.lanes, SyncLane)) {
            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');
          }
        }
      }
    };
  }

  return update;
}

function attachPingListener(root, wakeable, lanes) {
  // Attach a ping listener
  //
  // The data might resolve before we have a chance to commit the fallback. Or,
  // in the case of a refresh, we'll never commit a fallback. So we need to
  // attach a listener now. When it resolves ("pings"), we can decide whether to
  // try rendering the tree again.
  //
  // Only attach a listener if one does not already exist for the lanes
  // we're currently rendering (which acts like a "thread ID" here).
  //
  // We only need to do this in concurrent mode. Legacy Suspense always
  // commits fallbacks synchronously, so there are no pings.
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(wakeable, threadIDs);
  } else {
    threadIDs = pingCache.get(wakeable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    }
  }

  if (!threadIDs.has(lanes)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(lanes);
    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);

    {
      if (isDevToolsPresent) {
        // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, lanes);
      }
    }

    wakeable.then(ping, ping);
  }
}

function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
  // Retry listener
  //
  // If the fallback does commit, we need to attach a different type of
  // listener. This one schedules an update on the Suspense boundary to turn
  // the fallback state off.
  //
  // Stash the wakeable on the boundary fiber so we can access it in the
  // commit phase.
  //
  // When the wakeable resolves, we'll attempt to render the boundary
  // again ("retry").
  var wakeables = suspenseBoundary.updateQueue;

  if (wakeables === null) {
    var updateQueue = new Set();
    updateQueue.add(wakeable);
    suspenseBoundary.updateQueue = updateQueue;
  } else {
    wakeables.add(wakeable);
  }
}

function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
  // A legacy mode Suspense quirk, only relevant to hook components.


  var tag = sourceFiber.tag;

  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
    var currentSource = sourceFiber.alternate;

    if (currentSource) {
      sourceFiber.updateQueue = currentSource.updateQueue;
      sourceFiber.memoizedState = currentSource.memoizedState;
      sourceFiber.lanes = currentSource.lanes;
    } else {
      sourceFiber.updateQueue = null;
      sourceFiber.memoizedState = null;
    }
  }
}

function getNearestSuspenseBoundaryToCapture(returnFiber) {
  var node = returnFiber;

  do {
    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
      return node;
    } // This boundary already captured during this render. Continue to the next
    // boundary.


    node = node.return;
  } while (node !== null);

  return null;
}

function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
  // This marks a Suspense boundary so that when we're unwinding the stack,
  // it captures the suspended "exception" and does a second (fallback) pass.
  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
    // Legacy Mode Suspense
    //
    // If the boundary is in legacy mode, we should *not*
    // suspend the commit. Pretend as if the suspended component rendered
    // null and keep rendering. When the Suspense boundary completes,
    // we'll do a second pass to render the fallback.
    if (suspenseBoundary === returnFiber) {
      // Special case where we suspended while reconciling the children of
      // a Suspense boundary's inner Offscreen wrapper fiber. This happens
      // when a React.lazy component is a direct child of a
      // Suspense boundary.
      //
      // Suspense boundaries are implemented as multiple fibers, but they
      // are a single conceptual unit. The legacy mode behavior where we
      // pretend the suspended fiber committed as `null` won't work,
      // because in this case the "suspended" fiber is the inner
      // Offscreen wrapper.
      //
      // Because the contents of the boundary haven't started rendering
      // yet (i.e. nothing in the tree has partially rendered) we can
      // switch to the regular, concurrent mode behavior: mark the
      // boundary with ShouldCapture and enter the unwind phase.
      suspenseBoundary.flags |= ShouldCapture;
    } else {
      suspenseBoundary.flags |= DidCapture;
      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
      // But we shouldn't call any lifecycle methods or callbacks. Remove
      // all lifecycle effect tags.

      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);

      if (sourceFiber.tag === ClassComponent) {
        var currentSourceFiber = sourceFiber.alternate;

        if (currentSourceFiber === null) {
          // This is a new mount. Change the tag so it's not mistaken for a
          // completed class component. For example, we should not call
          // componentWillUnmount if it is deleted.
          sourceFiber.tag = IncompleteClassComponent;
        } else {
          // When we try rendering again, we should not reuse the current fiber,
          // since it's known to be in an inconsistent state. Use a force update to
          // prevent a bail out.
          var update = createUpdate(NoTimestamp, SyncLane);
          update.tag = ForceUpdate;
          enqueueUpdate(sourceFiber, update, SyncLane);
        }
      } // The source fiber did not complete. Mark it with Sync priority to
      // indicate that it still has pending work.


      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
    }

    return suspenseBoundary;
  } // Confirmed that the boundary is in a concurrent mode tree. Continue
  // with the normal suspend path.
  //
  // After this we'll use a set of heuristics to determine whether this
  // render pass will run to completion or restart or "suspend" the commit.
  // The actual logic for this is spread out in different places.
  //
  // This first principle is that if we're going to suspend when we complete
  // a root, then we should also restart if we get an update or ping that
  // might unsuspend it, and vice versa. The only reason to suspend is
  // because you think you might want to restart before committing. However,
  // it doesn't make sense to restart only while in the period we're suspended.
  //
  // Restarting too aggressively is also not good because it starves out any
  // intermediate loading state. So we use heuristics to determine when.
  // Suspense Heuristics
  //
  // If nothing threw a Promise or all the same fallbacks are already showing,
  // then don't suspend/restart.
  //
  // If this is an initial render of a new tree of Suspense boundaries and
  // those trigger a fallback, then don't suspend/restart. We want to ensure
  // that we can show the initial loading state as quickly as possible.
  //
  // If we hit a "Delayed" case, such as when we'd switch from content back into
  // a fallback, then we should always suspend/restart. Transitions apply
  // to this case. If none is defined, JND is used instead.
  //
  // If we're already showing a fallback and it gets "retried", allowing us to show
  // another level, but there's still an inner boundary that would show a fallback,
  // then we suspend/restart for 500ms since the last time we showed a fallback
  // anywhere in the tree. This effectively throttles progressive loading into a
  // consistent train of commits. This also gives us an opportunity to restart to
  // get to the completed state slightly earlier.
  //
  // If there's ambiguity due to batching it's resolved in preference of:
  // 1) "delayed", 2) "initial render", 3) "retry".
  //
  // We want to ensure that a "busy" state doesn't get force committed. We want to
  // ensure that new initial loading states can commit as soon as possible.


  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
  // the begin phase to prevent an early bailout.

  suspenseBoundary.lanes = rootRenderLanes;
  return suspenseBoundary;
}

function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
  // The source fiber did not complete.
  sourceFiber.flags |= Incomplete;

  {
    if (isDevToolsPresent) {
      // If we have pending work still, restore the original updaters
      restorePendingUpdaters(root, rootRenderLanes);
    }
  }

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a wakeable. The component suspended.
    var wakeable = value;
    resetSuspendedComponent(sourceFiber);

    {
      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
        markDidThrowWhileHydratingDEV();
      }
    }


    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);

    if (suspenseBoundary !== null) {
      suspenseBoundary.flags &= ~ForceClientRender;
      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
      // commits fallbacks synchronously, so there are no pings.

      if (suspenseBoundary.mode & ConcurrentMode) {
        attachPingListener(root, wakeable, rootRenderLanes);
      }

      attachRetryListener(suspenseBoundary, root, wakeable);
      return;
    } else {
      // No boundary was found. Unless this is a sync update, this is OK.
      // We can suspend and wait for more data to arrive.
      if (!includesSyncLane(rootRenderLanes)) {
        // This is not a sync update. Suspend. Since we're not activating a
        // Suspense boundary, this will unwind all the way to the root without
        // performing a second pass to render a fallback. (This is arguably how
        // refresh transitions should work, too, since we're not going to commit
        // the fallbacks anyway.)
        //
        // This case also applies to initial hydration.
        attachPingListener(root, wakeable, rootRenderLanes);
        renderDidSuspendDelayIfPossible();
        return;
      } // This is a sync/discrete update. We treat this case like an error
      // because discrete renders are expected to produce a complete tree
      // synchronously to maintain consistency with external state.


      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.
      // The error will be caught by the nearest suspense boundary.

      value = uncaughtSuspenseError;
    }
  } else {
    // This is a regular error, not a Suspense wakeable.
    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
      markDidThrowWhileHydratingDEV();

      var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
      // discarding the dehydrated content and switching to a client render.
      // Instead of surfacing the error, find the nearest Suspense boundary
      // and render it again without hydration.


      if (_suspenseBoundary !== null) {
        if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
          // Set a flag to indicate that we should try rendering the normal
          // children again, not the fallback.
          _suspenseBoundary.flags |= ForceClientRender;
        }

        markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
        // still log it so it can be fixed.

        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
        return;
      }
    }
  }

  value = createCapturedValueAtFiber(value, sourceFiber);
  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.

  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.flags |= ShouldCapture;
          var lane = pickArbitraryLane(rootRenderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
          enqueueCapturedUpdate(workInProgress, update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.flags |= ShouldCapture;

          var _lane = pickArbitraryLane(rootRenderLanes);

          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state

          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function getSuspendedCache() {
  {
    return null;
  } // This function is called when a Suspense boundary suspends. It returns the
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
}

function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
}

function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their
  // identities match.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
}

function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  var hasId;
  prepareToReadContext(workInProgress, renderLanes);

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
    hasId = checkDidRenderIdHook();

    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  if (getIsHydrating() && hasId) {
    pushMaterializedTreeId(workInProgress);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
  if (current === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(type));
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentNameFromType(_type));
    }
  }

  var currentChild = current.child; // This is always exactly one child

  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);

  if (!hasScheduledUpdateOrContext) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        var lazyComponent = outerMemoType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;

        try {
          outerMemoType = init(payload);
        } catch (x) {
          outerMemoType = null;
        } // Inner propTypes will be validated in the function component path.


        var outerPropTypes = outerMemoType && outerMemoType.propTypes;

        if (outerPropTypes) {
          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
          'prop', getComponentNameFromType(outerMemoType));
        }
      }
    }
  }

  if (current !== null) {
    var prevProps = current.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.
     workInProgress.type === current.type )) {
      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
      // would during a normal fiber bailout.
      //
      // We don't have strong guarantees that the props object is referentially
      // equal during updates where we can't bail out anyway — like if the props
      // are shallowly equal, but there's a local state or context update in the
      // same batch.
      //
      // However, as a principle, we should aim to make the behavior consistent
      // across different ways of memoizing a component. For example, React.memo
      // has a different internal Fiber layout if you pass a normal function
      // component (SimpleMemoComponent) versus if you pass a different type
      // like forwardRef (MemoComponent). But this is an implementation detail.
      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
      // affect whether the props object is reused during a bailout.

      workInProgress.pendingProps = nextProps = prevProps;

      if (!checkScheduledUpdateOrContext(current, renderLanes)) {
        // The pending lanes were cleared at the beginning of beginWork. We're
        // about to bail out, but there might be other lanes that weren't
        // included in the current render. Usually, the priority level of the
        // remaining updates is accumulated during the evaluation of the
        // component (i.e. when processing the update queue). But since since
        // we're bailing out early *without* evaluating the component, we need
        // to account for it here, too. Reset to the value of the current fiber.
        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
        // because a MemoComponent fiber does not have hooks or an update queue;
        // rather, it wraps around an inner component, which may or may not
        // contains hooks.
        // TODO: Move the reset at in beginWork out of the common path so that
        // this is no longer necessary.
        workInProgress.lanes = current.lanes;
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      }
    }
  }

  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
}

function updateOffscreenComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  var prevState = current !== null ? current.memoizedState : null;

  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {
    // Rendering a hidden tree.
    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      // In legacy sync mode, don't defer the subtree. Render it now.
      // TODO: Consider how Offscreen should work with transitions in the future
      var nextState = {
        baseLanes: NoLanes,
        cachePool: null,
        transitions: null
      };
      workInProgress.memoizedState = nextState;

      pushRenderLanes(workInProgress, renderLanes);
    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
      // and resume this tree later.

      var nextBaseLanes;

      if (prevState !== null) {
        var prevBaseLanes = prevState.baseLanes;
        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
      } else {
        nextBaseLanes = renderLanes;
      } // Schedule this fiber to re-render at offscreen priority. Then bailout.


      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
      var _nextState = {
        baseLanes: nextBaseLanes,
        cachePool: spawnedCachePool,
        transitions: null
      };
      workInProgress.memoizedState = _nextState;
      workInProgress.updateQueue = null;
      // to avoid a push/pop misalignment.


      pushRenderLanes(workInProgress, nextBaseLanes);

      return null;
    } else {
      // This is the second render. The surrounding visible content has already
      // committed. Now we resume rendering the hidden tree.
      // Rendering at offscreen, so we can clear the base lanes.
      var _nextState2 = {
        baseLanes: NoLanes,
        cachePool: null,
        transitions: null
      };
      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.

      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;

      pushRenderLanes(workInProgress, subtreeRenderLanes);
    }
  } else {
    // Rendering a visible tree.
    var _subtreeRenderLanes;

    if (prevState !== null) {
      // We're going from hidden -> visible.
      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);

      workInProgress.memoizedState = null;
    } else {
      // We weren't previously hidden, and we still aren't, so there's nothing
      // special to do. Need to push to the stack regardless, though, to avoid
      // a push/pop misalignment.
      _subtreeRenderLanes = renderLanes;
    }

    pushRenderLanes(workInProgress, _subtreeRenderLanes);
  }

  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
} // Note: These happen to have identical begin phases, for now. We shouldn't hold

function updateFragment(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMode(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress, renderLanes) {
  {
    workInProgress.flags |= Update;

    {
      // Reset effect durations for the next eventual effect phase.
      // These are reset during render to allow the DevTools commit hook a chance to read them,
      var stateNode = workInProgress.stateNode;
      stateNode.effectDuration = 0;
      stateNode.passiveEffectDuration = 0;
    }
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;

  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.flags |= Ref;

    {
      workInProgress.flags |= RefStatic;
    }
  }
}

function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  }

  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  var hasId;
  prepareToReadContext(workInProgress, renderLanes);

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
    hasId = checkDidRenderIdHook();

    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  if (getIsHydrating() && hasId) {
    pushMaterializedTreeId(workInProgress);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    // This is used by DevTools to force a boundary to error.
    switch (shouldError(workInProgress)) {
      case false:
        {
          var _instance = workInProgress.stateNode;
          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
          // Is there a better way to do this?

          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
          var state = tempInstance.state;

          _instance.updater.enqueueSetState(_instance, state, null);

          break;
        }

      case true:
        {
          workInProgress.flags |= DidCapture;
          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes

          var error$1 = new Error('Simulated error coming from DevTools');
          var lane = pickArbitraryLane(renderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state

          var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
          enqueueCapturedUpdate(workInProgress, update);
          break;
        }
    }

    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.

    constructClassInstance(workInProgress, Component, nextProps);
    mountClassInstance(workInProgress, Component, nextProps, renderLanes);
    shouldUpdate = true;
  } else if (current === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
  }

  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);

  {
    var inst = workInProgress.stateNode;

    if (shouldUpdate && inst.props !== nextProps) {
      if (!didWarnAboutReassigningProps) {
        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');
      }

      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);
  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$1.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFromError is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    {
      stopProfilerTimerIfRunning();
    }
  } else {
    {
      markComponentRenderStarted(workInProgress);
    }

    {
      setIsRendering(true);
      nextChildren = instance.render();

      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          instance.render();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }

      setIsRendering(false);
    }

    {
      markComponentRenderStopped();
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  if (current !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderLanes) {
  pushHostRootContext(workInProgress);

  if (current === null) {
    throw new Error('Should have a current fiber. This is a bug in React.');
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState.element;
  cloneUpdateQueue(current, workInProgress);
  processUpdateQueue(workInProgress, nextProps, null, renderLanes);
  var nextState = workInProgress.memoizedState;
  var root = workInProgress.stateNode;
  // being called "element".


  var nextChildren = nextState.element;

  if ( prevState.isDehydrated) {
    // This is a hydration root whose shell has not yet hydrated. We should
    // attempt to hydrate.
    // Flip isDehydrated to false to indicate that when this render
    // finishes, the root will no longer be dehydrated.
    var overrideState = {
      element: nextChildren,
      isDehydrated: false,
      cache: nextState.cache,
      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
      transitions: nextState.transitions
    };
    var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
    // have reducer functions so it doesn't need rebasing.

    updateQueue.baseState = overrideState;
    workInProgress.memoizedState = overrideState;

    if (workInProgress.flags & ForceClientRender) {
      // Something errored during a previous attempt to hydrate the shell, so we
      // forced a client render.
      var recoverableError = createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside ' + 'of a Suspense boundary, the entire root will switch to ' + 'client rendering.'), workInProgress);
      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
    } else if (nextChildren !== prevChildren) {
      var _recoverableError = createCapturedValueAtFiber(new Error('This root received an early update, before anything was able ' + 'hydrate. Switched the entire root to client rendering.'), workInProgress);

      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
    } else {
      // The outermost shell has not hydrated yet. Start hydrating.
      enterHydrationState(workInProgress);

      var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
      workInProgress.child = child;
      var node = child;

      while (node) {
        // Mark each child as hydrating. This is a fast path to know whether this
        // tree is part of a hydrating tree. This is used to determine if a child
        // node has fully mounted yet, and for scheduling event replaying.
        // Conceptually this is similar to Placement in that a new subtree is
        // inserted into the React tree here. It just happens to not need DOM
        // mutations because it already exists.
        node.flags = node.flags & ~Placement | Hydrating;
        node = node.sibling;
      }
    }
  } else {
    // Root is not dehydrated. Either this is a client-only root, or it
    // already hydrated.
    resetHydrationState();

    if (nextChildren === prevChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }

    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
  // Revert to client rendering.
  resetHydrationState();
  queueHydrationError(recoverableError);
  workInProgress.flags |= ForceClientRender;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostComponent(current, workInProgress, renderLanes) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also has access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.flags |= ContentReset;
  }

  markRef(current, workInProgress);
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
  var props = workInProgress.pendingProps;
  var lazyComponent = elementType;
  var payload = lazyComponent._payload;
  var init = lazyComponent._init;
  var Component = init(payload); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentNameFromType(Component));
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        renderLanes);
        return child;
      }
  }

  var hint = '';

  {
    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
      hint = ' Did you wrap a component in React.lazy() more than once?';
    }
  } // This message intentionally doesn't mention ForwardRef or MemoComponent
  // because the fact that it's a separate type of work is an
  // implementation detail.


  throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.

  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  constructClassInstance(workInProgress, Component, nextProps);
  mountClassInstance(workInProgress, Component, nextProps, renderLanes);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
  var props = workInProgress.pendingProps;
  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderLanes);
  var value;
  var hasId;

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);

        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictLegacyMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    setIsRendering(true);
    ReactCurrentOwner$1.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
    hasId = checkDidRenderIdHook();
    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  {
    // Support for module components is deprecated and is removed behind a flag.
    // Whether or not it would crash later, we want to show a good message in DEV first.
    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
      var _componentName = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);

        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    }
  }

  if ( // Run these checks in production only if the flag is off.
  // Eventually we'll delete this branch altogether.
   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName2]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);

        didWarnAboutModulePatternComponent[_componentName2] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    initializeUpdateQueue(workInProgress);
    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderLanes);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {

      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
          hasId = checkDidRenderIdHook();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
    }

    if (getIsHydrating() && hasId) {
      pushMaterializedTreeId(workInProgress);
    }

    reconcileChildren(null, workInProgress, value, renderLanes);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  {
    if (Component) {
      if (Component.childContextTypes) {
        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
      }
    }

    if (workInProgress.ref !== null) {
      var info = '';
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }

      var warningKey = ownerName || '';
      var debugSource = workInProgress._debugSource;

      if (debugSource) {
        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
      }

      if (!didWarnAboutFunctionRefs[warningKey]) {
        didWarnAboutFunctionRefs[warningKey] = true;

        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
      }
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);

        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
      }
    }

    if (typeof Component.contextType === 'object' && Component.contextType !== null) {
      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
        error('%s: Function components do not support contextType.', _componentName4);

        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
      }
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  treeContext: null,
  retryLane: NoLane
};

function mountSuspenseOffscreenState(renderLanes) {
  return {
    baseLanes: renderLanes,
    cachePool: getSuspendedCache(),
    transitions: null
  };
}

function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
  var cachePool = null;

  return {
    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
    cachePool: cachePool,
    transitions: prevOffscreenState.transitions
  };
} // TODO: Probably should inline this back


function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
  // If we're already showing a fallback, there are cases where we need to
  // remain on that fallback regardless of whether the content has resolved.
  // For example, SuspenseList coordinates when nested content appears.
  if (current !== null) {
    var suspenseState = current.memoizedState;

    if (suspenseState === null) {
      // Currently showing content. Don't hide it, even if ForceSuspenseFallback
      // is true. More precise name might be "ForceRemainSuspenseFallback".
      // Note: This is a factoring smell. Can't remain on a fallback if there's
      // no fallback to remain on.
      return false;
    }
  } // Not currently showing content. Consult the Suspense context.


  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
}

function getRemainingWorkInPrimaryTree(current, renderLanes) {
  // TODO: Should not remove render lanes that were pinged during this render
  return removeLanes(current.childLanes, renderLanes);
}

function updateSuspenseComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.flags |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var showFallback = false;
  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    showFallback = true;
    workInProgress.flags &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current === null || current.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Avoided boundaries are not considered since they cannot handle preferred fallback states.
      {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
  // boundary's children. This involves some custom reconciliation logic. Two
  // main reasons this is so complicated.
  //
  // First, Legacy Mode has different semantics for backwards compatibility. The
  // primary tree will commit in an inconsistent state, so when we do the
  // second pass to render the fallback, we do some exceedingly, uh, clever
  // hacks to make that not totally break. Like transferring effects and
  // deletions from hidden tree. In Concurrent Mode, it's much simpler,
  // because we bailout on the primary tree completely and leave it in its old
  // state, no effects. Same as what we do for Offscreen (except that
  // Offscreen doesn't have the first render pass).
  //
  // Second is hydration. During hydration, the Suspense fiber has a slightly
  // different layout, where the child points to a dehydrated fragment, which
  // contains the DOM rendered by the server.
  //
  // Third, even if you set all that aside, Suspense is like error boundaries in
  // that we first we try to render one tree, and if that fails, we render again
  // and switch to a different tree. Like a try/catch block. So we have to track
  // which branch we're currently rendering. Ideally we would model this using
  // a stack.

  if (current === null) {
    // Initial mount
    // Special path for hydration
    // If we're currently hydrating, try to hydrate this boundary.
    tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

    var suspenseState = workInProgress.memoizedState;

    if (suspenseState !== null) {
      var dehydrated = suspenseState.dehydrated;

      if (dehydrated !== null) {
        return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
      }
    }

    var nextPrimaryChildren = nextProps.children;
    var nextFallbackChildren = nextProps.fallback;

    if (showFallback) {
      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var primaryChildFragment = workInProgress.child;
      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;

      return fallbackFragment;
    } else {
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
    }
  } else {
    // This is an update.
    // Special path for hydration
    var prevState = current.memoizedState;

    if (prevState !== null) {
      var _dehydrated = prevState.dehydrated;

      if (_dehydrated !== null) {
        return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
      }
    }

    if (showFallback) {
      var _nextFallbackChildren = nextProps.fallback;
      var _nextPrimaryChildren = nextProps.children;
      var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
      var _primaryChildFragment2 = workInProgress.child;
      var prevOffscreenState = current.child.memoizedState;
      _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);

      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackChildFragment;
    } else {
      var _nextPrimaryChildren2 = nextProps.children;

      var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);

      workInProgress.memoizedState = null;
      return _primaryChildFragment3;
    }
  }
}

function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
  var mode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
  primaryChildFragment.return = workInProgress;
  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var progressedPrimaryFragment = workInProgress.child;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;
  var fallbackChildFragment;

  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
    // In legacy mode, we commit the primary tree as if it successfully
    // completed, even though it's in an inconsistent state.
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = 0;
      primaryChildFragment.treeBaseDuration = 0;
    }

    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  } else {
    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  }

  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
  // this wrapper function to constrain it.
  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
}

function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
  // The props argument to `createWorkInProgress` is `any` typed, so we use this
  // wrapper function to constrain it.
  return createWorkInProgress(current, offscreenProps);
}

function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
    mode: 'visible',
    children: primaryChildren
  });

  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    primaryChildFragment.lanes = renderLanes;
  }

  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = null;

  if (currentFallbackChildFragment !== null) {
    // Delete the fallback child fragment
    var deletions = workInProgress.deletions;

    if (deletions === null) {
      workInProgress.deletions = [currentFallbackChildFragment];
      workInProgress.flags |= ChildDeletion;
    } else {
      deletions.push(currentFallbackChildFragment);
    }
  }

  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;

  if ( // In legacy mode, we commit the primary tree as if it successfully
  // completed, even though it's in an inconsistent state.
  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
  // already cloned. In legacy mode, the only case where this isn't true is
  // when DevTools forces us to display a fallback; we skip the first render
  // pass entirely and go straight to rendering the fallback. (In Concurrent
  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
  // only codepath.)
  workInProgress.child !== currentPrimaryChildFragment) {
    var progressedPrimaryFragment = workInProgress.child;
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
    } // The fallback fiber was added as a deletion during the first pass.
    // However, since we're going to remain on the fallback, we no longer want
    // to delete it.


    workInProgress.deletions = null;
  } else {
    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
    // (We don't do this in legacy mode, because in legacy mode we don't re-use
    // the current tree; see previous branch.)

    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
  }

  var fallbackChildFragment;

  if (currentFallbackChildFragment !== null) {
    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
  } else {
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
    // mounted but this is a new fiber.

    fallbackChildFragment.flags |= Placement;
  }

  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
  // Falling back to client rendering. Because this has performance
  // implications, it's considered a recoverable error, even though the user
  // likely won't observe anything wrong with the UI.
  //
  // The error is passed in as an argument to enforce that every caller provide
  // a custom message, or explicitly opt out (currently the only path that opts
  // out is legacy mode; every concurrent path provides an error).
  if (recoverableError !== null) {
    queueHydrationError(recoverableError);
  } // This will add the old fiber to the deletion list


  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.

  var nextProps = workInProgress.pendingProps;
  var primaryChildren = nextProps.children;
  var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
  // mounted but this is a new fiber.

  primaryChildFragment.flags |= Placement;
  workInProgress.memoizedState = null;
  return primaryChildFragment;
}

function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var fiberMode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
  var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
  // boundary) already mounted but this is a new fiber.

  fallbackChildFragment.flags |= Placement;
  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;

  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
    // We will have dropped the effect list which contains the
    // deletion. We need to reconcile to delete the current child.
    reconcileChildFibers(workInProgress, current.child, null, renderLanes);
  }

  return fallbackChildFragment;
}

function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
  // During the first pass, we'll bail out and not drill into the children.
  // Instead, we'll leave the content in place and try to hydrate it later.
  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    {
      error('Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOMClient.hydrateRoot(container, <App />)' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
    }

    workInProgress.lanes = laneToLanes(SyncLane);
  } else if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This is a client-only boundary. Since we won't get any content from the server
    // for this, we need to schedule that at a higher priority based on when it would
    // have timed out. In theory we could render it in this pass but it would have the
    // wrong priority associated with it and will prevent hydration of parent path.
    // Instead, we'll leave work left on it to render it in a separate commit.
    // TODO This time should be the time at which the server rendered response that is
    // a parent to this boundary was displayed. However, since we currently don't have
    // a protocol to transfer that time, we'll just estimate it by using the current
    // time. This will mean that Suspense timeouts are slightly shifted to later than
    // they should be.
    // Schedule a normal pri update to render this content.
    workInProgress.lanes = laneToLanes(DefaultHydrationLane);
  } else {
    // We'll continue hydrating the rest at offscreen priority since we'll already
    // be showing the right content coming from the server, it is no rush.
    workInProgress.lanes = laneToLanes(OffscreenLane);
  }

  return null;
}

function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
  if (!didSuspend) {
    // This is the first render pass. Attempt to hydrate.
    // We should never be hydrating at this point because it is the first pass,
    // but after we've already committed once.
    warnIfHydrating();

    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // TODO: When we delete legacy mode, we should make this error argument
      // required — every concurrent mode path that causes hydration to
      // de-opt to client rendering should have an error message.
      null);
    }

    if (isSuspenseInstanceFallback(suspenseInstance)) {
      // This boundary is in a permanent fallback state. In this case, we'll never
      // get an update and we'll never be able to hydrate the final content. Let's just try the
      // client side render instead.
      var digest, message, stack;

      {
        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);

        digest = _getSuspenseInstanceF.digest;
        message = _getSuspenseInstanceF.message;
        stack = _getSuspenseInstanceF.stack;
      }

      var error;

      if (message) {
        // eslint-disable-next-line react-internal/prod-error-codes
        error = new Error(message);
      } else {
        error = new Error('The server could not finish this Suspense boundary, likely ' + 'due to an error during server rendering. Switched to ' + 'client rendering.');
      }

      var capturedValue = createCapturedValue(error, digest, stack);
      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
    }
    // any context has changed, we need to treat is as if the input might have changed.


    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);

    if (didReceiveUpdate || hasContextChanged) {
      // This boundary has changed since the first render. This means that we are now unable to
      // hydrate it. We might still be able to hydrate it using a higher priority lane.
      var root = getWorkInProgressRoot();

      if (root !== null) {
        var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);

        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
          // Intentionally mutating since this render will get interrupted. This
          // is one of the very rare times where we mutate the current tree
          // during the render phase.
          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render

          var eventTime = NoTimestamp;
          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
          scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
        }
      } // If we have scheduled higher pri work above, this will probably just abort the render
      // since we now have higher priority work, but in case it doesn't, we need to prepare to
      // render something, if we time out. Even if that requires us to delete everything and
      // skip hydration.
      // Delay having to do this as long as the suspense timeout allows us.


      renderDidSuspendDelayIfPossible();

      var _capturedValue = createCapturedValue(new Error('This Suspense boundary received an update before it finished ' + 'hydrating. This caused the boundary to switch to client rendering. ' + 'The usual way to fix this is to wrap the original update ' + 'in startTransition.'));

      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
    } else if (isSuspenseInstancePending(suspenseInstance)) {
      // This component is still pending more data from the server, so we can't hydrate its
      // content. We treat it as if this component suspended itself. It might seem as if
      // we could just try to render it client-side instead. However, this will perform a
      // lot of unnecessary work and is unlikely to complete since it often will suspend
      // on missing data anyway. Additionally, the server might be able to render more
      // than we can on the client yet. In that case we'd end up with more fallback states
      // on the client than if we just leave it alone. If the server times out or errors
      // these should update this boundary to the permanent Fallback state instead.
      // Mark it as having captured (i.e. suspended).
      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.

      var retry = retryDehydratedSuspenseBoundary.bind(null, current);
      registerSuspenseInstanceRetry(suspenseInstance, retry);
      return null;
    } else {
      // This is the first attempt.
      reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
      var primaryChildren = nextProps.children;
      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.

      primaryChildFragment.flags |= Hydrating;
      return primaryChildFragment;
    }
  } else {
    // This is the second render pass. We already attempted to hydrated, but
    // something either suspended or errored.
    if (workInProgress.flags & ForceClientRender) {
      // Something errored during hydration. Try again without hydrating.
      workInProgress.flags &= ~ForceClientRender;

      var _capturedValue2 = createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. ' + 'Switched to client rendering.'));

      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
    } else if (workInProgress.memoizedState !== null) {
      // Something suspended and we should still be in dehydrated mode.
      // Leave the existing child in place.
      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
      // but the normal suspense pass doesn't.

      workInProgress.flags |= DidCapture;
      return null;
    } else {
      // Suspended but we should no longer be in dehydrated mode.
      // Therefore we now have to render the fallback.
      var nextPrimaryChildren = nextProps.children;
      var nextFallbackChildren = nextProps.fallback;
      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var _primaryChildFragment4 = workInProgress.child;
      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackChildFragment;
    }
  }
}

function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
  }

  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          case 'forward':
          case 'backward':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          default:
            error('"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);

            break;
        }
      } else {
        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;

        error('"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;

        error('<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isAnArray = isArray(childSlot);
    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';

    if (isAnArray || isIterable) {
      var type = isAnArray ? 'array' : 'iterable';

      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);

      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          error('A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.renderingStartTime = 0;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailMode = tailMode;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.flags |= DidCapture;
  } else {
    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    // In legacy mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current, workInProgress, renderLanes) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

var hasWarnedAboutUsingNoValuePropOnContextProvider = false;

function updateContextProvider(current, workInProgress, renderLanes) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    if (!('value' in newProps)) {
      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
        hasWarnedAboutUsingNoValuePropOnContextProvider = true;

        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
      }
    }

    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
    }
  }

  pushProvider(workInProgress, context, newValue);

  {
    if (oldProps !== null) {
      var oldValue = oldProps.value;

      if (objectIs(oldValue, newValue)) {
        // No change. Bailout early if children are the same.
        if (oldProps.children === newProps.children && !hasContextChanged()) {
          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
      } else {
        // The context value changed. Search for matching consumers and schedule
        // them to update.
        propagateContextChange(workInProgress, context, renderLanes);
      }
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current, workInProgress, renderLanes) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;

          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    if (typeof render !== 'function') {
      error('A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');
    }
  }

  prepareToReadContext(workInProgress, renderLanes);
  var newValue = readContext(context);

  {
    markComponentRenderStarted(workInProgress);
  }

  var newChildren;

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    newChildren = render(newValue);
    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    if (current !== null) {
      // A lazy component only mounts if it suspended inside a non-
      // concurrent tree, in an inconsistent state. We want to treat it like
      // a new mount, even though an empty version of it already committed.
      // Disconnect the alternate pointers.
      current.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.flags |= Placement;
    }
  }
}

function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
  if (current !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current.dependencies;
  }

  {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning();
  }

  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.

  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    {
      return null;
    }
  } // This fiber doesn't have work, but its subtree does. Clone the child
  // fibers and continue.


  cloneChildFibers(current, workInProgress);
  return workInProgress.child;
}

function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      // eslint-disable-next-line react-internal/prod-error-codes
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          // eslint-disable-next-line react-internal/prod-error-codes
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var deletions = returnFiber.deletions;

    if (deletions === null) {
      returnFiber.deletions = [current];
      returnFiber.flags |= ChildDeletion;
    } else {
      deletions.push(current);
    }

    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function checkScheduledUpdateOrContext(current, renderLanes) {
  // Before performing an early bailout, we must check if there are pending
  // updates or context.
  var updateLanes = current.lanes;

  if (includesSomeLane(updateLanes, renderLanes)) {
    return true;
  } // No pending update, but because context is propagated lazily, we need

  return false;
}

function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
  // This fiber does not have any pending work. Bailout without entering
  // the begin phase. There's still some bookkeeping we that needs to be done
  // in this optimized path, mostly pushing stuff onto the stack.
  switch (workInProgress.tag) {
    case HostRoot:
      pushHostRootContext(workInProgress);
      var root = workInProgress.stateNode;

      resetHydrationState();
      break;

    case HostComponent:
      pushHostContext(workInProgress);
      break;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          pushContextProvider(workInProgress);
        }

        break;
      }

    case HostPortal:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;

    case ContextProvider:
      {
        var newValue = workInProgress.memoizedProps.value;
        var context = workInProgress.type._context;
        pushProvider(workInProgress, context, newValue);
        break;
      }

    case Profiler:
      {
        // Profiler should only call onRender when one of its descendants actually rendered.
        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

        if (hasChildWork) {
          workInProgress.flags |= Update;
        }

        {
          // Reset effect durations for the next eventual effect phase.
          // These are reset during render to allow the DevTools commit hook a chance to read them,
          var stateNode = workInProgress.stateNode;
          stateNode.effectDuration = 0;
          stateNode.passiveEffectDuration = 0;
        }
      }

      break;

    case SuspenseComponent:
      {
        var state = workInProgress.memoizedState;

        if (state !== null) {
          if (state.dehydrated !== null) {
            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
            // been unsuspended it has committed as a resolved Suspense component.
            // If it needs to be retried, it should have work scheduled on it.

            workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.

            return null;
          } // If this boundary is currently timed out, we need to decide
          // whether to retry the primary children, or to skip over it and
          // go straight to the fallback. Check the priority of the primary
          // child fragment.


          var primaryChildFragment = workInProgress.child;
          var primaryChildLanes = primaryChildFragment.childLanes;

          if (includesSomeLane(renderLanes, primaryChildLanes)) {
            // The primary children have pending work. Use the normal path
            // to attempt to render the primary children again.
            return updateSuspenseComponent(current, workInProgress, renderLanes);
          } else {
            // The primary child fragment does not have pending work marked
            // on it
            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
            // priority. Bailout.

            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);

            if (child !== null) {
              // The fallback children have pending work. Skip over the
              // primary children and work on the fallback.
              return child.sibling;
            } else {
              // Note: We can return `null` here because we already checked
              // whether there were nested context consumers, via the call to
              // `bailoutOnAlreadyFinishedWork` above.
              return null;
            }
          }
        } else {
          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
        }

        break;
      }

    case SuspenseListComponent:
      {
        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;

        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

        if (didSuspendBefore) {
          if (_hasChildWork) {
            // If something was in fallback state last time, and we have all the
            // same children then we're still in progressive loading state.
            // Something might get unblocked by state updates or retries in the
            // tree which will affect the tail. So we need to use the normal
            // path to compute the correct tail.
            return updateSuspenseListComponent(current, workInProgress, renderLanes);
          } // If none of the children had any work, that means that none of
          // them got retried so they'll still be blocked in the same way
          // as before. We can fast bail out.


          workInProgress.flags |= DidCapture;
        } // If nothing suspended before and we're rendering the same children,
        // then the tail doesn't matter. Anything new that suspends will work
        // in the "together" mode, so we can continue from the state we had.


        var renderState = workInProgress.memoizedState;

        if (renderState !== null) {
          // Reset to the "together" mode in case we've started a different
          // update in the past but didn't complete it.
          renderState.rendering = null;
          renderState.tail = null;
          renderState.lastEffect = null;
        }

        pushSuspenseContext(workInProgress, suspenseStackCursor.current);

        if (_hasChildWork) {
          break;
        } else {
          // If none of the children had any work, that means that none of
          // them got retried so they'll still be blocked in the same way
          // as before. We can fast bail out.
          return null;
        }
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        // Need to check if the tree still needs to be deferred. This is
        // almost identical to the logic used in the normal update path,
        // so we'll just enter that. The only difference is we'll bail out
        // at the next level instead of this one, because the child props
        // have not changed. Which is fine.
        // TODO: Probably should refactor `beginWork` to split the bailout
        // path from the normal path. I'm tempted to do a labeled break here
        // but I won't :)
        workInProgress.lanes = NoLanes;
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }
  }

  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
}

function beginWork(current, workInProgress, renderLanes) {
  {
    if (workInProgress._debugNeedsRemount && current !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
    }
  }

  if (current !== null) {
    var oldProps = current.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
     workInProgress.type !== current.type )) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else {
      // Neither props nor legacy context changes. Check if there's a pending
      // update or context change.
      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);

      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
      // may not be work scheduled on `current`, so we check for this flag.
      (workInProgress.flags & DidCapture) === NoFlags) {
        // No pending updates or context. Bail out now.
        didReceiveUpdate = false;
        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
      }

      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      } else {
        // An update was scheduled on this fiber, but there are no new props
        // nor legacy context. Set this to false. If an update queue or context
        // consumer produces a changed value, it will set this to true. Otherwise,
        // the component will assume the children have not changed and bail out.
        didReceiveUpdate = false;
      }
    }
  } else {
    didReceiveUpdate = false;

    if (getIsHydrating() && isForkedChild(workInProgress)) {
      // Check if this child belongs to a list of muliple children in
      // its parent.
      //
      // In a true multi-threaded implementation, we would render children on
      // parallel threads. This would represent the beginning of a new render
      // thread for this subtree.
      //
      // We only use this for id generation during hydration, which is why the
      // logic is located in this special branch.
      var slotIndex = workInProgress.index;
      var numberOfForks = getForksAtLevel();
      pushTreeId(workInProgress, numberOfForks, slotIndex);
    }
  } // Before entering the begin phase, clear pending update priority.
  // TODO: This assumes that we're about to evaluate the component and process
  // the update queue. However, there's an exception: SimpleMemoComponent
  // sometimes bails out later in the begin phase. This indicates that we should
  // move this assignment out of the common path and into each branch.


  workInProgress.lanes = NoLanes;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current, workInProgress, elementType, renderLanes);
      }

    case FunctionComponent:
      {
        var Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
      }

    case ClassComponent:
      {
        var _Component = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);

        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
      }

    case HostRoot:
      return updateHostRoot(current, workInProgress, renderLanes);

    case HostComponent:
      return updateHostComponent(current, workInProgress, renderLanes);

    case HostText:
      return updateHostText(current, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current, workInProgress, renderLanes);

    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderLanes);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
      }

    case Fragment:
      return updateFragment(current, workInProgress, renderLanes);

    case Mode:
      return updateMode(current, workInProgress, renderLanes);

    case Profiler:
      return updateProfiler(current, workInProgress, renderLanes);

    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderLanes);

    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderLanes);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentNameFromType(_type2));
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      }

    case IncompleteClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);

        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
      {
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }
  }

  throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.flags |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.flags |= Ref;

  {
    workInProgress.flags |= RefStatic;
  }
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

{
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (current, workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  if (getIsHydrating()) {
    // If we're hydrating, we should consume as many items as we can
    // so we don't leave any behind.
    return;
  }

  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function bubbleProperties(completedWork) {
  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
  var newChildLanes = NoLanes;
  var subtreeFlags = NoFlags;

  if (!didBailout) {
    // Bubble up the earliest expiration time.
    if ( (completedWork.mode & ProfileMode) !== NoMode) {
      // In profiling mode, resetChildExpirationTime is also used to reset
      // profiler durations.
      var actualDuration = completedWork.actualDuration;
      var treeBaseDuration = completedWork.selfBaseDuration;
      var child = completedWork.child;

      while (child !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
        subtreeFlags |= child.subtreeFlags;
        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
        // only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration. If
        // the fiber has not been cloned though, (meaning no work was done), then
        // this value will reflect the amount of time spent working on a previous
        // render. In that case it should not bubble. We determine whether it was
        // cloned by comparing the child pointer.

        actualDuration += child.actualDuration;
        treeBaseDuration += child.treeBaseDuration;
        child = child.sibling;
      }

      completedWork.actualDuration = actualDuration;
      completedWork.treeBaseDuration = treeBaseDuration;
    } else {
      var _child = completedWork.child;

      while (_child !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
        subtreeFlags |= _child.subtreeFlags;
        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
        // smell because it assumes the commit phase is never concurrent with
        // the render phase. Will address during refactor to alternate model.

        _child.return = completedWork;
        _child = _child.sibling;
      }
    }

    completedWork.subtreeFlags |= subtreeFlags;
  } else {
    // Bubble up the earliest expiration time.
    if ( (completedWork.mode & ProfileMode) !== NoMode) {
      // In profiling mode, resetChildExpirationTime is also used to reset
      // profiler durations.
      var _treeBaseDuration = completedWork.selfBaseDuration;
      var _child2 = completedWork.child;

      while (_child2 !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
        // so we should bubble those up even during a bailout. All the other
        // flags have a lifetime only of a single render + commit, so we should
        // ignore them.

        subtreeFlags |= _child2.subtreeFlags & StaticMask;
        subtreeFlags |= _child2.flags & StaticMask;
        _treeBaseDuration += _child2.treeBaseDuration;
        _child2 = _child2.sibling;
      }

      completedWork.treeBaseDuration = _treeBaseDuration;
    } else {
      var _child3 = completedWork.child;

      while (_child3 !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
        // so we should bubble those up even during a bailout. All the other
        // flags have a lifetime only of a single render + commit, so we should
        // ignore them.

        subtreeFlags |= _child3.subtreeFlags & StaticMask;
        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
        // smell because it assumes the commit phase is never concurrent with
        // the render phase. Will address during refactor to alternate model.

        _child3.return = completedWork;
        _child3 = _child3.sibling;
      }
    }

    completedWork.subtreeFlags |= subtreeFlags;
  }

  completedWork.childLanes = newChildLanes;
  return didBailout;
}

function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
  if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
    warnIfUnhydratedTailNodes(workInProgress);
    resetHydrationState();
    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
    return false;
  }

  var wasHydrated = popHydrationState(workInProgress);

  if (nextState !== null && nextState.dehydrated !== null) {
    // We might be inside a hydration state the first time we're picking up this
    // Suspense boundary, and also after we've reentered it for further hydration.
    if (current === null) {
      if (!wasHydrated) {
        throw new Error('A dehydrated suspense component was completed without a hydrated node. ' + 'This is probably a bug in React.');
      }

      prepareToHydrateHostSuspenseInstance(workInProgress);
      bubbleProperties(workInProgress);

      {
        if ((workInProgress.mode & ProfileMode) !== NoMode) {
          var isTimedOutSuspense = nextState !== null;

          if (isTimedOutSuspense) {
            // Don't count time spent in a timed out Suspense subtree as part of the base duration.
            var primaryChildFragment = workInProgress.child;

            if (primaryChildFragment !== null) {
              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
              workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
            }
          }
        }
      }

      return false;
    } else {
      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
      // state since we're now exiting out of it. popHydrationState doesn't do that for us.
      resetHydrationState();

      if ((workInProgress.flags & DidCapture) === NoFlags) {
        // This boundary did not suspend so it's now hydrated and unsuspended.
        workInProgress.memoizedState = null;
      } // If nothing suspended, we need to schedule an effect to mark this boundary
      // as having hydrated so events know that they're free to be invoked.
      // It's also a signal to replay events and the suspense callback.
      // If something suspended, schedule an effect to attach retry listeners.
      // So we might as well always mark this.


      workInProgress.flags |= Update;
      bubbleProperties(workInProgress);

      {
        if ((workInProgress.mode & ProfileMode) !== NoMode) {
          var _isTimedOutSuspense = nextState !== null;

          if (_isTimedOutSuspense) {
            // Don't count time spent in a timed out Suspense subtree as part of the base duration.
            var _primaryChildFragment = workInProgress.child;

            if (_primaryChildFragment !== null) {
              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
              workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
            }
          }
        }
      }

      return false;
    }
  } else {
    // Successfully completed this tree. If this was a forced client render,
    // there may have been recoverable errors during first hydration
    // attempt. If so, add them to a queue so we can log them in the
    // commit phase.
    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path

    return true;
  }
}

function completeWork(current, workInProgress, renderLanes) {
  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.

  popTreeContext(workInProgress);

  switch (workInProgress.tag) {
    case IndeterminateComponent:
    case LazyComponent:
    case SimpleMemoComponent:
    case FunctionComponent:
    case ForwardRef:
    case Fragment:
    case Mode:
    case Profiler:
    case ContextConsumer:
    case MemoComponent:
      bubbleProperties(workInProgress);
      return null;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case HostRoot:
      {
        var fiberRoot = workInProgress.stateNode;
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          } else {
            if (current !== null) {
              var prevState = current.memoizedState;

              if ( // Check if this is a client root
              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (workInProgress.flags & ForceClientRender) !== NoFlags) {
                // Schedule an effect to clear this container at the start of the
                // next commit. This handles the case of React rendering into a
                // container with previous children. It's also safe to do for
                // updates too, because current.child would only be null if the
                // previous render was null (so the container would already
                // be empty).
                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                // recoverable errors during first hydration attempt. If so, add
                // them to a queue so we can log them in the commit phase.

                upgradeHydrationErrorsToRecoverable();
              }
            }
          }
        }

        updateHostContainer(current, workInProgress);
        bubbleProperties(workInProgress);

        return null;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (workInProgress.stateNode === null) {
              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            } // This can happen when we abort work.


            bubbleProperties(workInProgress);
            return null;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on whether we want to add them top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node need to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false);
            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.

            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (workInProgress.stateNode === null) {
              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
        // to its own fiber type so that we can add other kinds of hydration
        // boundaries that aren't associated with a Suspense tree. In anticipation
        // of such a refactor, all the hydration logic is contained in
        // this branch.

        if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
          var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);

          if (!fallthroughToNormalSuspensePath) {
            if (workInProgress.flags & ShouldCapture) {
              // Special case. There were remaining unhydrated nodes. We treat
              // this as a mismatch. Revert to client rendering.
              return workInProgress;
            } else {
              // Did not finish hydrating, either because this is the initial
              // render or because something suspended.
              return null;
            }
          } // Continue with the normal Suspense path.

        }

        if ((workInProgress.flags & DidCapture) !== NoFlags) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.lanes = renderLanes; // Do not reset the effect list.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          } // Don't bubble properties in this case.


          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = current !== null && current.memoizedState !== null;
        // a passive effect, which is when we process the transitions


        if (nextDidTimeout !== prevDidTimeout) {
          // an effect to toggle the subtree's visibility. When we switch from
          // fallback -> primary, the inner Offscreen fiber schedules this effect
          // as part of its normal complete phase. But when we switch from
          // primary -> fallback, the inner Offscreen fiber does not have a complete
          // phase. So we need to schedule its effect here.
          //
          // We also use this flag to connect/disconnect the effects, but the same
          // logic applies: when re-connecting, the Offscreen fiber's complete
          // phase will handle scheduling the effect. It's only when the fallback
          // is active that we have to do anything special.


          if (nextDidTimeout) {
            var _offscreenFiber2 = workInProgress.child;
            _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
            // in the concurrent tree already suspended during this render.
            // This is a known bug.

            if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
              // TODO: Move this back to throwException because this is too late
              // if this is a large tree which is common for initial loads. We
              // don't know if we should restart a render or not until we get
              // this marker, and this is too late.
              // If this render already had a ping or lower pri updates,
              // and this is the first time we know we're going to suspend we
              // should be able to immediately restart from within throwException.
              var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);

              if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                // If this was in an invisible tree or a new render, then showing
                // this boundary is ok.
                renderDidSuspend();
              } else {
                // Otherwise, we're going to have to hide content so we should
                // suspend for longer if possible.
                renderDidSuspendDelayIfPossible();
              }
            }
          }
        }

        var wakeables = workInProgress.updateQueue;

        if (wakeables !== null) {
          // Schedule an effect to attach a retry listener to the promise.
          // TODO: Move to passive phase
          workInProgress.flags |= Update;
        }

        bubbleProperties(workInProgress);

        {
          if ((workInProgress.mode & ProfileMode) !== NoMode) {
            if (nextDidTimeout) {
              // Don't count time spent in a timed out Suspense subtree as part of the base duration.
              var primaryChildFragment = workInProgress.child;

              if (primaryChildFragment !== null) {
                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
              }
            }
          }
        }

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(current, workInProgress);

      if (current === null) {
        preparePortalMount(workInProgress.stateNode.containerInfo);
      }

      bubbleProperties(workInProgress);
      return null;

    case ContextProvider:
      // Pop provider fiber
      var context = workInProgress.type._context;
      popProvider(context, workInProgress);
      bubbleProperties(workInProgress);
      return null;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode.
          // We don't do anything in this mode.
          bubbleProperties(workInProgress);
          return null;
        }

        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.flags |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thenables. Instead, we'll transfer its thenables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThenables = suspended.updateQueue;

                  if (newThenables !== null) {
                    workInProgress.updateQueue = newThenables;
                    workInProgress.flags |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect flags before doing the second pass since that's now invalid.
                  // Reset the child fibers to their original state.


                  workInProgress.subtreeFlags = NoFlags;
                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.

                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }

            if (renderState.tail !== null && now() > getRenderTargetTime()) {
              // We have already passed our CPU deadline but we still have rows
              // left in the tail. We'll just give up further attempts to render
              // the main content and only render fallbacks.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThenables = _suspended.updateQueue;

              if (_newThenables !== null) {
                workInProgress.updateQueue = _newThenables;
                workInProgress.flags |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
              ) {
                  // We're done.
                  bubbleProperties(workInProgress);
                  return null;
                }
            } else if ( // The time it took to render last row is greater than the remaining
            // time we have to render. So rendering one more row would likely
            // exceed it.
            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          // Pop a row.
          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.renderingStartTime = now();
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
          // Don't bubble properties in this case.

          return next;
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        popRenderLanes(workInProgress);
        var _nextState = workInProgress.memoizedState;
        var nextIsHidden = _nextState !== null;

        if (current !== null) {
          var _prevState = current.memoizedState;
          var prevIsHidden = _prevState !== null;

          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.
          !enableLegacyHidden )) {
            workInProgress.flags |= Visibility;
          }
        }

        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {
          bubbleProperties(workInProgress);
        } else {
          // Don't bubble properties for hidden children unless we're rendering
          // at offscreen priority.
          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
            bubbleProperties(workInProgress);

            {
              // Check if there was an insertion or update in the hidden subtree.
              // If so, we need to hide those nodes in the commit phase, so
              // schedule a visibility effect.
              if ( workInProgress.subtreeFlags & (Placement | Update)) {
                workInProgress.flags |= Visibility;
              }
            }
          }
        }
        return null;
      }

    case CacheComponent:
      {

        return null;
      }

    case TracingMarkerComponent:
      {

        return null;
      }
  }

  throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
}

function unwindWork(current, workInProgress, renderLanes) {
  // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.
  popTreeContext(workInProgress);

  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var flags = workInProgress.flags;

        if (flags & ShouldCapture) {
          workInProgress.flags = flags & ~ShouldCapture | DidCapture;

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        var root = workInProgress.stateNode;
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var _flags = workInProgress.flags;

        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
          // There was an error during render that wasn't captured by a suspense
          // boundary. Do a second pass on the root to unmount the children.
          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
          return workInProgress;
        } // We unwound to the root without completing it. Exit.


        return null;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var suspenseState = workInProgress.memoizedState;

        if (suspenseState !== null && suspenseState.dehydrated !== null) {
          if (workInProgress.alternate === null) {
            throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in ' + 'React. Please file an issue.');
          }

          resetHydrationState();
        }

        var _flags2 = workInProgress.flags;

        if (_flags2 & ShouldCapture) {
          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      var context = workInProgress.type._context;
      popProvider(context, workInProgress);
      return null;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(workInProgress);
      return null;

    case CacheComponent:

      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(current, interruptedWork, renderLanes) {
  // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.
  popTreeContext(interruptedWork);

  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        var root = interruptedWork.stateNode;
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        resetWorkInProgressVersions();
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      var context = interruptedWork.type._context;
      popProvider(context, interruptedWork);
      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(interruptedWork);
      break;
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
} // Used during the commit phase to track the state of the Offscreen component stack.
// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
// Only used when enableSuspenseLayoutEffectSemantics is enabled.


var offscreenSubtreeIsHidden = false;
var offscreenSubtreeWasHidden = false;
var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
var nextEffect = null; // Used for Profiling builds to track updaters.

var inProgressLanes = null;
var inProgressRoot = null;
function reportUncaughtErrorInDEV(error) {
  // Wrapping each small part of the commit phase into a guarded
  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).
  // But we rely on it to surface errors to DEV tools like overlays
  // (https://github.com/facebook/react/issues/21712).
  // As a compromise, rethrow only caught errors in a guard.
  {
    invokeGuardedCallback(null, function () {
      throw error;
    });
    clearCaughtError();
  }
}

var callComponentWillUnmountWithTimer = function (current, instance) {
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;

  if ( current.mode & ProfileMode) {
    try {
      startLayoutEffectTimer();
      instance.componentWillUnmount();
    } finally {
      recordLayoutEffectDuration(current);
    }
  } else {
    instance.componentWillUnmount();
  }
}; // Capture errors so they don't interrupt mounting.


function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
  try {
    commitHookEffectListMount(Layout, current);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
  try {
    callComponentWillUnmountWithTimer(current, instance);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt mounting.


function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
  try {
    instance.componentDidMount();
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt mounting.


function safelyAttachRef(current, nearestMountedAncestor) {
  try {
    commitAttachRef(current);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}

function safelyDetachRef(current, nearestMountedAncestor) {
  var ref = current.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      var retVal;

      try {
        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {
          try {
            startLayoutEffectTimer();
            retVal = ref(null);
          } finally {
            recordLayoutEffectDuration(current);
          }
        } else {
          retVal = ref(null);
        }
      } catch (error) {
        captureCommitPhaseError(current, nearestMountedAncestor, error);
      }

      {
        if (typeof retVal === 'function') {
          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
  try {
    destroy();
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}

var focusedInstanceHandle = null;
var shouldFireAfterActiveInstanceBlur = false;
function commitBeforeMutationEffects(root, firstChild) {
  focusedInstanceHandle = prepareForCommit(root.containerInfo);
  nextEffect = firstChild;
  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber

  var shouldFire = shouldFireAfterActiveInstanceBlur;
  shouldFireAfterActiveInstanceBlur = false;
  focusedInstanceHandle = null;
  return shouldFire;
}

function commitBeforeMutationEffects_begin() {
  while (nextEffect !== null) {
    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.

    var child = fiber.child;

    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitBeforeMutationEffects_complete();
    }
  }
}

function commitBeforeMutationEffects_complete() {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    setCurrentFiber(fiber);

    try {
      commitBeforeMutationEffectsOnFiber(fiber);
    } catch (error) {
      captureCommitPhaseError(fiber, fiber.return, error);
    }

    resetCurrentFiber();
    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitBeforeMutationEffectsOnFiber(finishedWork) {
  var current = finishedWork.alternate;
  var flags = finishedWork.flags;

  if ((flags & Snapshot) !== NoFlags) {
    setCurrentFiber(finishedWork);

    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          break;
        }

      case ClassComponent:
        {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);

                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
          }

          break;
        }

      case HostRoot:
        {
          {
            var root = finishedWork.stateNode;
            clearContainer(root.containerInfo);
          }

          break;
        }

      case HostComponent:
      case HostText:
      case HostPortal:
      case IncompleteClassComponent:
        // Nothing to do for these component types
        break;

      default:
        {
          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
        }
    }

    resetCurrentFiber();
  }
}

function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & flags) === flags) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          {
            if ((flags & Passive$1) !== NoFlags$1) {
              markComponentPassiveEffectUnmountStarted(finishedWork);
            } else if ((flags & Layout) !== NoFlags$1) {
              markComponentLayoutEffectUnmountStarted(finishedWork);
            }
          }

          {
            if ((flags & Insertion) !== NoFlags$1) {
              setIsRunningInsertionEffect(true);
            }
          }

          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);

          {
            if ((flags & Insertion) !== NoFlags$1) {
              setIsRunningInsertionEffect(false);
            }
          }

          {
            if ((flags & Passive$1) !== NoFlags$1) {
              markComponentPassiveEffectUnmountStopped();
            } else if ((flags & Layout) !== NoFlags$1) {
              markComponentLayoutEffectUnmountStopped();
            }
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitHookEffectListMount(flags, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & flags) === flags) {
        {
          if ((flags & Passive$1) !== NoFlags$1) {
            markComponentPassiveEffectMountStarted(finishedWork);
          } else if ((flags & Layout) !== NoFlags$1) {
            markComponentLayoutEffectMountStarted(finishedWork);
          }
        } // Mount


        var create = effect.create;

        {
          if ((flags & Insertion) !== NoFlags$1) {
            setIsRunningInsertionEffect(true);
          }
        }

        effect.destroy = create();

        {
          if ((flags & Insertion) !== NoFlags$1) {
            setIsRunningInsertionEffect(false);
          }
        }

        {
          if ((flags & Passive$1) !== NoFlags$1) {
            markComponentPassiveEffectMountStopped();
          } else if ((flags & Layout) !== NoFlags$1) {
            markComponentLayoutEffectMountStopped();
          }
        }

        {
          var destroy = effect.destroy;

          if (destroy !== undefined && typeof destroy !== 'function') {
            var hookName = void 0;

            if ((effect.tag & Layout) !== NoFlags) {
              hookName = 'useLayoutEffect';
            } else if ((effect.tag & Insertion) !== NoFlags) {
              hookName = 'useInsertionEffect';
            } else {
              hookName = 'useEffect';
            }

            var addendum = void 0;

            if (destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + hookName + '(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + destroy;
            }

            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveEffectDurations(finishedRoot, finishedWork) {
  {
    // Only Profilers with work in their subtree will have an Update effect scheduled.
    if ((finishedWork.flags & Update) !== NoFlags) {
      switch (finishedWork.tag) {
        case Profiler:
          {
            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
            var _finishedWork$memoize = finishedWork.memoizedProps,
                id = _finishedWork$memoize.id,
                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
            // It does not get reset until the start of the next commit phase.

            var commitTime = getCommitTime();
            var phase = finishedWork.alternate === null ? 'mount' : 'update';

            {
              if (isCurrentUpdateNested()) {
                phase = 'nested-update';
              }
            }

            if (typeof onPostCommit === 'function') {
              onPostCommit(id, phase, passiveEffectDuration, commitTime);
            } // Bubble times to the next nearest ancestor Profiler.
            // After we process that Profiler, we'll bubble further up.


            var parentFiber = finishedWork.return;

            outer: while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root = parentFiber.stateNode;
                  root.passiveEffectDuration += passiveEffectDuration;
                  break outer;

                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  parentStateNode.passiveEffectDuration += passiveEffectDuration;
                  break outer;
              }

              parentFiber = parentFiber.return;
            }

            break;
          }
      }
    }
  }
}

function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
  if ((finishedWork.flags & LayoutMask) !== NoFlags) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          if ( !offscreenSubtreeWasHidden) {
            // At this point layout effects have already been destroyed (during mutation phase).
            // This is done to prevent sibling component effects from interfering with each other,
            // e.g. a destroy function in one component should never override a ref set
            // by a create function in another component during the same commit.
            if ( finishedWork.mode & ProfileMode) {
              try {
                startLayoutEffectTimer();
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
              } finally {
                recordLayoutEffectDuration(finishedWork);
              }
            } else {
              commitHookEffectListMount(Layout | HasEffect, finishedWork);
            }
          }

          break;
        }

      case ClassComponent:
        {
          var instance = finishedWork.stateNode;

          if (finishedWork.flags & Update) {
            if (!offscreenSubtreeWasHidden) {
              if (current === null) {
                // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.
                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                  }
                }

                if ( finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    instance.componentDidMount();
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                } else {
                  instance.componentDidMount();
                }
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                var prevState = current.memoizedState; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                  }
                }

                if ( finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                } else {
                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                }
              }
            }
          } // TODO: I think this is now always non-null by the time it reaches the
          // commit phase. Consider removing the type check.


          var updateQueue = finishedWork.updateQueue;

          if (updateQueue !== null) {
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }
              }
            } // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.


            commitUpdateQueue(finishedWork, updateQueue, instance);
          }

          break;
        }

      case HostRoot:
        {
          // TODO: I think this is now always non-null by the time it reaches the
          // commit phase. Consider removing the type check.
          var _updateQueue = finishedWork.updateQueue;

          if (_updateQueue !== null) {
            var _instance = null;

            if (finishedWork.child !== null) {
              switch (finishedWork.child.tag) {
                case HostComponent:
                  _instance = getPublicInstance(finishedWork.child.stateNode);
                  break;

                case ClassComponent:
                  _instance = finishedWork.child.stateNode;
                  break;
              }
            }

            commitUpdateQueue(finishedWork, _updateQueue, _instance);
          }

          break;
        }

      case HostComponent:
        {
          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
          // (eg DOM renderer may schedule auto-focus for inputs and form controls).
          // These effects should only be committed when components are first mounted,
          // aka when there is no current/alternate.

          if (current === null && finishedWork.flags & Update) {
            var type = finishedWork.type;
            var props = finishedWork.memoizedProps;
            commitMount(_instance2, type, props);
          }

          break;
        }

      case HostText:
        {
          // We have no life-cycles associated with text.
          break;
        }

      case HostPortal:
        {
          // We have no life-cycles associated with portals.
          break;
        }

      case Profiler:
        {
          {
            var _finishedWork$memoize2 = finishedWork.memoizedProps,
                onCommit = _finishedWork$memoize2.onCommit,
                onRender = _finishedWork$memoize2.onRender;
            var effectDuration = finishedWork.stateNode.effectDuration;
            var commitTime = getCommitTime();
            var phase = current === null ? 'mount' : 'update';

            {
              if (isCurrentUpdateNested()) {
                phase = 'nested-update';
              }
            }

            if (typeof onRender === 'function') {
              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
            }

            {
              if (typeof onCommit === 'function') {
                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.
              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
              // because the effect is also where times bubble to parent Profilers.


              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
              // Do not reset these values until the next render so DevTools has a chance to read them first.

              var parentFiber = finishedWork.return;

              outer: while (parentFiber !== null) {
                switch (parentFiber.tag) {
                  case HostRoot:
                    var root = parentFiber.stateNode;
                    root.effectDuration += effectDuration;
                    break outer;

                  case Profiler:
                    var parentStateNode = parentFiber.stateNode;
                    parentStateNode.effectDuration += effectDuration;
                    break outer;
                }

                parentFiber = parentFiber.return;
              }
            }
          }

          break;
        }

      case SuspenseComponent:
        {
          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
          break;
        }

      case SuspenseListComponent:
      case IncompleteClassComponent:
      case ScopeComponent:
      case OffscreenComponent:
      case LegacyHiddenComponent:
      case TracingMarkerComponent:
        {
          break;
        }

      default:
        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
    }
  }

  if ( !offscreenSubtreeWasHidden) {
    {
      if (finishedWork.flags & Ref) {
        commitAttachRef(finishedWork);
      }
    }
  }
}

function reappearLayoutEffectsOnFiber(node) {
  // Turn on layout effects in a tree that previously disappeared.
  // TODO (Offscreen) Check: flags & LayoutStatic
  switch (node.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( node.mode & ProfileMode) {
          try {
            startLayoutEffectTimer();
            safelyCallCommitHookLayoutEffectListMount(node, node.return);
          } finally {
            recordLayoutEffectDuration(node);
          }
        } else {
          safelyCallCommitHookLayoutEffectListMount(node, node.return);
        }

        break;
      }

    case ClassComponent:
      {
        var instance = node.stateNode;

        if (typeof instance.componentDidMount === 'function') {
          safelyCallComponentDidMount(node, node.return, instance);
        }

        safelyAttachRef(node, node.return);
        break;
      }

    case HostComponent:
      {
        safelyAttachRef(node, node.return);
        break;
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  // Only hide or unhide the top-most host nodes.
  var hostSubtreeRoot = null;

  {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        if (hostSubtreeRoot === null) {
          hostSubtreeRoot = node;

          try {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      } else if (node.tag === HostText) {
        if (hostSubtreeRoot === null) {
          try {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        if (hostSubtreeRoot === node) {
          hostSubtreeRoot = null;
        }

        node = node.return;
      }

      if (hostSubtreeRoot === node) {
        hostSubtreeRoot = null;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag

    if (typeof ref === 'function') {
      var retVal;

      if ( finishedWork.mode & ProfileMode) {
        try {
          startLayoutEffectTimer();
          retVal = ref(instanceToUse);
        } finally {
          recordLayoutEffectDuration(finishedWork);
        }
      } else {
        retVal = ref(instanceToUse);
      }

      {
        if (typeof retVal === 'function') {
          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));
        }
      }
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function detachFiberMutation(fiber) {
  // Cut off the return pointer to disconnect it from the tree.
  // This enables us to detect and warn against state updates on an unmounted component.
  // It also prevents events from bubbling from within disconnected components.
  //
  // Ideally, we should also clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child.
  // This child itself will be GC:ed when the parent updates the next time.
  //
  // Note that we can't clear child or sibling pointers yet.
  // They're needed for passive effects and for findDOMNode.
  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
  //
  // Don't reset the alternate yet, either. We need that so we can detach the
  // alternate's fields in the passive phase. Clearing the return pointer is
  // sufficient for findDOMNode semantics.
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.return = null;
  }

  fiber.return = null;
}

function detachFiberAfterEffects(fiber) {
  var alternate = fiber.alternate;

  if (alternate !== null) {
    fiber.alternate = null;
    detachFiberAfterEffects(alternate);
  } // Note: Defensively using negation instead of < in case
  // `deletedTreeCleanUpLevel` is undefined.


  {
    // Clear cyclical Fiber fields. This level alone is designed to roughly
    // approximate the planned Fiber refactor. In that world, `setState` will be
    // bound to a special "instance" object instead of a Fiber. The Instance
    // object will not have any of these fields. It will only be connected to
    // the fiber tree via a single link at the root. So if this level alone is
    // sufficient to fix memory issues, that bodes well for our plans.
    fiber.child = null;
    fiber.deletions = null;
    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
    // tree, which has its own pointers to children, parents, and siblings.
    // The other host nodes also point back to fibers, so we should detach that
    // one, too.

    if (fiber.tag === HostComponent) {
      var hostInstance = fiber.stateNode;

      if (hostInstance !== null) {
        detachDeletedInstance(hostInstance);
      }
    }

    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
    // already disconnect the `return` pointer at the root of the deleted
    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not
    // cyclical — it's only cyclical when combined with `child`, `sibling`, and
    // `alternate`. But we'll clear it in the next level anyway, just in case.

    {
      fiber._debugOwner = null;
    }

    {
      // Theoretically, nothing in here should be necessary, because we already
      // disconnected the fiber from the tree. So even if something leaks this
      // particular fiber, it won't leak anything else
      //
      // The purpose of this branch is to be super aggressive so we can measure
      // if there's any difference in memory impact. If there is, that could
      // indicate a React leak we don't know about.
      fiber.return = null;
      fiber.dependencies = null;
      fiber.memoizedProps = null;
      fiber.memoizedState = null;
      fiber.pendingProps = null;
      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.

      fiber.updateQueue = null;
    }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.flags & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.flags & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  switch (parentFiber.tag) {
    case HostComponent:
      {
        var parent = parentFiber.stateNode;

        if (parentFiber.flags & ContentReset) {
          // Reset the text content of the parent before doing any insertions
          resetTextContent(parent); // Clear ContentReset from the effect tag

          parentFiber.flags &= ~ContentReset;
        }

        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.

        insertOrAppendPlacementNode(finishedWork, before, parent);
        break;
      }

    case HostRoot:
    case HostPortal:
      {
        var _parent = parentFiber.stateNode.containerInfo;

        var _before = getHostSibling(finishedWork);

        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
        break;
      }
    // eslint-disable-next-line-no-fallthrough

    default:
      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }
}

function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost) {
    var stateNode = node.stateNode;

    if (before) {
      insertInContainerBefore(parent, stateNode, before);
    } else {
      appendChildToContainer(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNodeIntoContainer(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function insertOrAppendPlacementNode(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost) {
    var stateNode = node.stateNode;

    if (before) {
      insertBefore(parent, stateNode, before);
    } else {
      appendChild(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNode(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNode(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
} // These are tracked on the stack as we recursively traverse a
// deleted subtree.
// TODO: Update these during the whole mutation phase, not just during
// a deletion.


var hostParent = null;
var hostParentIsContainer = false;

function commitDeletionEffects(root, returnFiber, deletedFiber) {
  {
    // We only have the top Fiber that was deleted but we need to recurse down its
    // children to find all the terminal nodes.
    // Recursively delete all host nodes from the parent, detach refs, clean
    // up mounted layout effects, and call componentWillUnmount.
    // We only need to remove the topmost host child in each branch. But then we
    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
    // could split this into two separate traversals functions, where the second
    // one doesn't include any removeChild logic. This is maybe the same
    // function as "disappearLayoutEffects" (or whatever that turns into after
    // the layout phase is refactored to use recursion).
    // Before starting, find the nearest host parent on the stack so we know
    // which instance/container to remove the children from.
    // TODO: Instead of searching up the fiber return path on every deletion, we
    // can track the nearest host component on the JS stack as we traverse the
    // tree during the commit phase. This would make insertions faster, too.
    var parent = returnFiber;

    findParent: while (parent !== null) {
      switch (parent.tag) {
        case HostComponent:
          {
            hostParent = parent.stateNode;
            hostParentIsContainer = false;
            break findParent;
          }

        case HostRoot:
          {
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break findParent;
          }

        case HostPortal:
          {
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break findParent;
          }
      }

      parent = parent.return;
    }

    if (hostParent === null) {
      throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');
    }

    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
    hostParent = null;
    hostParentIsContainer = false;
  }

  detachFiberMutation(deletedFiber);
}

function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
  // TODO: Use a static flag to skip trees that don't have unmount effects
  var child = parent.child;

  while (child !== null) {
    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
    child = child.sibling;
  }
}

function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
  // into their subtree. There are simpler cases in the inner switch
  // that don't modify the stack.

  switch (deletedFiber.tag) {
    case HostComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          safelyDetachRef(deletedFiber, nearestMountedAncestor);
        } // Intentional fallthrough to next branch

      }
    // eslint-disable-next-line-no-fallthrough

    case HostText:
      {
        // We only need to remove the nearest host child. Set the host parent
        // to `null` on the stack to indicate that nested children don't
        // need to be removed.
        {
          var prevHostParent = hostParent;
          var prevHostParentIsContainer = hostParentIsContainer;
          hostParent = null;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          hostParent = prevHostParent;
          hostParentIsContainer = prevHostParentIsContainer;

          if (hostParent !== null) {
            // Now that all the child effects have unmounted, we can remove the
            // node from the tree.
            if (hostParentIsContainer) {
              removeChildFromContainer(hostParent, deletedFiber.stateNode);
            } else {
              removeChild(hostParent, deletedFiber.stateNode);
            }
          }
        }

        return;
      }

    case DehydratedFragment:
      {
        // Delete the dehydrated suspense boundary and all of its content.


        {
          if (hostParent !== null) {
            if (hostParentIsContainer) {
              clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
            } else {
              clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
            }
          }
        }

        return;
      }

    case HostPortal:
      {
        {
          // When we go into a portal, it becomes the parent to remove from.
          var _prevHostParent = hostParent;
          var _prevHostParentIsContainer = hostParentIsContainer;
          hostParent = deletedFiber.stateNode.containerInfo;
          hostParentIsContainer = true;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          hostParent = _prevHostParent;
          hostParentIsContainer = _prevHostParentIsContainer;
        }

        return;
      }

    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          var updateQueue = deletedFiber.updateQueue;

          if (updateQueue !== null) {
            var lastEffect = updateQueue.lastEffect;

            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;

              do {
                var _effect = effect,
                    destroy = _effect.destroy,
                    tag = _effect.tag;

                if (destroy !== undefined) {
                  if ((tag & Insertion) !== NoFlags$1) {
                    safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                  } else if ((tag & Layout) !== NoFlags$1) {
                    {
                      markComponentLayoutEffectUnmountStarted(deletedFiber);
                    }

                    if ( deletedFiber.mode & ProfileMode) {
                      startLayoutEffectTimer();
                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                      recordLayoutEffectDuration(deletedFiber);
                    } else {
                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                    }

                    {
                      markComponentLayoutEffectUnmountStopped();
                    }
                  }
                }

                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
        }

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case ClassComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          safelyDetachRef(deletedFiber, nearestMountedAncestor);
          var instance = deletedFiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
          }
        }

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case ScopeComponent:
      {

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case OffscreenComponent:
      {
        if ( // TODO: Remove this dead flag
         deletedFiber.mode & ConcurrentMode) {
          // If this offscreen component is hidden, we already unmounted it. Before
          // deleting the children, track that it's already unmounted so that we
          // don't attempt to unmount the effects again.
          // TODO: If the tree is hidden, in most cases we should be able to skip
          // over the nested children entirely. An exception is we haven't yet found
          // the topmost host node to delete, which we already track on the stack.
          // But the other case is portals, which need to be detached no matter how
          // deeply they are nested. We should use a subtree flag to track whether a
          // subtree includes a nested portal.
          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        } else {
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }

        break;
      }

    default:
      {
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }
  }
}

function commitSuspenseCallback(finishedWork) {
  // TODO: Move this to passive phase
  var newState = finishedWork.memoizedState;
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current = finishedWork.alternate;

    if (current !== null) {
      var prevState = current.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of wakeables.
  // For each wakeable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var wakeables = finishedWork.updateQueue;

  if (wakeables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    wakeables.forEach(function (wakeable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);

      if (!retryCache.has(wakeable)) {
        retryCache.add(wakeable);

        {
          if (isDevToolsPresent) {
            if (inProgressLanes !== null && inProgressRoot !== null) {
              // If we have pending work still, associate the original updaters with it.
              restorePendingUpdaters(inProgressRoot, inProgressLanes);
            } else {
              throw Error('Expected finished root and lanes to be set. This is a bug in React.');
            }
          }
        }

        wakeable.then(retry, retry);
      }
    });
  }
} // This function detects when a Suspense boundary goes from visible to hidden.
function commitMutationEffects(root, finishedWork, committedLanes) {
  inProgressLanes = committedLanes;
  inProgressRoot = root;
  setCurrentFiber(finishedWork);
  commitMutationEffectsOnFiber(finishedWork, root);
  setCurrentFiber(finishedWork);
  inProgressLanes = null;
  inProgressRoot = null;
}

function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
  // Deletions effects can be scheduled on any fiber type. They need to happen
  // before the children effects hae fired.
  var deletions = parentFiber.deletions;

  if (deletions !== null) {
    for (var i = 0; i < deletions.length; i++) {
      var childToDelete = deletions[i];

      try {
        commitDeletionEffects(root, parentFiber, childToDelete);
      } catch (error) {
        captureCommitPhaseError(childToDelete, parentFiber, error);
      }
    }
  }

  var prevDebugFiber = getCurrentFiber();

  if (parentFiber.subtreeFlags & MutationMask) {
    var child = parentFiber.child;

    while (child !== null) {
      setCurrentFiber(child);
      commitMutationEffectsOnFiber(child, root);
      child = child.sibling;
    }
  }

  setCurrentFiber(prevDebugFiber);
}

function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
  var current = finishedWork.alternate;
  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
  // because the fiber tag is more specific. An exception is any flag related
  // to reconcilation, because those can be set on all fiber types.

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          try {
            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
            commitHookEffectListMount(Insertion | HasEffect, finishedWork);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          } // Layout effects are destroyed during the mutation phase so that all
          // destroy functions for all fibers are called before any create functions.
          // This prevents sibling component effects from interfering with each other,
          // e.g. a destroy function in one component should never override a ref set
          // by a create function in another component during the same commit.


          if ( finishedWork.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }

            recordLayoutEffectDuration(finishedWork);
          } else {
            try {
              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
        }

        return;
      }

    case ClassComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Ref) {
          if (current !== null) {
            safelyDetachRef(current, current.return);
          }
        }

        return;
      }

    case HostComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Ref) {
          if (current !== null) {
            safelyDetachRef(current, current.return);
          }
        }

        {
          // TODO: ContentReset gets cleared by the children during the commit
          // phase. This is a refactor hazard because it means we must read
          // flags the flags after `commitReconciliationEffects` has already run;
          // the order matters. We should refactor so that ContentReset does not
          // rely on mutating the flag during commit. Like by setting a flag
          // during the render phase instead.
          if (finishedWork.flags & ContentReset) {
            var instance = finishedWork.stateNode;

            try {
              resetTextContent(instance);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }

          if (flags & Update) {
            var _instance4 = finishedWork.stateNode;

            if (_instance4 != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current !== null ? current.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                try {
                  commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                } catch (error) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
              }
            }
          }
        }

        return;
      }

    case HostText:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          {
            if (finishedWork.stateNode === null) {
              throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            }

            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current !== null ? current.memoizedProps : newText;

            try {
              commitTextUpdate(textInstance, oldText, newText);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
        }

        return;
      }

    case HostRoot:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          {
            if (current !== null) {
              var prevRootState = current.memoizedState;

              if (prevRootState.isDehydrated) {
                try {
                  commitHydratedContainer(root.containerInfo);
                } catch (error) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
              }
            }
          }
        }

        return;
      }

    case HostPortal:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        return;
      }

    case SuspenseComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        var offscreenFiber = finishedWork.child;

        if (offscreenFiber.flags & Visibility) {
          var offscreenInstance = offscreenFiber.stateNode;
          var newState = offscreenFiber.memoizedState;
          var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
          // read it during an event

          offscreenInstance.isHidden = isHidden;

          if (isHidden) {
            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;

            if (!wasHidden) {
              // TODO: Move to passive phase
              markCommitTimeOfFallback();
            }
          }
        }

        if (flags & Update) {
          try {
            commitSuspenseCallback(finishedWork);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }

          attachSuspenseRetryListeners(finishedWork);
        }

        return;
      }

    case OffscreenComponent:
      {
        var _wasHidden = current !== null && current.memoizedState !== null;

        if ( // TODO: Remove this dead flag
         finishedWork.mode & ConcurrentMode) {
          // Before committing the children, track on the stack whether this
          // offscreen subtree was already hidden, so that we don't unmount the
          // effects again.
          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
          recursivelyTraverseMutationEffects(root, finishedWork);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        } else {
          recursivelyTraverseMutationEffects(root, finishedWork);
        }

        commitReconciliationEffects(finishedWork);

        if (flags & Visibility) {
          var _offscreenInstance = finishedWork.stateNode;
          var _newState = finishedWork.memoizedState;

          var _isHidden = _newState !== null;

          var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
          // read it during an event

          _offscreenInstance.isHidden = _isHidden;

          {
            if (_isHidden) {
              if (!_wasHidden) {
                if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                  nextEffect = offscreenBoundary;
                  var offscreenChild = offscreenBoundary.child;

                  while (offscreenChild !== null) {
                    nextEffect = offscreenChild;
                    disappearLayoutEffects_begin(offscreenChild);
                    offscreenChild = offscreenChild.sibling;
                  }
                }
              }
            }
          }

          {
            // TODO: This needs to run whenever there's an insertion or update
            // inside a hidden Offscreen tree.
            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
          }
        }

        return;
      }

    case SuspenseListComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          attachSuspenseRetryListeners(finishedWork);
        }

        return;
      }

    case ScopeComponent:
      {

        return;
      }

    default:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        return;
      }
  }
}

function commitReconciliationEffects(finishedWork) {
  // Placement effects (insertions, reorders) can be scheduled on any fiber
  // type. They needs to happen after the children effects have fired, but
  // before the effects on this fiber have fired.
  var flags = finishedWork.flags;

  if (flags & Placement) {
    try {
      commitPlacement(finishedWork);
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    } // Clear the "placement" from effect tag so that we know that this is
    // inserted, before any life-cycles like componentDidMount gets called.
    // TODO: findDOMNode doesn't rely on this any more but isMounted does
    // and isMounted is deprecated anyway so we should be able to kill this.


    finishedWork.flags &= ~Placement;
  }

  if (flags & Hydrating) {
    finishedWork.flags &= ~Hydrating;
  }
}

function commitLayoutEffects(finishedWork, root, committedLanes) {
  inProgressLanes = committedLanes;
  inProgressRoot = root;
  nextEffect = finishedWork;
  commitLayoutEffects_begin(finishedWork, root, committedLanes);
  inProgressLanes = null;
  inProgressRoot = null;
}

function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
  // Suspense layout effects semantics don't change for legacy roots.
  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;

  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if ( fiber.tag === OffscreenComponent && isModernRoot) {
      // Keep track of the current Offscreen stack's state.
      var isHidden = fiber.memoizedState !== null;
      var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;

      if (newOffscreenSubtreeIsHidden) {
        // The Offscreen tree is hidden. Skip over its layout effects.
        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        continue;
      } else {
        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
        var current = fiber.alternate;
        var wasHidden = current !== null && current.memoizedState !== null;
        var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.

        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;

        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
          // This is the root of a reappearing boundary. Turn its layout effects
          // back on.
          nextEffect = fiber;
          reappearLayoutEffects_begin(fiber);
        }

        var child = firstChild;

        while (child !== null) {
          nextEffect = child;
          commitLayoutEffects_begin(child, // New root; bubble back up to here and stop.
          root, committedLanes);
          child = child.sibling;
        } // Restore Offscreen state and resume in our-progress traversal.


        nextEffect = fiber;
        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        continue;
      }
    }

    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
    }
  }
}

function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & LayoutMask) !== NoFlags) {
      var current = fiber.alternate;
      setCurrentFiber(fiber);

      try {
        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
      } catch (error) {
        captureCommitPhaseError(fiber, fiber.return, error);
      }

      resetCurrentFiber();
    }

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function disappearLayoutEffects_begin(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)

    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ( fiber.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              commitHookEffectListUnmount(Layout, fiber, fiber.return);
            } finally {
              recordLayoutEffectDuration(fiber);
            }
          } else {
            commitHookEffectListUnmount(Layout, fiber, fiber.return);
          }

          break;
        }

      case ClassComponent:
        {
          // TODO (Offscreen) Check: flags & RefStatic
          safelyDetachRef(fiber, fiber.return);
          var instance = fiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(fiber, fiber.return, instance);
          }

          break;
        }

      case HostComponent:
        {
          safelyDetachRef(fiber, fiber.return);
          break;
        }

      case OffscreenComponent:
        {
          // Check if this is a
          var isHidden = fiber.memoizedState !== null;

          if (isHidden) {
            // Nested Offscreen tree is already hidden. Don't disappear
            // its effects.
            disappearLayoutEffects_complete(subtreeRoot);
            continue;
          }

          break;
        }
    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic


    if (firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      disappearLayoutEffects_complete(subtreeRoot);
    }
  }
}

function disappearLayoutEffects_complete(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function reappearLayoutEffects_begin(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if (fiber.tag === OffscreenComponent) {
      var isHidden = fiber.memoizedState !== null;

      if (isHidden) {
        // Nested Offscreen tree is still hidden. Don't re-appear its effects.
        reappearLayoutEffects_complete(subtreeRoot);
        continue;
      }
    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic


    if (firstChild !== null) {
      // This node may have been reused from a previous render, so we can't
      // assume its return pointer is correct.
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      reappearLayoutEffects_complete(subtreeRoot);
    }
  }
}

function reappearLayoutEffects_complete(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic

    setCurrentFiber(fiber);

    try {
      reappearLayoutEffectsOnFiber(fiber);
    } catch (error) {
      captureCommitPhaseError(fiber, fiber.return, error);
    }

    resetCurrentFiber();

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      // This node may have been reused from a previous render, so we can't
      // assume its return pointer is correct.
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
  nextEffect = finishedWork;
  commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
}

function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
    }
  }
}

function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & Passive) !== NoFlags) {
      setCurrentFiber(fiber);

      try {
        commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
      } catch (error) {
        captureCommitPhaseError(fiber, fiber.return, error);
      }

      resetCurrentFiber();
    }

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( finishedWork.mode & ProfileMode) {
          startPassiveEffectTimer();

          try {
            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
          } finally {
            recordPassiveEffectDuration(finishedWork);
          }
        } else {
          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
        }

        break;
      }
  }
}

function commitPassiveUnmountEffects(firstChild) {
  nextEffect = firstChild;
  commitPassiveUnmountEffects_begin();
}

function commitPassiveUnmountEffects_begin() {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var child = fiber.child;

    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
      var deletions = fiber.deletions;

      if (deletions !== null) {
        for (var i = 0; i < deletions.length; i++) {
          var fiberToDelete = deletions[i];
          nextEffect = fiberToDelete;
          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
        }

        {
          // A fiber was deleted from this parent fiber, but it's still part of
          // the previous (alternate) parent fiber's list of children. Because
          // children are a linked list, an earlier sibling that's still alive
          // will be connected to the deleted fiber via its `alternate`:
          //
          //   live fiber
          //   --alternate--> previous live fiber
          //   --sibling--> deleted fiber
          //
          // We can't disconnect `alternate` on nodes that haven't been deleted
          // yet, but we can disconnect the `sibling` and `child` pointers.
          var previousFiber = fiber.alternate;

          if (previousFiber !== null) {
            var detachedChild = previousFiber.child;

            if (detachedChild !== null) {
              previousFiber.child = null;

              do {
                var detachedSibling = detachedChild.sibling;
                detachedChild.sibling = null;
                detachedChild = detachedSibling;
              } while (detachedChild !== null);
            }
          }
        }

        nextEffect = fiber;
      }
    }

    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitPassiveUnmountEffects_complete();
    }
  }
}

function commitPassiveUnmountEffects_complete() {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & Passive) !== NoFlags) {
      setCurrentFiber(fiber);
      commitPassiveUnmountOnFiber(fiber);
      resetCurrentFiber();
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveUnmountOnFiber(finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( finishedWork.mode & ProfileMode) {
          startPassiveEffectTimer();
          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
          recordPassiveEffectDuration(finishedWork);
        } else {
          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
        }

        break;
      }
  }
}

function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
  while (nextEffect !== null) {
    var fiber = nextEffect; // Deletion effects fire in parent -> child order
    // TODO: Check if fiber has a PassiveStatic flag

    setCurrentFiber(fiber);
    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
    resetCurrentFiber();
    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)

    if (child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
    }
  }
}

function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var sibling = fiber.sibling;
    var returnFiber = fiber.return;

    {
      // Recursively traverse the entire deleted tree and clean up fiber fields.
      // This is more aggressive than ideal, and the long term goal is to only
      // have to detach the deleted tree at the root.
      detachFiberAfterEffects(fiber);

      if (fiber === deletedSubtreeRoot) {
        nextEffect = null;
        return;
      }
    }

    if (sibling !== null) {
      sibling.return = returnFiber;
      nextEffect = sibling;
      return;
    }

    nextEffect = returnFiber;
  }
}

function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
  switch (current.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( current.mode & ProfileMode) {
          startPassiveEffectTimer();
          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
          recordPassiveEffectDuration(current);
        } else {
          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
        }

        break;
      }
  }
} // TODO: Reuse reappearLayoutEffects traversal here?


function invokeLayoutEffectMountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListMount(Layout | HasEffect, fiber);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }

      case ClassComponent:
        {
          var instance = fiber.stateNode;

          try {
            instance.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }
    }
  }
}

function invokePassiveEffectMountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListMount(Passive$1 | HasEffect, fiber);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }
    }
  }
}

function invokeLayoutEffectUnmountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }

      case ClassComponent:
        {
          var instance = fiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(fiber, fiber.return, instance);
          }

          break;
        }
    }
  }
}

function invokePassiveEffectUnmountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }
        }
    }
  }
}

var COMPONENT_TYPE = 0;
var HAS_PSEUDO_CLASS_TYPE = 1;
var ROLE_TYPE = 2;
var TEST_NAME_TYPE = 3;
var TEXT_TYPE = 4;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  COMPONENT_TYPE = symbolFor('selector.component');
  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');
  ROLE_TYPE = symbolFor('selector.role');
  TEST_NAME_TYPE = symbolFor('selector.test_id');
  TEXT_TYPE = symbolFor('selector.text');
}
var commitHooks = [];
function onCommitRoot$1() {
  {
    commitHooks.forEach(function (commitHook) {
      return commitHook();
    });
  }
}

var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
function isLegacyActEnvironment(fiber) {
  {
    // Legacy mode. We preserve the behavior of React 17's act. It assumes an
    // act environment whenever `jest` is defined, but you can still turn off
    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
    // to false.
    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest

    var jestIsDefined = typeof jest !== 'undefined';
    return  jestIsDefined && isReactActEnvironmentGlobal !== false;
  }
}
function isConcurrentActEnvironment() {
  {
    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;

    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
      // TODO: Include link to relevant documentation page.
      error('The current testing environment is not configured to support ' + 'act(...)');
    }

    return isReactActEnvironmentGlobal;
  }
}

var ceil = Math.ceil;
var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
    ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig,
    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
var NoContext =
/*             */
0;
var BatchedContext =
/*               */
1;
var RenderContext =
/*                */
2;
var CommitContext =
/*                */
4;
var RootInProgress = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5;
var RootDidNotComplete = 6; // Describes where we are in the React execution stack

var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The lanes we're rendering

var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
// This is a superset of the lanes we started working on at the root. The only
// case where it's different from `workInProgressRootRenderLanes` is when we
// enter a subtree that is hidden and needs to be unhidden: Suspense and
// Offscreen component.
//
// Most things in the work loop should deal with workInProgressRootRenderLanes.
// Most things in begin/complete phases should deal with subtreeRenderLanes.

var subtreeRenderLanes = NoLanes;
var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
// slightly different than `renderLanes` because `renderLanes` can change as you
// enter and exit an Offscreen tree. This value is the combination of all render
// lanes for the entire render phase.

var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.

var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).

var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.

var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
// We will log them once the tree commits.

var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
// more and prefer CPU suspense heuristics instead.

var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
// suspense heuristics and opt out of rendering more content.

var RENDER_TIMEOUT_MS = 500;
var workInProgressTransitions = null;

function resetRenderTimer() {
  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
}

function getRenderTargetTime() {
  return workInProgressRootRenderTargetTime;
}
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsLanes = NoLanes;
var pendingPassiveProfilerEffects = [];
var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var isFlushingPassiveEffects = false;
var didScheduleUpdateDuringPassiveEffects = false;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0;
var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
// event times as simultaneous, even if the actual clock time has advanced
// between the first and second call.

var currentEventTime = NoTimestamp;
var currentEventTransitionLane = NoLanes;
var isRunningInsertionEffect = false;
function getWorkInProgressRoot() {
  return workInProgressRoot;
}
function requestEventTime() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return now();
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoTimestamp) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = now();
  return currentEventTime;
}
function requestUpdateLane(fiber) {
  // Special cases
  var mode = fiber.mode;

  if ((mode & ConcurrentMode) === NoMode) {
    return SyncLane;
  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
    // This is a render phase update. These are not officially supported. The
    // old behavior is to give this the same "thread" (lanes) as
    // whatever is currently rendering. So if you call `setState` on a component
    // that happens later in the same render, it will flush. Ideally, we want to
    // remove the special case and treat them as if they came from an
    // interleaved event. Regardless, this pattern is not officially supported.
    // This behavior is only a fallback. The flag only exists until we can roll
    // out the setState warning, since existing code might accidentally rely on
    // the current behavior.
    return pickArbitraryLane(workInProgressRootRenderLanes);
  }

  var isTransition = requestCurrentTransition() !== NoTransition;

  if (isTransition) {
    if ( ReactCurrentBatchConfig$3.transition !== null) {
      var transition = ReactCurrentBatchConfig$3.transition;

      if (!transition._updatedFibers) {
        transition._updatedFibers = new Set();
      }

      transition._updatedFibers.add(fiber);
    } // The algorithm for assigning an update to a lane should be stable for all
    // updates at the same priority within the same event. To do this, the
    // inputs to the algorithm must be the same.
    //
    // The trick we use is to cache the first of each of these inputs within an
    // event. Then reset the cached values once we can be sure the event is
    // over. Our heuristic for that is whenever we enter a concurrent work loop.


    if (currentEventTransitionLane === NoLane) {
      // All transitions within the same event are assigned the same lane.
      currentEventTransitionLane = claimNextTransitionLane();
    }

    return currentEventTransitionLane;
  } // Updates originating inside certain React methods, like flushSync, have
  // their priority set by tracking it with a context variable.
  //
  // The opaque type returned by the host config is internally a lane, so we can
  // use that directly.
  // TODO: Move this type conversion to the event priority module.


  var updateLane = getCurrentUpdatePriority();

  if (updateLane !== NoLane) {
    return updateLane;
  } // This update originated outside React. Ask the host environment for an
  // appropriate priority, based on the type of event.
  //
  // The opaque type returned by the host config is internally a lane, so we can
  // use that directly.
  // TODO: Move this type conversion to the event priority module.


  var eventLane = getCurrentEventPriority();
  return eventLane;
}

function requestRetryLane(fiber) {
  // This is a fork of `requestUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  // Special cases
  var mode = fiber.mode;

  if ((mode & ConcurrentMode) === NoMode) {
    return SyncLane;
  }

  return claimNextRetryLane();
}

function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
  checkForNestedUpdates();

  {
    if (isRunningInsertionEffect) {
      error('useInsertionEffect must not schedule updates.');
    }
  }

  {
    if (isFlushingPassiveEffects) {
      didScheduleUpdateDuringPassiveEffects = true;
    }
  } // Mark that the root has a pending update.


  markRootUpdated(root, lane, eventTime);

  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {
    // This update was dispatched during the render phase. This is a mistake
    // if the update originates from user space (with the exception of local
    // hook updates, which are handled differently and don't reach this
    // function), but there are some internal React features that use this as
    // an implementation detail, like selective hydration.
    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
  } else {
    // This is a normal update, scheduled from outside the render phase. For
    // example, during an input event.
    {
      if (isDevToolsPresent) {
        addFiberToLanesMap(root, fiber, lane);
      }
    }

    warnIfUpdatesNotWrappedWithActDEV(fiber);

    if (root === workInProgressRoot) {
      // Received an update to a tree that's in the middle of rendering. Mark
      // that there was an interleaved update work on this root. Unless the
      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
      // phase update. In that case, we don't treat render phase updates as if
      // they were interleaved, for backwards compat reasons.
      if ( (executionContext & RenderContext) === NoContext) {
        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
      }

      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
        // The root already suspended with a delay, which means this render
        // definitely won't finish. Since we have a new update, let's mark it as
        // suspended now, right before marking the incoming update. This has the
        // effect of interrupting the current render and switching to the update.
        // TODO: Make sure this doesn't override pings that happen while we've
        // already started rendering.
        markRootSuspended$1(root, workInProgressRootRenderLanes);
      }
    }

    ensureRootIsScheduled(root, eventTime);

    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
    !( ReactCurrentActQueue$1.isBatchingLegacy)) {
      // Flush the synchronous work now, unless we're already working or inside
      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
      // scheduleCallbackForFiber to preserve the ability to schedule a callback
      // without immediately flushing it. We only do this for user-initiated
      // updates, to preserve historical behavior of legacy mode.
      resetRenderTimer();
      flushSyncCallbacksOnlyInLegacyMode();
    }
  }
}
function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
  // This is a special fork of scheduleUpdateOnFiber that is only used to
  // schedule the initial hydration of a root that has just been created. Most
  // of the stuff in scheduleUpdateOnFiber can be skipped.
  //
  // The main reason for this separate path, though, is to distinguish the
  // initial children from subsequent updates. In fully client-rendered roots
  // (createRoot instead of hydrateRoot), all top-level renders are modeled as
  // updates, but hydration roots are special because the initial render must
  // match what was rendered on the server.
  var current = root.current;
  current.lanes = lane;
  markRootUpdated(root, lane, eventTime);
  ensureRootIsScheduled(root, eventTime);
}
function isUnsafeClassRenderPhaseUpdate(fiber) {
  // Check if this is a render phase update. Only called by class components,
  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
  return (// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
    // decided not to enable it.
     (executionContext & RenderContext) !== NoContext
  );
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the priority
// of the existing task is the same as the priority of the next level that the
// root has work on. This function is called on every update, and right before
// exiting a task.

function ensureRootIsScheduled(root, currentTime) {
  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
  // expired so we know to work on those next.

  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.

  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (nextLanes === NoLanes) {
    // Special case: There's nothing to work on.
    if (existingCallbackNode !== null) {
      cancelCallback$1(existingCallbackNode);
    }

    root.callbackNode = null;
    root.callbackPriority = NoLane;
    return;
  } // We use the highest priority lane to represent the priority of the callback.


  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.

  var existingCallbackPriority = root.callbackPriority;

  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
  // Scheduler task, rather than an `act` task, cancel it and re-scheduled
  // on the `act` queue.
  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
    {
      // If we're going to re-use an existing task, it needs to exist.
      // Assume that discrete update microtasks are non-cancellable and null.
      // TODO: Temporary until we confirm this warning is not fired.
      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');
      }
    } // The priority hasn't changed. We can reuse the existing task. Exit.


    return;
  }

  if (existingCallbackNode != null) {
    // Cancel the existing callback. We'll schedule a new one below.
    cancelCallback$1(existingCallbackNode);
  } // Schedule a new callback.


  var newCallbackNode;

  if (newCallbackPriority === SyncLane) {
    // Special case: Sync React callbacks are scheduled on a special
    // internal queue
    if (root.tag === LegacyRoot) {
      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {
        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
      }

      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
    } else {
      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
    }

    {
      // Flush the queue in a microtask.
      if ( ReactCurrentActQueue$1.current !== null) {
        // Inside `act`, use our internal `act` queue so that these get flushed
        // at the end of the current scope even when using the sync version
        // of `act`.
        ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
      } else {
        scheduleMicrotask(function () {
          // In Safari, appending an iframe forces microtasks to run.
          // https://github.com/facebook/react/issues/22459
          // We don't support running callbacks in the middle of render
          // or commit so we need to check against that.
          if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
            // Note that this would still prematurely flush the callbacks
            // if this happens outside render or commit phase (e.g. in an event).
            flushSyncCallbacks();
          }
        });
      }
    }

    newCallbackNode = null;
  } else {
    var schedulerPriorityLevel;

    switch (lanesToEventPriority(nextLanes)) {
      case DiscreteEventPriority:
        schedulerPriorityLevel = ImmediatePriority;
        break;

      case ContinuousEventPriority:
        schedulerPriorityLevel = UserBlockingPriority;
        break;

      case DefaultEventPriority:
        schedulerPriorityLevel = NormalPriority;
        break;

      case IdleEventPriority:
        schedulerPriorityLevel = IdlePriority;
        break;

      default:
        schedulerPriorityLevel = NormalPriority;
        break;
    }

    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  }

  root.callbackPriority = newCallbackPriority;
  root.callbackNode = newCallbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root, didTimeout) {
  {
    resetNestedUpdateFlag();
  } // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.


  currentEventTime = NoTimestamp;
  currentEventTransitionLane = NoLanes;

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  } // Flush any pending passive effects before deciding which lanes to work on,
  // in case they schedule additional work.


  var originalCallbackNode = root.callbackNode;
  var didFlushPassiveEffects = flushPassiveEffects();

  if (didFlushPassiveEffects) {
    // Something in the passive effect phase may have canceled the current task.
    // Check if the task node for this root was changed.
    if (root.callbackNode !== originalCallbackNode) {
      // The current task was canceled. Exit. We don't need to call
      // `ensureRootIsScheduled` because the check above implies either that
      // there's a new task, or that there's no remaining work on this root.
      return null;
    }
  } // Determine the next lanes to work on, using the fields stored
  // on the root.


  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (lanes === NoLanes) {
    // Defensive coding. This is never expected to happen.
    return null;
  } // We disable time-slicing in some cases: if the work has been CPU-bound
  // for too long ("expired" work, to prevent starvation), or we're in
  // sync-updates-by-default mode.
  // TODO: We only check `didTimeout` defensively, to account for a Scheduler
  // bug we're still investigating. Once the bug in Scheduler is fixed,
  // we can remove this, since we track expiration ourselves.


  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);
  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);

  if (exitStatus !== RootInProgress) {
    if (exitStatus === RootErrored) {
      // If something threw an error, try rendering one more time. We'll
      // render synchronously to block concurrent data mutations, and we'll
      // includes all pending updates are included. If it still fails after
      // the second attempt, we'll give up and commit the resulting tree.
      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

      if (errorRetryLanes !== NoLanes) {
        lanes = errorRetryLanes;
        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
      }
    }

    if (exitStatus === RootFatalErrored) {
      var fatalError = workInProgressRootFatalError;
      prepareFreshStack(root, NoLanes);
      markRootSuspended$1(root, lanes);
      ensureRootIsScheduled(root, now());
      throw fatalError;
    }

    if (exitStatus === RootDidNotComplete) {
      // The render unwound without completing the tree. This happens in special
      // cases where need to exit the current render without producing a
      // consistent tree or committing.
      //
      // This should only happen during a concurrent render, not a discrete or
      // synchronous update. We should have already checked for this when we
      // unwound the stack.
      markRootSuspended$1(root, lanes);
    } else {
      // The render completed.
      // Check if this render may have yielded to a concurrent event, and if so,
      // confirm that any newly rendered stores are consistent.
      // TODO: It's possible that even a concurrent render may never have yielded
      // to the main thread, if it was fast enough, or if it expired. We could
      // skip the consistency check in that case, too.
      var renderWasConcurrent = !includesBlockingLane(root, lanes);
      var finishedWork = root.current.alternate;

      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
        // A store was mutated in an interleaved event. Render again,
        // synchronously, to block further mutations.
        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw

        if (exitStatus === RootErrored) {
          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

          if (_errorRetryLanes !== NoLanes) {
            lanes = _errorRetryLanes;
            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
            // concurrent events.
          }
        }

        if (exitStatus === RootFatalErrored) {
          var _fatalError = workInProgressRootFatalError;
          prepareFreshStack(root, NoLanes);
          markRootSuspended$1(root, lanes);
          ensureRootIsScheduled(root, now());
          throw _fatalError;
        }
      } // We now have a consistent tree. The next step is either to commit it,
      // or, if something suspended, wait to commit it after a timeout.


      root.finishedWork = finishedWork;
      root.finishedLanes = lanes;
      finishConcurrentRender(root, exitStatus, lanes);
    }
  }

  ensureRootIsScheduled(root, now());

  if (root.callbackNode === originalCallbackNode) {
    // The task node scheduled for this root is the same one that's
    // currently executed. Need to return a continuation.
    return performConcurrentWorkOnRoot.bind(null, root);
  }

  return null;
}

function recoverFromConcurrentError(root, errorRetryLanes) {
  // If an error occurred during hydration, discard server response and fall
  // back to client side render.
  // Before rendering again, save the errors from the previous attempt.
  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;

  if (isRootDehydrated(root)) {
    // The shell failed to hydrate. Set a flag to force a client rendering
    // during the next attempt. To do this, we call prepareFreshStack now
    // to create the root work-in-progress fiber. This is a bit weird in terms
    // of factoring, because it relies on renderRootSync not calling
    // prepareFreshStack again in the call below, which happens because the
    // root and lanes haven't changed.
    //
    // TODO: I think what we should do is set ForceClientRender inside
    // throwException, like we do for nested Suspense boundaries. The reason
    // it's here instead is so we can switch to the synchronous work loop, too.
    // Something to consider for a future refactor.
    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
    rootWorkInProgress.flags |= ForceClientRender;

    {
      errorHydratingContainer(root.containerInfo);
    }
  }

  var exitStatus = renderRootSync(root, errorRetryLanes);

  if (exitStatus !== RootErrored) {
    // Successfully finished rendering on retry
    // The errors from the failed first attempt have been recovered. Add
    // them to the collection of recoverable errors. We'll log them in the
    // commit phase.
    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
    // from the first attempt, to preserve the causal sequence.

    if (errorsFromSecondAttempt !== null) {
      queueRecoverableErrors(errorsFromSecondAttempt);
    }
  }

  return exitStatus;
}

function queueRecoverableErrors(errors) {
  if (workInProgressRootRecoverableErrors === null) {
    workInProgressRootRecoverableErrors = errors;
  } else {
    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
  }
}

function finishConcurrentRender(root, exitStatus, lanes) {
  switch (exitStatus) {
    case RootInProgress:
    case RootFatalErrored:
      {
        throw new Error('Root did not complete. This is a bug in React.');
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // We should have already attempted to retry this tree. If we reached
        // this point, it errored again. Commit it.
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootSuspended:
      {
        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.

        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
        !shouldForceFlushFallbacksInDEV()) {
          // This render only included retries, no updates. Throttle committing
          // retries so that we don't show too many loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            var nextLanes = getNextLanes(root, NoLanes);

            if (nextLanes !== NoLanes) {
              // There's additional work on this root.
              break;
            }

            var suspendedLanes = root.suspendedLanes;

            if (!isSubsetOfLanes(suspendedLanes, lanes)) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              // FIXME: What if the suspended lanes are Idle? Should not restart.
              var eventTime = requestEventTime();
              markRootPinged(root, suspendedLanes);
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspended$1(root, lanes);

        if (includesOnlyTransitions(lanes)) {
          // This is a transition, so we should exit without committing a
          // placeholder and without scheduling a timeout. Delay indefinitely
          // until we receive more data.
          break;
        }

        if (!shouldForceFlushFallbacksInDEV()) {
          // This is not a transition, but we did trigger an avoided state.
          // Schedule a placeholder to display after a short delay, using the Just
          // Noticeable Difference.
          // TODO: Is the JND optimization worth the added complexity? If this is
          // the only reason we track the event time, then probably not.
          // Consider removing.
          var mostRecentEventTime = getMostRecentEventTime(root, lanes);
          var eventTimeMs = mostRecentEventTime;
          var timeElapsedMs = now() - eventTimeMs;

          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // Instead of committing the fallback immediately, wait for more data
            // to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
            break;
          }
        } // Commit the placeholder.


        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    default:
      {
        throw new Error('Unknown root exit status.');
      }
  }
}

function isRenderConsistentWithExternalStores(finishedWork) {
  // Search the rendered tree for external store reads, and check whether the
  // stores were mutated in a concurrent event. Intentionally using an iterative
  // loop instead of recursion so we can exit early.
  var node = finishedWork;

  while (true) {
    if (node.flags & StoreConsistency) {
      var updateQueue = node.updateQueue;

      if (updateQueue !== null) {
        var checks = updateQueue.stores;

        if (checks !== null) {
          for (var i = 0; i < checks.length; i++) {
            var check = checks[i];
            var getSnapshot = check.getSnapshot;
            var renderedValue = check.value;

            try {
              if (!objectIs(getSnapshot(), renderedValue)) {
                // Found an inconsistent store.
                return false;
              }
            } catch (error) {
              // If `getSnapshot` throws, return `false`. This will schedule
              // a re-render, and the error will be rethrown during render.
              return false;
            }
          }
        }
      }
    }

    var child = node.child;

    if (node.subtreeFlags & StoreConsistency && child !== null) {
      child.return = node;
      node = child;
      continue;
    }

    if (node === finishedWork) {
      return true;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return true;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow doesn't know this is unreachable, but eslint does
  // eslint-disable-next-line no-unreachable


  return true;
}

function markRootSuspended$1(root, suspendedLanes) {
  // When suspending, we should always exclude lanes that were pinged or (more
  // rarely, since we try to avoid it) updated during the render phase.
  // TODO: Lol maybe there's a better way to factor this besides this
  // obnoxiously named function :)
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
  markRootSuspended(root, suspendedLanes);
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  {
    syncNestedUpdateFlag();
  }

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  }

  flushPassiveEffects();
  var lanes = getNextLanes(root, NoLanes);

  if (!includesSomeLane(lanes, SyncLane)) {
    // There's no remaining sync work left.
    ensureRootIsScheduled(root, now());
    return null;
  }

  var exitStatus = renderRootSync(root, lanes);

  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
    // If something threw an error, try rendering one more time. We'll render
    // synchronously to block concurrent data mutations, and we'll includes
    // all pending updates are included. If it still fails after the second
    // attempt, we'll give up and commit the resulting tree.
    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

    if (errorRetryLanes !== NoLanes) {
      lanes = errorRetryLanes;
      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
    }
  }

  if (exitStatus === RootFatalErrored) {
    var fatalError = workInProgressRootFatalError;
    prepareFreshStack(root, NoLanes);
    markRootSuspended$1(root, lanes);
    ensureRootIsScheduled(root, now());
    throw fatalError;
  }

  if (exitStatus === RootDidNotComplete) {
    throw new Error('Root did not complete. This is a bug in React.');
  } // We now have a consistent tree. Because this is a sync render, we
  // will commit it even if something suspended.


  var finishedWork = root.current.alternate;
  root.finishedWork = finishedWork;
  root.finishedLanes = lanes;
  commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
  // pending level.

  ensureRootIsScheduled(root, now());
  return null;
}

function flushRoot(root, lanes) {
  if (lanes !== NoLanes) {
    markRootEntangled(root, mergeLanes(lanes, SyncLane));
    ensureRootIsScheduled(root, now());

    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
      resetRenderTimer();
      flushSyncCallbacks();
    }
  }
}
function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
    // most batchedUpdates-like method.

    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
    !( ReactCurrentActQueue$1.isBatchingLegacy)) {
      resetRenderTimer();
      flushSyncCallbacksOnlyInLegacyMode();
    }
  }
}
function discreteUpdates(fn, a, b, c, d) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig$3.transition;

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);
    return fn(a, b, c, d);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;

    if (executionContext === NoContext) {
      resetRenderTimer();
    }
  }
} // Overload the definition to the two valid signatures.
// Warning, this opts-out of checking the function body.

// eslint-disable-next-line no-redeclare
function flushSync(fn) {
  // In legacy mode, we flush pending passive effects at the beginning of the
  // next event, not at the end of the previous one.
  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
    flushPassiveEffects();
  }

  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;
  var prevTransition = ReactCurrentBatchConfig$3.transition;
  var previousPriority = getCurrentUpdatePriority();

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);

    if (fn) {
      return fn();
    } else {
      return undefined;
    }
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;
    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
    // Note that this will happen even if batchedUpdates is higher up
    // the stack.

    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
      flushSyncCallbacks();
    }
  }
}
function isAlreadyRendering() {
  // Used by the renderer to print a warning if certain APIs are called from
  // the wrong context.
  return  (executionContext & (RenderContext | CommitContext)) !== NoContext;
}
function pushRenderLanes(fiber, lanes) {
  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
}
function popRenderLanes(fiber) {
  subtreeRenderLanes = subtreeRenderLanesCursor.current;
  pop(subtreeRenderLanesCursor, fiber);
}

function prepareFreshStack(root, lanes) {
  root.finishedWork = null;
  root.finishedLanes = NoLanes;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      var current = interruptedWork.alternate;
      unwindInterruptedWork(current, interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  var rootWorkInProgress = createWorkInProgress(root.current, null);
  workInProgress = rootWorkInProgress;
  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
  workInProgressRootExitStatus = RootInProgress;
  workInProgressRootFatalError = null;
  workInProgressRootSkippedLanes = NoLanes;
  workInProgressRootInterleavedUpdatedLanes = NoLanes;
  workInProgressRootPingedLanes = NoLanes;
  workInProgressRootConcurrentErrors = null;
  workInProgressRootRecoverableErrors = null;
  finishQueueingConcurrentUpdates();

  {
    ReactStrictModeWarnings.discardPendingWarnings();
  }

  return rootWorkInProgress;
}

function handleError(root, thrownValue) {
  do {
    var erroredWork = workInProgress;

    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooksAfterThrow();
      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
      // separate issue. Write a regression test using string refs.

      ReactCurrentOwner$2.current = null;

      if (erroredWork === null || erroredWork.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
        // sibling, or the parent if there are no siblings. But since the root
        // has no siblings nor a parent, we set it to null. Usually this is
        // handled by `completeUnitOfWork` or `unwindWork`, but since we're
        // intentionally not calling those, we need set it here.
        // TODO: Consider calling `unwindWork` to pop the contexts.

        workInProgress = null;
        return;
      }

      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
      }

      if (enableSchedulingProfiler) {
        markComponentRenderStopped();

        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
          var wakeable = thrownValue;
          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
        } else {
          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
      }

      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
      completeUnitOfWork(erroredWork);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;

      if (workInProgress === erroredWork && erroredWork !== null) {
        // If this boundary has already errored, then we had trouble processing
        // the error. Bubble it to the next boundary.
        erroredWork = erroredWork.return;
        workInProgress = erroredWork;
      } else {
        erroredWork = workInProgress;
      }

      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher() {
  var prevDispatcher = ReactCurrentDispatcher$2.current;
  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher$2.current = prevDispatcher;
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markSkippedUpdateLanes(lane) {
  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootInProgress) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there are updates that we skipped tree that might have unblocked
  // this render.


  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
    // Mark the current render as suspended so that we switch to working on
    // the updates that were skipped. Usually we only suspend at the end of
    // the render phase.
    // TODO: We should probably always mark the root as suspended immediately
    // (inside this function), since by suspending at the end of the render
    // phase introduces a potential mistake where we suspend lanes that were
    // pinged or updated while we were rendering.
    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
  }
}
function renderDidError(error) {
  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
    workInProgressRootExitStatus = RootErrored;
  }

  if (workInProgressRootConcurrentErrors === null) {
    workInProgressRootConcurrentErrors = [error];
  } else {
    workInProgressRootConcurrentErrors.push(error);
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootInProgress;
}

function renderRootSync(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    {
      if (isDevToolsPresent) {
        var memoizedUpdaters = root.memoizedUpdaters;

        if (memoizedUpdaters.size > 0) {
          restorePendingUpdaters(root, workInProgressRootRenderLanes);
          memoizedUpdaters.clear();
        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
        // If we bailout on this work, we'll move them back (like above).
        // It's important to move them now in case the work spawns more work at the same priority with different updaters.
        // That way we can keep the current update and future updates separate.


        movePendingFibersToMemoized(root, lanes);
      }
    }

    workInProgressTransitions = getTransitionsForLanes();
    prepareFreshStack(root, lanes);
  }

  {
    markRenderStarted(lanes);
  }

  do {
    try {
      workLoopSync();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();
  executionContext = prevExecutionContext;
  popDispatcher(prevDispatcher);

  if (workInProgress !== null) {
    // This is a sync render, so we should have finished the whole tree.
    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');
  }

  {
    markRenderStopped();
  } // Set this to null to indicate there's no in-progress render.


  workInProgressRoot = null;
  workInProgressRootRenderLanes = NoLanes;
  return workInProgressRootExitStatus;
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    performUnitOfWork(workInProgress);
  }
}

function renderRootConcurrent(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    {
      if (isDevToolsPresent) {
        var memoizedUpdaters = root.memoizedUpdaters;

        if (memoizedUpdaters.size > 0) {
          restorePendingUpdaters(root, workInProgressRootRenderLanes);
          memoizedUpdaters.clear();
        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
        // If we bailout on this work, we'll move them back (like above).
        // It's important to move them now in case the work spawns more work at the same priority with different updaters.
        // That way we can keep the current update and future updates separate.


        movePendingFibersToMemoized(root, lanes);
      }
    }

    workInProgressTransitions = getTransitionsForLanes();
    resetRenderTimer();
    prepareFreshStack(root, lanes);
  }

  {
    markRenderStarted(lanes);
  }

  do {
    try {
      workLoopConcurrent();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();
  popDispatcher(prevDispatcher);
  executionContext = prevExecutionContext;


  if (workInProgress !== null) {
    // Still work remaining.
    {
      markRenderYielded();
    }

    return RootInProgress;
  } else {
    // Completed the tree.
    {
      markRenderStopped();
    } // Set this to null to indicate there's no in-progress render.


    workInProgressRoot = null;
    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.

    return workInProgressRootExitStatus;
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current = unitOfWork.alternate;
  setCurrentFiber(unitOfWork);
  var next;

  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    completeUnitOfWork(unitOfWork);
  } else {
    workInProgress = next;
  }

  ReactCurrentOwner$2.current = null;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  var completedWork = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current = completedWork.alternate;
    var returnFiber = completedWork.return; // Check if the work completed or if something threw.

    if ((completedWork.flags & Incomplete) === NoFlags) {
      setCurrentFiber(completedWork);
      var next = void 0;

      if ( (completedWork.mode & ProfileMode) === NoMode) {
        next = completeWork(current, completedWork, subtreeRenderLanes);
      } else {
        startProfilerTimer(completedWork);
        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
      }

      resetCurrentFiber();

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        workInProgress = next;
        return;
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.


      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.flags &= HostEffectMask;
        workInProgress = _next;
        return;
      }

      if ( (completedWork.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.

        var actualDuration = completedWork.actualDuration;
        var child = completedWork.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its subtree flags.
        returnFiber.flags |= Incomplete;
        returnFiber.subtreeFlags = NoFlags;
        returnFiber.deletions = null;
      } else {
        // We've unwound all the way to the root.
        workInProgressRootExitStatus = RootDidNotComplete;
        workInProgress = null;
        return;
      }
    }

    var siblingFiber = completedWork.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      workInProgress = siblingFiber;
      return;
    } // Otherwise, return to the parent


    completedWork = returnFiber; // Update the next thing we're working on in case something throws.

    workInProgress = completedWork;
  } while (completedWork !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootInProgress) {
    workInProgressRootExitStatus = RootCompleted;
  }
}

function commitRoot(root, recoverableErrors, transitions) {
  // TODO: This no longer makes any sense. We already wrap the mutation and
  // layout phases. Should be able to remove.
  var previousUpdateLanePriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig$3.transition;

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);
    commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
  } finally {
    ReactCurrentBatchConfig$3.transition = prevTransition;
    setCurrentUpdatePriority(previousUpdateLanePriority);
  }

  return null;
}

function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  }

  var finishedWork = root.finishedWork;
  var lanes = root.finishedLanes;

  {
    markCommitStarted(lanes);
  }

  if (finishedWork === null) {

    {
      markCommitStopped();
    }

    return null;
  } else {
    {
      if (lanes === NoLanes) {
        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');
      }
    }
  }

  root.finishedWork = null;
  root.finishedLanes = NoLanes;

  if (finishedWork === root.current) {
    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null;
  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
  markRootFinished(root, remainingLanes);

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    workInProgressRootRenderLanes = NoLanes;
  } // If there are pending passive effects, schedule a callback to process them.
  // Do this as early as possible, so it is queued before anything else that
  // might get scheduled in the commit phase. (See #16714.)
  // TODO: Delete all other places that schedule the passive effect callback
  // They're redundant.


  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
    if (!rootDoesHavePassiveEffects) {
      rootDoesHavePassiveEffects = true;
      // to store it in pendingPassiveTransitions until they get processed
      // We need to pass this through as an argument to commitRoot
      // because workInProgressTransitions might have changed between
      // the previous render and commit if we throttle the commit
      // with setTimeout

      pendingPassiveTransitions = transitions;
      scheduleCallback$1(NormalPriority, function () {
        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
        // *after* passive effects fire to avoid freeing a cache pool that may
        // be referenced by a node in the tree (HostRoot, Cache boundary etc)

        return null;
      });
    }
  } // Check if there are any effects in the whole tree.
  // TODO: This is left over from the effect list implementation, where we had
  // to check for the existence of `firstEffect` to satisfy Flow. I think the
  // only other reason this optimization exists is because it affects profiling.
  // Reconsider whether this is necessary.


  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;

  if (subtreeHasEffects || rootHasEffect) {
    var prevTransition = ReactCurrentBatchConfig$3.transition;
    ReactCurrentBatchConfig$3.transition = null;
    var previousPriority = getCurrentUpdatePriority();
    setCurrentUpdatePriority(DiscreteEventPriority);
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext; // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);

    {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    }


    commitMutationEffects(root, finishedWork, lanes);

    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read

    {
      markLayoutEffectsStarted(lanes);
    }

    commitLayoutEffects(finishedWork, root, lanes);

    {
      markLayoutEffectsStopped();
    }
    // opportunity to paint.


    requestPaint();
    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.

    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    {
      recordCommitTime();
    }
  }

  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsLanes = lanes;
  } else {

    {
      nestedPassiveUpdateCount = 0;
      rootWithPassiveNestedUpdates = null;
    }
  } // Read this again, since an effect might have updated it


  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
  // TODO: This is part of the `componentDidCatch` implementation. Its purpose
  // is to detect whether something might have called setState inside
  // `componentDidCatch`. The mechanism is known to be flawed because `setState`
  // inside `componentDidCatch` is itself flawed — that's why we recommend
  // `getDerivedStateFromError` instead. However, it could be improved by
  // checking if remainingLanes includes Sync work, instead of whether there's
  // any work remaining at all (which would also include stuff like Suspense
  // retries or transitions). It's been like this for a while, though, so fixing
  // it probably isn't that urgent.

  if (remainingLanes === NoLanes) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  {
    if (!rootDidHavePassiveEffects) {
      commitDoubleInvokeEffectsInDEV(root.current, false);
    }
  }

  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);

  {
    if (isDevToolsPresent) {
      root.memoizedUpdaters.clear();
    }
  }

  {
    onCommitRoot$1();
  } // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.


  ensureRootIsScheduled(root, now());

  if (recoverableErrors !== null) {
    // There were errors during this render, but recovered from them without
    // needing to surface it to the UI. We log them here.
    var onRecoverableError = root.onRecoverableError;

    for (var i = 0; i < recoverableErrors.length; i++) {
      var recoverableError = recoverableErrors[i];
      var componentStack = recoverableError.stack;
      var digest = recoverableError.digest;
      onRecoverableError(recoverableError.value, {
        componentStack: componentStack,
        digest: digest
      });
    }
  }

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var error$1 = firstUncaughtError;
    firstUncaughtError = null;
    throw error$1;
  } // If the passive effects are the result of a discrete render, flush them
  // synchronously at the end of the current task so that the result is
  // immediately observable. Otherwise, we assume that they are not
  // order-dependent and do not need to be observed by external systems, so we
  // can wait until after paint.
  // TODO: We can optimize this by not scheduling the callback earlier. Since we
  // currently schedule the callback in multiple places, will wait until those
  // are consolidated.


  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {
    flushPassiveEffects();
  } // Read this again, since a passive effect might have updated it


  remainingLanes = root.pendingLanes;

  if (includesSomeLane(remainingLanes, SyncLane)) {
    {
      markNestedUpdateScheduled();
    } // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.


    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbacks();

  {
    markCommitStopped();
  }

  return null;
}

function flushPassiveEffects() {
  // Returns whether passive effects were flushed.
  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
  // probably just combine the two functions. I believe they were only separate
  // in the first place because we used to wrap it with
  // `Scheduler.runWithPriority`, which accepts a function. But now we track the
  // priority within React itself, so we can mutate the variable directly.
  if (rootWithPendingPassiveEffects !== null) {
    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
    var prevTransition = ReactCurrentBatchConfig$3.transition;
    var previousPriority = getCurrentUpdatePriority();

    try {
      ReactCurrentBatchConfig$3.transition = null;
      setCurrentUpdatePriority(priority);
      return flushPassiveEffectsImpl();
    } finally {
      setCurrentUpdatePriority(previousPriority);
      ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
    }
  }

  return false;
}
function enqueuePendingPassiveProfilerEffect(fiber) {
  {
    pendingPassiveProfilerEffects.push(fiber);

    if (!rootDoesHavePassiveEffects) {
      rootDoesHavePassiveEffects = true;
      scheduleCallback$1(NormalPriority, function () {
        flushPassiveEffects();
        return null;
      });
    }
  }
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  } // Cache and clear the transitions flag


  var transitions = pendingPassiveTransitions;
  pendingPassiveTransitions = null;
  var root = rootWithPendingPassiveEffects;
  var lanes = pendingPassiveEffectsLanes;
  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
  // Figure out why and fix it. It's not causing any known issues (probably
  // because it's only used for profiling), but it's a refactor hazard.

  pendingPassiveEffectsLanes = NoLanes;

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Cannot flush passive effects while already rendering.');
  }

  {
    isFlushingPassiveEffects = true;
    didScheduleUpdateDuringPassiveEffects = false;
  }

  {
    markPassiveEffectsStarted(lanes);
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  commitPassiveUnmountEffects(root.current);
  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects

  {
    var profilerEffects = pendingPassiveProfilerEffects;
    pendingPassiveProfilerEffects = [];

    for (var i = 0; i < profilerEffects.length; i++) {
      var _fiber = profilerEffects[i];
      commitPassiveEffectDurations(root, _fiber);
    }
  }

  {
    markPassiveEffectsStopped();
  }

  {
    commitDoubleInvokeEffectsInDEV(root.current, true);
  }

  executionContext = prevExecutionContext;
  flushSyncCallbacks();

  {
    // If additional passive effects were scheduled, increment a counter. If this
    // exceeds the limit, we'll fire a warning.
    if (didScheduleUpdateDuringPassiveEffects) {
      if (root === rootWithPassiveNestedUpdates) {
        nestedPassiveUpdateCount++;
      } else {
        nestedPassiveUpdateCount = 0;
        rootWithPassiveNestedUpdates = root;
      }
    } else {
      nestedPassiveUpdateCount = 0;
    }

    isFlushingPassiveEffects = false;
    didScheduleUpdateDuringPassiveEffects = false;
  } // TODO: Move to commitPassiveMountEffects


  onPostCommitRoot(root);

  {
    var stateNode = root.current.stateNode;
    stateNode.effectDuration = 0;
    stateNode.passiveEffectDuration = 0;
  }

  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
  var root = enqueueUpdate(rootFiber, update, SyncLane);
  var eventTime = requestEventTime();

  if (root !== null) {
    markRootUpdated(root, SyncLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
  }
}

function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
  {
    reportUncaughtErrorInDEV(error$1);
    setIsRunningInsertionEffect(false);
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
    return;
  }

  var fiber = null;

  {
    fiber = nearestMountedAncestor;
  }

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
        var root = enqueueUpdate(fiber, update, SyncLane);
        var eventTime = requestEventTime();

        if (root !== null) {
          markRootUpdated(root, SyncLane, eventTime);
          ensureRootIsScheduled(root, eventTime);
        }

        return;
      }
    }

    fiber = fiber.return;
  }

  {
    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
    // will fire for errors that are thrown by destroy functions inside deleted
    // trees. What it should instead do is propagate the error to the parent of
    // the deleted tree. In the meantime, do not add this warning to the
    // allowlist; this is only for our internal use.
    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\n\n' + 'Error message:\n\n%s', error$1);
  }
}
function pingSuspendedRoot(root, wakeable, pingedLanes) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(wakeable);
  }

  var eventTime = requestEventTime();
  markRootPinged(root, pingedLanes);
  warnIfSuspenseResolutionNotWrappedWithActDEV(root);

  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, or if it's a retry, we'll always suspend
    // so we can always restart.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root.
      prepareFreshStack(root, NoLanes);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
    }
  }

  ensureRootIsScheduled(root, eventTime);
}

function retryTimedOutBoundary(boundaryFiber, retryLane) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new lanes.
  if (retryLane === NoLane) {
    // TODO: Assign this to `suspenseState.retryLane`? to avoid
    // unnecessary entanglement?
    retryLane = requestRetryLane(boundaryFiber);
  } // TODO: Special case idle priority?


  var eventTime = requestEventTime();
  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);

  if (root !== null) {
    markRootUpdated(root, retryLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
  }
}

function retryDehydratedSuspenseBoundary(boundaryFiber) {
  var suspenseState = boundaryFiber.memoizedState;
  var retryLane = NoLane;

  if (suspenseState !== null) {
    retryLane = suspenseState.retryLane;
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
}
function resolveRetryWakeable(boundaryFiber, wakeable) {
  var retryLane = NoLane; // Default

  var retryCache;

  switch (boundaryFiber.tag) {
    case SuspenseComponent:
      retryCache = boundaryFiber.stateNode;
      var suspenseState = boundaryFiber.memoizedState;

      if (suspenseState !== null) {
        retryLane = suspenseState.retryLane;
      }

      break;

    case SuspenseListComponent:
      retryCache = boundaryFiber.stateNode;
      break;

    default:
      throw new Error('Pinged unknown suspense boundary type. ' + 'This is probably a bug in React.');
  }

  if (retryCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(wakeable);
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;
    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;
      rootWithPassiveNestedUpdates = null;

      error('Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
  {
    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
    // Maybe not a big deal since this is DEV only behavior.
    setCurrentFiber(fiber);
    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);

    if (hasPassiveEffects) {
      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
    }

    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);

    if (hasPassiveEffects) {
      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
    }

    resetCurrentFiber();
  }
}

function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    var current = firstChild;
    var subtreeRoot = null;

    while (current !== null) {
      var primarySubtreeFlag = current.subtreeFlags & fiberFlags;

      if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) {
        current = current.child;
      } else {
        if ((current.flags & fiberFlags) !== NoFlags) {
          invokeEffectFn(current);
        }

        if (current.sibling !== null) {
          current = current.sibling;
        } else {
          current = subtreeRoot = current.return;
        }
      }
    }
  }
}

var didWarnStateUpdateForNotYetMountedComponent = null;
function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
  {
    if ((executionContext & RenderContext) !== NoContext) {
      // We let the other warning about render phase updates deal with this one.
      return;
    }

    if (!(fiber.mode & ConcurrentMode)) {
      return;
    }

    var tag = fiber.tag;

    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';

    if (didWarnStateUpdateForNotYetMountedComponent !== null) {
      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForNotYetMountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
    }

    var previousFiber = current;

    try {
      setCurrentFiber(fiber);

      error("Can't perform a React state update on a component that hasn't mounted yet. " + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');
    } finally {
      if (previousFiber) {
        setCurrentFiber(fiber);
      } else {
        resetCurrentFiber();
      }
    }
  }
}
var beginWork$1;

{
  var dummyFiber = null;

  beginWork$1 = function (current, unitOfWork, lanes) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork(current, unitOfWork, lanes);
    } catch (originalError) {
      if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises.
        // Don't replay errors if we are hydrating and have already suspended or handled an error
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if ( unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);

      if (hasCaughtError()) {
        var replayError = clearCaughtError();

        if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) {
          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
          originalError._suppressLogging = true;
        }
      } // We always throw the original error in case the second render pass is not idempotent.
      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.


      throw originalError;
    }
  };
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInRenderForAnotherComponent;

{
  didWarnAboutUpdateInRenderForAnotherComponent = new Set();
}

function warnAboutRenderPhaseUpdatesInDEV(fiber) {
  {
    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
      switch (fiber.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.

            var dedupeKey = renderingComponentName;

            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';

              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);
            }

            break;
          }

        case ClassComponent:
          {
            if (!didWarnAboutUpdateInRender) {
              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');

              didWarnAboutUpdateInRender = true;
            }

            break;
          }
      }
    }
  }
}

function restorePendingUpdaters(root, lanes) {
  {
    if (isDevToolsPresent) {
      var memoizedUpdaters = root.memoizedUpdaters;
      memoizedUpdaters.forEach(function (schedulingFiber) {
        addFiberToLanesMap(root, schedulingFiber, lanes);
      }); // This function intentionally does not clear memoized updaters.
      // Those may still be relevant to the current commit
      // and a future one (e.g. Suspense).
    }
  }
}
var fakeActCallbackNode = {};

function scheduleCallback$1(priorityLevel, callback) {
  {
    // If we're currently inside an `act` scope, bypass Scheduler and push to
    // the `act` queue instead.
    var actQueue = ReactCurrentActQueue$1.current;

    if (actQueue !== null) {
      actQueue.push(callback);
      return fakeActCallbackNode;
    } else {
      return scheduleCallback(priorityLevel, callback);
    }
  }
}

function cancelCallback$1(callbackNode) {
  if ( callbackNode === fakeActCallbackNode) {
    return;
  } // In production, always call Scheduler. This function will be stripped out.


  return cancelCallback(callbackNode);
}

function shouldForceFlushFallbacksInDEV() {
  // Never force flush in production. This function should get stripped out.
  return  ReactCurrentActQueue$1.current !== null;
}

function warnIfUpdatesNotWrappedWithActDEV(fiber) {
  {
    if (fiber.mode & ConcurrentMode) {
      if (!isConcurrentActEnvironment()) {
        // Not in an act environment. No need to warn.
        return;
      }
    } else {
      // Legacy mode has additional cases where we suppress a warning.
      if (!isLegacyActEnvironment()) {
        // Not in an act environment. No need to warn.
        return;
      }

      if (executionContext !== NoContext) {
        // Legacy mode doesn't warn if the update is batched, i.e.
        // batchedUpdates or flushSync.
        return;
      }

      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
        // For backwards compatibility with pre-hooks code, legacy mode only
        // warns for updates that originate from a hook.
        return;
      }
    }

    if (ReactCurrentActQueue$1.current === null) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error('An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
  {
    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\n\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\n\n' + 'act(() => {\n' + '  /* finish loading suspended data */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');
    }
  }
}

function setIsRunningInsertionEffect(isRunning) {
  {
    isRunningInsertionEffect = isRunning;
  }
}

/* eslint-disable react-internal/prod-error-codes */
var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    flushSync(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (_root !== null) {
        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
      }
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */

    new Map([[nonExtensibleObject, null]]);
    new Set([nonExtensibleObject]);
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.flags = NoFlags;
  this.subtreeFlags = NoFlags;
  this.deletions = null;
  this.lanes = NoLanes;
  this.childLanes = NoLanes;
  this.alternate = null;

  {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    // This isn't directly used but is handy for debugging internals:
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct$1(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.flags = NoFlags; // The effects are no longer valid.

    workInProgress.subtreeFlags = NoFlags;
    workInProgress.deletions = null;

    {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  } // Reset all effects except static ones.
  // Static effects are not specific to a render.


  workInProgress.flags = current.flags & StaticMask;
  workInProgress.childLanes = current.childLanes;
  workInProgress.lanes = current.lanes;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    lanes: currentDependencies.lanes,
    firstContext: currentDependencies.firstContext
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderLanes) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect flags but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.

  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childLanes = NoLanes;
    workInProgress.lanes = renderLanes;
    workInProgress.child = null;
    workInProgress.subtreeFlags = NoFlags;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;
    workInProgress.stateNode = null;

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.subtreeFlags = NoFlags;
    workInProgress.deletions = null;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      lanes: currentDependencies.lanes,
      firstContext: currentDependencies.firstContext
    };

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode;

    if (isStrictMode === true) {
      mode |= StrictLegacyMode;

      {
        mode |= StrictEffectsMode;
      }
    }
  } else {
    mode = NoMode;
  }

  if ( isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, lanes) {
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct$1(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictLegacyMode;

        if ( (mode & ConcurrentMode) !== NoMode) {
          // Strict effects should never run on legacy roots
          mode |= StrictEffectsMode;
        }

        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);

      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);

      case REACT_LEGACY_HIDDEN_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_SCOPE_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_CACHE_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_TRACING_MARKER_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_DEBUG_TRACING_MODE_TYPE:

      // eslint-disable-next-line no-fallthrough

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;
            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentNameFromFiber(owner) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
    }
  }

  var fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.lanes = lanes;

  {
    fiber._debugOwner = owner;
  }

  return fiber;
}
function createFiberFromElement(element, mode, lanes) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, lanes, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.lanes = lanes;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, lanes, key) {
  {
    if (typeof pendingProps.id !== 'string') {
      error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.lanes = lanes;

  {
    fiber.stateNode = {
      effectDuration: 0,
      passiveEffectDuration: 0
    };
  }

  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
  fiber.elementType = REACT_OFFSCREEN_TYPE;
  fiber.lanes = lanes;
  var primaryChildInstance = {
    isHidden: false
  };
  fiber.stateNode = primaryChildInstance;
  return fiber;
}
function createFiberFromText(content, mode, lanes) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode);
  fiber.elementType = 'DELETED';
  return fiber;
}
function createFiberFromDehydratedFragment(dehydratedNode) {
  var fiber = createFiber(DehydratedFragment, null, null, NoMode);
  fiber.stateNode = dehydratedNode;
  return fiber;
}
function createFiberFromPortal(portal, mode, lanes) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.lanes = lanes;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.flags = source.flags;
  target.subtreeFlags = source.subtreeFlags;
  target.deletions = source.deletions;
  target.lanes = source.lanes;
  target.childLanes = source.childLanes;
  target.alternate = source.alternate;

  {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
  this.tag = tag;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.current = null;
  this.pingCache = null;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.callbackNode = null;
  this.callbackPriority = NoLane;
  this.eventTimes = createLaneMap(NoLanes);
  this.expirationTimes = createLaneMap(NoTimestamp);
  this.pendingLanes = NoLanes;
  this.suspendedLanes = NoLanes;
  this.pingedLanes = NoLanes;
  this.expiredLanes = NoLanes;
  this.mutableReadLanes = NoLanes;
  this.finishedLanes = NoLanes;
  this.entangledLanes = NoLanes;
  this.entanglements = createLaneMap(NoLanes);
  this.identifierPrefix = identifierPrefix;
  this.onRecoverableError = onRecoverableError;

  {
    this.mutableSourceEagerHydrationData = null;
  }

  {
    this.effectDuration = 0;
    this.passiveEffectDuration = 0;
  }

  {
    this.memoizedUpdaters = new Set();
    var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];

    for (var _i = 0; _i < TotalLanes; _i++) {
      pendingUpdatersLaneMap.push(new Set());
    }
  }

  {
    switch (tag) {
      case ConcurrentRoot:
        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';
        break;

      case LegacyRoot:
        this._debugRootType = hydrate ? 'hydrate()' : 'render()';
        break;
    }
  }
}

function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the
// host config, but because they are passed in at runtime, we have to thread
// them through the root constructor. Perhaps we should put them all into a
// single type, like a DynamicHostConfig that is defined by the renderer.
identifierPrefix, onRecoverableError, transitionCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;

  {
    var _initialState = {
      element: initialChildren,
      isDehydrated: hydrate,
      cache: null,
      // not enabled yet
      transitions: null,
      pendingSuspenseBoundaries: null
    };
    uninitializedFiber.memoizedState = _initialState;
  }

  initializeUpdateQueue(uninitializedFiber);
  return root;
}

var ReactVersion = '18.2.0';

function createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  {
    checkKeyStringCoercion(key);
  }

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        throw new Error('Unable to find node on an unmounted component.');
      } else {
        var keys = Object.keys(component).join(',');
        throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictLegacyMode) {
      var componentName = getComponentNameFromFiber(fiber) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        var previousFiber = current;

        try {
          setCurrentFiber(hostFiber);

          if (fiber.mode & StrictLegacyMode) {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          } else {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          }
        } finally {
          // Ideally this should reset to previous but this shouldn't be called in
          // render and there's another warning for that anyway.
          if (previousFiber) {
            setCurrentFiber(previousFiber);
          } else {
            resetCurrentFiber();
          }
        }
      }
    }

    return hostFiber.stateNode;
  }
}

function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
  var hydrate = false;
  var initialChildren = null;
  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
}
function createHydrationContainer(initialChildren, // TODO: Remove `callback` when we delete legacy mode.
callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
  var hydrate = true;
  var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor

  root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
  // a regular update because the initial render must match was was rendered
  // on the server.
  // NOTE: This update intentionally doesn't have a payload. We're only using
  // the update to schedule work on the root fiber (and, for legacy roots, to
  // enqueue the callback if one is provided).

  var current = root.current;
  var eventTime = requestEventTime();
  var lane = requestUpdateLane(current);
  var update = createUpdate(eventTime, lane);
  update.callback = callback !== undefined && callback !== null ? callback : null;
  enqueueUpdate(current, update, lane);
  scheduleInitialHydrationOnRoot(root, lane, eventTime);
  return root;
}
function updateContainer(element, container, parentComponent, callback) {
  {
    onScheduleRoot(container, element);
  }

  var current$1 = container.current;
  var eventTime = requestEventTime();
  var lane = requestUpdateLane(current$1);

  {
    markRenderScheduled(lane);
  }

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;

      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');
    }
  }

  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    {
      if (typeof callback !== 'function') {
        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
      }
    }

    update.callback = callback;
  }

  var root = enqueueUpdate(current$1, update, lane);

  if (root !== null) {
    scheduleUpdateOnFiber(root, current$1, lane, eventTime);
    entangleTransitions(root, current$1, lane);
  }

  return lane;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}
function attemptSynchronousHydration$1(fiber) {
  switch (fiber.tag) {
    case HostRoot:
      {
        var root = fiber.stateNode;

        if (isRootDehydrated(root)) {
          // Flush the first scheduled "update".
          var lanes = getHighestPriorityPendingLanes(root);
          flushRoot(root, lanes);
        }

        break;
      }

    case SuspenseComponent:
      {
        flushSync(function () {
          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

          if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
          }
        }); // If we're still blocked after this, we need to increase
        // the priority of any promises resolving within this
        // boundary so that they next attempt also has higher pri.

        var retryLane = SyncLane;
        markRetryLaneIfNotHydrated(fiber, retryLane);
        break;
      }
  }
}

function markRetryLaneImpl(fiber, retryLane) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
  }
} // Increases the priority of thenables when they resolve within this boundary.


function markRetryLaneIfNotHydrated(fiber, retryLane) {
  markRetryLaneImpl(fiber, retryLane);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryLaneImpl(alternate, retryLane);
  }
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var lane = SelectiveHydrationLane;
  var root = enqueueConcurrentRenderForLane(fiber, lane);

  if (root !== null) {
    var eventTime = requestEventTime();
    scheduleUpdateOnFiber(root, fiber, lane, eventTime);
  }

  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var lane = requestUpdateLane(fiber);
  var root = enqueueConcurrentRenderForLane(fiber, lane);

  if (root !== null) {
    var eventTime = requestEventTime();
    scheduleUpdateOnFiber(root, fiber, lane, eventTime);
  }

  markRetryLaneIfNotHydrated(fiber, lane);
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

var shouldErrorImpl = function (fiber) {
  return null;
};

function shouldError(fiber) {
  return shouldErrorImpl(fiber);
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideHookStateDeletePath = null;
var overrideHookStateRenamePath = null;
var overrideProps = null;
var overridePropsDeletePath = null;
var overridePropsRenamePath = null;
var scheduleUpdate = null;
var setErrorHandler = null;
var setSuspenseHandler = null;

{
  var copyWithDeleteImpl = function (obj, path, index) {
    var key = path[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj);

    if (index + 1 === path.length) {
      if (isArray(updated)) {
        updated.splice(key, 1);
      } else {
        delete updated[key];
      }

      return updated;
    } // $FlowFixMe number or string is fine here


    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
    return updated;
  };

  var copyWithDelete = function (obj, path) {
    return copyWithDeleteImpl(obj, path, 0);
  };

  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {
    var oldKey = oldPath[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj);

    if (index + 1 === oldPath.length) {
      var newKey = newPath[index]; // $FlowFixMe number or string is fine here

      updated[newKey] = updated[oldKey];

      if (isArray(updated)) {
        updated.splice(oldKey, 1);
      } else {
        delete updated[oldKey];
      }
    } else {
      // $FlowFixMe number or string is fine here
      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here
      obj[oldKey], oldPath, newPath, index + 1);
    }

    return updated;
  };

  var copyWithRename = function (obj, oldPath, newPath) {
    if (oldPath.length !== newPath.length) {
      warn('copyWithRename() expects paths of the same length');

      return;
    } else {
      for (var i = 0; i < newPath.length - 1; i++) {
        if (oldPath[i] !== newPath[i]) {
          warn('copyWithRename() expects paths to be the same except for the deepest key');

          return;
        }
      }
    }

    return copyWithRenameImpl(obj, oldPath, newPath, 0);
  };

  var copyWithSetImpl = function (obj, path, index, value) {
    if (index >= path.length) {
      return value;
    }

    var key = path[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  var findHook = function (fiber, id) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    return currentHook;
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithSet(hook.memoizedState, path, value);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  };

  overrideHookStateDeletePath = function (fiber, id, path) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithDelete(hook.memoizedState, path);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  };

  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  overridePropsDeletePath = function (fiber, path) {
    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  overridePropsRenamePath = function (fiber, oldPath, newPath) {
    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  scheduleUpdate = function (fiber) {
    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  setErrorHandler = function (newShouldErrorImpl) {
    shouldErrorImpl = newShouldErrorImpl;
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function findHostInstanceByFiber(fiber) {
  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function emptyFindFiberByHostInstance(instance) {
  return null;
}

function getCurrentFiberForDevTools() {
  return current;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals({
    bundleType: devToolsConfig.bundleType,
    version: devToolsConfig.version,
    rendererPackageName: devToolsConfig.rendererPackageName,
    rendererConfig: devToolsConfig.rendererConfig,
    overrideHookState: overrideHookState,
    overrideHookStateDeletePath: overrideHookStateDeletePath,
    overrideHookStateRenamePath: overrideHookStateRenamePath,
    overrideProps: overrideProps,
    overridePropsDeletePath: overridePropsDeletePath,
    overridePropsRenamePath: overridePropsRenamePath,
    setErrorHandler: setErrorHandler,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: findHostInstanceByFiber,
    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
    // React Refresh
    findHostInstancesForRefresh:  findHostInstancesForRefresh ,
    scheduleRefresh:  scheduleRefresh ,
    scheduleRoot:  scheduleRoot ,
    setRefreshHandler:  setRefreshHandler ,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber:  getCurrentFiberForDevTools ,
    // Enables DevTools to detect reconciler version rather than renderer version
    // which may not match for third party renderers.
    reconcilerVersion: ReactVersion
  });
}

/* global reportError */

var defaultOnRecoverableError = typeof reportError === 'function' ? // In modern browsers, reportError will dispatch an error event,
// emulating an uncaught JavaScript error.
reportError : function (error) {
  // In older browsers and test environments, fallback to console.error.
  // eslint-disable-next-line react-internal/no-production-logging
  console['error'](error);
};

function ReactDOMRoot(internalRoot) {
  this._internalRoot = internalRoot;
}

ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {
  var root = this._internalRoot;

  if (root === null) {
    throw new Error('Cannot update an unmounted root.');
  }

  {
    if (typeof arguments[1] === 'function') {
      error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    } else if (isValidContainer(arguments[1])) {
      error('You passed a container to the second argument of root.render(...). ' + "You don't need to pass it again since you already passed it to create the root.");
    } else if (typeof arguments[1] !== 'undefined') {
      error('You passed a second argument to root.render(...) but it only accepts ' + 'one argument.');
    }

    var container = root.containerInfo;

    if (container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(root.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + "root.unmount() to empty a root's container.");
        }
      }
    }
  }

  updateContainer(children, root, null, null);
};

ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function () {
  {
    if (typeof arguments[0] === 'function') {
      error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }
  }

  var root = this._internalRoot;

  if (root !== null) {
    this._internalRoot = null;
    var container = root.containerInfo;

    {
      if (isAlreadyRendering()) {
        error('Attempted to synchronously unmount a root while React was already ' + 'rendering. React cannot finish unmounting the root until the ' + 'current render has completed, which may lead to a race condition.');
      }
    }

    flushSync(function () {
      updateContainer(null, root, null, null);
    });
    unmarkContainerAsRoot(container);
  }
};

function createRoot(container, options) {
  if (!isValidContainer(container)) {
    throw new Error('createRoot(...): Target container is not a DOM element.');
  }

  warnIfReactDOMContainerInDEV(container);
  var isStrictMode = false;
  var concurrentUpdatesByDefaultOverride = false;
  var identifierPrefix = '';
  var onRecoverableError = defaultOnRecoverableError;
  var transitionCallbacks = null;

  if (options !== null && options !== undefined) {
    {
      if (options.hydrate) {
        warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');
      } else {
        if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) {
          error('You passed a JSX element to createRoot. You probably meant to ' + 'call root.render instead. ' + 'Example usage:\n\n' + '  let root = createRoot(domContainer);\n' + '  root.render(<App />);');
        }
      }
    }

    if (options.unstable_strictMode === true) {
      isStrictMode = true;
    }

    if (options.identifierPrefix !== undefined) {
      identifierPrefix = options.identifierPrefix;
    }

    if (options.onRecoverableError !== undefined) {
      onRecoverableError = options.onRecoverableError;
    }

    if (options.transitionCallbacks !== undefined) {
      transitionCallbacks = options.transitionCallbacks;
    }
  }

  var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
  markContainerAsRoot(root.current, container);
  var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
  listenToAllSupportedEvents(rootContainerElement);
  return new ReactDOMRoot(root);
}

function ReactDOMHydrationRoot(internalRoot) {
  this._internalRoot = internalRoot;
}

function scheduleHydration(target) {
  if (target) {
    queueExplicitHydrationTarget(target);
  }
}

ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
function hydrateRoot(container, initialChildren, options) {
  if (!isValidContainer(container)) {
    throw new Error('hydrateRoot(...): Target container is not a DOM element.');
  }

  warnIfReactDOMContainerInDEV(container);

  {
    if (initialChildren === undefined) {
      error('Must provide initial children as second argument to hydrateRoot. ' + 'Example usage: hydrateRoot(domContainer, <App />)');
    }
  } // For now we reuse the whole bag of options since they contain
  // the hydration callbacks.


  var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option

  var mutableSources = options != null && options.hydratedSources || null;
  var isStrictMode = false;
  var concurrentUpdatesByDefaultOverride = false;
  var identifierPrefix = '';
  var onRecoverableError = defaultOnRecoverableError;

  if (options !== null && options !== undefined) {
    if (options.unstable_strictMode === true) {
      isStrictMode = true;
    }

    if (options.identifierPrefix !== undefined) {
      identifierPrefix = options.identifierPrefix;
    }

    if (options.onRecoverableError !== undefined) {
      onRecoverableError = options.onRecoverableError;
    }
  }

  var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
  markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.

  listenToAllSupportedEvents(container);

  if (mutableSources) {
    for (var i = 0; i < mutableSources.length; i++) {
      var mutableSource = mutableSources[i];
      registerMutableSourceForHydration(root, mutableSource);
    }
  }

  return new ReactDOMHydrationRoot(root);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers  ));
} // TODO: Remove this function which also includes comment nodes.
// We only use it in places that are currently more relaxed.

function isValidContainerLegacy(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function warnIfReactDOMContainerInDEV(container) {
  {
    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('createRoot(): Creating roots directly with document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try using a container element created ' + 'for your app.');
    }

    if (isContainerMarkedAsRoot(container)) {
      if (container._reactRootContainer) {
        error('You are calling ReactDOMClient.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');
      } else {
        error('You are calling ReactDOMClient.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');
      }
    }
  }
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
        }
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));

    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
      error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');
    }

    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
    }
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function noopOnRecoverableError() {// This isn't reachable because onRecoverableError isn't called in the
  // legacy API.
}

function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
  if (isHydrationContainer) {
    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(root);
        originalCallback.call(instance);
      };
    }

    var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, // hydrationCallbacks
    false, // isStrictMode
    false, // concurrentUpdatesByDefaultOverride,
    '', // identifierPrefix
    noopOnRecoverableError);
    container._reactRootContainer = root;
    markContainerAsRoot(root.current, container);
    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
    listenToAllSupportedEvents(rootContainerElement);
    flushSync();
    return root;
  } else {
    // First clear any existing content.
    var rootSibling;

    while (rootSibling = container.lastChild) {
      container.removeChild(rootSibling);
    }

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(_root);

        _originalCallback.call(instance);
      };
    }

    var _root = createContainer(container, LegacyRoot, null, // hydrationCallbacks
    false, // isStrictMode
    false, // concurrentUpdatesByDefaultOverride,
    '', // identifierPrefix
    noopOnRecoverableError);

    container._reactRootContainer = _root;
    markContainerAsRoot(_root.current, container);

    var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;

    listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.

    flushSync(function () {
      updateContainer(initialChildren, _root, parentComponent, callback);
    });
    return _root;
  }
}

function warnOnInvalidCallback$1(callback, callerName) {
  {
    if (callback !== null && typeof callback !== 'function') {
      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  }
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
  }

  var maybeRoot = container._reactRootContainer;
  var root;

  if (!maybeRoot) {
    // Initial mount
    root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
  } else {
    root = maybeRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(root);
        originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, root, parentComponent, callback);
  }

  return getPublicRootInstance(root);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$3.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;

      if (!warnedAboutRefsInRender) {
        error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromType(owner.type) || 'A component');
      }

      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }
}
function hydrate(element, container, callback) {
  {
    error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + "if it's running React 17. Learn " + 'more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(container)) {
    throw new Error('Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call hydrateRoot(container, element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  {
    error('ReactDOM.render is no longer supported in React 18. Use createRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + "if it's running React 17. Learn " + 'more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(container)) {
    throw new Error('Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  {
    error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' + 'in React 18. Consider using a portal instead. Until you switch to ' + "the createRoot API, your app will behave as if it's running React " + '17. Learn more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(containerNode)) {
    throw new Error('Target container is not a DOM element.');
  }

  if (parentComponent == null || !has(parentComponent)) {
    throw new Error('parentComponent must be a valid React Component');
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainerLegacy(container)) {
    throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);

      if (renderedByDifferentReact) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }
    } // Unmount should not be batched.


    flushSync(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        // $FlowFixMe This should probably use `delete container._reactRootContainer`
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;

      if (hasNonRootReactChild) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }
    }

    return false;
  }
}

setAttemptSynchronousHydration(attemptSynchronousHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
setGetCurrentUpdatePriority(getCurrentUpdatePriority);
setAttemptHydrationAtPriority(runWithPriority);

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$3);
setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);

function createPortal$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    throw new Error('Target container is not a DOM element.');
  } // TODO: pass ReactDOM portal implementation as third argument
  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.


  return createPortal(children, container, null, key);
}

function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
}

var Internals = {
  usingClientEntryPoint: false,
  // Keep in sync with ReactTestUtils.js.
  // This is an array for better minification.
  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
};

function createRoot$1(container, options) {
  {
    if (!Internals.usingClientEntryPoint && !false) {
      error('You are importing createRoot from "react-dom" which is not supported. ' + 'You should instead import it from "react-dom/client".');
    }
  }

  return createRoot(container, options);
}

function hydrateRoot$1(container, initialChildren, options) {
  {
    if (!Internals.usingClientEntryPoint && !false) {
      error('You are importing hydrateRoot from "react-dom" which is not supported. ' + 'You should instead import it from "react-dom/client".');
    }
  }

  return hydrateRoot(container, initialChildren, options);
} // Overload the definition to the two valid signatures.
// Warning, this opts-out of checking the function body.


// eslint-disable-next-line no-redeclare
function flushSync$1(fn) {
  {
    if (isAlreadyRendering()) {
      error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');
    }
  }

  return flushSync(fn);
}
var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType:  1 ,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        // eslint-disable-next-line react-internal/no-production-logging
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}

exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
exports.createPortal = createPortal$1;
exports.createRoot = createRoot$1;
exports.findDOMNode = findDOMNode;
exports.flushSync = flushSync$1;
exports.hydrate = hydrate;
exports.hydrateRoot = hydrateRoot$1;
exports.render = render;
exports.unmountComponentAtNode = unmountComponentAtNode;
exports.unstable_batchedUpdates = batchedUpdates$1;
exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/react-dom/client.js":
/*!******************************************!*\
  !*** ./node_modules/react-dom/client.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var m = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
if (false) {} else {
  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
      return m.createRoot(c, o);
    } finally {
      i.usingClientEntryPoint = false;
    }
  };
  exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
      return m.hydrateRoot(c, h, o);
    } finally {
      i.usingClientEntryPoint = false;
    }
  };
}


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-jss/dist/react-jss.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/react-jss/dist/react-jss.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JssContext: () => (/* binding */ JssContext),
/* harmony export */   JssProvider: () => (/* binding */ JssProvider),
/* harmony export */   SheetsRegistry: () => (/* reexport safe */ jss__WEBPACK_IMPORTED_MODULE_6__.SheetsRegistry),
/* harmony export */   ThemeProvider: () => (/* reexport safe */ theming__WEBPACK_IMPORTED_MODULE_4__.ThemeProvider),
/* harmony export */   createGenerateId: () => (/* reexport safe */ jss__WEBPACK_IMPORTED_MODULE_6__.createGenerateId),
/* harmony export */   createJsx: () => (/* binding */ create),
/* harmony export */   createTheming: () => (/* reexport safe */ theming__WEBPACK_IMPORTED_MODULE_4__.createTheming),
/* harmony export */   createUseStyles: () => (/* binding */ createUseStyles),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   jss: () => (/* binding */ defaultJss),
/* harmony export */   jsx: () => (/* binding */ jsx),
/* harmony export */   styled: () => (/* binding */ configureStyled),
/* harmony export */   useTheme: () => (/* reexport safe */ theming__WEBPACK_IMPORTED_MODULE_4__.useTheme),
/* harmony export */   withStyles: () => (/* binding */ createWithStyles),
/* harmony export */   withTheme: () => (/* reexport safe */ theming__WEBPACK_IMPORTED_MODULE_4__.withTheme)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var theming__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! theming */ "./node_modules/theming/dist/theming.esm.js");
/* harmony import */ var is_in_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! is-in-browser */ "./node_modules/is-in-browser/dist/module.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");
/* harmony import */ var jss_preset_default__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jss-preset-default */ "./node_modules/jss-preset-default/dist/jss-preset-default.esm.js");
/* harmony import */ var shallow_equal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! shallow-equal */ "./node_modules/shallow-equal/dist/index.esm.js");
/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/is-prop-valid */ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js");
/* harmony import */ var css_jss__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! css-jss */ "./node_modules/css-jss/dist/css-jss.esm.js");















var getDisplayName = function getDisplayName(Component) {
  return Component.displayName || Component.name || 'Component';
};

var memoize = function memoize(fn) {
  var lastArgs;
  var lastResult;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (Array.isArray(lastArgs) && args.length === lastArgs.length) {
      var isSame = true;

      for (var i = 0; i < args.length; i++) {
        if (args[i] !== lastArgs[i]) {
          isSame = false;
        }
      }

      if (isSame) {
        return lastResult;
      }
    }

    lastArgs = args;
    lastResult = fn.apply(void 0, args);
    return lastResult;
  };
};

var mergeClasses = function mergeClasses(baseClasses, additionalClasses) {
  var combinedClasses = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, baseClasses);

  for (var name in additionalClasses) {
    combinedClasses[name] = name in combinedClasses ? combinedClasses[name] + " " + additionalClasses[name] : additionalClasses[name];
  }

  return combinedClasses;
};

/**
 * Global index counter to preserve source order.
 * As we create the style sheet during componentWillMount lifecycle,
 * children are handled after the parents, so the order of style elements would
 * be parent->child. It is a problem though when a parent passes a className
 * which needs to override any childs styles. StyleSheet of the child has a higher
 * specificity, because of the source order.
 * So our solution is to render sheets them in the reverse order child->sheet, so
 * that parent has a higher specificity.
 *
 * We start at [Number.MIN_SAFE_INTEGER] to always insert sheets from react-jss first before any
 * sheet which might be inserted manually by the user.
 */
var index = Number.MIN_SAFE_INTEGER || -1e9;

var getSheetIndex = function getSheetIndex() {
  return index++;
};

var JssContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)({
  classNamePrefix: '',
  disableStylesGeneration: false,
  isSSR: !is_in_browser__WEBPACK_IMPORTED_MODULE_5__["default"]
});

var defaultManagers = new Map();
var getManager = function getManager(context, managerId) {
  // If `managers` map is present in the context, we use it in order to
  // let JssProvider reset them when new response has to render server-side.
  var managers = context.managers;

  if (managers) {
    if (!managers[managerId]) {
      managers[managerId] = new jss__WEBPACK_IMPORTED_MODULE_6__.SheetsManager();
    }

    return managers[managerId];
  }

  var manager = defaultManagers.get(managerId);

  if (!manager) {
    manager = new jss__WEBPACK_IMPORTED_MODULE_6__.SheetsManager();
    defaultManagers.set(managerId, manager);
  }

  return manager;
};
var manageSheet = function manageSheet(options) {
  var sheet = options.sheet,
      context = options.context,
      index = options.index,
      theme = options.theme;

  if (!sheet) {
    return;
  }

  var manager = getManager(context, index);
  manager.manage(theme);

  if (context.registry) {
    context.registry.add(sheet);
  }
};
var unmanageSheet = function unmanageSheet(options) {
  if (!options.sheet) {
    return;
  }

  var manager = getManager(options.context, options.index);
  manager.unmanage(options.theme);
};

var defaultJss = (0,jss__WEBPACK_IMPORTED_MODULE_6__.create)((0,jss_preset_default__WEBPACK_IMPORTED_MODULE_9__["default"])());

var sheetsMeta = new WeakMap();
var getMeta = function getMeta(sheet) {
  return sheetsMeta.get(sheet);
};
var addMeta = function addMeta(sheet, meta) {
  sheetsMeta.set(sheet, meta);
};

var getStyles = function getStyles(options) {
  var styles = options.styles;

  if (typeof styles !== 'function') {
    return styles;
  }

   true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(styles.length !== 0, "[JSS] <" + (options.name || 'Hook') + " />'s styles function doesn't rely on the \"theme\" argument. We recommend declaring styles as an object instead.") : 0;
  return styles(options.theme);
};

function getSheetOptions(options, link) {
  var minify;

  if (options.context.id && options.context.id.minify != null) {
    minify = options.context.id.minify;
  }

  var classNamePrefix = options.context.classNamePrefix || '';

  if (options.name && !minify) {
    classNamePrefix += options.name.replace(/\s/g, '-') + "-";
  }

  var meta = '';
  if (options.name) meta = options.name + ", ";
  meta += typeof options.styles === 'function' ? 'Themed' : 'Unthemed';
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options.sheetOptions, {
    index: options.index,
    meta: meta,
    classNamePrefix: classNamePrefix,
    link: link,
    generateId: options.sheetOptions && options.sheetOptions.generateId ? options.sheetOptions.generateId : options.context.generateId
  });
}

var createStyleSheet = function createStyleSheet(options) {
  if (options.context.disableStylesGeneration) {
    return undefined;
  }

  var manager = getManager(options.context, options.index);
  var existingSheet = manager.get(options.theme);

  if (existingSheet) {
    return existingSheet;
  }

  var jss = options.context.jss || defaultJss;
  var styles = getStyles(options);
  var dynamicStyles = (0,jss__WEBPACK_IMPORTED_MODULE_6__.getDynamicStyles)(styles);
  var sheet = jss.createStyleSheet(styles, getSheetOptions(options, dynamicStyles !== null));
  addMeta(sheet, {
    dynamicStyles: dynamicStyles,
    styles: styles
  });
  manager.add(options.theme, sheet);
  return sheet;
};
var removeDynamicRules = function removeDynamicRules(sheet, rules) {
  // Loop over each dynamic rule and remove the dynamic rule
  // We can't just remove the whole sheet as this has all of the rules for every component instance
  for (var key in rules) {
    sheet.deleteRule(rules[key]);
  }
};
var updateDynamicRules = function updateDynamicRules(data, sheet, rules) {
  // Loop over each dynamic rule and update it
  // We can't just update the whole sheet as this has all of the rules for every component instance
  for (var key in rules) {
    sheet.updateOne(rules[key], data);
  }
};
var addDynamicRules = function addDynamicRules(sheet, data) {
  var meta = getMeta(sheet);

  if (!meta) {
    return undefined;
  }

  var rules = {}; // Loop over each dynamic rule and add it to the stylesheet

  for (var key in meta.dynamicStyles) {
    var initialRuleCount = sheet.rules.index.length;
    var originalRule = sheet.addRule(key, meta.dynamicStyles[key]); // Loop through all created rules, fixes updating dynamic rules

    for (var i = initialRuleCount; i < sheet.rules.index.length; i++) {
      var rule = sheet.rules.index[i];
      sheet.updateOne(rule, data); // If it's the original rule, we need to add it by the correct key so the hook and hoc
      // can correctly concat the dynamic class with the static one

      rules[originalRule === rule ? key : rule.key] = rule;
    }
  }

  return rules;
};

var getSheetClasses = function getSheetClasses(sheet, dynamicRules) {
  if (!dynamicRules) {
    return sheet.classes;
  }

  var meta = getMeta(sheet);

  if (!meta) {
    return sheet.classes;
  }

  var classes = {};

  for (var key in meta.styles) {
    classes[key] = sheet.classes[key];

    if (key in dynamicRules) {
      classes[key] += " " + sheet.classes[dynamicRules[key].key];
    }
  }

  return classes;
};

function getUseInsertionEffect(isSSR) {
  return isSSR ? react__WEBPACK_IMPORTED_MODULE_2__.useEffect : (react__WEBPACK_IMPORTED_MODULE_2___default().useInsertionEffect) || // React 18+ (https://github.com/reactwg/react-18/discussions/110)
  react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect;
}

var noTheme = {};

var createUseStyles = function createUseStyles(styles, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$index = _options.index,
      index = _options$index === void 0 ? getSheetIndex() : _options$index,
      theming = _options.theming,
      name = _options.name,
      sheetOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_options, ["index", "theming", "name"]);

  var ThemeContext$1 = theming && theming.context || theming__WEBPACK_IMPORTED_MODULE_4__.ThemeContext;

  var useTheme = function useTheme(theme) {
    if (typeof styles === 'function') {
      return theme || (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThemeContext$1) || noTheme;
    }

    return noTheme;
  };

  var emptyObject = {};
  return function useStyles(data) {
    var isFirstMount = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(true);
    var context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(JssContext);
    var theme = useTheme(data && data.theme);

    var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(function () {
      var newSheet = createStyleSheet({
        context: context,
        styles: styles,
        name: name,
        theme: theme,
        index: index,
        sheetOptions: sheetOptions
      });

      if (newSheet && context.isSSR) {
        // manage immediately during SSRs. browsers will manage the sheet through useInsertionEffect below
        manageSheet({
          index: index,
          context: context,
          sheet: newSheet,
          theme: theme
        });
      }

      return [newSheet, newSheet ? addDynamicRules(newSheet, data) : null];
    }, [context, theme]),
        sheet = _useMemo[0],
        dynamicRules = _useMemo[1];

    getUseInsertionEffect(context.isSSR)(function () {
      // We only need to update the rules on a subsequent update and not in the first mount
      if (sheet && dynamicRules && !isFirstMount.current) {
        updateDynamicRules(data, sheet, dynamicRules);
      }
    }, [data]);
    getUseInsertionEffect(context.isSSR)(function () {
      if (sheet) {
        manageSheet({
          index: index,
          context: context,
          sheet: sheet,
          theme: theme
        });
      }

      return function () {
        if (sheet) {
          unmanageSheet({
            index: index,
            context: context,
            sheet: sheet,
            theme: theme
          }); // when sheet changes, remove related dynamic rules

          if (dynamicRules) {
            removeDynamicRules(sheet, dynamicRules);
          }
        }
      };
    }, [sheet]);
    var classes = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(function () {
      return sheet && dynamicRules ? getSheetClasses(sheet, dynamicRules) : emptyObject;
    }, [sheet, dynamicRules]);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useDebugValue)(classes);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useDebugValue)(theme === noTheme ? 'No theme' : theme);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {
      isFirstMount.current = false;
    });
    return classes;
  };
};

var NoRenderer = function NoRenderer(props) {
  return props.children || null;
};
/**
 * HOC creator function that wrapps the user component.
 *
 * `withStyles(styles, [options])(Component)`
 */


var createWithStyles = function createWithStyles(styles, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$index = _options.index,
      index = _options$index === void 0 ? getSheetIndex() : _options$index,
      theming = _options.theming,
      injectTheme = _options.injectTheme,
      sheetOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_options, ["index", "theming", "injectTheme"]);

  var ThemeContext$1 = theming ? theming.context : theming__WEBPACK_IMPORTED_MODULE_4__.ThemeContext;
  return function (InnerComponent) {
    if (InnerComponent === void 0) {
      InnerComponent = NoRenderer;
    }

    var displayName = getDisplayName(InnerComponent);
    var mergeClassesProp = memoize(function (sheetClasses, classesProp) {
      return classesProp ? mergeClasses(sheetClasses, classesProp) : sheetClasses;
    });
    var hookOptions = Object.assign(sheetOptions, {
      theming: theming,
      index: index,
      name: displayName
    });
    var useStyles = createUseStyles(styles, hookOptions);
    var WithStyles = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function (props, ref) {
      var theme = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThemeContext$1);

      var newProps = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props);

      if (injectTheme && newProps.theme == null) {
        newProps.theme = theme;
      }

      var sheetClasses = useStyles(newProps);
      var classes = mergeClassesProp(sheetClasses, props.classes);
      return (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(InnerComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, newProps, {
        classes: classes,
        ref: ref
      }));
    });
    WithStyles.displayName = "WithStyles(" + displayName + ")";
    WithStyles.defaultProps = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, InnerComponent.defaultProps);
    WithStyles.InnerComponent = InnerComponent;
    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3___default()(WithStyles, InnerComponent);
  };
};

var initialContext = {};
function JssProvider(props) {
  var managersRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({});
  var prevContextRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();
  var registryRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);

  var createContext = function createContext(parentContext, prevContext) {
    if (prevContext === void 0) {
      prevContext = initialContext;
    }

    var registry = props.registry,
        classNamePrefix = props.classNamePrefix,
        jss = props.jss,
        generateId = props.generateId,
        disableStylesGeneration = props.disableStylesGeneration,
        media = props.media,
        id = props.id,
        isSSR = props.isSSR;

    var context = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parentContext);

    if (registry) {
      context.registry = registry; // This way we identify a new request on the server, because user will create
      // a new Registry instance for each.

      if (registry !== registryRef.current) {
        // We reset managers because we have to regenerate all sheets for the new request.
        managersRef.current = {};
        registryRef.current = registry;
      }
    }

    context.managers = managersRef.current;

    if (id !== undefined) {
      context.id = id;
    }

    if (generateId !== undefined) {
      context.generateId = generateId;
    } else if (!context.generateId || !prevContext || context.id !== prevContext.id) {
      context.generateId = (0,jss__WEBPACK_IMPORTED_MODULE_6__.createGenerateId)(context.id);
    }

    if (classNamePrefix) {
      context.classNamePrefix = (context.classNamePrefix || '') + classNamePrefix;
    }

    if (media !== undefined) {
      context.media = media;
    }

    if (jss) {
      context.jss = jss;
    }

    if (disableStylesGeneration !== undefined) {
      context.disableStylesGeneration = disableStylesGeneration;
    }

    if (isSSR !== undefined) {
      context.isSSR = isSSR;
    }

    if (prevContext && (0,shallow_equal__WEBPACK_IMPORTED_MODULE_7__.shallowEqualObjects)(prevContext, context)) {
      return prevContext;
    }

    return context;
  };

  var renderProvider = function renderProvider(parentContext) {
    var children = props.children;
    var context = createContext(parentContext, prevContextRef.current);
    prevContextRef.current = context;
    return (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(JssContext.Provider, {
      value: context
    }, children);
  };

  return (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(JssContext.Consumer, null, renderProvider);
}

var parseStyles = function parseStyles(args) {
  var dynamicStyles = [];
  var staticStyle;
  var labels = []; // Not using ...rest to optimize perf.

  for (var key in args) {
    var style = args[key];
    if (!style) continue;

    if (typeof style === 'function') {
      dynamicStyles.push(style);
    } else {
      if (!staticStyle) staticStyle = {};
      Object.assign(staticStyle, style);
      var _staticStyle = staticStyle,
          _label = _staticStyle.label;

      if (_label) {
        if (labels.indexOf(_label) === -1) labels.push(_label);
      }
    }
  }

  var styles = {};
  var label = labels.length === 0 ? 'sc' : labels.join('-');

  if (staticStyle) {
    // Label should not leak to the core.
    if ('label' in staticStyle) delete staticStyle.label;
    styles[label] = staticStyle;
  } // When there is only one function rule, we don't need to wrap it.


  if (dynamicStyles.length === 1) {
    styles.scd = dynamicStyles[0];
  } // We create a new function rule which will call all other function rules
  // and merge the styles they return.


  if (dynamicStyles.length > 1) {
    styles.scd = function (props) {
      var merged = {};

      for (var i = 0; i < dynamicStyles.length; i++) {
        var dynamicStyle = dynamicStyles[i](props);
        if (dynamicStyle) Object.assign(merged, dynamicStyle);
      }

      return merged;
    };
  }

  return {
    styles: styles,
    label: label
  };
};

var shouldForwardPropSymbol = Symbol('react-jss-styled');

var getShouldForwardProp = function getShouldForwardProp(tagOrComponent, options) {
  var shouldForwardProp = options.shouldForwardProp;
  var childShouldForwardProp = tagOrComponent[shouldForwardPropSymbol];
  var finalShouldForwardProp = shouldForwardProp || childShouldForwardProp;

  if (shouldForwardProp && childShouldForwardProp) {
    finalShouldForwardProp = function finalShouldForwardProp(prop) {
      return childShouldForwardProp(prop) && shouldForwardProp(prop);
    };
  }

  return finalShouldForwardProp;
};

var getChildProps = function getChildProps(props, shouldForwardProp, isTag) {
  var childProps = {};

  for (var prop in props) {
    if (shouldForwardProp) {
      if (shouldForwardProp(prop) === true) {
        childProps[prop] = props[prop];
      }

      continue;
    } // We don't want to pass non-dom props to the DOM.


    if (isTag) {
      if ((0,_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_8__["default"])(prop)) {
        childProps[prop] = props[prop];
      }

      continue;
    }

    childProps[prop] = props[prop];
  }

  return childProps;
}; // eslint-disable-next-line no-unused-vars


var configureStyled = function configureStyled(tagOrComponent, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      theming = _options.theming;
  var isTag = typeof tagOrComponent === 'string';
  var ThemeContext$1 = theming ? theming.context : theming__WEBPACK_IMPORTED_MODULE_4__.ThemeContext;
  var shouldForwardProp = getShouldForwardProp(tagOrComponent, options);

  var _options2 = options,
      _ = _options2.shouldForwardProp,
      hookOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_options2, ["shouldForwardProp"]);

  return function createStyledComponent() {
    // eslint-disable-next-line prefer-rest-params
    var _parseStyles = parseStyles(arguments),
        styles = _parseStyles.styles,
        label = _parseStyles.label;

    var useStyles = createUseStyles(styles, hookOptions);

    var Styled = function Styled(props) {
      var as = props.as,
          className = props.className;
      var theme = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThemeContext$1);
      var propsWithTheme = Object.assign({
        theme: theme
      }, props);
      var classes = useStyles(propsWithTheme);
      var childProps = getChildProps(props, shouldForwardProp, isTag);
      var classNames = ((classes[label] || classes.sc || '') + " " + (classes.scd || '')).trim();
      childProps.className = className ? className + " " + classNames : classNames;

      if (!isTag && shouldForwardProp) {
        tagOrComponent[shouldForwardPropSymbol] = shouldForwardProp;
      }

      if (isTag && as) {
        return (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(as, childProps);
      }

      return (0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(tagOrComponent, childProps);
    };

    return Styled;
  };
};

/* eslint-disable prefer-rest-params, prefer-spread */
var create = function create(css) {
  if (css === void 0) {
    css = css_jss__WEBPACK_IMPORTED_MODULE_11__["default"];
  }

  return function createElement$1(type, props) {
    var args = arguments;

    if (props && props.css) {
      var className = css(props.css);
      var newProps = Object.assign({}, props);
      newProps.className = props.className ? props.className + " " + className : className;
      delete newProps.css;
      args[1] = newProps;
    }

    return react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(undefined, args);
  };
};
var jsx = create();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createWithStyles);



/***/ }),

/***/ "./node_modules/react-router/esm/react-router.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-router/esm/react-router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MemoryRouter: () => (/* binding */ MemoryRouter),
/* harmony export */   Prompt: () => (/* binding */ Prompt),
/* harmony export */   Redirect: () => (/* binding */ Redirect),
/* harmony export */   Route: () => (/* binding */ Route),
/* harmony export */   Router: () => (/* binding */ Router),
/* harmony export */   StaticRouter: () => (/* binding */ StaticRouter),
/* harmony export */   Switch: () => (/* binding */ Switch),
/* harmony export */   __HistoryContext: () => (/* binding */ historyContext),
/* harmony export */   __RouterContext: () => (/* binding */ context),
/* harmony export */   generatePath: () => (/* binding */ generatePath),
/* harmony export */   matchPath: () => (/* binding */ matchPath),
/* harmony export */   useHistory: () => (/* binding */ useHistory),
/* harmony export */   useLocation: () => (/* binding */ useLocation),
/* harmony export */   useParams: () => (/* binding */ useParams),
/* harmony export */   useRouteMatch: () => (/* binding */ useRouteMatch),
/* harmony export */   withRouter: () => (/* binding */ withRouter)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! history */ "./node_modules/history/esm/history.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var mini_create_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mini-create-react-context */ "./node_modules/mini-create-react-context/dist/esm/index.js");
/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/esm/tiny-invariant.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path-to-regexp */ "./node_modules/react-router/node_modules/path-to-regexp/index.js");
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8__);













// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext = function createNamedContext(name) {
  var context = (0,mini_create_react_context__WEBPACK_IMPORTED_MODULE_2__["default"])();
  context.displayName = name;
  return context;
};

var historyContext =
/*#__PURE__*/
createNamedContext("Router-History");

// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext$1 = function createNamedContext(name) {
  var context = (0,mini_create_react_context__WEBPACK_IMPORTED_MODULE_2__["default"])();
  context.displayName = name;
  return context;
};

var context =
/*#__PURE__*/
createNamedContext$1("Router");

/**
 * The public API for putting history on context.
 */

var Router =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Router, _React$Component);

  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  function Router(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;

    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        if (_this._isMounted) {
          _this.setState({
            location: location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }

    return _this;
  }

  var _proto = Router.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;

    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) this.unlisten();
  };

  _proto.render = function render() {
    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, react__WEBPACK_IMPORTED_MODULE_1___default().createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };

  return Router;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

if (true) {
  Router.propTypes = {
    children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node),
    history: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object).isRequired,
    staticContext: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)
  };

  Router.prototype.componentDidUpdate = function (prevProps) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(prevProps.history === this.props.history, "You cannot change <Router history>") : 0;
  };
}

/**
 * The public API for a <Router> that stores location in memory.
 */

var MemoryRouter =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = (0,history__WEBPACK_IMPORTED_MODULE_11__.createMemoryHistory)(_this.props);
    return _this;
  }

  var _proto = MemoryRouter.prototype;

  _proto.render = function render() {
    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

if (true) {
  MemoryRouter.propTypes = {
    initialEntries: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().array),
    initialIndex: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),
    getUserConfirmation: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
    keyLength: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),
    children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node)
  };

  MemoryRouter.prototype.componentDidMount = function () {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.") : 0;
  };
}

var Lifecycle =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Lifecycle, _React$Component);

  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Lifecycle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };

  _proto.render = function render() {
    return null;
  };

  return Lifecycle;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

/**
 * The public API for prompting the user before navigating away from a screen.
 */

function Prompt(_ref) {
  var message = _ref.message,
      _ref$when = _ref.when,
      when = _ref$when === void 0 ? true : _ref$when;
  return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function (context) {
    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You should not use <Prompt> outside a <Router>") : 0 : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}

if (true) {
  var messageType = prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)]);
  Prompt.propTypes = {
    when: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
    message: messageType.isRequired
  };
}

var cache = {};
var cacheLimit = 10000;
var cacheCount = 0;

function compilePath(path) {
  if (cache[path]) return cache[path];
  var generator = path_to_regexp__WEBPACK_IMPORTED_MODULE_5___default().compile(path);

  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }

  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */


function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }

  if (params === void 0) {
    params = {};
  }

  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}

/**
 * The public API for navigating programmatically with a component.
 */

function Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
      to = _ref.to,
      _ref$push = _ref.push,
      push = _ref$push === void 0 ? false : _ref$push;
  return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function (context) {
    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You should not use <Redirect> outside a <Router>") : 0 : void 0;
    var history = context.history,
        staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = (0,history__WEBPACK_IMPORTED_MODULE_11__.createLocation)(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }

    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = (0,history__WEBPACK_IMPORTED_MODULE_11__.createLocation)(prevProps.to);

        if (!(0,history__WEBPACK_IMPORTED_MODULE_11__.locationsAreEqual)(prevLocation, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}

if (true) {
  Redirect.propTypes = {
    push: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
    from: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
    to: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)]).isRequired
  };
}

var cache$1 = {};
var cacheLimit$1 = 10000;
var cacheCount$1 = 0;

function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = path_to_regexp__WEBPACK_IMPORTED_MODULE_5___default()(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };

  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }

  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */


function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === void 0 ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;

    var _compilePath = compilePath$1(path, {
      end: exact,
      strict: strict,
      sensitive: sensitive
    }),
        regexp = _compilePath.regexp,
        keys = _compilePath.keys;

    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
        values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}

function isEmptyChildren(children) {
  return react__WEBPACK_IMPORTED_MODULE_1___default().Children.count(children) === 0;
}

function evalChildrenDev(children, props, path) {
  var value = children(props);
   true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(value !== undefined, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? " path=\"" + path + "\"" : "") + ">, but you ") + "should have returned a React element or `null`") : 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */


var Route =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Route, _React$Component);

  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Route.prototype;

  _proto.render = function render() {
    var _this = this;

    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function (context$1) {
      !context$1 ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You should not use <Route> outside a <Router>") : 0 : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;

      var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, context$1, {
        location: location,
        match: match
      });

      var _this$props = _this.props,
          children = _this$props.children,
          component = _this$props.component,
          render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }

      return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : children : component ? react__WEBPACK_IMPORTED_MODULE_1___default().createElement(component, props) : render ? render(props) : null : typeof children === "function" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : null);
    });
  };

  return Route;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

if (true) {
  Route.propTypes = {
    children: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node)]),
    component: function component(props, propName) {
      if (props[propName] && !(0,react_is__WEBPACK_IMPORTED_MODULE_6__.isValidElementType)(props[propName])) {
        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
      }
    },
    exact: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
    location: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),
    path: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().string), prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string))]),
    render: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
    sensitive: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
    strict: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool)
  };

  Route.prototype.componentDidMount = function () {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") : 0;
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") : 0;
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") : 0;
  };

  Route.prototype.componentDidUpdate = function (prevProps) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : 0;
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : 0;
  };
}

function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}

function addBasename(basename, location) {
  if (!basename) return location;
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}

function stripBasename(basename, location) {
  if (!basename) return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}

function createURL(location) {
  return typeof location === "string" ? location : (0,history__WEBPACK_IMPORTED_MODULE_11__.createPath)(location);
}

function staticHandler(methodName) {
  return function () {
      true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You cannot %s with <StaticRouter>", methodName) : 0 ;
  };
}

function noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var StaticRouter =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(StaticRouter, _React$Component);

  function StaticRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };

    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };

    _this.handleListen = function () {
      return noop;
    };

    _this.handleBlock = function () {
      return noop;
    };

    return _this;
  }

  var _proto = StaticRouter.prototype;

  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
        _this$props$basename = _this$props.basename,
        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
        _this$props$context = _this$props.context,
        context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = addBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_11__.createLocation)(location));
    context.url = createURL(context.location);
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        _this$props2$basename = _this$props2.basename,
        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
        _this$props2$context = _this$props2.context,
        context = _this$props2$context === void 0 ? {} : _this$props2$context,
        _this$props2$location = _this$props2.location,
        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
        rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__["default"])(_this$props2, ["basename", "context", "location"]);

    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_11__.createLocation)(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Router, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, rest, {
      history: history,
      staticContext: context
    }));
  };

  return StaticRouter;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

if (true) {
  StaticRouter.propTypes = {
    basename: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
    context: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),
    location: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)])
  };

  StaticRouter.prototype.componentDidMount = function () {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.") : 0;
  };
}

/**
 * The public API for rendering the first <Route> that matches.
 */

var Switch =
/*#__PURE__*/
function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Switch, _React$Component);

  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Switch.prototype;

  _proto.render = function render() {
    var _this = this;

    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function (context) {
      !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You should not use <Switch> outside a <Router>") : 0 : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      react__WEBPACK_IMPORTED_MODULE_1___default().Children.forEach(_this.props.children, function (child) {
        if (match == null && react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, child.props, {
            path: path
          })) : context.match;
        }
      });
      return match ? react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };

  return Switch;
}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));

if (true) {
  Switch.propTypes = {
    children: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().node),
    location: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)
  };

  Switch.prototype.componentDidUpdate = function (prevProps) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : 0;
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_10__["default"])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : 0;
  };
}

/**
 * A public higher-order component to access the imperative API
 */

function withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";

  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__["default"])(props, ["wrappedComponentRef"]);

    return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(context.Consumer, null, function (context) {
      !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You should not use <" + displayName + " /> outside a <Router>") : 0 : void 0;
      return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__["default"])({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };

  C.displayName = displayName;
  C.WrappedComponent = Component;

  if (true) {
    C.propTypes = {
      wrappedComponentRef: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_9___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object)])
    };
  }

  return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_8___default()(C, Component);
}

var useContext = (react__WEBPACK_IMPORTED_MODULE_1___default().useContext);
function useHistory() {
  if (true) {
    !(typeof useContext === "function") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You must use React >= 16.8 in order to use useHistory()") : 0 : void 0;
  }

  return useContext(historyContext);
}
function useLocation() {
  if (true) {
    !(typeof useContext === "function") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You must use React >= 16.8 in order to use useLocation()") : 0 : void 0;
  }

  return useContext(context).location;
}
function useParams() {
  if (true) {
    !(typeof useContext === "function") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You must use React >= 16.8 in order to use useParams()") : 0 : void 0;
  }

  var match = useContext(context).match;
  return match ? match.params : {};
}
function useRouteMatch(path) {
  if (true) {
    !(typeof useContext === "function") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__["default"])(false, "You must use React >= 16.8 in order to use useRouteMatch()") : 0 : void 0;
  }

  var location = useLocation();
  var match = useContext(context).match;
  return path ? matchPath(location.pathname, path) : match;
}

if (true) {
  if (typeof window !== "undefined") {
    var global = window;
    var key = "__react_router_build__";
    var buildNames = {
      cjs: "CommonJS",
      esm: "ES modules",
      umd: "UMD"
    };

    if (global[key] && global[key] !== "esm") {
      var initialBuildName = buildNames[global[key]];
      var secondaryBuildName = buildNames["esm"]; // TODO: Add link to article that explains in detail how to avoid
      // loading 2 different builds.

      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
    }

    global[key] = "esm";
  }
}




/***/ }),

/***/ "./node_modules/react-router/node_modules/path-to-regexp/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/path-to-regexp/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isarray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var ReactVersion = '18.2.0';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: null
};

var ReactCurrentActQueue = {
  current: null,
  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
  isBatchingLegacy: false,
  didScheduleLegacyUpdate: false
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var assign = Object.assign;

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (element === null || element === undefined) {
    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
  }

  var propName; // Original props are copied

  var props = assign({}, element.props); // Reserved names are extracted

  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    {
      checkKeyStringCoercion(element.key);
    }

    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        {
          // The `if` statement here prevents auto-disabling of the safe
          // coercion ESLint rule, so we must manually disable it below.
          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
            checkKeyStringCoercion(mappedChild.key);
          }
        }

        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        // eslint-disable-next-line react-internal/safe-string-coercion
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      // eslint-disable-next-line react-internal/safe-string-coercion
      var childrenString = String(children);
      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    throw new Error('React.Children.only expected to receive a single React element child.');
  }

  return children;
}

function createContext(defaultValue) {
  // TODO: Second argument used to be an optional `calculateChangedBits`
  // function. Warn to reserve for future use?
  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null,
    // Add these to use same hidden class in VM as ServerContext
    _defaultValue: null,
    _globalName: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.
    // This might throw either because it's missing or throws. If so, we treat it
    // as still uninitialized and try again next time. Which is the same as what
    // happens if the ctor or any wrappers processing the ctor throws. This might
    // end up fixing it if the resolution was a concurrency bug.

    thenable.then(function (moduleObject) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = moduleObject;
      }
    }, function (error) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });

    if (payload._status === Uninitialized) {
      // In case, we're still uninitialized, then we're waiting for the thenable
      // to resolve. Set it as pending in the meantime.
      var pending = payload;
      pending._status = Pending;
      pending._result = thenable;
    }
  }

  if (payload._status === Resolved) {
    var moduleObject = payload._result;

    {
      if (moduleObject === undefined) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
      }
    }

    {
      if (!('default' in moduleObject)) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
      }
    }

    return moduleObject.default;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: Uninitialized,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.forwardRef((props, ref) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!render.name && !render.displayName) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.memo((props) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!type.name && !type.displayName) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  {
    if (dispatcher === null) {
      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
    }
  } // Will result in a null access error if accessed outside render phase. We
  // intentionally don't throw our own error because this is in a hot path.
  // Also helps ensure this is inlined.


  return dispatcher;
}
function useContext(Context) {
  var dispatcher = resolveDispatcher();

  {
    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useInsertionEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useInsertionEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
function useTransition() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition();
}
function useDeferredValue(value) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value);
}
function useId() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useId();
}
function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentNameFromType(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

function startTransition(scope, options) {
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = {};
  var currentTransition = ReactCurrentBatchConfig.transition;

  {
    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
  }

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

var didWarnAboutMessageChannel = false;
var enqueueTaskImpl = null;
function enqueueTask(task) {
  if (enqueueTaskImpl === null) {
    try {
      // read require off the module object to get around the bundlers.
      // we don't want them to detect a require and bundle a Node polyfill.
      var requireString = ('require' + Math.random()).slice(0, 7);
      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
      // version of setImmediate, bypassing fake timers if any.

      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
    } catch (_err) {
      // we're in a browser
      // we can't use regular timers because they may still be faked
      // so we try MessageChannel+postMessage instead
      enqueueTaskImpl = function (callback) {
        {
          if (didWarnAboutMessageChannel === false) {
            didWarnAboutMessageChannel = true;

            if (typeof MessageChannel === 'undefined') {
              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
            }
          }
        }

        var channel = new MessageChannel();
        channel.port1.onmessage = callback;
        channel.port2.postMessage(undefined);
      };
    }
  }

  return enqueueTaskImpl(task);
}

var actScopeDepth = 0;
var didWarnNoAwaitAct = false;
function act(callback) {
  {
    // `act` calls can be nested, so we track the depth. This represents the
    // number of `act` scopes on the stack.
    var prevActScopeDepth = actScopeDepth;
    actScopeDepth++;

    if (ReactCurrentActQueue.current === null) {
      // This is the outermost `act` scope. Initialize the queue. The reconciler
      // will detect the queue and use it instead of Scheduler.
      ReactCurrentActQueue.current = [];
    }

    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
    var result;

    try {
      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
      // set to `true` while the given callback is executed, not for updates
      // triggered during an async event, because this is how the legacy
      // implementation of `act` behaved.
      ReactCurrentActQueue.isBatchingLegacy = true;
      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
      // which flushed updates immediately after the scope function exits, even
      // if it's an async function.

      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
        var queue = ReactCurrentActQueue.current;

        if (queue !== null) {
          ReactCurrentActQueue.didScheduleLegacyUpdate = false;
          flushActQueue(queue);
        }
      }
    } catch (error) {
      popActScope(prevActScopeDepth);
      throw error;
    } finally {
      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
    }

    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
      // for it to resolve before exiting the current scope.

      var wasAwaited = false;
      var thenable = {
        then: function (resolve, reject) {
          wasAwaited = true;
          thenableResult.then(function (returnValue) {
            popActScope(prevActScopeDepth);

            if (actScopeDepth === 0) {
              // We've exited the outermost act scope. Recursively flush the
              // queue until there's no remaining work.
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }, function (error) {
            // The callback threw an error.
            popActScope(prevActScopeDepth);
            reject(error);
          });
        }
      };

      {
        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
          // eslint-disable-next-line no-undef
          Promise.resolve().then(function () {}).then(function () {
            if (!wasAwaited) {
              didWarnNoAwaitAct = true;

              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
            }
          });
        }
      }

      return thenable;
    } else {
      var returnValue = result; // The callback is not an async function. Exit the current scope
      // immediately, without awaiting.

      popActScope(prevActScopeDepth);

      if (actScopeDepth === 0) {
        // Exiting the outermost act scope. Flush the queue.
        var _queue = ReactCurrentActQueue.current;

        if (_queue !== null) {
          flushActQueue(_queue);
          ReactCurrentActQueue.current = null;
        } // Return a thenable. If the user awaits it, we'll flush again in
        // case additional work was scheduled by a microtask.


        var _thenable = {
          then: function (resolve, reject) {
            // Confirm we haven't re-entered another `act` scope, in case
            // the user does something weird like await the thenable
            // multiple times.
            if (ReactCurrentActQueue.current === null) {
              // Recursively flush the queue until there's no remaining work.
              ReactCurrentActQueue.current = [];
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }
        };
        return _thenable;
      } else {
        // Since we're inside a nested `act` scope, the returned thenable
        // immediately resolves. The outer scope will flush the queue.
        var _thenable2 = {
          then: function (resolve, reject) {
            resolve(returnValue);
          }
        };
        return _thenable2;
      }
    }
  }
}

function popActScope(prevActScopeDepth) {
  {
    if (prevActScopeDepth !== actScopeDepth - 1) {
      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
    }

    actScopeDepth = prevActScopeDepth;
  }
}

function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
  {
    var queue = ReactCurrentActQueue.current;

    if (queue !== null) {
      try {
        flushActQueue(queue);
        enqueueTask(function () {
          if (queue.length === 0) {
            // No additional work was scheduled. Finish.
            ReactCurrentActQueue.current = null;
            resolve(returnValue);
          } else {
            // Keep flushing work until there's none left.
            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
          }
        });
      } catch (error) {
        reject(error);
      }
    } else {
      resolve(returnValue);
    }
  }
}

var isFlushing = false;

function flushActQueue(queue) {
  {
    if (!isFlushing) {
      // Prevent re-entrance.
      isFlushing = true;
      var i = 0;

      try {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(true);
          } while (callback !== null);
        }

        queue.length = 0;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        queue = queue.slice(i + 1);
        throw error;
      } finally {
        isFlushing = false;
      }
    }
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.startTransition = startTransition;
exports.unstable_act = act;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useDeferredValue = useDeferredValue;
exports.useEffect = useEffect;
exports.useId = useId;
exports.useImperativeHandle = useImperativeHandle;
exports.useInsertionEffect = useInsertionEffect;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.useSyncExternalStore = useSyncExternalStore;
exports.useTransition = useTransition;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/resolve-pathname/esm/resolve-pathname.js":
/*!***************************************************************!*\
  !*** ./node_modules/resolve-pathname/esm/resolve-pathname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to, from) {
  if (from === undefined) from = '';

  var toParts = (to && to.split('/')) || [];
  var fromParts = (from && from.split('/')) || [];

  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');

  if (
    mustEndAbs &&
    fromParts[0] !== '' &&
    (!fromParts[0] || !isAbsolute(fromParts[0]))
  )
    fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (resolvePathname);


/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var enableSchedulerDebugging = false;
var enableProfiling = false;
var frameYieldMs = 5;

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  return heap.length === 0 ? null : heap[0];
}
function pop(heap) {
  if (heap.length === 0) {
    return null;
  }

  var first = heap[0];
  var last = heap.pop();

  if (last !== first) {
    heap[0] = last;
    siftDown(heap, last, 0);
  }

  return first;
}

function siftUp(heap, node, i) {
  var index = i;

  while (index > 0) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;
  var halfLength = length >>> 1;

  while (index < halfLength) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (compare(left, node) < 0) {
      if (rightIndex < length && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (rightIndex < length && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */

var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

if (hasPerformanceNow) {
  var localPerformance = performance;

  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date;
  var initialTime = localDate.now();

  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111


var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.

var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom

var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = exports.unstable_now();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
  } else {
    startTime = currentTime;
  }

  var timeout;

  switch (priorityLevel) {
    case ImmediatePriority:
      timeout = IMMEDIATE_PRIORITY_TIMEOUT;
      break;

    case UserBlockingPriority:
      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
      break;

    case IdlePriority:
      timeout = IDLE_PRIORITY_TIMEOUT;
      break;

    case LowPriority:
      timeout = LOW_PRIORITY_TIMEOUT;
      break;

    case NormalPriority:
    default:
      timeout = NORMAL_PRIORITY_TIMEOUT;
      break;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
}

function unstable_continueExecution() {

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

var isMessageLoopRunning = false;
var scheduledHostCallback = null;
var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
// thread, like user events. By default, it yields multiple times per frame.
// It does not attempt to align with frame boundaries, since most tasks don't
// need to be frame aligned; for those that do, use requestAnimationFrame.

var frameInterval = frameYieldMs;
var startTime = -1;

function shouldYieldToHost() {
  var timeElapsed = exports.unstable_now() - startTime;

  if (timeElapsed < frameInterval) {
    // The main thread has only been blocked for a really short amount of time;
    // smaller than a single frame. Don't yield yet.
    return false;
  } // The main thread has been blocked for a non-negligible amount of time. We


  return true;
}

function requestPaint() {

}

function forceFrameRate(fps) {
  if (fps < 0 || fps > 125) {
    // Using console['error'] to evade Babel and ESLint
    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
    return;
  }

  if (fps > 0) {
    frameInterval = Math.floor(1000 / fps);
  } else {
    // reset the framerate
    frameInterval = frameYieldMs;
  }
}

var performWorkUntilDeadline = function () {
  if (scheduledHostCallback !== null) {
    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
    // has been blocked.

    startTime = currentTime;
    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
    // error can be observed.
    //
    // Intentionally not using a try-catch, since that makes some debugging
    // techniques harder. Instead, if `scheduledHostCallback` errors, then
    // `hasMoreWork` will remain true, and we'll continue the work loop.

    var hasMoreWork = true;

    try {
      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
    } finally {
      if (hasMoreWork) {
        // If there's more work, schedule the next message event at the end
        // of the preceding one.
        schedulePerformWorkUntilDeadline();
      } else {
        isMessageLoopRunning = false;
        scheduledHostCallback = null;
      }
    }
  } else {
    isMessageLoopRunning = false;
  } // Yielding to the browser will give it a chance to paint, so we can
};

var schedulePerformWorkUntilDeadline;

if (typeof localSetImmediate === 'function') {
  // Node.js and old IE.
  // There's a few reasons for why we prefer setImmediate.
  //
  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
  // (Even though this is a DOM fork of the Scheduler, you could get here
  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
  // https://github.com/facebook/react/issues/20756
  //
  // But also, it runs earlier which is the semantic we want.
  // If other browsers ever implement it, it's better to use it.
  // Although both of these would be inferior to native scheduling.
  schedulePerformWorkUntilDeadline = function () {
    localSetImmediate(performWorkUntilDeadline);
  };
} else if (typeof MessageChannel !== 'undefined') {
  // DOM and Worker environments.
  // We prefer MessageChannel because of the 4ms setTimeout clamping.
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  schedulePerformWorkUntilDeadline = function () {
    port.postMessage(null);
  };
} else {
  // We should only fallback here in non-browser environments.
  schedulePerformWorkUntilDeadline = function () {
    localSetTimeout(performWorkUntilDeadline, 0);
  };
}

function requestHostCallback(callback) {
  scheduledHostCallback = callback;

  if (!isMessageLoopRunning) {
    isMessageLoopRunning = true;
    schedulePerformWorkUntilDeadline();
  }
}

function requestHostTimeout(callback, ms) {
  taskTimeoutID = localSetTimeout(function () {
    callback(exports.unstable_now());
  }, ms);
}

function cancelHostTimeout() {
  localClearTimeout(taskTimeoutID);
  taskTimeoutID = -1;
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling =  null;

exports.unstable_IdlePriority = IdlePriority;
exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_Profiling = unstable_Profiling;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_forceFrameRate = forceFrameRate;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_next = unstable_next;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_shouldYield = shouldYieldToHost;
exports.unstable_wrapCallback = unstable_wrapCallback;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}


/***/ }),

/***/ "./node_modules/shallow-equal/dist/index.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/shallow-equal/dist/index.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   shallowEqualArrays: () => (/* binding */ shallowEqualArrays),
/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects)
/* harmony export */ });
function shallowEqualObjects(objA, objB) {
  if (objA === objB) {
    return true;
  }

  if (!objA || !objB) {
    return false;
  }

  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var len = aKeys.length;

  if (bKeys.length !== len) {
    return false;
  }

  for (var i = 0; i < len; i++) {
    var key = aKeys[i];

    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {
      return false;
    }
  }

  return true;
}

function shallowEqualArrays(arrA, arrB) {
  if (arrA === arrB) {
    return true;
  }

  if (!arrA || !arrB) {
    return false;
  }

  var len = arrA.length;

  if (arrB.length !== len) {
    return false;
  }

  for (var i = 0; i < len; i++) {
    if (arrA[i] !== arrB[i]) {
      return false;
    }
  }

  return true;
}




/***/ }),

/***/ "./node_modules/symbol-observable/es/index.js":
/*!****************************************************!*\
  !*** ./node_modules/symbol-observable/es/index.js ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ponyfill.js */ "./node_modules/symbol-observable/es/ponyfill.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof __webpack_require__.g !== 'undefined') {
  root = __webpack_require__.g;
} else if (true) {
  root = module;
} else {}

var result = (0,_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__["default"])(root);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (result);


/***/ }),

/***/ "./node_modules/symbol-observable/es/ponyfill.js":
/*!*******************************************************!*\
  !*** ./node_modules/symbol-observable/es/ponyfill.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ symbolObservablePonyfill)
/* harmony export */ });
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),

/***/ "./node_modules/theming/dist/theming.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/theming/dist/theming.esm.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeContext: () => (/* binding */ ThemeContext),
/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),
/* harmony export */   createTheming: () => (/* binding */ createTheming),
/* harmony export */   useTheme: () => (/* binding */ useTheme),
/* harmony export */   withTheme: () => (/* binding */ withTheme)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_display_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-display-name */ "./node_modules/react-display-name/lib/getDisplayName.js");






function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function isObject(obj) {
  return obj !== null && typeof obj === 'object' && !Array.isArray(obj);
}

function createThemeProvider(context) {
  var ThemeProvider =
  /*#__PURE__*/
  function (_React$Component) {
    _inheritsLoose(ThemeProvider, _React$Component);

    function ThemeProvider() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "cachedTheme", void 0);

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "lastOuterTheme", void 0);

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "lastTheme", void 0);

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderProvider", function (outerTheme) {
        var children = _this.props.children;
        return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(context.Provider, {
          value: _this.getTheme(outerTheme)
        }, children);
      });

      return _this;
    }

    var _proto = ThemeProvider.prototype;

    // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation
    _proto.getTheme = function getTheme(outerTheme) {
      if (this.props.theme !== this.lastTheme || outerTheme !== this.lastOuterTheme || !this.cachedTheme) {
        this.lastOuterTheme = outerTheme;
        this.lastTheme = this.props.theme;

        if (typeof this.lastTheme === 'function') {
          var theme = this.props.theme;
          this.cachedTheme = theme(outerTheme);
           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__["default"])(isObject(this.cachedTheme), '[ThemeProvider] Please return an object from your theme function') : 0;
        } else {
          var _theme = this.props.theme;
           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__["default"])(isObject(_theme), '[ThemeProvider] Please make your theme prop a plain object') : 0;
          this.cachedTheme = outerTheme ? _extends({}, outerTheme, _theme) : _theme;
        }
      }

      return this.cachedTheme;
    };

    _proto.render = function render() {
      var children = this.props.children;

      if (!children) {
        return null;
      }

      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(context.Consumer, null, this.renderProvider);
    };

    return ThemeProvider;
  }((react__WEBPACK_IMPORTED_MODULE_0___default().Component));

  if (true) {
    ThemeProvider.propTypes = {
      // eslint-disable-next-line react/require-default-props
      children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),
      theme: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({}), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)]).isRequired
    };
  }

  return ThemeProvider;
}

function createWithTheme(context) {
  return function hoc(Component) {
    var withTheme = react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {
      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(context.Consumer, null, function (theme) {
         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__["default"])(isObject(theme), '[theming] Please use withTheme only with the ThemeProvider') : 0;
        return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, _extends({
          theme: theme,
          ref: ref
        }, props));
      });
    });

    if (true) {
      withTheme.displayName = "WithTheme(" + (0,react_display_name__WEBPACK_IMPORTED_MODULE_2__["default"])(Component) + ")";
    }

    hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1___default()(withTheme, Component);
    return withTheme;
  };
}

function createUseTheme(context) {
  var useTheme = function useTheme() {
    var theme = react__WEBPACK_IMPORTED_MODULE_0___default().useContext(context);
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__["default"])(isObject(theme), '[theming] Please use useTheme only with the ThemeProvider') : 0;
    return theme;
  };

  return useTheme;
}

function createTheming(context) {
  return {
    context: context,
    withTheme: createWithTheme(context),
    useTheme: createUseTheme(context),
    ThemeProvider: createThemeProvider(context)
  };
}

var ThemeContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();

var _createTheming = createTheming(ThemeContext),
    withTheme = _createTheming.withTheme,
    ThemeProvider = _createTheming.ThemeProvider,
    useTheme = _createTheming.useTheme;




/***/ }),

/***/ "./node_modules/tiny-warning/dist/tiny-warning.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/tiny-warning/dist/tiny-warning.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var isProduction = "development" === 'production';
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (warning);


/***/ }),

/***/ "./node_modules/value-equal/esm/value-equal.js":
/*!*****************************************************!*\
  !*** ./node_modules/value-equal/esm/value-equal.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}

function valueEqual(a, b) {
  // Test for strict equality first.
  if (a === b) return true;

  // Otherwise, if either of them == null they are not equal.
  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return (
      Array.isArray(b) &&
      a.length === b.length &&
      a.every(function(item, index) {
        return valueEqual(item, b[index]);
      })
    );
  }

  if (typeof a === 'object' || typeof b === 'object') {
    var aValue = valueOf(a);
    var bValue = valueOf(b);

    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

    return Object.keys(Object.assign({}, a, b)).every(function(key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (valueEqual);


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/clients/WebSocketClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ WebSocketClient)
/* harmony export */ });
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var WebSocketClient = /*#__PURE__*/function () {
  /**
   * @param {string} url
   */
  function WebSocketClient(url) {
    _classCallCheck(this, WebSocketClient);
    this.client = new WebSocket(url);
    this.client.onerror = function (error) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_0__.log.error(error);
    };
  }

  /**
   * @param {(...args: any[]) => void} f
   */
  _createClass(WebSocketClient, [{
    key: "onOpen",
    value: function onOpen(f) {
      this.client.onopen = f;
    }

    /**
     * @param {(...args: any[]) => void} f
     */
  }, {
    key: "onClose",
    value: function onClose(f) {
      this.client.onclose = f;
    }

    // call f with the message string as the first argument
    /**
     * @param {(...args: any[]) => void} f
     */
  }, {
    key: "onMessage",
    value: function onMessage(f) {
      this.client.onmessage = function (e) {
        f(e.data);
      };
    }
  }]);
  return WebSocketClient;
}();


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3500&pathname=%2Fws&logging=info&overlay=false&reconnect=10&hot=true&live-reload=true":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3500&pathname=%2Fws&logging=info&overlay=false&reconnect=10&hot=true&live-reload=true ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var __resourceQuery = "?protocol=ws%3A&hostname=0.0.0.0&port=3500&pathname=%2Fws&logging=info&overlay=false&reconnect=10&hot=true&live-reload=true";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/log.js */ "./node_modules/webpack/hot/log.js");
/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/stripAnsi.js */ "./node_modules/webpack-dev-server/client/utils/stripAnsi.js");
/* harmony import */ var _utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/parseURL.js */ "./node_modules/webpack-dev-server/client/utils/parseURL.js");
/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./socket.js */ "./node_modules/webpack-dev-server/client/socket.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./overlay.js */ "./node_modules/webpack-dev-server/client/overlay.js");
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
/* harmony import */ var _utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/sendMessage.js */ "./node_modules/webpack-dev-server/client/utils/sendMessage.js");
/* harmony import */ var _utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/reloadApp.js */ "./node_modules/webpack-dev-server/client/utils/reloadApp.js");
/* harmony import */ var _utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/createSocketURL.js */ "./node_modules/webpack-dev-server/client/utils/createSocketURL.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/* global __resourceQuery, __webpack_hash__ */
/// <reference types="webpack/module" />










/**
 * @typedef {Object} OverlayOptions
 * @property {boolean | (error: Error) => boolean} [warnings]
 * @property {boolean | (error: Error) => boolean} [errors]
 * @property {boolean | (error: Error) => boolean} [runtimeErrors]
 * @property {string} [trustedTypesPolicyName]
 */

/**
 * @typedef {Object} Options
 * @property {boolean} hot
 * @property {boolean} liveReload
 * @property {boolean} progress
 * @property {boolean | OverlayOptions} overlay
 * @property {string} [logging]
 * @property {number} [reconnect]
 */

/**
 * @typedef {Object} Status
 * @property {boolean} isUnloading
 * @property {string} currentHash
 * @property {string} [previousHash]
 */

/**
 * @param {boolean | { warnings?: boolean | string; errors?: boolean | string; runtimeErrors?: boolean | string; }} overlayOptions
 */
var decodeOverlayOptions = function decodeOverlayOptions(overlayOptions) {
  if (typeof overlayOptions === "object") {
    ["warnings", "errors", "runtimeErrors"].forEach(function (property) {
      if (typeof overlayOptions[property] === "string") {
        var overlayFilterFunctionString = decodeURIComponent(overlayOptions[property]);

        // eslint-disable-next-line no-new-func
        var overlayFilterFunction = new Function("message", "var callback = ".concat(overlayFilterFunctionString, "\n        return callback(message)"));
        overlayOptions[property] = overlayFilterFunction;
      }
    });
  }
};

/**
 * @type {Status}
 */
var status = {
  isUnloading: false,
  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement
  // eslint-disable-next-line camelcase
  currentHash:  true ? __webpack_require__.h() : 0
};

/** @type {Options} */
var options = {
  hot: false,
  liveReload: false,
  progress: false,
  overlay: false
};
var parsedResourceQuery = (0,_utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__["default"])(__resourceQuery);
var enabledFeatures = {
  "Hot Module Replacement": false,
  "Live Reloading": false,
  Progress: false,
  Overlay: false
};
if (parsedResourceQuery.hot === "true") {
  options.hot = true;
  enabledFeatures["Hot Module Replacement"] = true;
}
if (parsedResourceQuery["live-reload"] === "true") {
  options.liveReload = true;
  enabledFeatures["Live Reloading"] = true;
}
if (parsedResourceQuery.progress === "true") {
  options.progress = true;
  enabledFeatures.Progress = true;
}
if (parsedResourceQuery.overlay) {
  try {
    options.overlay = JSON.parse(parsedResourceQuery.overlay);
  } catch (e) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error("Error parsing overlay options from resource query:", e);
  }

  // Fill in default "true" params for partially-specified objects.
  if (typeof options.overlay === "object") {
    options.overlay = _objectSpread({
      errors: true,
      warnings: true,
      runtimeErrors: true
    }, options.overlay);
    decodeOverlayOptions(options.overlay);
  }
  enabledFeatures.Overlay = true;
}
if (parsedResourceQuery.logging) {
  options.logging = parsedResourceQuery.logging;
}
if (typeof parsedResourceQuery.reconnect !== "undefined") {
  options.reconnect = Number(parsedResourceQuery.reconnect);
}

/**
 * @param {string} level
 */
function setAllLogLevel(level) {
  // This is needed because the HMR logger operate separately from dev server logger
  webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default().setLogLevel(level === "verbose" || level === "log" ? "info" : level);
  (0,_utils_log_js__WEBPACK_IMPORTED_MODULE_5__.setLogLevel)(level);
}
if (options.logging) {
  setAllLogLevel(options.logging);
}
(0,_utils_log_js__WEBPACK_IMPORTED_MODULE_5__.logEnabledFeatures)(enabledFeatures);
self.addEventListener("beforeunload", function () {
  status.isUnloading = true;
});
var overlay = typeof window !== "undefined" ? (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.createOverlay)(typeof options.overlay === "object" ? {
  trustedTypesPolicyName: options.overlay.trustedTypesPolicyName,
  catchRuntimeError: options.overlay.runtimeErrors
} : {
  trustedTypesPolicyName: false,
  catchRuntimeError: options.overlay
}) : {
  send: function send() {}
};
var onSocketMessage = {
  hot: function hot() {
    if (parsedResourceQuery.hot === "false") {
      return;
    }
    options.hot = true;
  },
  liveReload: function liveReload() {
    if (parsedResourceQuery["live-reload"] === "false") {
      return;
    }
    options.liveReload = true;
  },
  invalid: function invalid() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("App updated. Recompiling...");

    // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.
    if (options.overlay) {
      overlay.send({
        type: "DISMISS"
      });
    }
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Invalid");
  },
  /**
   * @param {string} hash
   */
  hash: function hash(_hash) {
    status.previousHash = status.currentHash;
    status.currentHash = _hash;
  },
  logging: setAllLogLevel,
  /**
   * @param {boolean} value
   */
  overlay: function overlay(value) {
    if (typeof document === "undefined") {
      return;
    }
    options.overlay = value;
    decodeOverlayOptions(options.overlay);
  },
  /**
   * @param {number} value
   */
  reconnect: function reconnect(value) {
    if (parsedResourceQuery.reconnect === "false") {
      return;
    }
    options.reconnect = value;
  },
  /**
   * @param {boolean} value
   */
  progress: function progress(value) {
    options.progress = value;
  },
  /**
   * @param {{ pluginName?: string, percent: number, msg: string }} data
   */
  "progress-update": function progressUpdate(data) {
    if (options.progress) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));
    }
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Progress", data);
  },
  "still-ok": function stillOk() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Nothing changed.");
    if (options.overlay) {
      overlay.send({
        type: "DISMISS"
      });
    }
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("StillOk");
  },
  ok: function ok() {
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Ok");
    if (options.overlay) {
      overlay.send({
        type: "DISMISS"
      });
    }
    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options, status);
  },
  // TODO: remove in v5 in favor of 'static-changed'
  /**
   * @param {string} file
   */
  "content-changed": function contentChanged(file) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },
  /**
   * @param {string} file
   */
  "static-changed": function staticChanged(file) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },
  /**
   * @param {Error[]} warnings
   * @param {any} params
   */
  warnings: function warnings(_warnings, params) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn("Warnings while compiling.");
    var printableWarnings = _warnings.map(function (error) {
      var _formatProblem = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)("warning", error),
        header = _formatProblem.header,
        body = _formatProblem.body;
      return "".concat(header, "\n").concat((0,_utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__["default"])(body));
    });
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Warnings", printableWarnings);
    for (var i = 0; i < printableWarnings.length; i++) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn(printableWarnings[i]);
    }
    var overlayWarningsSetting = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;
    if (overlayWarningsSetting) {
      var warningsToDisplay = typeof overlayWarningsSetting === "function" ? _warnings.filter(overlayWarningsSetting) : _warnings;
      if (warningsToDisplay.length) {
        overlay.send({
          type: "BUILD_ERROR",
          level: "warning",
          messages: _warnings
        });
      }
    }
    if (params && params.preventReloading) {
      return;
    }
    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options, status);
  },
  /**
   * @param {Error[]} errors
   */
  errors: function errors(_errors) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error("Errors while compiling. Reload prevented.");
    var printableErrors = _errors.map(function (error) {
      var _formatProblem2 = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)("error", error),
        header = _formatProblem2.header,
        body = _formatProblem2.body;
      return "".concat(header, "\n").concat((0,_utils_stripAnsi_js__WEBPACK_IMPORTED_MODULE_1__["default"])(body));
    });
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Errors", printableErrors);
    for (var i = 0; i < printableErrors.length; i++) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(printableErrors[i]);
    }
    var overlayErrorsSettings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;
    if (overlayErrorsSettings) {
      var errorsToDisplay = typeof overlayErrorsSettings === "function" ? _errors.filter(overlayErrorsSettings) : _errors;
      if (errorsToDisplay.length) {
        overlay.send({
          type: "BUILD_ERROR",
          level: "error",
          messages: _errors
        });
      }
    }
  },
  /**
   * @param {Error} error
   */
  error: function error(_error) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(_error);
  },
  close: function close() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Disconnected!");
    if (options.overlay) {
      overlay.send({
        type: "DISMISS"
      });
    }
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Close");
  }
};
var socketURL = (0,_utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__["default"])(parsedResourceQuery);
(0,_socket_js__WEBPACK_IMPORTED_MODULE_3__["default"])(socketURL, onSocketMessage, options.reconnect);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/modules/logger/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/modules/logger/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./client-src/modules/logger/SyncBailHookFake.js":
/*!*******************************************************!*\
  !*** ./client-src/modules/logger/SyncBailHookFake.js ***!
  \*******************************************************/
/***/ (function(module) {



/**
 * Client stub for tapable SyncBailHook
 */
module.exports = function clientTapableSyncBailHook() {
  return {
    call: function call() {}
  };
};

/***/ }),

/***/ "./node_modules/webpack/lib/logging/Logger.js":
/*!****************************************************!*\
  !*** ./node_modules/webpack/lib/logging/Logger.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/



function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[(typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }).toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var LogType = Object.freeze({
  error: /** @type {"error"} */"error",
  // message, c style arguments
  warn: /** @type {"warn"} */"warn",
  // message, c style arguments
  info: /** @type {"info"} */"info",
  // message, c style arguments
  log: /** @type {"log"} */"log",
  // message, c style arguments
  debug: /** @type {"debug"} */"debug",
  // message, c style arguments

  trace: /** @type {"trace"} */"trace",
  // no arguments

  group: /** @type {"group"} */"group",
  // [label]
  groupCollapsed: /** @type {"groupCollapsed"} */"groupCollapsed",
  // [label]
  groupEnd: /** @type {"groupEnd"} */"groupEnd",
  // [label]

  profile: /** @type {"profile"} */"profile",
  // [profileName]
  profileEnd: /** @type {"profileEnd"} */"profileEnd",
  // [profileName]

  time: /** @type {"time"} */"time",
  // name, time as [seconds, nanoseconds]

  clear: /** @type {"clear"} */"clear",
  // no arguments
  status: /** @type {"status"} */"status" // message, arguments
});

exports.LogType = LogType;

/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */

var LOG_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger raw log method");
var TIMERS_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger times");
var TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; })("webpack logger aggregated times");
var WebpackLogger = /*#__PURE__*/function () {
  /**
   * @param {function(LogTypeEnum, any[]=): void} log log function
   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger
   */
  function WebpackLogger(log, getChildLogger) {
    _classCallCheck(this, WebpackLogger);
    this[LOG_SYMBOL] = log;
    this.getChildLogger = getChildLogger;
  }
  _createClass(WebpackLogger, [{
    key: "error",
    value: function error() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this[LOG_SYMBOL](LogType.error, args);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      this[LOG_SYMBOL](LogType.warn, args);
    }
  }, {
    key: "info",
    value: function info() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this[LOG_SYMBOL](LogType.info, args);
    }
  }, {
    key: "log",
    value: function log() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      this[LOG_SYMBOL](LogType.log, args);
    }
  }, {
    key: "debug",
    value: function debug() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      this[LOG_SYMBOL](LogType.debug, args);
    }
  }, {
    key: "assert",
    value: function assert(assertion) {
      if (!assertion) {
        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
          args[_key6 - 1] = arguments[_key6];
        }
        this[LOG_SYMBOL](LogType.error, args);
      }
    }
  }, {
    key: "trace",
    value: function trace() {
      this[LOG_SYMBOL](LogType.trace, ["Trace"]);
    }
  }, {
    key: "clear",
    value: function clear() {
      this[LOG_SYMBOL](LogType.clear);
    }
  }, {
    key: "status",
    value: function status() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      this[LOG_SYMBOL](LogType.status, args);
    }
  }, {
    key: "group",
    value: function group() {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }
      this[LOG_SYMBOL](LogType.group, args);
    }
  }, {
    key: "groupCollapsed",
    value: function groupCollapsed() {
      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }
      this[LOG_SYMBOL](LogType.groupCollapsed, args);
    }
  }, {
    key: "groupEnd",
    value: function groupEnd() {
      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
        args[_key10] = arguments[_key10];
      }
      this[LOG_SYMBOL](LogType.groupEnd, args);
    }
  }, {
    key: "profile",
    value: function profile(label) {
      this[LOG_SYMBOL](LogType.profile, [label]);
    }
  }, {
    key: "profileEnd",
    value: function profileEnd(label) {
      this[LOG_SYMBOL](LogType.profileEnd, [label]);
    }
  }, {
    key: "time",
    value: function time(label) {
      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();
      this[TIMERS_SYMBOL].set(label, process.hrtime());
    }
  }, {
    key: "timeLog",
    value: function timeLog(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);
      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeLog()"));
      }
      var time = process.hrtime(prev);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }, {
    key: "timeEnd",
    value: function timeEnd(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);
      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeEnd()"));
      }
      var time = process.hrtime(prev);
      this[TIMERS_SYMBOL].delete(label);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }, {
    key: "timeAggregate",
    value: function timeAggregate(label) {
      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);
      if (!prev) {
        throw new Error("No such label '".concat(label, "' for WebpackLogger.timeAggregate()"));
      }
      var time = process.hrtime(prev);
      this[TIMERS_SYMBOL].delete(label);
      this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();
      var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);
      if (current !== undefined) {
        if (time[1] + current[1] > 1e9) {
          time[0] += current[0] + 1;
          time[1] = time[1] - 1e9 + current[1];
        } else {
          time[0] += current[0];
          time[1] += current[1];
        }
      }
      this[TIMERS_AGGREGATES_SYMBOL].set(label, time);
    }
  }, {
    key: "timeAggregateEnd",
    value: function timeAggregateEnd(label) {
      if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;
      var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);
      if (time === undefined) return;
      this[TIMERS_AGGREGATES_SYMBOL].delete(label);
      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
    }
  }]);
  return WebpackLogger;
}();
exports.Logger = WebpackLogger;

/***/ }),

/***/ "./node_modules/webpack/lib/logging/createConsoleLogger.js":
/*!*****************************************************************!*\
  !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __nested_webpack_require_11285__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/



function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) { return i; }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
var _require = __nested_webpack_require_11285__(/*! ./Logger */ "./node_modules/webpack/lib/logging/Logger.js"),
  LogType = _require.LogType;

/** @typedef {import("../../declarations/WebpackOptions").FilterItemTypes} FilterItemTypes */
/** @typedef {import("../../declarations/WebpackOptions").FilterTypes} FilterTypes */
/** @typedef {import("./Logger").LogTypeEnum} LogTypeEnum */

/** @typedef {function(string): boolean} FilterFunction */

/**
 * @typedef {Object} LoggerConsole
 * @property {function(): void} clear
 * @property {function(): void} trace
 * @property {(...args: any[]) => void} info
 * @property {(...args: any[]) => void} log
 * @property {(...args: any[]) => void} warn
 * @property {(...args: any[]) => void} error
 * @property {(...args: any[]) => void=} debug
 * @property {(...args: any[]) => void=} group
 * @property {(...args: any[]) => void=} groupCollapsed
 * @property {(...args: any[]) => void=} groupEnd
 * @property {(...args: any[]) => void=} status
 * @property {(...args: any[]) => void=} profile
 * @property {(...args: any[]) => void=} profileEnd
 * @property {(...args: any[]) => void=} logTime
 */

/**
 * @typedef {Object} LoggerOptions
 * @property {false|true|"none"|"error"|"warn"|"info"|"log"|"verbose"} level loglevel
 * @property {FilterTypes|boolean} debug filter for debug logging
 * @property {LoggerConsole} console the console to log to
 */

/**
 * @param {FilterItemTypes} item an input item
 * @returns {FilterFunction} filter function
 */
var filterToFunction = function filterToFunction(item) {
  if (typeof item === "string") {
    var regExp = new RegExp("[\\\\/]".concat(item.replace(
    // eslint-disable-next-line no-useless-escape
    /[-[\]{}()*+?.\\^$|]/g, "\\$&"), "([\\\\/]|$|!|\\?)"));
    return function (ident) {
      return regExp.test(ident);
    };
  }
  if (item && typeof item === "object" && typeof item.test === "function") {
    return function (ident) {
      return item.test(ident);
    };
  }
  if (typeof item === "function") {
    return item;
  }
  if (typeof item === "boolean") {
    return function () {
      return item;
    };
  }
};

/**
 * @enum {number}
 */
var LogLevel = {
  none: 6,
  false: 6,
  error: 5,
  warn: 4,
  info: 3,
  log: 2,
  true: 2,
  verbose: 1
};

/**
 * @param {LoggerOptions} options options object
 * @returns {function(string, LogTypeEnum, any[]): void} logging function
 */
module.exports = function (_ref) {
  var _ref$level = _ref.level,
    level = _ref$level === void 0 ? "info" : _ref$level,
    _ref$debug = _ref.debug,
    debug = _ref$debug === void 0 ? false : _ref$debug,
    console = _ref.console;
  var debugFilters = typeof debug === "boolean" ? [function () {
    return debug;
  }] : /** @type {FilterItemTypes[]} */[].concat(debug).map(filterToFunction);
  /** @type {number} */
  var loglevel = LogLevel["".concat(level)] || 0;

  /**
   * @param {string} name name of the logger
   * @param {LogTypeEnum} type type of the log entry
   * @param {any[]} args arguments of the log entry
   * @returns {void}
   */
  var logger = function logger(name, type, args) {
    var labeledArgs = function labeledArgs() {
      if (Array.isArray(args)) {
        if (args.length > 0 && typeof args[0] === "string") {
          return ["[".concat(name, "] ").concat(args[0])].concat(_toConsumableArray(args.slice(1)));
        } else {
          return ["[".concat(name, "]")].concat(_toConsumableArray(args));
        }
      } else {
        return [];
      }
    };
    var debug = debugFilters.some(function (f) {
      return f(name);
    });
    switch (type) {
      case LogType.debug:
        if (!debug) return;
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.debug === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.debug.apply(console, _toConsumableArray(labeledArgs()));
        } else {
          console.log.apply(console, _toConsumableArray(labeledArgs()));
        }
        break;
      case LogType.log:
        if (!debug && loglevel > LogLevel.log) return;
        console.log.apply(console, _toConsumableArray(labeledArgs()));
        break;
      case LogType.info:
        if (!debug && loglevel > LogLevel.info) return;
        console.info.apply(console, _toConsumableArray(labeledArgs()));
        break;
      case LogType.warn:
        if (!debug && loglevel > LogLevel.warn) return;
        console.warn.apply(console, _toConsumableArray(labeledArgs()));
        break;
      case LogType.error:
        if (!debug && loglevel > LogLevel.error) return;
        console.error.apply(console, _toConsumableArray(labeledArgs()));
        break;
      case LogType.trace:
        if (!debug) return;
        console.trace();
        break;
      case LogType.groupCollapsed:
        if (!debug && loglevel > LogLevel.log) return;
        if (!debug && loglevel > LogLevel.verbose) {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          if (typeof console.groupCollapsed === "function") {
            // eslint-disable-next-line node/no-unsupported-features/node-builtins
            console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));
          } else {
            console.log.apply(console, _toConsumableArray(labeledArgs()));
          }
          break;
        }
      // falls through
      case LogType.group:
        if (!debug && loglevel > LogLevel.log) return;
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.group === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.group.apply(console, _toConsumableArray(labeledArgs()));
        } else {
          console.log.apply(console, _toConsumableArray(labeledArgs()));
        }
        break;
      case LogType.groupEnd:
        if (!debug && loglevel > LogLevel.log) return;
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.groupEnd === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.groupEnd();
        }
        break;
      case LogType.time:
        {
          if (!debug && loglevel > LogLevel.log) return;
          var ms = args[1] * 1000 + args[2] / 1000000;
          var msg = "[".concat(name, "] ").concat(args[0], ": ").concat(ms, " ms");
          if (typeof console.logTime === "function") {
            console.logTime(msg);
          } else {
            console.log(msg);
          }
          break;
        }
      case LogType.profile:
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.profile === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.profile.apply(console, _toConsumableArray(labeledArgs()));
        }
        break;
      case LogType.profileEnd:
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.profileEnd === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));
        }
        break;
      case LogType.clear:
        if (!debug && loglevel > LogLevel.log) return;
        // eslint-disable-next-line node/no-unsupported-features/node-builtins
        if (typeof console.clear === "function") {
          // eslint-disable-next-line node/no-unsupported-features/node-builtins
          console.clear();
        }
        break;
      case LogType.status:
        if (!debug && loglevel > LogLevel.info) return;
        if (typeof console.status === "function") {
          if (args.length === 0) {
            console.status();
          } else {
            console.status.apply(console, _toConsumableArray(labeledArgs()));
          }
        } else {
          if (args.length !== 0) {
            console.info.apply(console, _toConsumableArray(labeledArgs()));
          }
        }
        break;
      default:
        throw new Error("Unexpected LogType ".concat(type));
    }
  };
  return logger;
};

/***/ }),

/***/ "./node_modules/webpack/lib/logging/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/webpack/lib/logging/runtime.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_21334__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/



function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var SyncBailHook = __nested_webpack_require_21334__(/*! tapable/lib/SyncBailHook */ "./client-src/modules/logger/SyncBailHookFake.js");
var _require = __nested_webpack_require_21334__(/*! ./Logger */ "./node_modules/webpack/lib/logging/Logger.js"),
  Logger = _require.Logger;
var createConsoleLogger = __nested_webpack_require_21334__(/*! ./createConsoleLogger */ "./node_modules/webpack/lib/logging/createConsoleLogger.js");

/** @type {createConsoleLogger.LoggerOptions} */
var currentDefaultLoggerOptions = {
  level: "info",
  debug: false,
  console: console
};
var currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);

/**
 * @param {string} name name of the logger
 * @returns {Logger} a logger
 */
exports.getLogger = function (name) {
  return new Logger(function (type, args) {
    if (exports.hooks.log.call(name, type, args) === undefined) {
      currentDefaultLogger(name, type, args);
    }
  }, function (childName) {
    return exports.getLogger("".concat(name, "/").concat(childName));
  });
};

/**
 * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options
 * @returns {void}
 */
exports.configureDefaultLogger = function (options) {
  _extends(currentDefaultLoggerOptions, options);
  currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
};
exports.hooks = {
  log: new SyncBailHook(["origin", "type", "args"])
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nested_webpack_require_23461__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_23461__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__nested_webpack_require_23461__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__nested_webpack_require_23461__.o(definition, key) && !__nested_webpack_require_23461__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__nested_webpack_require_23461__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__nested_webpack_require_23461__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __nested_webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!********************************************!*\
  !*** ./client-src/modules/logger/index.js ***!
  \********************************************/
__nested_webpack_require_23461__.r(__nested_webpack_exports__);
/* harmony export */ __nested_webpack_require_23461__.d(__nested_webpack_exports__, {
/* harmony export */   "default": function() { return /* reexport default export from named module */ webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__; }
/* harmony export */ });
/* harmony import */ var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_23461__(/*! webpack/lib/logging/runtime.js */ "./node_modules/webpack/lib/logging/runtime.js");

}();
var __webpack_export_target__ = exports;
for(var i in __nested_webpack_exports__) __webpack_export_target__[i] = __nested_webpack_exports__[i];
if(__nested_webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ })()
;

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay.js":
/*!***********************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOverlay: () => (/* binding */ createOverlay),
/* harmony export */   formatProblem: () => (/* binding */ formatProblem)
/* harmony export */ });
/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ansi-html-community */ "./node_modules/ansi-html-community/index.js");
/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ansi_html_community__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! html-entities */ "./node_modules/html-entities/lib/index.js");
/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(html_entities__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./overlay/runtime-error.js */ "./node_modules/webpack-dev-server/client/overlay/runtime-error.js");
/* harmony import */ var _overlay_state_machine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overlay/state-machine.js */ "./node_modules/webpack-dev-server/client/overlay/state-machine.js");
/* harmony import */ var _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./overlay/styles.js */ "./node_modules/webpack-dev-server/client/overlay/styles.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)
// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).






var colors = {
  reset: ["transparent", "transparent"],
  black: "181818",
  red: "E36049",
  green: "B3CB74",
  yellow: "FFD080",
  blue: "7CAFC2",
  magenta: "7FACCA",
  cyan: "C3C2EF",
  lightgrey: "EBE7E3",
  darkgrey: "6D7891"
};
ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default().setColors(colors);

/**
 * @param {string} type
 * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string; stack?: string[] }} item
 * @returns {{ header: string, body: string }}
 */
function formatProblem(type, item) {
  var header = type === "warning" ? "WARNING" : "ERROR";
  var body = "";
  if (typeof item === "string") {
    body += item;
  } else {
    var file = item.file || "";
    // eslint-disable-next-line no-nested-ternary
    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\s|\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";
    var loc = item.loc;
    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");
    body += item.message || "";
  }
  if (Array.isArray(item.stack)) {
    item.stack.forEach(function (stack) {
      if (typeof stack === "string") {
        body += "\r\n".concat(stack);
      }
    });
  }
  return {
    header: header,
    body: body
  };
}

/**
 * @typedef {Object} CreateOverlayOptions
 * @property {string | null} trustedTypesPolicyName
 * @property {boolean | (error: Error) => void} [catchRuntimeError]
 */

/**
 *
 * @param {CreateOverlayOptions} options
 */
var createOverlay = function createOverlay(options) {
  /** @type {HTMLIFrameElement | null | undefined} */
  var iframeContainerElement;
  /** @type {HTMLDivElement | null | undefined} */
  var containerElement;
  /** @type {HTMLDivElement | null | undefined} */
  var headerElement;
  /** @type {Array<(element: HTMLDivElement) => void>} */
  var onLoadQueue = [];
  /** @type {TrustedTypePolicy | undefined} */
  var overlayTrustedTypesPolicy;

  /**
   *
   * @param {HTMLElement} element
   * @param {CSSStyleDeclaration} style
   */
  function applyStyle(element, style) {
    Object.keys(style).forEach(function (prop) {
      element.style[prop] = style[prop];
    });
  }

  /**
   * @param {string | null} trustedTypesPolicyName
   */
  function createContainer(trustedTypesPolicyName) {
    // Enable Trusted Types if they are available in the current browser.
    if (window.trustedTypes) {
      overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || "webpack-dev-server#overlay", {
        createHTML: function createHTML(value) {
          return value;
        }
      });
    }
    iframeContainerElement = document.createElement("iframe");
    iframeContainerElement.id = "webpack-dev-server-client-overlay";
    iframeContainerElement.src = "about:blank";
    applyStyle(iframeContainerElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.iframeStyle);
    iframeContainerElement.onload = function () {
      var contentElement = /** @type {Document} */
      /** @type {HTMLIFrameElement} */
      iframeContainerElement.contentDocument.createElement("div");
      containerElement = /** @type {Document} */
      /** @type {HTMLIFrameElement} */
      iframeContainerElement.contentDocument.createElement("div");
      contentElement.id = "webpack-dev-server-client-overlay-div";
      applyStyle(contentElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.containerStyle);
      headerElement = document.createElement("div");
      headerElement.innerText = "Compiled with problems:";
      applyStyle(headerElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.headerStyle);
      var closeButtonElement = document.createElement("button");
      applyStyle(closeButtonElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.dismissButtonStyle);
      closeButtonElement.innerText = "×";
      closeButtonElement.ariaLabel = "Dismiss";
      closeButtonElement.addEventListener("click", function () {
        // eslint-disable-next-line no-use-before-define
        overlayService.send({
          type: "DISMISS"
        });
      });
      contentElement.appendChild(headerElement);
      contentElement.appendChild(closeButtonElement);
      contentElement.appendChild(containerElement);

      /** @type {Document} */
      /** @type {HTMLIFrameElement} */
      iframeContainerElement.contentDocument.body.appendChild(contentElement);
      onLoadQueue.forEach(function (onLoad) {
        onLoad( /** @type {HTMLDivElement} */contentElement);
      });
      onLoadQueue = [];

      /** @type {HTMLIFrameElement} */
      iframeContainerElement.onload = null;
    };
    document.body.appendChild(iframeContainerElement);
  }

  /**
   * @param {(element: HTMLDivElement) => void} callback
   * @param {string | null} trustedTypesPolicyName
   */
  function ensureOverlayExists(callback, trustedTypesPolicyName) {
    if (containerElement) {
      containerElement.innerHTML = "";
      // Everything is ready, call the callback right away.
      callback(containerElement);
      return;
    }
    onLoadQueue.push(callback);
    if (iframeContainerElement) {
      return;
    }
    createContainer(trustedTypesPolicyName);
  }

  // Successful compilation.
  function hide() {
    if (!iframeContainerElement) {
      return;
    }

    // Clean up and reset internal state.
    document.body.removeChild(iframeContainerElement);
    iframeContainerElement = null;
    containerElement = null;
  }

  // Compilation with errors (e.g. syntax error or missing modules).
  /**
   * @param {string} type
   * @param {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages
   * @param {string | null} trustedTypesPolicyName
   * @param {'build' | 'runtime'} messageSource
   */
  function show(type, messages, trustedTypesPolicyName, messageSource) {
    ensureOverlayExists(function () {
      headerElement.innerText = messageSource === "runtime" ? "Uncaught runtime errors:" : "Compiled with problems:";
      messages.forEach(function (message) {
        var entryElement = document.createElement("div");
        var msgStyle = type === "warning" ? _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgStyles.warning : _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgStyles.error;
        applyStyle(entryElement, _objectSpread(_objectSpread({}, msgStyle), {}, {
          padding: "1rem 1rem 1.5rem 1rem"
        }));
        var typeElement = document.createElement("div");
        var _formatProblem = formatProblem(type, message),
          header = _formatProblem.header,
          body = _formatProblem.body;
        typeElement.innerText = header;
        applyStyle(typeElement, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgTypeStyle);
        if (message.moduleIdentifier) {
          applyStyle(typeElement, {
            cursor: "pointer"
          });
          // element.dataset not supported in IE
          typeElement.setAttribute("data-can-open", true);
          typeElement.addEventListener("click", function () {
            fetch("/webpack-dev-server/open-editor?fileName=".concat(message.moduleIdentifier));
          });
        }

        // Make it look similar to our terminal.
        var text = ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default()((0,html_entities__WEBPACK_IMPORTED_MODULE_4__.encode)(body));
        var messageTextNode = document.createElement("div");
        applyStyle(messageTextNode, _overlay_styles_js__WEBPACK_IMPORTED_MODULE_3__.msgTextStyle);
        messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;
        entryElement.appendChild(typeElement);
        entryElement.appendChild(messageTextNode);

        /** @type {HTMLDivElement} */
        containerElement.appendChild(entryElement);
      });
    }, trustedTypesPolicyName);
  }
  var overlayService = (0,_overlay_state_machine_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
    showOverlay: function showOverlay(_ref) {
      var _ref$level = _ref.level,
        level = _ref$level === void 0 ? "error" : _ref$level,
        messages = _ref.messages,
        messageSource = _ref.messageSource;
      return show(level, messages, options.trustedTypesPolicyName, messageSource);
    },
    hideOverlay: hide
  });
  if (options.catchRuntimeError) {
    /**
     * @param {Error | undefined} error
     * @param {string} fallbackMessage
     */
    var handleError = function handleError(error, fallbackMessage) {
      var errorObject = error instanceof Error ? error : new Error(error || fallbackMessage);
      var shouldDisplay = typeof options.catchRuntimeError === "function" ? options.catchRuntimeError(errorObject) : true;
      if (shouldDisplay) {
        overlayService.send({
          type: "RUNTIME_ERROR",
          messages: [{
            message: errorObject.message,
            stack: (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.parseErrorToStacks)(errorObject)
          }]
        });
      }
    };
    (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.listenToRuntimeError)(function (errorEvent) {
      // error property may be empty in older browser like IE
      var error = errorEvent.error,
        message = errorEvent.message;
      if (!error && !message) {
        return;
      }
      handleError(error, message);
    });
    (0,_overlay_runtime_error_js__WEBPACK_IMPORTED_MODULE_1__.listenToUnhandledRejection)(function (promiseRejectionEvent) {
      var reason = promiseRejectionEvent.reason;
      handleError(reason, "Unknown promise rejection reason");
    });
  }
  return overlayService;
};


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay/fsm.js":
/*!***************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay/fsm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * @typedef {Object} StateDefinitions
 * @property {{[event: string]: { target: string; actions?: Array<string> }}} [on]
 */

/**
 * @typedef {Object} Options
 * @property {{[state: string]: StateDefinitions}} states
 * @property {object} context;
 * @property {string} initial
 */

/**
 * @typedef {Object} Implementation
 * @property {{[actionName: string]: (ctx: object, event: any) => object}} actions
 */

/**
 * A simplified `createMachine` from `@xstate/fsm` with the following differences:
 *
 *  - the returned machine is technically a "service". No `interpret(machine).start()` is needed.
 *  - the state definition only support `on` and target must be declared with { target: 'nextState', actions: [] } explicitly.
 *  - event passed to `send` must be an object with `type` property.
 *  - actions implementation will be [assign action](https://xstate.js.org/docs/guides/context.html#assign-action) if you return any value.
 *  Do not return anything if you just want to invoke side effect.
 *
 * The goal of this custom function is to avoid installing the entire `'xstate/fsm'` package, while enabling modeling using
 * state machine. You can copy the first parameter into the editor at https://stately.ai/viz to visualize the state machine.
 *
 * @param {Options} options
 * @param {Implementation} implementation
 */
function createMachine(_ref, _ref2) {
  var states = _ref.states,
    context = _ref.context,
    initial = _ref.initial;
  var actions = _ref2.actions;
  var currentState = initial;
  var currentContext = context;
  return {
    send: function send(event) {
      var currentStateOn = states[currentState].on;
      var transitionConfig = currentStateOn && currentStateOn[event.type];
      if (transitionConfig) {
        currentState = transitionConfig.target;
        if (transitionConfig.actions) {
          transitionConfig.actions.forEach(function (actName) {
            var actionImpl = actions[actName];
            var nextContextValue = actionImpl && actionImpl(currentContext, event);
            if (nextContextValue) {
              currentContext = _objectSpread(_objectSpread({}, currentContext), nextContextValue);
            }
          });
        }
      }
    }
  };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createMachine);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay/runtime-error.js":
/*!*************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay/runtime-error.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   listenToRuntimeError: () => (/* binding */ listenToRuntimeError),
/* harmony export */   listenToUnhandledRejection: () => (/* binding */ listenToUnhandledRejection),
/* harmony export */   parseErrorToStacks: () => (/* binding */ parseErrorToStacks)
/* harmony export */ });
/**
 *
 * @param {Error} error
 */
function parseErrorToStacks(error) {
  if (!error || !(error instanceof Error)) {
    throw new Error("parseErrorToStacks expects Error object");
  }
  if (typeof error.stack === "string") {
    return error.stack.split("\n").filter(function (stack) {
      return stack !== "Error: ".concat(error.message);
    });
  }
}

/**
 * @callback ErrorCallback
 * @param {ErrorEvent} error
 * @returns {void}
 */

/**
 * @param {ErrorCallback} callback
 */
function listenToRuntimeError(callback) {
  window.addEventListener("error", callback);
  return function cleanup() {
    window.removeEventListener("error", callback);
  };
}

/**
 * @callback UnhandledRejectionCallback
 * @param {PromiseRejectionEvent} rejectionEvent
 * @returns {void}
 */

/**
 * @param {UnhandledRejectionCallback} callback
 */
function listenToUnhandledRejection(callback) {
  window.addEventListener("unhandledrejection", callback);
  return function cleanup() {
    window.removeEventListener("unhandledrejection", callback);
  };
}


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay/state-machine.js":
/*!*************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay/state-machine.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _fsm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fsm.js */ "./node_modules/webpack-dev-server/client/overlay/fsm.js");


/**
 * @typedef {Object} ShowOverlayData
 * @property {'warning' | 'error'} level
 * @property {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages
 * @property {'build' | 'runtime'} messageSource
 */

/**
 * @typedef {Object} CreateOverlayMachineOptions
 * @property {(data: ShowOverlayData) => void} showOverlay
 * @property {() => void} hideOverlay
 */

/**
 * @param {CreateOverlayMachineOptions} options
 */
var createOverlayMachine = function createOverlayMachine(options) {
  var hideOverlay = options.hideOverlay,
    showOverlay = options.showOverlay;
  var overlayMachine = (0,_fsm_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    initial: "hidden",
    context: {
      level: "error",
      messages: [],
      messageSource: "build"
    },
    states: {
      hidden: {
        on: {
          BUILD_ERROR: {
            target: "displayBuildError",
            actions: ["setMessages", "showOverlay"]
          },
          RUNTIME_ERROR: {
            target: "displayRuntimeError",
            actions: ["setMessages", "showOverlay"]
          }
        }
      },
      displayBuildError: {
        on: {
          DISMISS: {
            target: "hidden",
            actions: ["dismissMessages", "hideOverlay"]
          },
          BUILD_ERROR: {
            target: "displayBuildError",
            actions: ["appendMessages", "showOverlay"]
          }
        }
      },
      displayRuntimeError: {
        on: {
          DISMISS: {
            target: "hidden",
            actions: ["dismissMessages", "hideOverlay"]
          },
          RUNTIME_ERROR: {
            target: "displayRuntimeError",
            actions: ["appendMessages", "showOverlay"]
          },
          BUILD_ERROR: {
            target: "displayBuildError",
            actions: ["setMessages", "showOverlay"]
          }
        }
      }
    }
  }, {
    actions: {
      dismissMessages: function dismissMessages() {
        return {
          messages: [],
          level: "error",
          messageSource: "build"
        };
      },
      appendMessages: function appendMessages(context, event) {
        return {
          messages: context.messages.concat(event.messages),
          level: event.level || context.level,
          messageSource: event.type === "RUNTIME_ERROR" ? "runtime" : "build"
        };
      },
      setMessages: function setMessages(context, event) {
        return {
          messages: event.messages,
          level: event.level || context.level,
          messageSource: event.type === "RUNTIME_ERROR" ? "runtime" : "build"
        };
      },
      hideOverlay: hideOverlay,
      showOverlay: showOverlay
    }
  });
  return overlayMachine;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createOverlayMachine);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay/styles.js":
/*!******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay/styles.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   containerStyle: () => (/* binding */ containerStyle),
/* harmony export */   dismissButtonStyle: () => (/* binding */ dismissButtonStyle),
/* harmony export */   headerStyle: () => (/* binding */ headerStyle),
/* harmony export */   iframeStyle: () => (/* binding */ iframeStyle),
/* harmony export */   msgStyles: () => (/* binding */ msgStyles),
/* harmony export */   msgTextStyle: () => (/* binding */ msgTextStyle),
/* harmony export */   msgTypeStyle: () => (/* binding */ msgTypeStyle)
/* harmony export */ });
// styles are inspired by `react-error-overlay`

var msgStyles = {
  error: {
    backgroundColor: "rgba(206, 17, 38, 0.1)",
    color: "#fccfcf"
  },
  warning: {
    backgroundColor: "rgba(251, 245, 180, 0.1)",
    color: "#fbf5b4"
  }
};
var iframeStyle = {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  width: "100vw",
  height: "100vh",
  border: "none",
  "z-index": 9999999999
};
var containerStyle = {
  position: "fixed",
  boxSizing: "border-box",
  left: 0,
  top: 0,
  right: 0,
  bottom: 0,
  width: "100vw",
  height: "100vh",
  fontSize: "large",
  padding: "2rem 2rem 4rem 2rem",
  lineHeight: "1.2",
  whiteSpace: "pre-wrap",
  overflow: "auto",
  backgroundColor: "rgba(0, 0, 0, 0.9)",
  color: "white"
};
var headerStyle = {
  color: "#e83b46",
  fontSize: "2em",
  whiteSpace: "pre-wrap",
  fontFamily: "sans-serif",
  margin: "0 2rem 2rem 0",
  flex: "0 0 auto",
  maxHeight: "50%",
  overflow: "auto"
};
var dismissButtonStyle = {
  color: "#ffffff",
  lineHeight: "1rem",
  fontSize: "1.5rem",
  padding: "1rem",
  cursor: "pointer",
  position: "absolute",
  right: 0,
  top: 0,
  backgroundColor: "transparent",
  border: "none"
};
var msgTypeStyle = {
  color: "#e83b46",
  fontSize: "1.2em",
  marginBottom: "1rem",
  fontFamily: "sans-serif"
};
var msgTextStyle = {
  lineHeight: "1.5",
  fontSize: "1rem",
  fontFamily: "Menlo, Consolas, monospace"
};


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/socket.js":
/*!**********************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/socket.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   client: () => (/* binding */ client),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clients/WebSocketClient.js */ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js");
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
/* provided dependency */ var __webpack_dev_server_client__ = __webpack_require__(/*! ./node_modules/webpack-dev-server/client/clients/WebSocketClient.js */ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js");
/* global __webpack_dev_server_client__ */




// this WebsocketClient is here as a default fallback, in case the client is not injected
/* eslint-disable camelcase */
var Client =
// eslint-disable-next-line no-nested-ternary
typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__["default"];
/* eslint-enable camelcase */

var retries = 0;
var maxRetries = 10;

// Initialized client is exported so external consumers can utilize the same instance
// It is mutable to enforce singleton
// eslint-disable-next-line import/no-mutable-exports
var client = null;

/**
 * @param {string} url
 * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers
 * @param {number} [reconnect]
 */
var socket = function initSocket(url, handlers, reconnect) {
  client = new Client(url);
  client.onOpen(function () {
    retries = 0;
    if (typeof reconnect !== "undefined") {
      maxRetries = reconnect;
    }
  });
  client.onClose(function () {
    if (retries === 0) {
      handlers.close();
    }

    // Try to reconnect.
    client = null;

    // After 10 retries stop trying, to prevent logspam.
    if (retries < maxRetries) {
      // Exponentially increase timeout to reconnect.
      // Respectfully copied from the package `got`.
      // eslint-disable-next-line no-restricted-properties
      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;
      retries += 1;
      _utils_log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("Trying to reconnect...");
      setTimeout(function () {
        socket(url, handlers, reconnect);
      }, retryInMs);
    }
  });
  client.onMessage(
  /**
   * @param {any} data
   */
  function (data) {
    var message = JSON.parse(data);
    if (handlers[message.type]) {
      handlers[message.type](message.data, message.params);
    }
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (socket);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/createSocketURL.js":
/*!*************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/createSocketURL.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL
 * @returns {string}
 */
function format(objURL) {
  var protocol = objURL.protocol || "";
  if (protocol && protocol.substr(-1) !== ":") {
    protocol += ":";
  }
  var auth = objURL.auth || "";
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ":");
    auth += "@";
  }
  var host = "";
  if (objURL.hostname) {
    host = auth + (objURL.hostname.indexOf(":") === -1 ? objURL.hostname : "[".concat(objURL.hostname, "]"));
    if (objURL.port) {
      host += ":".concat(objURL.port);
    }
  }
  var pathname = objURL.pathname || "";
  if (objURL.slashes) {
    host = "//".concat(host || "");
    if (pathname && pathname.charAt(0) !== "/") {
      pathname = "/".concat(pathname);
    }
  } else if (!host) {
    host = "";
  }
  var search = objURL.search || "";
  if (search && search.charAt(0) !== "?") {
    search = "?".concat(search);
  }
  var hash = objURL.hash || "";
  if (hash && hash.charAt(0) !== "#") {
    hash = "#".concat(hash);
  }
  pathname = pathname.replace(/[?#]/g,
  /**
   * @param {string} match
   * @returns {string}
   */
  function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace("#", "%23");
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}

/**
 * @param {URL & { fromCurrentScript?: boolean }} parsedURL
 * @returns {string}
 */
function createSocketURL(parsedURL) {
  var hostname = parsedURL.hostname;

  // Node.js module parses it as `::`
  // `new URL(urlString, [baseURLString])` parses it as '[::]'
  var isInAddrAny = hostname === "0.0.0.0" || hostname === "::" || hostname === "[::]";

  // why do we need this check?
  // hostname n/a for file protocol (example, when using electron, ionic)
  // see: https://github.com/webpack/webpack-dev-server/pull/384
  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf("http") === 0) {
    hostname = self.location.hostname;
  }
  var socketURLProtocol = parsedURL.protocol || self.location.protocol;

  // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.
  if (socketURLProtocol === "auto:" || hostname && isInAddrAny && self.location.protocol === "https:") {
    socketURLProtocol = self.location.protocol;
  }
  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, "ws");
  var socketURLAuth = "";

  // `new URL(urlString, [baseURLstring])` doesn't have `auth` property
  // Parse authentication credentials in case we need them
  if (parsedURL.username) {
    socketURLAuth = parsedURL.username;

    // Since HTTP basic authentication does not allow empty username,
    // we only include password if the username is not empty.
    if (parsedURL.password) {
      // Result: <username>:<password>
      socketURLAuth = socketURLAuth.concat(":", parsedURL.password);
    }
  }

  // In case the host is a raw IPv6 address, it can be enclosed in
  // the brackets as the brackets are needed in the final URL string.
  // Need to remove those as url.format blindly adds its own set of brackets
  // if the host string contains colons. That would lead to non-working
  // double brackets (e.g. [[::]]) host
  //
  // All of these web socket url params are optionally passed in through resourceQuery,
  // so we need to fall back to the default if they are not provided
  var socketURLHostname = (hostname || self.location.hostname || "localhost").replace(/^\[(.*)\]$/, "$1");
  var socketURLPort = parsedURL.port;
  if (!socketURLPort || socketURLPort === "0") {
    socketURLPort = self.location.port;
  }

  // If path is provided it'll be passed in via the resourceQuery as a
  // query param so it has to be parsed out of the querystring in order for the
  // client to open the socket to the correct location.
  var socketURLPathname = "/ws";
  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {
    socketURLPathname = parsedURL.pathname;
  }
  return format({
    protocol: socketURLProtocol,
    auth: socketURLAuth,
    hostname: socketURLHostname,
    port: socketURLPort,
    pathname: socketURLPathname,
    slashes: true
  });
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createSocketURL);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js":
/*!********************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @returns {string}
 */
function getCurrentScriptSource() {
  // `document.currentScript` is the most accurate way to find the current script,
  // but is not supported in all browsers.
  if (document.currentScript) {
    return document.currentScript.getAttribute("src");
  }

  // Fallback to getting all scripts running in the document.
  var scriptElements = document.scripts || [];
  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {
    return element.getAttribute("src");
  });
  if (scriptElementsWithSrc.length > 0) {
    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];
    return currentScript.getAttribute("src");
  }

  // Fail as there was no script to use.
  throw new Error("[webpack-dev-server] Failed to get current script source.");
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getCurrentScriptSource);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/log.js":
/*!*************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/log.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   log: () => (/* binding */ log),
/* harmony export */   logEnabledFeatures: () => (/* binding */ logEnabledFeatures),
/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)
/* harmony export */ });
/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/logger/index.js */ "./node_modules/webpack-dev-server/client/modules/logger/index.js");
/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__);

var name = "webpack-dev-server";
// default level is set on the client side, so it does not need
// to be set by the CLI or API
var defaultLevel = "info";

// options new options, merge with old options
/**
 * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level
 * @returns {void}
 */
function setLogLevel(level) {
  _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().configureDefaultLogger({
    level: level
  });
}
setLogLevel(defaultLevel);
var log = _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().getLogger(name);
var logEnabledFeatures = function logEnabledFeatures(features) {
  var enabledFeatures = Object.keys(features);
  if (!features || enabledFeatures.length === 0) {
    return;
  }
  var logString = "Server started:";

  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.
  for (var i = 0; i < enabledFeatures.length; i++) {
    var key = enabledFeatures[i];
    logString += " ".concat(key, " ").concat(features[key] ? "enabled" : "disabled", ",");
  }
  // replace last comma with a period
  logString = logString.slice(0, -1).concat(".");
  log.info(logString);
};


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/parseURL.js":
/*!******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/parseURL.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCurrentScriptSource.js */ "./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js");


/**
 * @param {string} resourceQuery
 * @returns {{ [key: string]: string | boolean }}
 */
function parseURL(resourceQuery) {
  /** @type {{ [key: string]: string }} */
  var options = {};
  if (typeof resourceQuery === "string" && resourceQuery !== "") {
    var searchParams = resourceQuery.slice(1).split("&");
    for (var i = 0; i < searchParams.length; i++) {
      var pair = searchParams[i].split("=");
      options[pair[0]] = decodeURIComponent(pair[1]);
    }
  } else {
    // Else, get the url from the <script> this file was called with.
    var scriptSource = (0,_getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    var scriptSourceURL;
    try {
      // The placeholder `baseURL` with `window.location.href`,
      // is to allow parsing of path-relative or protocol-relative URLs,
      // and will have no effect if `scriptSource` is a fully valid URL.
      scriptSourceURL = new URL(scriptSource, self.location.href);
    } catch (error) {
      // URL parsing failed, do nothing.
      // We will still proceed to see if we can recover using `resourceQuery`
    }
    if (scriptSourceURL) {
      options = scriptSourceURL;
      options.fromCurrentScript = true;
    }
  }
  return options;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseURL);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/reloadApp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/reloadApp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/emitter.js */ "./node_modules/webpack/hot/emitter.js");
/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");



/** @typedef {import("../index").Options} Options
/** @typedef {import("../index").Status} Status

/**
 * @param {Options} options
 * @param {Status} status
 */
function reloadApp(_ref, status) {
  var hot = _ref.hot,
    liveReload = _ref.liveReload;
  if (status.isUnloading) {
    return;
  }
  var currentHash = status.currentHash,
    previousHash = status.previousHash;
  var isInitial = currentHash.indexOf( /** @type {string} */previousHash) >= 0;
  if (isInitial) {
    return;
  }

  /**
   * @param {Window} rootWindow
   * @param {number} intervalId
   */
  function applyReload(rootWindow, intervalId) {
    clearInterval(intervalId);
    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("App updated. Reloading...");
    rootWindow.location.reload();
  }
  var search = self.location.search.toLowerCase();
  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;
  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;
  if (hot && allowToHot) {
    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("App hot update...");
    webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default().emit("webpackHotUpdate", status.currentHash);
    if (typeof self !== "undefined" && self.window) {
      // broadcast update to window
      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");
    }
  }
  // allow refreshing the page only if liveReload isn't disabled
  else if (liveReload && allowToLiveReload) {
    var rootWindow = self;

    // use parent window for reload (in case we're in an iframe with no valid src)
    var intervalId = self.setInterval(function () {
      if (rootWindow.location.protocol !== "about:") {
        // reload immediately if protocol is valid
        applyReload(rootWindow, intervalId);
      } else {
        rootWindow = rootWindow.parent;
        if (rootWindow.parent === rootWindow) {
          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways
          applyReload(rootWindow, intervalId);
        }
      }
    });
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (reloadApp);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/sendMessage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/sendMessage.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* global __resourceQuery WorkerGlobalScope */

// Send messages to the outside, so plugins can consume it.
/**
 * @param {string} type
 * @param {any} [data]
 */
function sendMsg(type, data) {
  if (typeof self !== "undefined" && (typeof WorkerGlobalScope === "undefined" || !(self instanceof WorkerGlobalScope))) {
    self.postMessage({
      type: "webpack".concat(type),
      data: data
    }, "*");
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sendMsg);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/stripAnsi.js":
/*!*******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/stripAnsi.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var ansiRegex = new RegExp(["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"].join("|"), "g");

/**
 *
 * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.
 * Adapted from code originally released by Sindre Sorhus
 * Licensed the MIT License
 *
 * @param {string} string
 * @return {string}
 */
function stripAnsi(string) {
  if (typeof string !== "string") {
    throw new TypeError("Expected a `string`, got `".concat(typeof string, "`"));
  }
  return string.replace(ansiRegex, "");
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stripAnsi);

/***/ }),

/***/ "./node_modules/webpack/hot/dev-server.js":
/*!************************************************!*\
  !*** ./node_modules/webpack/hot/dev-server.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
/* globals __webpack_hash__ */
if (true) {
	/** @type {undefined|string} */
	var lastHash;
	var upToDate = function upToDate() {
		return /** @type {string} */ (lastHash).indexOf(__webpack_require__.h()) >= 0;
	};
	var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");
	var check = function check() {
		module.hot
			.check(true)
			.then(function (updatedModules) {
				if (!updatedModules) {
					log(
						"warning",
						"[HMR] Cannot find update. " +
							(typeof window !== "undefined"
								? "Need to do a full reload!"
								: "Please reload manually!")
					);
					log(
						"warning",
						"[HMR] (Probably because of restarting the webpack-dev-server)"
					);
					if (typeof window !== "undefined") {
						window.location.reload();
					}
					return;
				}

				if (!upToDate()) {
					check();
				}

				__webpack_require__(/*! ./log-apply-result */ "./node_modules/webpack/hot/log-apply-result.js")(updatedModules, updatedModules);

				if (upToDate()) {
					log("info", "[HMR] App is up to date.");
				}
			})
			.catch(function (err) {
				var status = module.hot.status();
				if (["abort", "fail"].indexOf(status) >= 0) {
					log(
						"warning",
						"[HMR] Cannot apply update. " +
							(typeof window !== "undefined"
								? "Need to do a full reload!"
								: "Please reload manually!")
					);
					log("warning", "[HMR] " + log.formatError(err));
					if (typeof window !== "undefined") {
						window.location.reload();
					}
				} else {
					log("warning", "[HMR] Update failed: " + log.formatError(err));
				}
			});
	};
	var hotEmitter = __webpack_require__(/*! ./emitter */ "./node_modules/webpack/hot/emitter.js");
	hotEmitter.on("webpackHotUpdate", function (currentHash) {
		lastHash = currentHash;
		if (!upToDate() && module.hot.status() === "idle") {
			log("info", "[HMR] Checking for updates on the server...");
			check();
		}
	});
	log("info", "[HMR] Waiting for update signal from WDS...");
} else {}


/***/ }),

/***/ "./node_modules/webpack/hot/emitter.js":
/*!*********************************************!*\
  !*** ./node_modules/webpack/hot/emitter.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/events/events.js");
module.exports = new EventEmitter();


/***/ }),

/***/ "./node_modules/webpack/hot/log-apply-result.js":
/*!******************************************************!*\
  !*** ./node_modules/webpack/hot/log-apply-result.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

/**
 * @param {(string | number)[]} updatedModules updated modules
 * @param {(string | number)[] | null} renewedModules renewed modules
 */
module.exports = function (updatedModules, renewedModules) {
	var unacceptedModules = updatedModules.filter(function (moduleId) {
		return renewedModules && renewedModules.indexOf(moduleId) < 0;
	});
	var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");

	if (unacceptedModules.length > 0) {
		log(
			"warning",
			"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)"
		);
		unacceptedModules.forEach(function (moduleId) {
			log("warning", "[HMR]  - " + moduleId);
		});
	}

	if (!renewedModules || renewedModules.length === 0) {
		log("info", "[HMR] Nothing hot updated.");
	} else {
		log("info", "[HMR] Updated modules:");
		renewedModules.forEach(function (moduleId) {
			if (typeof moduleId === "string" && moduleId.indexOf("!") !== -1) {
				var parts = moduleId.split("!");
				log.groupCollapsed("info", "[HMR]  - " + parts.pop());
				log("info", "[HMR]  - " + moduleId);
				log.groupEnd("info");
			} else {
				log("info", "[HMR]  - " + moduleId);
			}
		});
		var numberIds = renewedModules.every(function (moduleId) {
			return typeof moduleId === "number";
		});
		if (numberIds)
			log(
				"info",
				'[HMR] Consider using the optimization.moduleIds: "named" for module names.'
			);
	}
};


/***/ }),

/***/ "./node_modules/webpack/hot/log.js":
/*!*****************************************!*\
  !*** ./node_modules/webpack/hot/log.js ***!
  \*****************************************/
/***/ ((module) => {

/** @typedef {"info" | "warning" | "error"} LogLevel */

/** @type {LogLevel} */
var logLevel = "info";

function dummy() {}

/**
 * @param {LogLevel} level log level
 * @returns {boolean} true, if should log
 */
function shouldLog(level) {
	var shouldLog =
		(logLevel === "info" && level === "info") ||
		(["info", "warning"].indexOf(logLevel) >= 0 && level === "warning") ||
		(["info", "warning", "error"].indexOf(logLevel) >= 0 && level === "error");
	return shouldLog;
}

/**
 * @param {(msg?: string) => void} logFn log function
 * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient
 */
function logGroup(logFn) {
	return function (level, msg) {
		if (shouldLog(level)) {
			logFn(msg);
		}
	};
}

/**
 * @param {LogLevel} level log level
 * @param {string|Error} msg message
 */
module.exports = function (level, msg) {
	if (shouldLog(level)) {
		if (level === "info") {
			console.log(msg);
		} else if (level === "warning") {
			console.warn(msg);
		} else if (level === "error") {
			console.error(msg);
		}
	}
};

/* eslint-disable node/no-unsupported-features/node-builtins */
var group = console.group || dummy;
var groupCollapsed = console.groupCollapsed || dummy;
var groupEnd = console.groupEnd || dummy;
/* eslint-enable node/no-unsupported-features/node-builtins */

module.exports.group = logGroup(group);

module.exports.groupCollapsed = logGroup(groupCollapsed);

module.exports.groupEnd = logGroup(groupEnd);

/**
 * @param {LogLevel} level log level
 */
module.exports.setLogLevel = function (level) {
	logLevel = level;
};

/**
 * @param {Error} err error
 * @returns {string} formatted error
 */
module.exports.formatError = function (err) {
	var message = err.message;
	var stack = err.stack;
	if (!stack) {
		return message;
	} else if (stack.indexOf(message) < 0) {
		return message + "\n" + stack;
	} else {
		return stack;
	}
};


/***/ }),

/***/ "./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayWithoutHoles)
/* harmony export */ });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arr);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _createClass)
/* harmony export */ });
/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ "./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js");

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__["default"])(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inheritsLoose)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArray.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _iterableToArray)
/* harmony export */ });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _nonIterableSpread)
/* harmony export */ });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _objectWithoutPropertiesLoose)
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _toConsumableArray)
/* harmony export */ });
/* harmony import */ var _arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithoutHoles.js */ "./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js");
/* harmony import */ var _iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArray.js */ "./node_modules/@babel/runtime/helpers/esm/iterableToArray.js");
/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");
/* harmony import */ var _nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableSpread.js */ "./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js");




function _toConsumableArray(arr) {
  return (0,_arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || (0,_iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arr) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(arr) || (0,_nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toPrimitive.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _toPrimitive)
/* harmony export */ });
/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");

function _toPrimitive(input, hint) {
  if ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__["default"])(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__["default"])(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _toPropertyKey)
/* harmony export */ });
/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ "./node_modules/@babel/runtime/helpers/esm/toPrimitive.js");


function _toPropertyKey(arg) {
  var key = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arg, "string");
  return (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__["default"])(key) === "symbol" ? key : String(key);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _typeof)
/* harmony export */ });
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)
/* harmony export */ });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
}

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/Boot.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/Boot.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachBoot: () => (/* binding */ attachBoot),
/* harmony export */   boot: () => (/* binding */ boot)
/* harmony export */ });
/* harmony import */ var _util_whenDOMReady_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/whenDOMReady.js */ "./node_modules/@ui5/webcomponents-base/dist/util/whenDOMReady.js");
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");
/* harmony import */ var _FontFace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FontFace.js */ "./node_modules/@ui5/webcomponents-base/dist/FontFace.js");
/* harmony import */ var _SystemCSSVars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SystemCSSVars.js */ "./node_modules/@ui5/webcomponents-base/dist/SystemCSSVars.js");
/* harmony import */ var _config_Theme_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _theming_applyTheme_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./theming/applyTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/applyTheme.js");
/* harmony import */ var _Runtimes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Runtimes.js */ "./node_modules/@ui5/webcomponents-base/dist/Runtimes.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _theming_ThemeRegistered_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./theming/ThemeRegistered.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeRegistered.js");









let booted = false;
let bootPromise;
const eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_1__["default"]();
/**
 * Attaches a callback that will be executed after boot finishes.
 * <b>Note:</b> If the framework already booted, the callback will be immediately executed.
 * @public
 * @param { Function } listener
 */
const attachBoot = (listener) => {
    if (!booted) {
        eventProvider.attachEvent("boot", listener);
        return;
    }
    listener();
};
const boot = async () => {
    if (bootPromise !== undefined) {
        return bootPromise;
    }
    const bootExecutor = async (resolve) => {
        if (typeof document === "undefined") {
            resolve();
            return;
        }
        (0,_theming_ThemeRegistered_js__WEBPACK_IMPORTED_MODULE_8__.attachThemeRegistered)(onThemeRegistered);
        (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_6__.registerCurrentRuntime)();
        const openUI5Support = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_7__.getFeature)("OpenUI5Support");
        const isOpenUI5Loaded = openUI5Support ? openUI5Support.isOpenUI5Detected() : false;
        const f6Navigation = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_7__.getFeature)("F6Navigation");
        if (openUI5Support) {
            await openUI5Support.init();
        }
        if (f6Navigation && !isOpenUI5Loaded) {
            f6Navigation.init();
        }
        await (0,_util_whenDOMReady_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
        await (0,_theming_applyTheme_js__WEBPACK_IMPORTED_MODULE_5__["default"])((0,_config_Theme_js__WEBPACK_IMPORTED_MODULE_4__.getTheme)());
        openUI5Support && openUI5Support.attachListeners();
        (0,_FontFace_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
        (0,_SystemCSSVars_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
        resolve();
        booted = true;
        await eventProvider.fireEventAsync("boot");
    };
    bootPromise = new Promise(bootExecutor);
    return bootPromise;
};
/**
 * Callback, executed after theme properties registration
 * to apply the newly registered theme.
 * @private
 * @param { string } theme
 */
const onThemeRegistered = (theme) => {
    const currentTheme = (0,_config_Theme_js__WEBPACK_IMPORTED_MODULE_4__.getTheme)();
    if (booted && theme === currentTheme) {
        (0,_theming_applyTheme_js__WEBPACK_IMPORTED_MODULE_5__["default"])(currentTheme);
    }
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/CSP.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/CSP.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getUrl: () => (/* binding */ getUrl),
/* harmony export */   setPackageCSSRoot: () => (/* binding */ setPackageCSSRoot),
/* harmony export */   setPreloadLinks: () => (/* binding */ setPreloadLinks),
/* harmony export */   setUseLinks: () => (/* binding */ setUseLinks),
/* harmony export */   shouldPreloadLinks: () => (/* binding */ shouldPreloadLinks),
/* harmony export */   shouldUseLinks: () => (/* binding */ shouldUseLinks)
/* harmony export */ });
const roots = new Map();
let useLinks = false;
let preloadLinks = true;
/**
 * Use this function to provide the path to the directory where the css resources for the given package will be served from.
 *
 * @public
 * @param packageName name of the package that is being configured
 * @param root path, accessible by the server that will serve the css resources
 */
const setPackageCSSRoot = (packageName, root) => {
    roots.set(packageName, root);
};
const getUrl = (packageName, path) => {
    const packageCSSRoot = roots.get(packageName);
    if (!packageCSSRoot) {
        console.warn(`Root path to the CSS resources ${packageName} not provided - use "setPackageCSSRoot" to provide the root.`); // eslint-disable-line
        return "";
    }
    return `${packageCSSRoot}${path}`;
};
/**
 * Call this function to enable or disable the usage of <link> tags instead of <style> tags to achieve CSP compliance
 * Example: "setUseLinks(true)" will unconditionally use <link> tags for all browsers;
 * Example: "setUseLinks(!document.adoptedStyleSheets) will only enable the usage of <link> tags for browsers that do not support constructable stylesheets.
 *
 * @public
 * @param use whether links will be used
 */
const setUseLinks = (use) => {
    useLinks = use;
};
/**
 * Call this function to enable or disable the preloading of <link> tags.
 * Note: only taken into account when <link> tags are being used.
 * Note: links are being preloaded by default, so call "setPreloadLinks(false)" to opt out of this.
 *
 * @public
 * @param preload
 */
const setPreloadLinks = (preload) => {
    preloadLinks = preload;
};
const shouldUseLinks = () => {
    return useLinks;
};
const shouldPreloadLinks = () => {
    return preloadLinks;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAllRegisteredTags: () => (/* binding */ getAllRegisteredTags),
/* harmony export */   isTagRegistered: () => (/* binding */ isTagRegistered),
/* harmony export */   recordTagRegistrationFailure: () => (/* binding */ recordTagRegistrationFailure),
/* harmony export */   registerTag: () => (/* binding */ registerTag)
/* harmony export */ });
/* harmony import */ var _getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getSharedResource.js */ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js");
/* harmony import */ var _Runtimes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Runtimes.js */ "./node_modules/@ui5/webcomponents-base/dist/Runtimes.js");


const Tags = (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__["default"])("Tags", new Map());
const Definitions = new Set();
let Failures = new Map();
let failureTimeout;
const UNKNOWN_RUNTIME = -1;
const registerTag = (tag) => {
    Definitions.add(tag);
    Tags.set(tag, (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentRuntimeIndex)());
};
const isTagRegistered = (tag) => {
    return Definitions.has(tag);
};
const getAllRegisteredTags = () => {
    return [...Definitions.values()];
};
const recordTagRegistrationFailure = (tag) => {
    let tagRegRuntimeIndex = Tags.get(tag);
    if (tagRegRuntimeIndex === undefined) {
        tagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the "unknown" key
    }
    if (!Failures.has(tagRegRuntimeIndex)) {
        Failures.set(tagRegRuntimeIndex, new Set());
    }
    Failures.get(tagRegRuntimeIndex).add(tag);
    if (!failureTimeout) {
        failureTimeout = setTimeout(() => {
            displayFailedRegistrations();
            Failures = new Map();
            failureTimeout = undefined;
        }, 1000);
    }
};
const displayFailedRegistrations = () => {
    const allRuntimes = (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_1__.getAllRuntimes)();
    const currentRuntimeIndex = (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentRuntimeIndex)();
    const currentRuntime = allRuntimes[currentRuntimeIndex];
    let message = `Multiple UI5 Web Components instances detected.`;
    if (allRuntimes.length > 1) {
        message = `${message}\nLoading order (versions before 1.1.0 not listed): ${allRuntimes.map(runtime => `\n${runtime.description}`).join("")}`;
    }
    [...Failures.keys()].forEach(otherRuntimeIndex => {
        let comparison;
        let otherRuntime;
        if (otherRuntimeIndex === UNKNOWN_RUNTIME) { // version < 1.1.0 defined the tag
            comparison = 1; // the current runtime is considered newer
            otherRuntime = {
                description: `Older unknown runtime`,
            };
        }
        else {
            comparison = (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_1__.compareRuntimes)(currentRuntimeIndex, otherRuntimeIndex);
            otherRuntime = allRuntimes[otherRuntimeIndex];
        }
        let compareWord;
        if (comparison > 0) {
            compareWord = "an older";
        }
        else if (comparison < 0) {
            compareWord = "a newer";
        }
        else {
            compareWord = "the same";
        }
        message = `${message}\n\n"${currentRuntime.description}" failed to define ${Failures.get(otherRuntimeIndex).size} tag(s) as they were defined by a runtime of ${compareWord} version "${otherRuntime.description}": ${([...Failures.get(otherRuntimeIndex)]).sort().join(", ")}.`;
        if (comparison > 0) {
            message = `${message}\nWARNING! If your code uses features of the above web components, unavailable in ${otherRuntime.description}, it might not work as expected!`;
        }
        else {
            message = `${message}\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;
        }
    });
    message = `${message}\n\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/main/docs/2-advanced/03-scoping.md.`;
    console.warn(message); // eslint-disable-line
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScope.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/CustomElementsScope.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LitStatic: () => (/* binding */ LitStatic),
/* harmony export */   getCustomElementsScopingRules: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.getCustomElementsScopingRules),
/* harmony export */   getCustomElementsScopingSuffix: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.getCustomElementsScopingSuffix),
/* harmony export */   getEffectiveScopingSuffixForTag: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.getEffectiveScopingSuffixForTag),
/* harmony export */   getScopedVarName: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.getScopedVarName),
/* harmony export */   setCustomElementsScopingRules: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.setCustomElementsScopingRules),
/* harmony export */   setCustomElementsScopingSuffix: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.setCustomElementsScopingSuffix),
/* harmony export */   shouldScopeCustomElement: () => (/* reexport safe */ _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__.shouldScopeCustomElement)
/* harmony export */ });
/* harmony import */ var lit_html_static_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/static.js */ "./node_modules/lit-html/development/static.js");
/* harmony import */ var _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CustomElementsScopeUtils.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");



class LitStatic {
}
LitStatic.html = lit_html_static_js__WEBPACK_IMPORTED_MODULE_0__.html;
LitStatic.svg = lit_html_static_js__WEBPACK_IMPORTED_MODULE_0__.svg;
LitStatic.unsafeStatic = lit_html_static_js__WEBPACK_IMPORTED_MODULE_0__.unsafeStatic;
(0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_2__.registerFeature)("LitStatic", LitStatic);



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCustomElementsScopingRules: () => (/* binding */ getCustomElementsScopingRules),
/* harmony export */   getCustomElementsScopingSuffix: () => (/* binding */ getCustomElementsScopingSuffix),
/* harmony export */   getEffectiveScopingSuffixForTag: () => (/* binding */ getEffectiveScopingSuffixForTag),
/* harmony export */   getScopedVarName: () => (/* binding */ getScopedVarName),
/* harmony export */   setCustomElementsScopingRules: () => (/* binding */ setCustomElementsScopingRules),
/* harmony export */   setCustomElementsScopingSuffix: () => (/* binding */ setCustomElementsScopingSuffix),
/* harmony export */   shouldScopeCustomElement: () => (/* binding */ shouldScopeCustomElement)
/* harmony export */ });
/* harmony import */ var _generated_VersionInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/VersionInfo.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/VersionInfo.js");

let suf;
let rulesObj = {
    include: [/^ui5-/],
    exclude: [],
};
const tagsCache = new Map(); // true/false means the tag should/should not be cached, undefined means not known yet.
/**
 * Sets the suffix to be used for custom elements scoping, f.e. pass "demo" to get tags such as "ui5-button-demo".
 * Note: by default all tags starting with "ui5-" will be scoped, unless you change this by calling "setCustomElementsScopingRules"
 *
 * @public
 * @param suffix The scoping suffix
 */
const setCustomElementsScopingSuffix = (suffix) => {
    if (!suffix.match(/^[a-zA-Z0-9_-]+$/)) {
        throw new Error("Only alphanumeric characters and dashes allowed for the scoping suffix");
    }
    suf = suffix;
};
/**
 * Returns the currently set scoping suffix, or undefined if not set.
 *
 * @public
 * @returns {String|undefined}
 */
const getCustomElementsScopingSuffix = () => {
    return suf;
};
/**
 * Sets the rules, governing which custom element tags to scope and which not, f.e.
 * setCustomElementsScopingRules({include: [/^ui5-/]}, exclude: [/^ui5-mylib-/, /^ui5-carousel$/]);
 * will scope all elements starting with "ui5-" but not the ones starting with "ui5-mylib-" and not "ui5-carousel".
 *
 * @public
 * @param rules Object with "include" and "exclude" properties, both arrays of regular expressions. Note that "include"
 * rules are applied first and "exclude" rules second.
 */
const setCustomElementsScopingRules = (rules) => {
    if (!rules || !rules.include) {
        throw new Error(`"rules" must be an object with at least an "include" property`);
    }
    if (!Array.isArray(rules.include) || rules.include.some(rule => !(rule instanceof RegExp))) {
        throw new Error(`"rules.include" must be an array of regular expressions`);
    }
    if (rules.exclude && (!Array.isArray(rules.exclude) || rules.exclude.some(rule => !(rule instanceof RegExp)))) {
        throw new Error(`"rules.exclude" must be an array of regular expressions`);
    }
    rules.exclude = rules.exclude || [];
    rulesObj = rules;
    tagsCache.clear(); // reset the cache upon setting new rules
};
/**
 * Returns the rules, governing which custom element tags to scope and which not. By default, all elements
 * starting with "ui5-" are scoped. The default rules are: {include: [/^ui5-/]}.
 *
 * @public
 * @returns {Object}
 */
const getCustomElementsScopingRules = () => {
    return rulesObj;
};
/**
 * Determines whether custom elements with the given tag should be scoped or not.
 * The tag is first matched against the "include" rules and then against the "exclude" rules and the
 * result is cached until new rules are set.
 *
 * @public
 * @param tag
 */
const shouldScopeCustomElement = (tag) => {
    if (!tagsCache.has(tag)) {
        const result = rulesObj.include.some(rule => tag.match(rule)) && !rulesObj.exclude.some(rule => tag.match(rule));
        tagsCache.set(tag, result);
    }
    return tagsCache.get(tag);
};
/**
 * Returns the currently set scoping suffix, if any and if the tag should be scoped, or undefined otherwise.
 *
 * @public
 * @param tag
 * @returns {String}
 */
const getEffectiveScopingSuffixForTag = (tag) => {
    if (shouldScopeCustomElement(tag)) {
        return getCustomElementsScopingSuffix();
    }
};
/**
 * @public
 * Used for getting a scoped name for a CSS variable using the same transformation used in the build
 * @name the name of the css variable as written in the code
 * @returns a variable name with the current version inserted as available at runtime
 */
const getScopedVarName = (name) => {
    const versionStr = `v${_generated_VersionInfo_js__WEBPACK_IMPORTED_MODULE_0__["default"].version.replaceAll(".", "-")}`;
    const expr = /(--_?ui5)([^,:)\s]+)/g;
    return name.replaceAll(expr, `$1-${versionStr}$2`);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/DOMObserver.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/DOMObserver.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   observeDOMNode: () => (/* binding */ observeDOMNode),
/* harmony export */   unobserveDOMNode: () => (/* binding */ unobserveDOMNode)
/* harmony export */ });
const observers = new WeakMap();
/**
 * @param node
 * @param callback
 * @param options
 */
const observeDOMNode = (node, callback, options) => {
    const observer = new MutationObserver(callback);
    observers.set(node, observer);
    observer.observe(node, options);
};
/**
 * @param node
 */
const unobserveDOMNode = (node) => {
    const observer = observers.get(node);
    if (observer) {
        observer.disconnect();
        observers.delete(node);
    }
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/Device.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/Device.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAndroid: () => (/* binding */ isAndroid),
/* harmony export */   isChrome: () => (/* binding */ isChrome),
/* harmony export */   isCombi: () => (/* binding */ isCombi),
/* harmony export */   isDesktop: () => (/* binding */ isDesktop),
/* harmony export */   isFirefox: () => (/* binding */ isFirefox),
/* harmony export */   isIE: () => (/* binding */ isIE),
/* harmony export */   isIOS: () => (/* binding */ isIOS),
/* harmony export */   isMac: () => (/* binding */ isMac),
/* harmony export */   isPhone: () => (/* binding */ isPhone),
/* harmony export */   isSafari: () => (/* binding */ isSafari),
/* harmony export */   isTablet: () => (/* binding */ isTablet),
/* harmony export */   supportsTouch: () => (/* binding */ supportsTouch)
/* harmony export */ });
const isSSR = typeof document === "undefined";
const internals = {
    get userAgent() {
        if (isSSR) {
            return "";
        }
        return navigator.userAgent;
    },
    get touch() {
        if (isSSR) {
            return false;
        }
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
    },
    get ie() {
        if (isSSR) {
            return false;
        }
        return /(msie|trident)/i.test(internals.userAgent);
    },
    get chrome() {
        if (isSSR) {
            return false;
        }
        return !internals.ie && /(Chrome|CriOS)/.test(internals.userAgent);
    },
    get firefox() {
        if (isSSR) {
            return false;
        }
        return /Firefox/.test(internals.userAgent);
    },
    get safari() {
        if (isSSR) {
            return false;
        }
        return !internals.ie && !internals.chrome && /(Version|PhantomJS)\/(\d+\.\d+).*Safari/.test(internals.userAgent);
    },
    get webkit() {
        if (isSSR) {
            return false;
        }
        return !internals.ie && /webkit/.test(internals.userAgent);
    },
    get windows() {
        if (isSSR) {
            return false;
        }
        return navigator.platform.indexOf("Win") !== -1;
    },
    get macOS() {
        if (isSSR) {
            return false;
        }
        return !!navigator.userAgent.match(/Macintosh|Mac OS X/i);
    },
    get iOS() {
        if (isSSR) {
            return false;
        }
        return !!(navigator.platform.match(/iPhone|iPad|iPod/)) || !!(internals.userAgent.match(/Mac/) && "ontouchend" in document);
    },
    get android() {
        if (isSSR) {
            return false;
        }
        return !internals.windows && /Android/.test(internals.userAgent);
    },
    get androidPhone() {
        if (isSSR) {
            return false;
        }
        return internals.android && /(?=android)(?=.*mobile)/i.test(internals.userAgent);
    },
    get ipad() {
        if (isSSR) {
            return false;
        }
        // With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:
        // "Request Desktop Website -> All websites" (for more infos see: https://forums.developer.apple.com/thread/119186).
        // Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.
        return /ipad/i.test(internals.userAgent) || (/Macintosh/i.test(internals.userAgent) && "ontouchend" in document);
    },
};
let windowsVersion;
let webkitVersion;
let tablet;
const isWindows8OrAbove = () => {
    if (isSSR) {
        return false;
    }
    if (!internals.windows) {
        return false;
    }
    if (windowsVersion === undefined) {
        const matches = internals.userAgent.match(/Windows NT (\d+).(\d)/);
        windowsVersion = matches ? parseFloat(matches[1]) : 0;
    }
    return windowsVersion >= 8;
};
const isWebkit537OrAbove = () => {
    if (isSSR) {
        return false;
    }
    if (!internals.webkit) {
        return false;
    }
    if (webkitVersion === undefined) {
        const matches = internals.userAgent.match(/(webkit)[ /]([\w.]+)/);
        webkitVersion = matches ? parseFloat(matches[1]) : 0;
    }
    return webkitVersion >= 537.10;
};
const detectTablet = () => {
    if (isSSR) {
        return false;
    }
    if (tablet !== undefined) {
        return;
    }
    if (internals.ipad) {
        tablet = true;
        return;
    }
    if (internals.touch) {
        if (isWindows8OrAbove()) {
            tablet = true;
            return;
        }
        if (internals.chrome && internals.android) {
            tablet = !/Mobile Safari\/[.0-9]+/.test(internals.userAgent);
            return;
        }
        let densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices
        if (internals.android && isWebkit537OrAbove()) {
            densityFactor = 1;
        }
        tablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);
        return;
    }
    tablet = (internals.ie && internals.userAgent.indexOf("Touch") !== -1) || (internals.android && !internals.androidPhone);
};
const supportsTouch = () => internals.touch;
const isIE = () => internals.ie;
const isSafari = () => internals.safari;
const isChrome = () => internals.chrome;
const isFirefox = () => internals.firefox;
const isTablet = () => {
    detectTablet();
    return (internals.touch || isWindows8OrAbove()) && tablet;
};
const isPhone = () => {
    detectTablet();
    return internals.touch && !tablet;
};
const isDesktop = () => {
    if (isSSR) {
        return false;
    }
    return (!isTablet() && !isPhone()) || isWindows8OrAbove();
};
const isCombi = () => {
    return isTablet() && isDesktop();
};
const isIOS = () => {
    return internals.iOS;
};
const isMac = () => {
    return internals.macOS;
};
const isAndroid = () => {
    return internals.android || internals.androidPhone;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/EventProvider.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class EventProvider {
    constructor() {
        this._eventRegistry = new Map();
    }
    attachEvent(eventName, fnFunction) {
        const eventRegistry = this._eventRegistry;
        const eventListeners = eventRegistry.get(eventName);
        if (!Array.isArray(eventListeners)) {
            eventRegistry.set(eventName, [fnFunction]);
            return;
        }
        if (!eventListeners.includes(fnFunction)) {
            eventListeners.push(fnFunction);
        }
    }
    detachEvent(eventName, fnFunction) {
        const eventRegistry = this._eventRegistry;
        const eventListeners = eventRegistry.get(eventName);
        if (!eventListeners) {
            return;
        }
        const indexOfFnToDetach = eventListeners.indexOf(fnFunction);
        if (indexOfFnToDetach !== -1) {
            eventListeners.splice(indexOfFnToDetach, 1);
        }
        if (eventListeners.length === 0) {
            eventRegistry.delete(eventName);
        }
    }
    /**
     * Fires an event and returns the results of all event listeners as an array.
     *
     * @param eventName the event to fire
     * @param data optional data to pass to each event listener
     * @returns {Array} an array with the results of all event listeners
     */
    fireEvent(eventName, data) {
        const eventRegistry = this._eventRegistry;
        const eventListeners = eventRegistry.get(eventName);
        if (!eventListeners) {
            return [];
        }
        return eventListeners.map(fn => {
            return fn.call(this, data);
        });
    }
    /**
     * Fires an event and returns a promise that will resolve once all listeners have resolved.
     *
     * @param eventName the event to fire
     * @param data optional data to pass to each event listener
     * @returns {Promise} a promise that will resolve when all listeners have resolved
     */
    fireEventAsync(eventName, data) {
        return Promise.all(this.fireEvent(eventName, data));
    }
    isHandlerAttached(eventName, fnFunction) {
        const eventRegistry = this._eventRegistry;
        const eventListeners = eventRegistry.get(eventName);
        if (!eventListeners) {
            return false;
        }
        return eventListeners.includes(fnFunction);
    }
    hasListeners(eventName) {
        return !!this._eventRegistry.get(eventName);
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EventProvider);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFeature: () => (/* binding */ getFeature),
/* harmony export */   registerFeature: () => (/* binding */ registerFeature)
/* harmony export */ });
const features = new Map();
const registerFeature = (name, feature) => {
    features.set(name, feature);
};
const getFeature = (name) => {
    return features.get(name);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/FontFace.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/FontFace.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ManagedStyles.js */ "./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _generated_css_FontFace_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/css/FontFace.css.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/css/FontFace.css.js");
/* harmony import */ var _generated_css_OverrideFontFace_css_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generated/css/OverrideFontFace.css.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/css/OverrideFontFace.css.js");




const insertFontFace = () => {
    const openUI5Support = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("OpenUI5Support");
    // Only set the main font if there is no OpenUI5 support, or there is, but OpenUI5 is not loaded
    if (!openUI5Support || !openUI5Support.isOpenUI5Detected()) {
        insertMainFontFace();
    }
    // Always set the override font - OpenUI5 in CSS Vars mode does not set it, unlike the main font
    insertOverrideFontFace();
};
const insertMainFontFace = () => {
    if (!(0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.hasStyle)("data-ui5-font-face")) {
        (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.createStyle)(_generated_css_FontFace_css_js__WEBPACK_IMPORTED_MODULE_2__["default"], "data-ui5-font-face");
    }
};
const insertOverrideFontFace = () => {
    if (!(0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.hasStyle)("data-ui5-font-face-override")) {
        (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.createStyle)(_generated_css_OverrideFontFace_css_js__WEBPACK_IMPORTED_MODULE_3__["default"], "data-ui5-font-face-override");
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (insertFontFace);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/IgnoreCustomElements.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/IgnoreCustomElements.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ignoreCustomElements: () => (/* binding */ ignoreCustomElements),
/* harmony export */   shouldIgnoreCustomElement: () => (/* binding */ shouldIgnoreCustomElement)
/* harmony export */ });
/**
 * The tag prefixes to be ignored.
 */
const tagPrefixes = [];
/**
 * Ignores all custom HTML elements with a given tag prefix to improve the rendering performance of the UI5 Web Components.
 * <br>
 *
 * <b>When used:</b> the UI5 Web Components framework treats all custom HTML elements,
 * starting with the given prefix as if they are standard HTML elements, such as: `div`, `span`, etc, without additional processing.
 * <br>
 *
 * <b>When not used:</b> the framework waits for the slotted children to be defined and registered first,
 * because the state or visual appearance of the parent may rely on the slotted elements/children.
 *
 * <b>Note:</b> We recommend using `ignoreCustomElements` when slotting custom HTML elements (with only semantic purpose)
 * inside UI5 Web Components, to improve the time to render.
 *
 * @public
 * @since 1.14.0
 * @param { string } tagPrefix
 */
const ignoreCustomElements = (tagPrefix) => {
    if (typeof tagPrefix !== "string" || !tagPrefix.length) {
        throw new Error("Only string characters for a tag prefix.");
    }
    tagPrefixes.push(tagPrefix);
};
/**
 * Determines whether custom elements with the given tag should be ignored.
 *
 * @private
 * @param { string } tag
 */
const shouldIgnoreCustomElement = (tag) => {
    return tagPrefixes.some(pref => tag.startsWith(pref));
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAnimationMode: () => (/* binding */ getAnimationMode),
/* harmony export */   getCalendarType: () => (/* binding */ getCalendarType),
/* harmony export */   getFetchDefaultLanguage: () => (/* binding */ getFetchDefaultLanguage),
/* harmony export */   getFormatSettings: () => (/* binding */ getFormatSettings),
/* harmony export */   getLanguage: () => (/* binding */ getLanguage),
/* harmony export */   getNoConflict: () => (/* binding */ getNoConflict),
/* harmony export */   getRTL: () => (/* binding */ getRTL),
/* harmony export */   getSecondaryCalendarType: () => (/* binding */ getSecondaryCalendarType),
/* harmony export */   getTheme: () => (/* binding */ getTheme),
/* harmony export */   getThemeRoot: () => (/* binding */ getThemeRoot),
/* harmony export */   getTimezone: () => (/* binding */ getTimezone)
/* harmony export */ });
/* harmony import */ var _thirdparty_merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./thirdparty/merge.js */ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/merge.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");
/* harmony import */ var _validateThemeRoot_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validateThemeRoot.js */ "./node_modules/@ui5/webcomponents-base/dist/validateThemeRoot.js");
/* harmony import */ var _types_AnimationMode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types/AnimationMode.js */ "./node_modules/@ui5/webcomponents-base/dist/types/AnimationMode.js");





let initialized = false;
let initialConfig = {
    animationMode: _types_AnimationMode_js__WEBPACK_IMPORTED_MODULE_4__["default"].Full,
    theme: _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_THEME,
    themeRoot: undefined,
    rtl: undefined,
    language: undefined,
    timezone: undefined,
    calendarType: undefined,
    secondaryCalendarType: undefined,
    noConflict: false,
    formatSettings: {},
    fetchDefaultLanguage: false,
};
/* General settings */
const getAnimationMode = () => {
    initConfiguration();
    return initialConfig.animationMode;
};
const getTheme = () => {
    initConfiguration();
    return initialConfig.theme;
};
const getThemeRoot = () => {
    initConfiguration();
    return initialConfig.themeRoot;
};
const getRTL = () => {
    initConfiguration();
    return initialConfig.rtl;
};
const getLanguage = () => {
    initConfiguration();
    return initialConfig.language;
};
/**
 * Returns if the default language, that is inlined at build time,
 * should be fetched over the network instead.
 * @returns {Boolean}
 */
const getFetchDefaultLanguage = () => {
    initConfiguration();
    return initialConfig.fetchDefaultLanguage;
};
const getNoConflict = () => {
    initConfiguration();
    return initialConfig.noConflict;
};
/**
 * Get the configured calendar type
 * @returns { String } the name of the configured calendar type
 */
const getCalendarType = () => {
    initConfiguration();
    return initialConfig.calendarType;
};
const getSecondaryCalendarType = () => {
    initConfiguration();
    return initialConfig.secondaryCalendarType;
};
/**
 * Returns the configured IANA timezone ID.
 * @returns { String } the configured IANA timezone ID, e.g. "America/New_York"
 */
const getTimezone = () => {
    initConfiguration();
    return initialConfig.timezone;
};
const getFormatSettings = () => {
    initConfiguration();
    return initialConfig.formatSettings;
};
const booleanMapping = new Map();
booleanMapping.set("true", true);
booleanMapping.set("false", false);
const parseConfigurationScript = () => {
    const configScript = document.querySelector("[data-ui5-config]") || document.querySelector("[data-id='sap-ui-config']"); // for backward compatibility
    let configJSON;
    if (configScript) {
        try {
            configJSON = JSON.parse(configScript.innerHTML);
        }
        catch (err) {
            console.warn("Incorrect data-sap-ui-config format. Please use JSON"); /* eslint-disable-line */
        }
        if (configJSON) {
            initialConfig = (0,_thirdparty_merge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(initialConfig, configJSON);
        }
    }
};
const parseURLParameters = () => {
    const params = new URLSearchParams(window.location.search);
    // Process "sap-*" params first
    params.forEach((value, key) => {
        const parts = key.split("sap-").length;
        if (parts === 0 || parts === key.split("sap-ui-").length) {
            return;
        }
        applyURLParam(key, value, "sap");
    });
    // Process "sap-ui-*" params
    params.forEach((value, key) => {
        if (!key.startsWith("sap-ui")) {
            return;
        }
        applyURLParam(key, value, "sap-ui");
    });
};
const normalizeThemeRootParamValue = (value) => {
    const themeRoot = value.split("@")[1];
    return (0,_validateThemeRoot_js__WEBPACK_IMPORTED_MODULE_3__["default"])(themeRoot);
};
const normalizeThemeParamValue = (param, value) => {
    if (param === "theme" && value.includes("@")) { // the theme parameter might have @<URL-TO-THEME> in the value - strip this
        return value.split("@")[0];
    }
    return value;
};
const applyURLParam = (key, value, paramType) => {
    const lowerCaseValue = value.toLowerCase();
    const param = key.split(`${paramType}-`)[1];
    if (booleanMapping.has(value)) {
        value = booleanMapping.get(lowerCaseValue);
    }
    if (param === "theme") {
        initialConfig.theme = normalizeThemeParamValue(param, value);
        if (value && value.includes("@")) {
            initialConfig.themeRoot = normalizeThemeRootParamValue(value);
        }
    }
    else {
        initialConfig[param] = value;
    }
};
const applyOpenUI5Configuration = () => {
    const openUI5Support = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("OpenUI5Support");
    if (!openUI5Support || !openUI5Support.isOpenUI5Detected()) {
        return;
    }
    const OpenUI5Config = openUI5Support.getConfigurationSettingsObject();
    initialConfig = (0,_thirdparty_merge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(initialConfig, OpenUI5Config);
};
const initConfiguration = () => {
    if (typeof document === "undefined" || initialized) {
        return;
    }
    // 1. Lowest priority - configuration script
    parseConfigurationScript();
    // 2. URL parameters overwrite configuration script parameters
    parseURLParameters();
    // 3. If OpenUI5 is detected, it has the highest priority
    applyOpenUI5Configuration();
    initialized = true;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/Keys.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/Keys.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBackSpace: () => (/* binding */ isBackSpace),
/* harmony export */   isColon: () => (/* binding */ isColon),
/* harmony export */   isCtrlA: () => (/* binding */ isCtrlA),
/* harmony export */   isCtrlV: () => (/* binding */ isCtrlV),
/* harmony export */   isDelete: () => (/* binding */ isDelete),
/* harmony export */   isDeleteShift: () => (/* binding */ isDeleteShift),
/* harmony export */   isDown: () => (/* binding */ isDown),
/* harmony export */   isDownAlt: () => (/* binding */ isDownAlt),
/* harmony export */   isDownCtrl: () => (/* binding */ isDownCtrl),
/* harmony export */   isDownShift: () => (/* binding */ isDownShift),
/* harmony export */   isDownShiftCtrl: () => (/* binding */ isDownShiftCtrl),
/* harmony export */   isEnd: () => (/* binding */ isEnd),
/* harmony export */   isEndCtrl: () => (/* binding */ isEndCtrl),
/* harmony export */   isEndShift: () => (/* binding */ isEndShift),
/* harmony export */   isEnter: () => (/* binding */ isEnter),
/* harmony export */   isEnterShift: () => (/* binding */ isEnterShift),
/* harmony export */   isEscape: () => (/* binding */ isEscape),
/* harmony export */   isF4: () => (/* binding */ isF4),
/* harmony export */   isF4Shift: () => (/* binding */ isF4Shift),
/* harmony export */   isF6Next: () => (/* binding */ isF6Next),
/* harmony export */   isF6Previous: () => (/* binding */ isF6Previous),
/* harmony export */   isF7: () => (/* binding */ isF7),
/* harmony export */   isHome: () => (/* binding */ isHome),
/* harmony export */   isHomeCtrl: () => (/* binding */ isHomeCtrl),
/* harmony export */   isHomeShift: () => (/* binding */ isHomeShift),
/* harmony export */   isInsertCtrl: () => (/* binding */ isInsertCtrl),
/* harmony export */   isInsertShift: () => (/* binding */ isInsertShift),
/* harmony export */   isKeyA: () => (/* binding */ isKeyA),
/* harmony export */   isKeyP: () => (/* binding */ isKeyP),
/* harmony export */   isLeft: () => (/* binding */ isLeft),
/* harmony export */   isLeftCtrl: () => (/* binding */ isLeftCtrl),
/* harmony export */   isLeftShift: () => (/* binding */ isLeftShift),
/* harmony export */   isLeftShiftCtrl: () => (/* binding */ isLeftShiftCtrl),
/* harmony export */   isMinus: () => (/* binding */ isMinus),
/* harmony export */   isNumber: () => (/* binding */ isNumber),
/* harmony export */   isPageDown: () => (/* binding */ isPageDown),
/* harmony export */   isPageDownAlt: () => (/* binding */ isPageDownAlt),
/* harmony export */   isPageDownShift: () => (/* binding */ isPageDownShift),
/* harmony export */   isPageDownShiftCtrl: () => (/* binding */ isPageDownShiftCtrl),
/* harmony export */   isPageUp: () => (/* binding */ isPageUp),
/* harmony export */   isPageUpAlt: () => (/* binding */ isPageUpAlt),
/* harmony export */   isPageUpShift: () => (/* binding */ isPageUpShift),
/* harmony export */   isPageUpShiftCtrl: () => (/* binding */ isPageUpShiftCtrl),
/* harmony export */   isPlus: () => (/* binding */ isPlus),
/* harmony export */   isRight: () => (/* binding */ isRight),
/* harmony export */   isRightCtrl: () => (/* binding */ isRightCtrl),
/* harmony export */   isRightShift: () => (/* binding */ isRightShift),
/* harmony export */   isRightShiftCtrl: () => (/* binding */ isRightShiftCtrl),
/* harmony export */   isShift: () => (/* binding */ isShift),
/* harmony export */   isShow: () => (/* binding */ isShow),
/* harmony export */   isSpace: () => (/* binding */ isSpace),
/* harmony export */   isSpaceCtrl: () => (/* binding */ isSpaceCtrl),
/* harmony export */   isSpaceShift: () => (/* binding */ isSpaceShift),
/* harmony export */   isTabNext: () => (/* binding */ isTabNext),
/* harmony export */   isTabPrevious: () => (/* binding */ isTabPrevious),
/* harmony export */   isUp: () => (/* binding */ isUp),
/* harmony export */   isUpAlt: () => (/* binding */ isUpAlt),
/* harmony export */   isUpCtrl: () => (/* binding */ isUpCtrl),
/* harmony export */   isUpShift: () => (/* binding */ isUpShift),
/* harmony export */   isUpShiftCtrl: () => (/* binding */ isUpShiftCtrl)
/* harmony export */ });
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["BACKSPACE"] = 8] = "BACKSPACE";
    KeyCodes[KeyCodes["TAB"] = 9] = "TAB";
    KeyCodes[KeyCodes["ENTER"] = 13] = "ENTER";
    KeyCodes[KeyCodes["SHIFT"] = 16] = "SHIFT";
    KeyCodes[KeyCodes["CONTROL"] = 17] = "CONTROL";
    KeyCodes[KeyCodes["ALT"] = 18] = "ALT";
    KeyCodes[KeyCodes["BREAK"] = 19] = "BREAK";
    KeyCodes[KeyCodes["CAPS_LOCK"] = 20] = "CAPS_LOCK";
    KeyCodes[KeyCodes["ESCAPE"] = 27] = "ESCAPE";
    KeyCodes[KeyCodes["SPACE"] = 32] = "SPACE";
    KeyCodes[KeyCodes["PAGE_UP"] = 33] = "PAGE_UP";
    KeyCodes[KeyCodes["PAGE_DOWN"] = 34] = "PAGE_DOWN";
    KeyCodes[KeyCodes["END"] = 35] = "END";
    KeyCodes[KeyCodes["HOME"] = 36] = "HOME";
    KeyCodes[KeyCodes["ARROW_LEFT"] = 37] = "ARROW_LEFT";
    KeyCodes[KeyCodes["ARROW_UP"] = 38] = "ARROW_UP";
    KeyCodes[KeyCodes["ARROW_RIGHT"] = 39] = "ARROW_RIGHT";
    KeyCodes[KeyCodes["ARROW_DOWN"] = 40] = "ARROW_DOWN";
    KeyCodes[KeyCodes["PRINT"] = 44] = "PRINT";
    KeyCodes[KeyCodes["INSERT"] = 45] = "INSERT";
    KeyCodes[KeyCodes["DELETE"] = 46] = "DELETE";
    KeyCodes[KeyCodes["DIGIT_0"] = 48] = "DIGIT_0";
    KeyCodes[KeyCodes["DIGIT_1"] = 49] = "DIGIT_1";
    KeyCodes[KeyCodes["DIGIT_2"] = 50] = "DIGIT_2";
    KeyCodes[KeyCodes["DIGIT_3"] = 51] = "DIGIT_3";
    KeyCodes[KeyCodes["DIGIT_4"] = 52] = "DIGIT_4";
    KeyCodes[KeyCodes["DIGIT_5"] = 53] = "DIGIT_5";
    KeyCodes[KeyCodes["DIGIT_6"] = 54] = "DIGIT_6";
    KeyCodes[KeyCodes["DIGIT_7"] = 55] = "DIGIT_7";
    KeyCodes[KeyCodes["DIGIT_8"] = 56] = "DIGIT_8";
    KeyCodes[KeyCodes["DIGIT_9"] = 57] = "DIGIT_9";
    KeyCodes[KeyCodes["A"] = 65] = "A";
    KeyCodes[KeyCodes["B"] = 66] = "B";
    KeyCodes[KeyCodes["C"] = 67] = "C";
    KeyCodes[KeyCodes["D"] = 68] = "D";
    KeyCodes[KeyCodes["E"] = 69] = "E";
    KeyCodes[KeyCodes["F"] = 70] = "F";
    KeyCodes[KeyCodes["G"] = 71] = "G";
    KeyCodes[KeyCodes["H"] = 72] = "H";
    KeyCodes[KeyCodes["I"] = 73] = "I";
    KeyCodes[KeyCodes["J"] = 74] = "J";
    KeyCodes[KeyCodes["K"] = 75] = "K";
    KeyCodes[KeyCodes["L"] = 76] = "L";
    KeyCodes[KeyCodes["M"] = 77] = "M";
    KeyCodes[KeyCodes["N"] = 78] = "N";
    KeyCodes[KeyCodes["O"] = 79] = "O";
    KeyCodes[KeyCodes["P"] = 80] = "P";
    KeyCodes[KeyCodes["Q"] = 81] = "Q";
    KeyCodes[KeyCodes["R"] = 82] = "R";
    KeyCodes[KeyCodes["S"] = 83] = "S";
    KeyCodes[KeyCodes["T"] = 84] = "T";
    KeyCodes[KeyCodes["U"] = 85] = "U";
    KeyCodes[KeyCodes["V"] = 86] = "V";
    KeyCodes[KeyCodes["W"] = 87] = "W";
    KeyCodes[KeyCodes["X"] = 88] = "X";
    KeyCodes[KeyCodes["Y"] = 89] = "Y";
    KeyCodes[KeyCodes["Z"] = 90] = "Z";
    KeyCodes[KeyCodes["WINDOWS"] = 91] = "WINDOWS";
    KeyCodes[KeyCodes["CONTEXT_MENU"] = 93] = "CONTEXT_MENU";
    KeyCodes[KeyCodes["TURN_OFF"] = 94] = "TURN_OFF";
    KeyCodes[KeyCodes["SLEEP"] = 95] = "SLEEP";
    KeyCodes[KeyCodes["NUMPAD_0"] = 96] = "NUMPAD_0";
    KeyCodes[KeyCodes["NUMPAD_1"] = 97] = "NUMPAD_1";
    KeyCodes[KeyCodes["NUMPAD_2"] = 98] = "NUMPAD_2";
    KeyCodes[KeyCodes["NUMPAD_3"] = 99] = "NUMPAD_3";
    KeyCodes[KeyCodes["NUMPAD_4"] = 100] = "NUMPAD_4";
    KeyCodes[KeyCodes["NUMPAD_5"] = 101] = "NUMPAD_5";
    KeyCodes[KeyCodes["NUMPAD_6"] = 102] = "NUMPAD_6";
    KeyCodes[KeyCodes["NUMPAD_7"] = 103] = "NUMPAD_7";
    KeyCodes[KeyCodes["NUMPAD_8"] = 104] = "NUMPAD_8";
    KeyCodes[KeyCodes["NUMPAD_9"] = 105] = "NUMPAD_9";
    KeyCodes[KeyCodes["NUMPAD_ASTERISK"] = 106] = "NUMPAD_ASTERISK";
    KeyCodes[KeyCodes["NUMPAD_PLUS"] = 107] = "NUMPAD_PLUS";
    KeyCodes[KeyCodes["NUMPAD_MINUS"] = 109] = "NUMPAD_MINUS";
    KeyCodes[KeyCodes["NUMPAD_COMMA"] = 110] = "NUMPAD_COMMA";
    KeyCodes[KeyCodes["NUMPAD_SLASH"] = 111] = "NUMPAD_SLASH";
    KeyCodes[KeyCodes["F1"] = 112] = "F1";
    KeyCodes[KeyCodes["F2"] = 113] = "F2";
    KeyCodes[KeyCodes["F3"] = 114] = "F3";
    KeyCodes[KeyCodes["F4"] = 115] = "F4";
    KeyCodes[KeyCodes["F5"] = 116] = "F5";
    KeyCodes[KeyCodes["F6"] = 117] = "F6";
    KeyCodes[KeyCodes["F7"] = 118] = "F7";
    KeyCodes[KeyCodes["F8"] = 119] = "F8";
    KeyCodes[KeyCodes["F9"] = 120] = "F9";
    KeyCodes[KeyCodes["F10"] = 121] = "F10";
    KeyCodes[KeyCodes["F11"] = 122] = "F11";
    KeyCodes[KeyCodes["F12"] = 123] = "F12";
    KeyCodes[KeyCodes["NUM_LOCK"] = 144] = "NUM_LOCK";
    KeyCodes[KeyCodes["SCROLL_LOCK"] = 145] = "SCROLL_LOCK";
    KeyCodes[KeyCodes["COLON"] = 186] = "COLON";
    KeyCodes[KeyCodes["PLUS"] = 187] = "PLUS";
    KeyCodes[KeyCodes["COMMA"] = 188] = "COMMA";
    KeyCodes[KeyCodes["SLASH"] = 189] = "SLASH";
    KeyCodes[KeyCodes["DOT"] = 190] = "DOT";
    KeyCodes[KeyCodes["PIPE"] = 191] = "PIPE";
    KeyCodes[KeyCodes["SEMICOLON"] = 192] = "SEMICOLON";
    KeyCodes[KeyCodes["MINUS"] = 219] = "MINUS";
    KeyCodes[KeyCodes["GREAT_ACCENT"] = 220] = "GREAT_ACCENT";
    KeyCodes[KeyCodes["EQUALS"] = 221] = "EQUALS";
    KeyCodes[KeyCodes["SINGLE_QUOTE"] = 222] = "SINGLE_QUOTE";
    KeyCodes[KeyCodes["BACKSLASH"] = 226] = "BACKSLASH";
})(KeyCodes || (KeyCodes = {}));
const isEnter = (event) => (event.key ? event.key === "Enter" : event.keyCode === KeyCodes.ENTER) && !hasModifierKeys(event);
const isEnterShift = (event) => (event.key ? event.key === "Enter" : event.keyCode === KeyCodes.ENTER) && checkModifierKeys(event, false, false, true);
const isSpace = (event) => (event.key ? (event.key === "Spacebar" || event.key === " ") : event.keyCode === KeyCodes.SPACE) && !hasModifierKeys(event);
const isSpaceShift = (event) => (event.key ? (event.key === "Spacebar" || event.key === " ") : event.keyCode === KeyCodes.SPACE) && checkModifierKeys(event, false, false, true);
const isSpaceCtrl = (event) => (event.key ? (event.key === "Spacebar" || event.key === " ") : event.keyCode === KeyCodes.SPACE) && checkModifierKeys(event, true, false, false);
const isLeft = (event) => (event.key ? (event.key === "ArrowLeft" || event.key === "Left") : event.keyCode === KeyCodes.ARROW_LEFT) && !hasModifierKeys(event);
const isRight = (event) => (event.key ? (event.key === "ArrowRight" || event.key === "Right") : event.keyCode === KeyCodes.ARROW_RIGHT) && !hasModifierKeys(event);
const isUp = (event) => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && !hasModifierKeys(event);
const isDown = (event) => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && !hasModifierKeys(event);
const isLeftCtrl = (event) => (event.key ? (event.key === "ArrowLeft" || event.key === "Left") : event.keyCode === KeyCodes.ARROW_LEFT) && checkModifierKeys(event, true, false, false);
const isRightCtrl = (event) => (event.key ? (event.key === "ArrowRight" || event.key === "Right") : event.keyCode === KeyCodes.ARROW_RIGHT) && checkModifierKeys(event, true, false, false);
const isUpCtrl = (event) => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event, true, false, false);
const isDownCtrl = (event) => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event, true, false, false);
const isUpShift = (event) => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event, false, false, true);
const isDownShift = (event) => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event, false, false, true);
const isUpAlt = (event) => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event, false, true, false);
const isDownAlt = (event) => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event, false, true, false);
const isLeftShift = (event) => (event.key ? (event.key === "ArrowLeft" || event.key === "Left") : event.keyCode === KeyCodes.ARROW_LEFT) && checkModifierKeys(event, false, false, true);
const isRightShift = (event) => (event.key ? (event.key === "ArrowRight" || event.key === "Right") : event.keyCode === KeyCodes.ARROW_RIGHT) && checkModifierKeys(event, false, false, true);
const isLeftShiftCtrl = (event) => (event.key ? (event.key === "ArrowLeft" || event.key === "Left") : event.keyCode === KeyCodes.ARROW_LEFT) && checkModifierKeys(event, true, false, true);
const isRightShiftCtrl = (event) => (event.key ? (event.key === "ArrowRight" || event.key === "Right") : event.keyCode === KeyCodes.ARROW_RIGHT) && checkModifierKeys(event, true, false, true);
const isUpShiftCtrl = (event) => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event, true, false, true);
const isDownShiftCtrl = (event) => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event, true, false, true);
const isHome = (event) => (event.key ? event.key === "Home" : event.keyCode === KeyCodes.HOME) && !hasModifierKeys(event);
const isEnd = (event) => (event.key ? event.key === "End" : event.keyCode === KeyCodes.END) && !hasModifierKeys(event);
const isHomeCtrl = (event) => (event.key ? event.key === "Home" : event.keyCode === KeyCodes.HOME) && checkModifierKeys(event, true, false, false);
const isHomeShift = (event) => (event.key ? event.key === "Home" : event.keyCode === KeyCodes.HOME) && checkModifierKeys(event, false, false, true);
const isEndCtrl = (event) => (event.key ? event.key === "End" : event.keyCode === KeyCodes.END) && checkModifierKeys(event, true, false, false);
const isEndShift = (event) => (event.key ? event.key === "End" : event.keyCode === KeyCodes.END) && checkModifierKeys(event, false, false, true);
const isEscape = (event) => (event.key ? event.key === "Escape" || event.key === "Esc" : event.keyCode === KeyCodes.ESCAPE) && !hasModifierKeys(event);
const isTabNext = (event) => (event.key ? event.key === "Tab" : event.keyCode === KeyCodes.TAB) && !hasModifierKeys(event);
const isTabPrevious = (event) => (event.key ? event.key === "Tab" : event.keyCode === KeyCodes.TAB) && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ false, /* Shift */ true);
const isBackSpace = (event) => (event.key ? event.key === "Backspace" : event.keyCode === KeyCodes.BACKSPACE) && !hasModifierKeys(event);
const isDelete = (event) => (event.key ? event.key === "Delete" : event.keyCode === KeyCodes.DELETE) && !hasModifierKeys(event);
const isDeleteShift = (event) => (event.key ? event.key === "Delete" : event.keyCode === KeyCodes.DELETE) && checkModifierKeys(event, false, false, true);
const isInsertShift = (event) => (event.key ? event.key === "Insert" : event.keyCode === KeyCodes.DELETE) && checkModifierKeys(event, false, false, true);
const isInsertCtrl = (event) => (event.key ? event.key === "Insert" : event.keyCode === KeyCodes.DELETE) && checkModifierKeys(event, true, false, false);
const isPageUp = (event) => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && !hasModifierKeys(event);
const isPageDown = (event) => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && !hasModifierKeys(event);
const isPageUpShift = (event) => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event, false, false, true);
const isPageUpAlt = (event) => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event, false, true, false);
const isPageDownShift = (event) => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event, false, false, true);
const isPageDownAlt = (event) => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event, false, true, false);
const isPageUpShiftCtrl = (event) => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event, true, false, true);
const isPageDownShiftCtrl = (event) => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event, true, false, true);
const isPlus = (event) => (event.key ? event.key === "+" : event.keyCode === KeyCodes.PLUS) || (event.keyCode === KeyCodes.NUMPAD_PLUS && !hasModifierKeys(event));
const isMinus = (event) => (event.key ? event.key === "-" : event.keyCode === KeyCodes.MINUS) || (event.keyCode === KeyCodes.NUMPAD_MINUS && !hasModifierKeys(event));
const isShow = (event) => {
    if (event.key) {
        return isF4(event) || isShowByArrows(event);
    }
    return (event.keyCode === KeyCodes.F4 && !hasModifierKeys(event)) || (event.keyCode === KeyCodes.ARROW_DOWN && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ true, /* Shift */ false));
};
const isF4 = (event) => {
    return event.key === "F4" && !hasModifierKeys(event);
};
const isF4Shift = (event) => (event.key ? event.key === "F4" : event.keyCode === KeyCodes.F4) && checkModifierKeys(event, false, false, true);
const isF6Next = (event) => ((event.key ? event.key === "F6" : event.keyCode === KeyCodes.F6) && checkModifierKeys(event, false, false, false))
    || ((event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event, true, true, false));
const isF6Previous = (event) => ((event.key ? event.key === "F6" : event.keyCode === KeyCodes.F6) && checkModifierKeys(event, false, false, true))
    || ((event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event, true, true, false));
const isF7 = (event) => (event.key ? event.key === "F7" : event.keyCode === KeyCodes.F7) && !hasModifierKeys(event);
const isShowByArrows = (event) => {
    return ((event.key === "ArrowDown" || event.key === "Down") || (event.key === "ArrowUp" || event.key === "Up")) && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ true, /* Shift */ false);
};
const isShift = (event) => event.key === "Shift" || event.keyCode === KeyCodes.SHIFT;
const isCtrlA = (event) => ((event.key === "A" || event.key === "a") || event.which === KeyCodes.A) && checkModifierKeys(event, true, false, false);
const isCtrlV = (event) => ((event.key === "V" || event.key === "v") || event.which === KeyCodes.V) && checkModifierKeys(event, true, false, false);
const isKeyA = (event) => ((event.key === "A" || event.key === "a") || event.which === KeyCodes.A) && checkModifierKeys(event, false, false, false);
const isKeyP = (event) => ((event.key === "P" || event.key === "p") || event.which === KeyCodes.P) && checkModifierKeys(event, false, false, false);
const hasModifierKeys = (event) => event.shiftKey || event.altKey || getCtrlKey(event);
const getCtrlKey = (event) => !!(event.metaKey || event.ctrlKey); // double negation doesn't have effect on boolean but ensures null and undefined are equivalent to false.
const checkModifierKeys = (event, bCtrlKey, bAltKey, bShiftKey) => event.shiftKey === bShiftKey && event.altKey === bAltKey && getCtrlKey(event) === bCtrlKey;
const isNumber = (event) => ((event.key ? "0123456789".indexOf(event.key) !== -1 : event.keyCode >= KeyCodes.DIGIT_0 && event.keyCode <= KeyCodes.DIGIT_9) && checkModifierKeys(event, false, false, false));
const isColon = (event) => ((event.key ? event.key === ":" : event.keyCode === KeyCodes.COLON) && checkModifierKeys(event, false, false, true));



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOrUpdateStyle: () => (/* binding */ createOrUpdateStyle),
/* harmony export */   createStyle: () => (/* binding */ createStyle),
/* harmony export */   hasStyle: () => (/* binding */ hasStyle),
/* harmony export */   removeStyle: () => (/* binding */ removeStyle),
/* harmony export */   updateStyle: () => (/* binding */ updateStyle)
/* harmony export */ });
/* harmony import */ var _util_createStyleInHead_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/createStyleInHead.js */ "./node_modules/@ui5/webcomponents-base/dist/util/createStyleInHead.js");
/* harmony import */ var _util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/createLinkInHead.js */ "./node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js");
/* harmony import */ var _CSP_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CSP.js */ "./node_modules/@ui5/webcomponents-base/dist/CSP.js");
/* harmony import */ var _Device_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Device.js */ "./node_modules/@ui5/webcomponents-base/dist/Device.js");
/* harmony import */ var _Runtimes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Runtimes.js */ "./node_modules/@ui5/webcomponents-base/dist/Runtimes.js");





const getStyleId = (name, value) => {
    return value ? `${name}|${value}` : name;
};
const shouldUpdate = (runtimeIndex) => {
    if (runtimeIndex === undefined) {
        return true;
    }
    return (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_4__.compareRuntimes)((0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentRuntimeIndex)(), parseInt(runtimeIndex)) === 1; // 1 means the current is newer, 0 means the same, -1 means the resource's runtime is newer
};
const createStyle = (data, name, value = "", theme) => {
    const content = typeof data === "string" ? data : data.content;
    const currentRuntimeIndex = (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentRuntimeIndex)();
    if ((0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldUseLinks)()) {
        const attributes = {};
        attributes[name] = value;
        if (theme) {
            attributes["data-ui5-runtime-index"] = currentRuntimeIndex;
            attributes["data-ui5-theme"] = theme;
        }
        const href = (0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(data.packageName, data.fileName);
        (0,_util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_1__["default"])(href, attributes);
    }
    else if (document.adoptedStyleSheets && !(0,_Device_js__WEBPACK_IMPORTED_MODULE_3__.isSafari)()) {
        const stylesheet = new CSSStyleSheet();
        stylesheet.replaceSync(content);
        stylesheet._ui5StyleId = getStyleId(name, value); // set an id so that we can find the style later
        if (theme) {
            stylesheet._ui5RuntimeIndex = currentRuntimeIndex;
            stylesheet._ui5Theme = theme;
        }
        document.adoptedStyleSheets = [...document.adoptedStyleSheets, stylesheet];
    }
    else {
        const attributes = {};
        attributes[name] = value;
        if (theme) {
            attributes["data-ui5-runtime-index"] = currentRuntimeIndex;
            attributes["data-ui5-theme"] = theme;
        }
        (0,_util_createStyleInHead_js__WEBPACK_IMPORTED_MODULE_0__["default"])(content, attributes);
    }
};
const updateStyle = (data, name, value = "", theme) => {
    const content = typeof data === "string" ? data : data.content;
    const currentRuntimeIndex = (0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentRuntimeIndex)();
    if ((0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldUseLinks)()) {
        const link = document.querySelector(`head>link[${name}="${value}"]`);
        const href = (0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(data.packageName, data.fileName);
        if (!theme) {
            link.href = href;
        }
        else {
            const linkRuntimeIndex = link.getAttribute("data-ui5-runtime-index") || undefined;
            const linkTheme = link.getAttribute("data-ui5-theme");
            if (linkTheme !== theme || shouldUpdate(linkRuntimeIndex)) {
                link.href = href;
                link.setAttribute("data-ui5-runtime-index", String(currentRuntimeIndex));
                link.setAttribute("data-ui5-theme", theme);
            }
        }
    }
    else if (document.adoptedStyleSheets && !(0,_Device_js__WEBPACK_IMPORTED_MODULE_3__.isSafari)()) {
        const stylesheet = document.adoptedStyleSheets.find(sh => sh._ui5StyleId === getStyleId(name, value));
        if (!stylesheet) {
            return;
        }
        if (!theme) {
            stylesheet.replaceSync(content || "");
        }
        else {
            const stylesheetRuntimeIndex = stylesheet._ui5RuntimeIndex;
            const stylesheetTheme = stylesheet._ui5Theme;
            if (stylesheetTheme !== theme || shouldUpdate(stylesheetRuntimeIndex)) {
                stylesheet.replaceSync(content || "");
                stylesheet._ui5RuntimeIndex = String(currentRuntimeIndex);
                stylesheet._ui5Theme = theme;
            }
        }
    }
    else {
        const style = document.querySelector(`head>style[${name}="${value}"]`);
        if (!style) {
            return;
        }
        if (!theme) {
            style.textContent = content || "";
        }
        else {
            const styleRuntimeIndex = style.getAttribute("data-ui5-runtime-index") || undefined;
            const styleTheme = style.getAttribute("data-ui5-theme");
            if (styleTheme !== theme || shouldUpdate(styleRuntimeIndex)) {
                style.textContent = content || "";
                style.setAttribute("data-ui5-runtime-index", String(currentRuntimeIndex));
                style.setAttribute("data-ui5-theme", theme);
            }
        }
    }
};
const hasStyle = (name, value = "") => {
    if ((0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldUseLinks)()) {
        return !!document.querySelector(`head>link[${name}="${value}"]`);
    }
    if (document.adoptedStyleSheets && !(0,_Device_js__WEBPACK_IMPORTED_MODULE_3__.isSafari)()) {
        return !!document.adoptedStyleSheets.find(sh => sh._ui5StyleId === getStyleId(name, value));
    }
    return !!document.querySelector(`head>style[${name}="${value}"]`);
};
const removeStyle = (name, value = "") => {
    if ((0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldUseLinks)()) {
        const linkElement = document.querySelector(`head>link[${name}="${value}"]`);
        linkElement?.parentElement?.removeChild(linkElement);
    }
    else if (document.adoptedStyleSheets && !(0,_Device_js__WEBPACK_IMPORTED_MODULE_3__.isSafari)()) {
        document.adoptedStyleSheets = document.adoptedStyleSheets.filter(sh => sh._ui5StyleId !== getStyleId(name, value));
    }
    else {
        const styleElement = document.querySelector(`head > style[${name}="${value}"]`);
        styleElement?.parentElement?.removeChild(styleElement);
    }
};
const createOrUpdateStyle = (data, name, value = "", theme) => {
    if (hasStyle(name, value)) {
        updateStyle(data, name, value, theme);
    }
    else {
        createStyle(data, name, value, theme);
    }
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/MarkedEvents.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/MarkedEvents.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEventMark: () => (/* binding */ getEventMark),
/* harmony export */   markEvent: () => (/* binding */ markEvent)
/* harmony export */ });
const markedEvents = new WeakMap();
/**
 * Marks the given event with random marker.
 */
const markEvent = (event, value) => {
    markedEvents.set(event, value);
};
/**
 * Returns the marker for the given event.
 */
const getEventMark = (event) => {
    return markedEvents.get(event);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/MediaRange.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/MediaRange.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const mediaRanges = new Map();
const DEAFULT_RANGE_SET = new Map();
DEAFULT_RANGE_SET.set("S", [0, 599]);
DEAFULT_RANGE_SET.set("M", [600, 1023]);
DEAFULT_RANGE_SET.set("L", [1024, 1439]);
DEAFULT_RANGE_SET.set("XL", [1440, Infinity]);
/**
 * Enumeration containing the names and settings of predefined screen width media query range sets.
 *
 * @namespace
 * @name MediaRange.RANGESETS
 * @public
 */
var RANGESETS;
(function (RANGESETS) {
    /**
     * A 4-step range set (S-M-L-XL).
     *
     * The ranges of this set are:
     * <ul>
     * <li><code>"S"</code>: For screens smaller than 600 pixels.</li>
     * <li><code>"M"</code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.</li>
     * <li><code>"L"</code>: For screens greater than or equal to 1024 pixels and smaller than 1440 pixels.</li>
     * <li><code>"XL"</code>: For screens greater than or equal to 1440 pixels.</li>
     * </ul>
     *
     * @name MediaRange.RANGESETS.RANGE_4STEPS
     * @public
     */
    RANGESETS["RANGE_4STEPS"] = "4Step";
})(RANGESETS || (RANGESETS = {}));
/**
 * Initializes a screen width media query range set.
 *
 * This initialization step makes the range set ready to be used for one of the other functions in namespace <code>MediaRange</code>.
 *
 * A range set can be defined as shown in the following example:
 * <pre>
 * MediaRange.initRangeSet("MyRangeSet", [200, 400], ["Small", "Medium", "Large"]);
 * </pre>
 * This example defines the following named ranges:
 * <ul>
 * <li><code>"Small"</code>: For screens smaller than 200 pixels.</li>
 * <li><code>"Medium"</code>: For screens greater than or equal to 200 pixels and smaller than 400 pixels.</li>
 * <li><code>"Large"</code>: For screens greater than or equal to 400 pixels.</li>
 * </ul>
 *
 * @param {string} name The name of the range set to be initialized.
 * The name must be a valid id and consist only of letters and numeric digits.
 * @param {Range} [range] The given range set.
 * @name MediaRange.initRangeSet
 */
const initRangeSet = (name, range) => {
    mediaRanges.set(name, range);
};
/**
 * Returns information about the current active range of the range set with the given name.
 *
 * If the optional parameter <code>width</code> is given, the active range will be determined for that width,
 * otherwise it is determined for the current window size.
 *
 * @param {string} name The name of the range set. The range set must be initialized beforehand ({@link MediaRange.initRangeSet})
 * @param {number} [width] An optional width, based on which the range should be determined;
 * If <code>width</code> is not provided, the window size will be used.
 * @returns {string} The name of the current active interval of the range set.
 *
 * @name MediaRange.getCurrentRange
 * @function
 * @public
 */
const getCurrentRange = (name, width = window.innerWidth) => {
    let rangeSet = mediaRanges.get(name);
    if (!rangeSet) {
        rangeSet = mediaRanges.get(RANGESETS.RANGE_4STEPS);
    }
    let currentRangeName;
    const effectiveWidth = Math.floor(width);
    rangeSet.forEach((value, key) => {
        if (effectiveWidth >= value[0] && effectiveWidth <= value[1]) {
            currentRangeName = key;
        }
    });
    return currentRangeName || [...rangeSet.keys()][0];
};
/**
 * API for screen width changes.
 *
 * @namespace
 * @name MediaRange
 */
const MediaRange = {
    RANGESETS,
    initRangeSet,
    getCurrentRange,
};
MediaRange.initRangeSet(MediaRange.RANGESETS.RANGE_4STEPS, DEAFULT_RANGE_SET);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MediaRange);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/Render.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/Render.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachBeforeComponentRender: () => (/* binding */ attachBeforeComponentRender),
/* harmony export */   cancelRender: () => (/* binding */ cancelRender),
/* harmony export */   detachBeforeComponentRender: () => (/* binding */ detachBeforeComponentRender),
/* harmony export */   reRenderAllUI5Elements: () => (/* binding */ reRenderAllUI5Elements),
/* harmony export */   renderDeferred: () => (/* binding */ renderDeferred),
/* harmony export */   renderFinished: () => (/* binding */ renderFinished),
/* harmony export */   renderImmediately: () => (/* binding */ renderImmediately)
/* harmony export */ });
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");
/* harmony import */ var _RenderQueue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RenderQueue.js */ "./node_modules/@ui5/webcomponents-base/dist/RenderQueue.js");
/* harmony import */ var _CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CustomElementsRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js");
/* harmony import */ var _locale_RTLAwareRegistry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale/RTLAwareRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/RTLAwareRegistry.js");




const registeredElements = new Set();
const eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
const invalidatedWebComponents = new _RenderQueue_js__WEBPACK_IMPORTED_MODULE_1__["default"](); // Queue for invalidated web components
let renderTaskPromise, renderTaskPromiseResolve;
let mutationObserverTimer;
let queuePromise;
/**
 * Schedules a render task (if not already scheduled) to render the component
 *
 * @param webComponent
 * @returns {Promise}
 */
const renderDeferred = async (webComponent) => {
    // Enqueue the web component
    invalidatedWebComponents.add(webComponent);
    // Schedule a rendering task
    await scheduleRenderTask();
};
/**
 * Renders a component synchronously and adds it to the registry of rendered components
 *
 * @param webComponent
 */
const renderImmediately = (webComponent) => {
    eventProvider.fireEvent("beforeComponentRender", webComponent);
    registeredElements.add(webComponent);
    webComponent._render();
};
/**
 * Cancels the rendering of a component, if awaiting to be rendered, and removes it from the registry of rendered components
 *
 * @param webComponent
 */
const cancelRender = (webComponent) => {
    invalidatedWebComponents.remove(webComponent);
    registeredElements.delete(webComponent);
};
/**
 * Schedules a rendering task, if not scheduled already
 */
const scheduleRenderTask = async () => {
    if (!queuePromise) {
        queuePromise = new Promise(resolve => {
            window.requestAnimationFrame(() => {
                // Render all components in the queue
                // console.log(`--------------------RENDER TASK START------------------------------`); // eslint-disable-line
                invalidatedWebComponents.process(renderImmediately);
                // console.log(`--------------------RENDER TASK END------------------------------`); // eslint-disable-line
                // Resolve the promise so that callers of renderDeferred can continue
                queuePromise = null;
                resolve();
                // Wait for Mutation observer before the render task is considered finished
                if (!mutationObserverTimer) {
                    mutationObserverTimer = setTimeout(() => {
                        mutationObserverTimer = undefined;
                        if (invalidatedWebComponents.isEmpty()) {
                            _resolveTaskPromise();
                        }
                    }, 200);
                }
            });
        });
    }
    await queuePromise;
};
/**
 * return a promise that will be resolved once all invalidated web components are rendered
 */
const whenDOMUpdated = () => {
    if (renderTaskPromise) {
        return renderTaskPromise;
    }
    renderTaskPromise = new Promise(resolve => {
        renderTaskPromiseResolve = resolve;
        window.requestAnimationFrame(() => {
            if (invalidatedWebComponents.isEmpty()) {
                renderTaskPromise = undefined;
                resolve();
            }
        });
    });
    return renderTaskPromise;
};
const whenAllCustomElementsAreDefined = () => {
    const definedPromises = (0,_CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_2__.getAllRegisteredTags)().map(tag => customElements.whenDefined(tag));
    return Promise.all(definedPromises);
};
const renderFinished = async () => {
    await whenAllCustomElementsAreDefined();
    await whenDOMUpdated();
};
const _resolveTaskPromise = () => {
    if (!invalidatedWebComponents.isEmpty()) {
        // More updates are pending. Resolve will be called again
        return;
    }
    if (renderTaskPromiseResolve) {
        renderTaskPromiseResolve();
        renderTaskPromiseResolve = undefined;
        renderTaskPromise = undefined;
    }
};
/**
 * Re-renders all UI5 Elements on the page, with the option to specify filters to rerender only some components.
 *
 * Usage:
 * reRenderAllUI5Elements() -> re-renders all components
 * reRenderAllUI5Elements({tag: "ui5-button"}) -> re-renders only instances of ui5-button
 * reRenderAllUI5Elements({rtlAware: true}) -> re-renders only rtlAware components
 * reRenderAllUI5Elements({languageAware: true}) -> re-renders only languageAware components
 * reRenderAllUI5Elements({themeAware: true}) -> re-renders only themeAware components
 * reRenderAllUI5Elements({rtlAware: true, languageAware: true}) -> re-renders components that are rtlAware or languageAware
 * etc...
 *
 * @public
 * @param {object|undefined} filters - Object with keys that can be "rtlAware" or "languageAware"
 * @returns {Promise<void>}
 */
const reRenderAllUI5Elements = async (filters) => {
    registeredElements.forEach((element) => {
        const ctor = element.constructor;
        const tag = ctor.getMetadata().getTag();
        const rtlAware = (0,_locale_RTLAwareRegistry_js__WEBPACK_IMPORTED_MODULE_3__.isRtlAware)(ctor);
        const languageAware = ctor.getMetadata().isLanguageAware();
        const themeAware = ctor.getMetadata().isThemeAware();
        if (!filters || (filters.tag === tag) || (filters.rtlAware && rtlAware) || (filters.languageAware && languageAware) || (filters.themeAware && themeAware)) {
            renderDeferred(element);
        }
    });
    await renderFinished();
};
const attachBeforeComponentRender = (listener) => {
    eventProvider.attachEvent("beforeComponentRender", listener);
};
const detachBeforeComponentRender = (listener) => {
    eventProvider.detachEvent("beforeComponentRender", listener);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/RenderQueue.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/RenderQueue.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const MAX_PROCESS_COUNT = 10;
class RenderQueue {
    constructor() {
        this.list = []; // Used to store the web components in order
        this.lookup = new Set(); // Used for faster search
    }
    add(webComponent) {
        if (this.lookup.has(webComponent)) {
            return;
        }
        this.list.push(webComponent);
        this.lookup.add(webComponent);
    }
    remove(webComponent) {
        if (!this.lookup.has(webComponent)) {
            return;
        }
        this.list = this.list.filter(item => item !== webComponent);
        this.lookup.delete(webComponent);
    }
    shift() {
        const webComponent = this.list.shift();
        if (webComponent) {
            this.lookup.delete(webComponent);
            return webComponent;
        }
    }
    isEmpty() {
        return this.list.length === 0;
    }
    isAdded(webComponent) {
        return this.lookup.has(webComponent);
    }
    /**
     * Processes the whole queue by executing the callback on each component,
     * while also imposing restrictions on how many times a component may be processed.
     *
     * @param callback - function with one argument (the web component to be processed)
     */
    process(callback) {
        let webComponent;
        const stats = new Map();
        webComponent = this.shift();
        while (webComponent) {
            const timesProcessed = stats.get(webComponent) || 0;
            if (timesProcessed > MAX_PROCESS_COUNT) {
                throw new Error(`Web component processed too many times this task, max allowed is: ${MAX_PROCESS_COUNT}`);
            }
            callback(webComponent);
            stats.set(webComponent, timesProcessed + 1);
            webComponent = this.shift();
        }
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RenderQueue);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/Runtimes.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/Runtimes.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compareRuntimes: () => (/* binding */ compareRuntimes),
/* harmony export */   getAllRuntimes: () => (/* binding */ getAllRuntimes),
/* harmony export */   getCurrentRuntimeIndex: () => (/* binding */ getCurrentRuntimeIndex),
/* harmony export */   registerCurrentRuntime: () => (/* binding */ registerCurrentRuntime),
/* harmony export */   setRuntimeAlias: () => (/* binding */ setRuntimeAlias)
/* harmony export */ });
/* harmony import */ var _generated_VersionInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/VersionInfo.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/VersionInfo.js");
/* harmony import */ var _getSharedResource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSharedResource.js */ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js");


let currentRuntimeIndex;
let currentRuntimeAlias = "";
const compareCache = new Map();
/**
 * Central registry where all runtimes register themselves by pushing an object.
 * The index in the registry servers as an ID for the runtime.
 * @type {*}
 */
const Runtimes = (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_1__["default"])("Runtimes", []);
/**
 * Registers the current runtime in the shared runtimes resource registry
 */
const registerCurrentRuntime = () => {
    if (currentRuntimeIndex === undefined) {
        currentRuntimeIndex = Runtimes.length;
        const versionInfo = _generated_VersionInfo_js__WEBPACK_IMPORTED_MODULE_0__["default"];
        Runtimes.push({
            ...versionInfo,
            alias: currentRuntimeAlias,
            description: `Runtime ${currentRuntimeIndex} - ver ${versionInfo.version}${currentRuntimeAlias ? ` (${currentRuntimeAlias})` : ""}`,
        });
    }
};
/**
 * Returns the index of the current runtime's object in the shared runtimes resource registry
 * @returns {*}
 */
const getCurrentRuntimeIndex = () => {
    return currentRuntimeIndex;
};
/**
 * Compares two runtimes and returns 1 if the first is of a bigger version, -1 if the second is of a bigger version, and 0 if equal
 * @param index1 The index of the first runtime to compare
 * @param index2 The index of the second runtime to compare
 * @returns {number}
 */
const compareRuntimes = (index1, index2) => {
    const cacheIndex = `${index1},${index2}`;
    if (compareCache.has(cacheIndex)) {
        return compareCache.get(cacheIndex);
    }
    const runtime1 = Runtimes[index1];
    const runtime2 = Runtimes[index2];
    if (!runtime1 || !runtime2) {
        throw new Error("Invalid runtime index supplied");
    }
    // If any of the two is a next version, bigger buildTime wins
    if (runtime1.isNext || runtime2.isNext) {
        return runtime1.buildTime - runtime2.buildTime;
    }
    // If major versions differ, bigger one wins
    const majorDiff = runtime1.major - runtime2.major;
    if (majorDiff) {
        return majorDiff;
    }
    // If minor versions differ, bigger one wins
    const minorDiff = runtime1.minor - runtime2.minor;
    if (minorDiff) {
        return minorDiff;
    }
    // If patch versions differ, bigger one wins
    const patchDiff = runtime1.patch - runtime2.patch;
    if (patchDiff) {
        return patchDiff;
    }
    // Bigger suffix wins, f.e. rc10 > rc9
    // Important: suffix is alphanumeric, must use natural compare
    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: "base" });
    const result = collator.compare(runtime1.suffix, runtime2.suffix);
    compareCache.set(cacheIndex, result);
    return result;
};
/**
 * Set an alias for the the current app/library/microfrontend which will appear in debug messages and console warnings
 * @param alias
 */
const setRuntimeAlias = (alias) => {
    currentRuntimeAlias = alias;
};
const getAllRuntimes = () => {
    return Runtimes;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/StaticArea.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/StaticArea.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class StaticArea extends HTMLElement {
}
if (!customElements.get("ui5-static-area")) {
    customElements.define("ui5-static-area", StaticArea);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StaticArea);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _StaticArea_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StaticArea.js */ "./node_modules/@ui5/webcomponents-base/dist/StaticArea.js");
/* harmony import */ var _updateShadowRoot_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./updateShadowRoot.js */ "./node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js");
/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _util_getEffectiveContentDensity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/getEffectiveContentDensity.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js");
/* harmony import */ var _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CustomElementsScopeUtils.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js");
/* harmony import */ var _locale_getEffectiveDir_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./locale/getEffectiveDir.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js");






const pureTagName = "ui5-static-area-item";
const popupIntegrationAttr = "data-sap-ui-integration-popup-content";
/**
 *
 * @class
 * @author SAP SE
 * @private
 */
class StaticAreaItem extends HTMLElement {
    constructor() {
        super();
        this._rendered = false;
        this.attachShadow({ mode: "open" });
    }
    /**
     * @param {UI5Element} ownerElement the UI5Element instance that owns this static area item
     */
    setOwnerElement(ownerElement) {
        this.ownerElement = ownerElement;
        this.classList.add(this.ownerElement._id); // used for getting the popover in the tests
        if (this.ownerElement.hasAttribute("data-ui5-static-stable")) {
            this.setAttribute("data-ui5-stable", this.ownerElement.getAttribute("data-ui5-static-stable")); // stable selector
        }
    }
    /**
     * Updates the shadow root of the static area item with the latest state, if rendered
     */
    update() {
        if (this._rendered) {
            this.updateAdditionalProperties();
            (0,_updateShadowRoot_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.ownerElement, true);
        }
    }
    updateAdditionalProperties() {
        this._updateAdditionalAttrs();
        this._updateContentDensity();
        this._updateDirection();
    }
    /**
     * Sets the correct content density based on the owner element's state
     * @private
     */
    _updateContentDensity() {
        if ((0,_util_getEffectiveContentDensity_js__WEBPACK_IMPORTED_MODULE_3__["default"])(this.ownerElement) === "compact") {
            this.classList.add("sapUiSizeCompact");
            this.classList.add("ui5-content-density-compact");
        }
        else {
            this.classList.remove("sapUiSizeCompact");
            this.classList.remove("ui5-content-density-compact");
        }
    }
    _updateDirection() {
        if (this.ownerElement) {
            const dir = (0,_locale_getEffectiveDir_js__WEBPACK_IMPORTED_MODULE_5__["default"])(this.ownerElement);
            if (dir) {
                this.setAttribute("dir", dir);
            }
            else {
                this.removeAttribute("dir");
            }
        }
    }
    _updateAdditionalAttrs() {
        this.setAttribute(pureTagName, "");
        this.setAttribute(popupIntegrationAttr, "");
    }
    /**
     * @protected
     * Returns reference to the DOM element where the current fragment is added.
     */
    async getDomRef() {
        this.updateAdditionalProperties();
        if (!this._rendered) {
            this._rendered = true;
            (0,_updateShadowRoot_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.ownerElement, true);
        }
        await (0,_Render_js__WEBPACK_IMPORTED_MODULE_2__.renderFinished)(); // Wait for the content of the ui5-static-area-item to be rendered
        return this.shadowRoot;
    }
    static getTag() {
        const suffix = (0,_CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_4__.getEffectiveScopingSuffixForTag)(pureTagName);
        if (!suffix) {
            return pureTagName;
        }
        return `${pureTagName}-${suffix}`;
    }
    static createInstance() {
        if (!customElements.get(StaticAreaItem.getTag())) {
            customElements.define(StaticAreaItem.getTag(), StaticAreaItem);
        }
        return document.createElement(this.getTag());
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StaticAreaItem);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/SystemCSSVars.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/SystemCSSVars.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ManagedStyles.js */ "./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js");
/* harmony import */ var _generated_css_SystemCSSVars_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/css/SystemCSSVars.css.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/css/SystemCSSVars.css.js");


const insertSystemCSSVars = () => {
    if (!(0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.hasStyle)("data-ui5-system-css-vars")) {
        (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_0__.createStyle)(_generated_css_SystemCSSVars_css_js__WEBPACK_IMPORTED_MODULE_1__["default"], "data-ui5-system-css-vars");
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (insertSystemCSSVars);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/UI5Element.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   instanceOfUI5Element: () => (/* binding */ instanceOfUI5Element)
/* harmony export */ });
/* harmony import */ var _thirdparty_merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./thirdparty/merge.js */ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/merge.js");
/* harmony import */ var _Boot_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Boot.js */ "./node_modules/@ui5/webcomponents-base/dist/Boot.js");
/* harmony import */ var _UI5ElementMetadata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UI5ElementMetadata.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js");
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");
/* harmony import */ var _util_getSingletonElementInstance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/getSingletonElementInstance.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getSingletonElementInstance.js");
/* harmony import */ var _StaticAreaItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StaticAreaItem.js */ "./node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js");
/* harmony import */ var _updateShadowRoot_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./updateShadowRoot.js */ "./node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js");
/* harmony import */ var _IgnoreCustomElements_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./IgnoreCustomElements.js */ "./node_modules/@ui5/webcomponents-base/dist/IgnoreCustomElements.js");
/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CustomElementsRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsRegistry.js");
/* harmony import */ var _DOMObserver_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DOMObserver.js */ "./node_modules/@ui5/webcomponents-base/dist/DOMObserver.js");
/* harmony import */ var _config_NoConflict_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./config/NoConflict.js */ "./node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js");
/* harmony import */ var _locale_getEffectiveDir_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./locale/getEffectiveDir.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js");
/* harmony import */ var _util_StringHelper_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util/StringHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js");
/* harmony import */ var _util_isValidPropertyName_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./util/isValidPropertyName.js */ "./node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js");
/* harmony import */ var _util_SlotsHelper_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./util/SlotsHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js");
/* harmony import */ var _util_arraysAreEqual_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./util/arraysAreEqual.js */ "./node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js");
/* harmony import */ var _locale_RTLAwareRegistry_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./locale/RTLAwareRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/RTLAwareRegistry.js");
/* harmony import */ var _theming_preloadLinks_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./theming/preloadLinks.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/preloadLinks.js");
/* harmony import */ var _renderer_executeTemplate_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./renderer/executeTemplate.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js");




















let autoId = 0;
const elementTimeouts = new Map();
const uniqueDependenciesCache = new Map();
/**
 * Triggers re-rendering of a UI5Element instance due to state change.
 * @param {ChangeInfo} changeInfo An object with information about the change that caused invalidation.
 * @private
 */
function _invalidate(changeInfo) {
    // Invalidation should be suppressed: 1) before the component is rendered for the first time 2) and during the execution of onBeforeRendering
    // This is necessary not only as an optimization, but also to avoid infinite loops on invalidation between children and parents (when invalidateOnChildChange is used)
    if (this._suppressInvalidation) {
        return;
    }
    // Call the onInvalidation hook
    this.onInvalidation(changeInfo);
    this._changedState.push(changeInfo);
    (0,_Render_js__WEBPACK_IMPORTED_MODULE_8__.renderDeferred)(this);
    this._eventProvider.fireEvent("invalidate", { ...changeInfo, target: this });
}
/**
 * Base class for all UI5 Web Components
 *
 * @class
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.base.UI5Element
 * @extends HTMLElement
 * @public
 */
class UI5Element extends HTMLElement {
    constructor() {
        super();
        const ctor = this.constructor;
        this._changedState = []; // Filled on each invalidation, cleared on re-render (used for debugging)
        this._suppressInvalidation = true; // A flag telling whether all invalidations should be ignored. Initialized with "true" because a UI5Element can not be invalidated until it is rendered for the first time
        this._inDOM = false; // A flag telling whether the UI5Element is currently in the DOM tree of the document or not
        this._fullyConnected = false; // A flag telling whether the UI5Element's onEnterDOM hook was called (since it's possible to have the element removed from DOM before that)
        this._childChangeListeners = new Map(); // used to store lazy listeners per slot for the child change event of every child inside that slot
        this._slotChangeListeners = new Map(); // used to store lazy listeners per slot for the slotchange event of all slot children inside that slot
        this._eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_3__["default"](); // used by parent components for listening to changes to child components
        let deferredResolve;
        this._domRefReadyPromise = new Promise(resolve => {
            deferredResolve = resolve;
        });
        this._domRefReadyPromise._deferredResolve = deferredResolve;
        this._doNotSyncAttributes = new Set(); // attributes that are excluded from attributeChangedCallback synchronization
        this._state = { ...ctor.getMetadata().getInitialState() };
        this._upgradeAllProperties();
        if (ctor._needsShadowDOM()) {
            this.attachShadow({ mode: "open" });
        }
    }
    /**
     * Returns a unique ID for this UI5 Element
     *
     * @deprecated - This property is not guaranteed in future releases
     * @protected
     */
    get _id() {
        if (!this.__id) {
            this.__id = `ui5wc_${++autoId}`;
        }
        return this.__id;
    }
    render() {
        const template = this.constructor.template;
        return (0,_renderer_executeTemplate_js__WEBPACK_IMPORTED_MODULE_19__["default"])(template, this);
    }
    renderStatic() {
        const template = this.constructor.staticAreaTemplate;
        return (0,_renderer_executeTemplate_js__WEBPACK_IMPORTED_MODULE_19__["default"])(template, this);
    }
    /**
     * Do not call this method from derivatives of UI5Element, use "onEnterDOM" only
     * @private
     */
    async connectedCallback() {
        const ctor = this.constructor;
        this.setAttribute(ctor.getMetadata().getPureTag(), "");
        if (ctor.getMetadata().supportsF6FastNavigation()) {
            this.setAttribute("data-sap-ui-fastnavgroup", "true");
        }
        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();
        this._inDOM = true;
        if (slotsAreManaged) {
            // always register the observer before yielding control to the main thread (await)
            this._startObservingDOMChildren();
            await this._processChildren();
        }
        if (!this._inDOM) { // Component removed from DOM while _processChildren was running
            return;
        }
        (0,_Render_js__WEBPACK_IMPORTED_MODULE_8__.renderImmediately)(this);
        this._domRefReadyPromise._deferredResolve();
        this._fullyConnected = true;
        this.onEnterDOM();
    }
    /**
     * Do not call this method from derivatives of UI5Element, use "onExitDOM" only
     * @private
     */
    disconnectedCallback() {
        const ctor = this.constructor;
        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();
        this._inDOM = false;
        if (slotsAreManaged) {
            this._stopObservingDOMChildren();
        }
        if (this._fullyConnected) {
            this.onExitDOM();
            this._fullyConnected = false;
        }
        if (this.staticAreaItem && this.staticAreaItem.parentElement) {
            this.staticAreaItem.parentElement.removeChild(this.staticAreaItem);
        }
        (0,_Render_js__WEBPACK_IMPORTED_MODULE_8__.cancelRender)(this);
    }
    /**
     * Called every time before the component renders.
     * @public
     */
    onBeforeRendering() { }
    /**
     * Called every time after the component renders.
     * @public
     */
    onAfterRendering() { }
    /**
     * Called on connectedCallback - added to the DOM.
     * @public
     */
    onEnterDOM() { }
    /**
     * Called on disconnectedCallback - removed from the DOM.
     * @public
     */
    onExitDOM() { }
    /**
     * @private
     */
    _startObservingDOMChildren() {
        const ctor = this.constructor;
        const shouldObserveChildren = ctor.getMetadata().hasSlots();
        if (!shouldObserveChildren) {
            return;
        }
        const canSlotText = ctor.getMetadata().canSlotText();
        const mutationObserverOptions = {
            childList: true,
            subtree: canSlotText,
            characterData: canSlotText,
        };
        (0,_DOMObserver_js__WEBPACK_IMPORTED_MODULE_10__.observeDOMNode)(this, this._processChildren.bind(this), mutationObserverOptions);
    }
    /**
     * @private
     */
    _stopObservingDOMChildren() {
        (0,_DOMObserver_js__WEBPACK_IMPORTED_MODULE_10__.unobserveDOMNode)(this);
    }
    /**
     * Note: this method is also manually called by "compatibility/patchNodeValue.js"
     * @private
     */
    async _processChildren() {
        const hasSlots = this.constructor.getMetadata().hasSlots();
        if (hasSlots) {
            await this._updateSlots();
        }
    }
    /**
     * @private
     */
    async _updateSlots() {
        const ctor = this.constructor;
        const slotsMap = ctor.getMetadata().getSlots();
        const canSlotText = ctor.getMetadata().canSlotText();
        const domChildren = Array.from(canSlotText ? this.childNodes : this.children);
        const slotsCachedContentMap = new Map(); // Store here the content of each slot before the mutation occurred
        const propertyNameToSlotMap = new Map(); // Used for reverse lookup to determine to which slot the property name corresponds
        // Init the _state object based on the supported slots and store the previous values
        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line
            const propertyName = slotData.propertyName || slotName;
            propertyNameToSlotMap.set(propertyName, slotName);
            slotsCachedContentMap.set(propertyName, [...this._state[propertyName]]);
            this._clearSlot(slotName, slotData);
        }
        const autoIncrementMap = new Map();
        const slottedChildrenMap = new Map();
        const allChildrenUpgraded = domChildren.map(async (child, idx) => {
            // Determine the type of the child (mainly by the slot attribute)
            const slotName = (0,_util_SlotsHelper_js__WEBPACK_IMPORTED_MODULE_15__.getSlotName)(child);
            const slotData = slotsMap[slotName];
            // Check if the slotName is supported
            if (slotData === undefined) {
                if (slotName !== "default") {
                    const validValues = Object.keys(slotsMap).join(", ");
                    console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line
                }
                return;
            }
            // For children that need individual slots, calculate them
            if (slotData.individualSlots) {
                const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;
                autoIncrementMap.set(slotName, nextIndex);
                child._individualSlot = `${slotName}-${nextIndex}`;
            }
            // Await for not-yet-defined custom elements
            if (child instanceof HTMLElement) {
                const localName = child.localName;
                const shouldWaitForCustomElement = localName.includes("-") && !(0,_IgnoreCustomElements_js__WEBPACK_IMPORTED_MODULE_7__.shouldIgnoreCustomElement)(localName);
                if (shouldWaitForCustomElement) {
                    const isDefined = window.customElements.get(localName);
                    if (!isDefined) {
                        const whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet
                        let timeoutPromise = elementTimeouts.get(localName);
                        if (!timeoutPromise) {
                            timeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));
                            elementTimeouts.set(localName, timeoutPromise);
                        }
                        await Promise.race([whenDefinedPromise, timeoutPromise]);
                    }
                    window.customElements.upgrade(child);
                }
            }
            child = ctor.getMetadata().constructor.validateSlotValue(child, slotData);
            // Listen for any invalidation on the child if invalidateOnChildChange is true or an object (ignore when false or not set)
            if (instanceOfUI5Element(child) && slotData.invalidateOnChildChange) {
                const childChangeListener = this._getChildChangeListener(slotName);
                if (childChangeListener) {
                    child.attachInvalidate.call(child, childChangeListener);
                }
            }
            // Listen for the slotchange event if the child is a slot itself
            if (child instanceof HTMLSlotElement) {
                this._attachSlotChange(child, slotName);
            }
            const propertyName = slotData.propertyName || slotName;
            if (slottedChildrenMap.has(propertyName)) {
                slottedChildrenMap.get(propertyName).push({ child, idx });
            }
            else {
                slottedChildrenMap.set(propertyName, [{ child, idx }]);
            }
        });
        await Promise.all(allChildrenUpgraded);
        // Distribute the child in the _state object, keeping the Light DOM order,
        // not the order elements are defined.
        slottedChildrenMap.forEach((children, propertyName) => {
            this._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);
        });
        // Compare the content of each slot with the cached values and invalidate for the ones that changed
        let invalidated = false;
        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line
            const propertyName = slotData.propertyName || slotName;
            if (!(0,_util_arraysAreEqual_js__WEBPACK_IMPORTED_MODULE_16__["default"])(slotsCachedContentMap.get(propertyName), this._state[propertyName])) {
                _invalidate.call(this, {
                    type: "slot",
                    name: propertyNameToSlotMap.get(propertyName),
                    reason: "children",
                });
                invalidated = true;
            }
        }
        // If none of the slots had an invalidation due to changes to immediate children,
        // the change is considered to be text content of the default slot
        if (!invalidated) {
            _invalidate.call(this, {
                type: "slot",
                name: "default",
                reason: "textcontent",
            });
        }
    }
    /**
     * Removes all children from the slot and detaches listeners, if any
     * @private
     */
    _clearSlot(slotName, slotData) {
        const propertyName = slotData.propertyName || slotName;
        const children = this._state[propertyName];
        children.forEach(child => {
            if (instanceOfUI5Element(child)) {
                const childChangeListener = this._getChildChangeListener(slotName);
                if (childChangeListener) {
                    child.detachInvalidate.call(child, childChangeListener);
                }
            }
            if (child instanceof HTMLSlotElement) {
                this._detachSlotChange(child, slotName);
            }
        });
        this._state[propertyName] = [];
    }
    /**
     * Attach a callback that will be executed whenever the component is invalidated
     *
     * @param {InvalidationInfo} callback
     * @public
     */
    attachInvalidate(callback) {
        this._eventProvider.attachEvent("invalidate", callback);
    }
    /**
     * Detach the callback that is executed whenever the component is invalidated
     *
     * @param {InvalidationInfo} callback
     * @public
     */
    detachInvalidate(callback) {
        this._eventProvider.detachEvent("invalidate", callback);
    }
    /**
     * Callback that is executed whenever a monitored child changes its state
     *
     * @param {sting} slotName the slot in which a child was invalidated
     * @param { ChangeInfo } childChangeInfo the changeInfo object for the child in the given slot
     * @private
     */
    _onChildChange(slotName, childChangeInfo) {
        if (!this.constructor.getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {
            return;
        }
        // The component should be invalidated as this type of change on the child is listened for
        // However, no matter what changed on the child (property/slot), the invalidation is registered as "type=slot" for the component itself
        _invalidate.call(this, {
            type: "slot",
            name: slotName,
            reason: "childchange",
            child: childChangeInfo.target,
        });
    }
    /**
     * Do not override this method in derivatives of UI5Element
     * @private
     */
    attributeChangedCallback(name, oldValue, newValue) {
        let newPropertyValue;
        if (this._doNotSyncAttributes.has(name)) { // This attribute is mutated internally, not by the user
            return;
        }
        const properties = this.constructor.getMetadata().getProperties();
        const realName = name.replace(/^ui5-/, "");
        const nameInCamelCase = (0,_util_StringHelper_js__WEBPACK_IMPORTED_MODULE_13__.kebabToCamelCase)(realName);
        if (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line
            const propData = properties[nameInCamelCase];
            const propertyType = propData.type;
            let propertyValidator = propData.validator;
            if (propertyType && propertyType.isDataTypeClass) {
                propertyValidator = propertyType;
            }
            if (propertyValidator) {
                newPropertyValue = propertyValidator.attributeToProperty(newValue);
            }
            else if (propertyType === Boolean) {
                newPropertyValue = newValue !== null;
            }
            else {
                newPropertyValue = newValue;
            }
            this[nameInCamelCase] = newPropertyValue;
        }
    }
    /**
     * @private
     */
    _updateAttribute(name, newValue) {
        const ctor = this.constructor;
        if (!ctor.getMetadata().hasAttribute(name)) {
            return;
        }
        const properties = ctor.getMetadata().getProperties();
        const propData = properties[name];
        const propertyType = propData.type;
        let propertyValidator = propData.validator;
        const attrName = (0,_util_StringHelper_js__WEBPACK_IMPORTED_MODULE_13__.camelToKebabCase)(name);
        const attrValue = this.getAttribute(attrName);
        if (propertyType && propertyType.isDataTypeClass) {
            propertyValidator = propertyType;
        }
        if (propertyValidator) {
            const newAttrValue = propertyValidator.propertyToAttribute(newValue);
            if (newAttrValue === null) { // null means there must be no attribute for the current value of the property
                this._doNotSyncAttributes.add(attrName); // skip the attributeChangedCallback call for this attribute
                this.removeAttribute(attrName); // remove the attribute safely (will not trigger synchronization to the property value due to the above line)
                this._doNotSyncAttributes.delete(attrName); // enable synchronization again for this attribute
            }
            else {
                this.setAttribute(attrName, newAttrValue);
            }
        }
        else if (propertyType === Boolean) {
            if (newValue === true && attrValue === null) {
                this.setAttribute(attrName, "");
            }
            else if (newValue === false && attrValue !== null) {
                this.removeAttribute(attrName);
            }
        }
        else if (typeof newValue !== "object") {
            if (attrValue !== newValue) {
                this.setAttribute(attrName, newValue);
            }
        } // else { return; } // old object handling
    }
    /**
     * @private
     */
    _upgradeProperty(propertyName) {
        if (this.hasOwnProperty(propertyName)) { // eslint-disable-line
            const value = this[propertyName];
            delete this[propertyName];
            this[propertyName] = value;
        }
    }
    /**
     * @private
     */
    _upgradeAllProperties() {
        const allProps = this.constructor.getMetadata().getPropertiesList();
        allProps.forEach(this._upgradeProperty.bind(this));
    }
    /**
     * Returns a singleton event listener for the "change" event of a child in a given slot
     *
     * @param slotName the name of the slot, where the child is
     * @returns {ChildChangeListener}
     * @private
     */
    _getChildChangeListener(slotName) {
        if (!this._childChangeListeners.has(slotName)) {
            this._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));
        }
        return this._childChangeListeners.get(slotName);
    }
    /**
     * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot
     *
     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
     * @returns {SlotChangeListener}
     * @private
     */
    _getSlotChangeListener(slotName) {
        if (!this._slotChangeListeners.has(slotName)) {
            this._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));
        }
        return this._slotChangeListeners.get(slotName);
    }
    /**
     * @private
     */
    _attachSlotChange(child, slotName) {
        const slotChangeListener = this._getSlotChangeListener(slotName);
        if (slotChangeListener) {
            child.addEventListener("slotchange", slotChangeListener);
        }
    }
    /**
     * @private
     */
    _detachSlotChange(child, slotName) {
        child.removeEventListener("slotchange", this._getSlotChangeListener(slotName));
    }
    /**
     * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component
     *
     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
     * @private
     */
    _onSlotChange(slotName) {
        _invalidate.call(this, {
            type: "slot",
            name: slotName,
            reason: "slotchange",
        });
    }
    /**
     * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)
     *
     * @param  changeInfo An object with information about the change that caused invalidation.
     * The object can have the following properties:
     *  - type: (property|slot) tells what caused the invalidation
     *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute
     *   2) slot: a slotted node(nodes) changed in one of several ways (see "reason")
     *
     *  - name: the name of the property or slot that caused the invalidation
     *
     *  - reason: (children|textcontent|childchange|slotchange) relevant only for type="slot" only and tells exactly what changed in the slot
     *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot
     *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of "type: Node"
     *   3) slotchange: a slot element, slotted inside that slot had its "slotchange" event listener called. This practically means that transitively slotted children changed.
     *      Can only trigger if the child of a slot is a slot element itself.
     *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.
     *      Can only trigger for slots with "invalidateOnChildChange" metadata descriptor
     *
     *  - newValue: the new value of the property (for type="property" only)
     *
     *  - oldValue: the old value of the property (for type="property" only)
     *
     *  - child the child that was changed (for type="slot" and reason="childchange" only)
     *
     * @public
     */
    onInvalidation(changeInfo) { } // eslint-disable-line
    /**
     * Do not call this method directly, only intended to be called by js
     * @protected
     */
    _render() {
        const ctor = this.constructor;
        const hasIndividualSlots = ctor.getMetadata().hasIndividualSlots();
        // suppress invalidation to prevent state changes scheduling another rendering
        this._suppressInvalidation = true;
        this.onBeforeRendering();
        // Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered
        if (this._onComponentStateFinalized) {
            this._onComponentStateFinalized();
        }
        // resume normal invalidation handling
        this._suppressInvalidation = false;
        // Update the shadow root with the render result
        /*
        if (this._changedState.length) {
            let element = this.localName;
            if (this.id) {
                element = `${element}#${this.id}`;
            }
            console.log("Re-rendering:", element, this._changedState.map(x => { // eslint-disable-line
                let res = `${x.type}`;
                if (x.reason) {
                    res = `${res}(${x.reason})`;
                }
                res = `${res}: ${x.name}`;
                if (x.type === "property") {
                    res = `${res} ${JSON.stringify(x.oldValue)} => ${JSON.stringify(x.newValue)}`;
                }

                return res;
            }));
        }
        */
        this._changedState = [];
        // Update shadow root and static area item
        if (ctor._needsShadowDOM()) {
            (0,_updateShadowRoot_js__WEBPACK_IMPORTED_MODULE_6__["default"])(this);
        }
        if (this.staticAreaItem) {
            this.staticAreaItem.update();
        }
        // Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM
        if (hasIndividualSlots) {
            this._assignIndividualSlotsToChildren();
        }
        // Call the onAfterRendering hook
        this.onAfterRendering();
    }
    /**
     * @private
     */
    _assignIndividualSlotsToChildren() {
        const domChildren = Array.from(this.children);
        domChildren.forEach((child) => {
            if (child._individualSlot) {
                child.setAttribute("slot", child._individualSlot);
            }
        });
    }
    /**
     * @private
     */
    _waitForDomRef() {
        return this._domRefReadyPromise;
    }
    /**
     * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template
     * *Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option
     * Use this method instead of "this.shadowRoot" to read the Shadow DOM, if ever necessary
     *
     * @public
     */
    getDomRef() {
        // If a component set _getRealDomRef to its children, use the return value of this function
        if (typeof this._getRealDomRef === "function") {
            return this._getRealDomRef();
        }
        if (!this.shadowRoot || this.shadowRoot.children.length === 0) {
            return;
        }
        const children = [...this.shadowRoot.children].filter(child => !["link", "style"].includes(child.localName));
        if (children.length !== 1) {
            console.warn(`The shadow DOM for ${this.constructor.getMetadata().getTag()} does not have a top level element, the getDomRef() method might not work as expected`); // eslint-disable-line
        }
        return children[0];
    }
    /**
     * Returns the DOM Element marked with "data-sap-focus-ref" inside the template.
     * This is the element that will receive the focus by default.
     * @public
     */
    getFocusDomRef() {
        const domRef = this.getDomRef();
        if (domRef) {
            const focusRef = domRef.querySelector("[data-sap-focus-ref]");
            return focusRef || domRef;
        }
    }
    /**
     * Waits for dom ref and then returns the DOM Element marked with "data-sap-focus-ref" inside the template.
     * This is the element that will receive the focus by default.
     * @public
     */
    async getFocusDomRefAsync() {
        await this._waitForDomRef();
        return this.getFocusDomRef();
    }
    /**
     * Set the focus to the element, returned by "getFocusDomRef()" (marked by "data-sap-focus-ref")
     * @param {FocusOptions} focusOptions additional options for the focus
     * @public
     */
    async focus(focusOptions) {
        await this._waitForDomRef();
        const focusDomRef = this.getFocusDomRef();
        if (focusDomRef && typeof focusDomRef.focus === "function") {
            focusDomRef.focus(focusOptions);
        }
    }
    /**
     *
     * @public
     * @param name - name of the event
     * @param data - additional data for the event
     * @param cancelable - true, if the user can call preventDefault on the event object
     * @param bubbles - true, if the event bubbles
     * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise
     */
    fireEvent(name, data, cancelable = false, bubbles = true) {
        const eventResult = this._fireEvent(name, data, cancelable, bubbles);
        const camelCaseEventName = (0,_util_StringHelper_js__WEBPACK_IMPORTED_MODULE_13__.kebabToCamelCase)(name);
        if (camelCaseEventName !== name) {
            return eventResult && this._fireEvent(camelCaseEventName, data, cancelable, bubbles);
        }
        return eventResult;
    }
    _fireEvent(name, data, cancelable = false, bubbles = true) {
        const noConflictEvent = new CustomEvent(`ui5-${name}`, {
            detail: data,
            composed: false,
            bubbles,
            cancelable,
        });
        // This will be false if the no-conflict event is prevented
        const noConflictEventResult = this.dispatchEvent(noConflictEvent);
        if ((0,_config_NoConflict_js__WEBPACK_IMPORTED_MODULE_11__.skipOriginalEvent)(name)) {
            return noConflictEventResult;
        }
        const normalEvent = new CustomEvent(name, {
            detail: data,
            composed: false,
            bubbles,
            cancelable,
        });
        // This will be false if the normal event is prevented
        const normalEventResult = this.dispatchEvent(normalEvent);
        // Return false if any of the two events was prevented (its result was false).
        return normalEventResult && noConflictEventResult;
    }
    /**
     * Returns the actual children, associated with a slot.
     * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.
     * @public
     */
    getSlottedNodes(slotName) {
        return (0,_util_SlotsHelper_js__WEBPACK_IMPORTED_MODULE_15__.getSlottedNodesList)(this[slotName]);
    }
    /**
     * Determines whether the component should be rendered in RTL mode or not.
     * Returns: "rtl", "ltr" or undefined
     *
     * @public
     * @returns {String|undefined}
     */
    get effectiveDir() {
        (0,_locale_RTLAwareRegistry_js__WEBPACK_IMPORTED_MODULE_17__.markAsRtlAware)(this.constructor); // if a UI5 Element calls this method, it's considered to be rtl-aware
        return (0,_locale_getEffectiveDir_js__WEBPACK_IMPORTED_MODULE_12__["default"])(this);
    }
    /**
     * Used to duck-type UI5 elements without using instanceof
     * @returns {boolean}
     * @public
     */
    get isUI5Element() {
        return true;
    }
    get classes() {
        return {};
    }
    /**
     * Do not override this method in derivatives of UI5Element, use metadata properties instead
     * @private
     */
    static get observedAttributes() {
        return this.getMetadata().getAttributesList();
    }
    /**
     * @private
     */
    static _needsShadowDOM() {
        return !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, "render");
    }
    /**
     * @private
     */
    static _needsStaticArea() {
        return !!this.staticAreaTemplate || Object.prototype.hasOwnProperty.call(this.prototype, "renderStatic");
    }
    /**
     * @public
     */
    getStaticAreaItemDomRef() {
        if (!this.constructor._needsStaticArea()) {
            throw new Error("This component does not use the static area");
        }
        if (!this.staticAreaItem) {
            this.staticAreaItem = _StaticAreaItem_js__WEBPACK_IMPORTED_MODULE_5__["default"].createInstance();
            this.staticAreaItem.setOwnerElement(this);
        }
        if (!this.staticAreaItem.parentElement) {
            (0,_util_getSingletonElementInstance_js__WEBPACK_IMPORTED_MODULE_4__["default"])("ui5-static-area").appendChild(this.staticAreaItem);
        }
        return this.staticAreaItem.getDomRef();
    }
    /**
     * @private
     */
    static _generateAccessors() {
        const proto = this.prototype;
        const slotsAreManaged = this.getMetadata().slotsAreManaged();
        // Properties
        const properties = this.getMetadata().getProperties();
        for (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line
            if (!(0,_util_isValidPropertyName_js__WEBPACK_IMPORTED_MODULE_14__["default"])(prop)) {
                console.warn(`"${prop}" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */
            }
            if (propData.type === Boolean && propData.defaultValue) {
                throw new Error(`Cannot set a default value for property "${prop}". All booleans are false by default.`);
            }
            if (propData.type === Array) {
                throw new Error(`Wrong type for property "${prop}". Properties cannot be of type Array - use "multiple: true" and set "type" to the single value type, such as "String", "Object", etc...`);
            }
            if (propData.type === Object && propData.defaultValue) {
                throw new Error(`Cannot set a default value for property "${prop}". All properties of type "Object" are empty objects by default.`);
            }
            if (propData.multiple && propData.defaultValue) {
                throw new Error(`Cannot set a default value for property "${prop}". All multiple properties are empty arrays by default.`);
            }
            Object.defineProperty(proto, prop, {
                get() {
                    if (this._state[prop] !== undefined) {
                        return this._state[prop];
                    }
                    const propDefaultValue = propData.defaultValue;
                    if (propData.type === Boolean) {
                        return false;
                    }
                    else if (propData.type === String) { // eslint-disable-line
                        return propDefaultValue;
                    }
                    else if (propData.multiple) { // eslint-disable-line
                        return [];
                    }
                    else {
                        return propDefaultValue;
                    }
                },
                set(value) {
                    let isDifferent;
                    const ctor = this.constructor;
                    const metadataCtor = ctor.getMetadata().constructor;
                    value = metadataCtor.validatePropertyValue(value, propData);
                    const propertyType = propData.type;
                    let propertyValidator = propData.validator;
                    const oldState = this._state[prop];
                    if (propertyType && propertyType.isDataTypeClass) {
                        propertyValidator = propertyType;
                    }
                    if (propertyValidator) {
                        isDifferent = !propertyValidator.valuesAreEqual(oldState, value);
                    }
                    else if (Array.isArray(oldState) && Array.isArray(value) && propData.multiple && propData.compareValues) { // compareValues is added for IE, test if needed now
                        isDifferent = !(0,_util_arraysAreEqual_js__WEBPACK_IMPORTED_MODULE_16__["default"])(oldState, value);
                    }
                    else {
                        isDifferent = oldState !== value;
                    }
                    if (isDifferent) {
                        this._state[prop] = value;
                        _invalidate.call(this, {
                            type: "property",
                            name: prop,
                            newValue: value,
                            oldValue: oldState,
                        });
                        this._updateAttribute(prop, value);
                    }
                },
            });
        }
        // Slots
        if (slotsAreManaged) {
            const slots = this.getMetadata().getSlots();
            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line
                if (!(0,_util_isValidPropertyName_js__WEBPACK_IMPORTED_MODULE_14__["default"])(slotName)) {
                    console.warn(`"${slotName}" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */
                }
                const propertyName = slotData.propertyName || slotName;
                Object.defineProperty(proto, propertyName, {
                    get() {
                        if (this._state[propertyName] !== undefined) {
                            return this._state[propertyName];
                        }
                        return [];
                    },
                    set() {
                        throw new Error("Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)");
                    },
                });
            }
        }
    }
    /**
     * Returns the CSS for this UI5 Web Component Class
     * @protected
     */
    static get styles() {
        return "";
    }
    /**
     * Returns the Static Area CSS for this UI5 Web Component Class
     * @protected
     */
    static get staticAreaStyles() {
        return "";
    }
    /**
     * Returns an array with the dependencies for this UI5 Web Component, which could be:
     *  - composed components (used in its shadow root or static area item)
     *  - slotted components that the component may need to communicate with
     *
     * @protected
     */
    static get dependencies() {
        return [];
    }
    /**
     * Returns a list of the unique dependencies for this UI5 Web Component
     *
     * @public
     */
    static getUniqueDependencies() {
        if (!uniqueDependenciesCache.has(this)) {
            const filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);
            uniqueDependenciesCache.set(this, filtered);
        }
        return uniqueDependenciesCache.get(this) || [];
    }
    /**
     * Returns a promise that resolves whenever all dependencies for this UI5 Web Component have resolved
     *
     * @returns {Promise}
     */
    static whenDependenciesDefined() {
        return Promise.all(this.getUniqueDependencies().map(dep => dep.define()));
    }
    /**
     * Hook that will be called upon custom element definition
     *
     * @protected
     * @returns {Promise<void>}
     */
    static async onDefine() {
        return Promise.resolve();
    }
    /**
     * Registers a UI5 Web Component in the browser window object
     * @public
     * @returns {Promise<UI5Element>}
     */
    static async define() {
        await (0,_Boot_js__WEBPACK_IMPORTED_MODULE_1__.boot)();
        await Promise.all([
            this.whenDependenciesDefined(),
            this.onDefine(),
        ]);
        const tag = this.getMetadata().getTag();
        const definedLocally = (0,_CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_9__.isTagRegistered)(tag);
        const definedGlobally = window.customElements.get(tag);
        if (definedGlobally && !definedLocally) {
            (0,_CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_9__.recordTagRegistrationFailure)(tag);
        }
        else if (!definedGlobally) {
            this._generateAccessors();
            (0,_CustomElementsRegistry_js__WEBPACK_IMPORTED_MODULE_9__.registerTag)(tag);
            window.customElements.define(tag, this);
            (0,_theming_preloadLinks_js__WEBPACK_IMPORTED_MODULE_18__["default"])(this);
        }
        return this;
    }
    /**
     * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')
     * Note: not to be confused with the "get metadata()" method, which returns an object for this class's metadata only
     * @public
     * @returns {UI5ElementMetadata}
     */
    static getMetadata() {
        if (this.hasOwnProperty("_metadata")) { // eslint-disable-line
            return this._metadata;
        }
        const metadataObjects = [this.metadata];
        let klass = this; // eslint-disable-line
        while (klass !== UI5Element) {
            klass = Object.getPrototypeOf(klass);
            metadataObjects.unshift(klass.metadata);
        }
        const mergedMetadata = (0,_thirdparty_merge_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, ...metadataObjects);
        this._metadata = new _UI5ElementMetadata_js__WEBPACK_IMPORTED_MODULE_2__["default"](mergedMetadata);
        return this._metadata;
    }
}
/**
 * Returns the metadata object for this UI5 Web Component Class
 * @protected
 */
UI5Element.metadata = {};
/**
 * Always use duck-typing to cover all runtimes on the page.
 * @returns {boolean}
 */
const instanceOfUI5Element = (object) => {
    return "isUI5Element" in object;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UI5Element);



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_StringHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/StringHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js");
/* harmony import */ var _util_SlotsHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/SlotsHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js");
/* harmony import */ var _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CustomElementsScopeUtils.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js");



/**
 *
 * @class
 * @public
 */
class UI5ElementMetadata {
    constructor(metadata) {
        this.metadata = metadata;
    }
    getInitialState() {
        if (Object.prototype.hasOwnProperty.call(this, "_initialState")) {
            return this._initialState;
        }
        const initialState = {};
        const slotsAreManaged = this.slotsAreManaged();
        // Initialize properties
        const props = this.getProperties();
        for (const propName in props) { // eslint-disable-line
            const propType = props[propName].type;
            const propDefaultValue = props[propName].defaultValue;
            if (propType === Boolean) {
                initialState[propName] = false;
                if (propDefaultValue !== undefined) {
                    console.warn("The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default"); // eslint-disable-line
                }
            }
            else if (props[propName].multiple) {
                initialState[propName] = [];
            }
            else if (propType === Object) {
                initialState[propName] = "defaultValue" in props[propName] ? props[propName].defaultValue : {};
            }
            else if (propType === String) {
                initialState[propName] = "defaultValue" in props[propName] ? props[propName].defaultValue : "";
            }
            else {
                initialState[propName] = propDefaultValue;
            }
        }
        // Initialize slots
        if (slotsAreManaged) {
            const slots = this.getSlots();
            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line
                const propertyName = slotData.propertyName || slotName;
                initialState[propertyName] = [];
            }
        }
        this._initialState = initialState;
        return initialState;
    }
    /**
     * Validates the property's value and returns it if correct
     * or returns the default value if not.
     * <b>Note:</b> Only intended for use by UI5Element.js
     * @public
     */
    static validatePropertyValue(value, propData) {
        const isMultiple = propData.multiple;
        if (isMultiple && value) {
            return value.map((propValue) => validateSingleProperty(propValue, propData));
        }
        return validateSingleProperty(value, propData);
    }
    /**
     * Validates the slot's value and returns it if correct
     * or throws an exception if not.
     * <b>Note:</b> Only intended for use by UI5Element.js
     * @pubic
     */
    static validateSlotValue(value, slotData) {
        return validateSingleSlot(value, slotData);
    }
    /**
     * Returns the tag of the UI5 Element without the scope
     * @public
     */
    getPureTag() {
        return this.metadata.tag || "";
    }
    /**
     * Returns the tag of the UI5 Element
     * @public
     */
    getTag() {
        const pureTag = this.metadata.tag;
        if (!pureTag) {
            return "";
        }
        const suffix = (0,_CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_2__.getEffectiveScopingSuffixForTag)(pureTag);
        if (!suffix) {
            return pureTag;
        }
        return `${pureTag}-${suffix}`;
    }
    /**
     * Determines whether a property should have an attribute counterpart
     * @public
     * @param propName
     * @returns {boolean}
     */
    hasAttribute(propName) {
        const propData = this.getProperties()[propName];
        return propData.type !== Object && !propData.noAttribute && !propData.multiple;
    }
    /**
     * Returns an array with the properties of the UI5 Element (in camelCase)
     * @public
     * @returns {string[]}
     */
    getPropertiesList() {
        return Object.keys(this.getProperties());
    }
    /**
     * Returns an array with the attributes of the UI5 Element (in kebab-case)
     * @public
     * @returns {string[]}
     */
    getAttributesList() {
        return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(_util_StringHelper_js__WEBPACK_IMPORTED_MODULE_0__.camelToKebabCase);
    }
    /**
     * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text
     * @returns {boolean}
     */
    canSlotText() {
        const defaultSlot = this.getSlots().default;
        return defaultSlot && defaultSlot.type === Node;
    }
    /**
     * Determines whether this UI5 Element supports any slots
     * @public
     */
    hasSlots() {
        return !!Object.entries(this.getSlots()).length;
    }
    /**
     * Determines whether this UI5 Element supports any slots with "individualSlots: true"
     * @public
     */
    hasIndividualSlots() {
        return this.slotsAreManaged() && Object.values(this.getSlots()).some(slotData => slotData.individualSlots);
    }
    /**
     * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed
     * @public
     */
    slotsAreManaged() {
        return !!this.metadata.managedSlots;
    }
    /**
     * Determines whether this control supports F6 fast navigation
     * @public
     */
    supportsF6FastNavigation() {
        return !!this.metadata.fastNavigation;
    }
    /**
     * Returns an object with key-value pairs of properties and their metadata definitions
     * @public
     */
    getProperties() {
        if (!this.metadata.properties) {
            this.metadata.properties = {};
        }
        return this.metadata.properties;
    }
    /**
     * Returns an object with key-value pairs of events and their metadata definitions
     * @public
     */
    getEvents() {
        if (!this.metadata.events) {
            this.metadata.events = {};
        }
        return this.metadata.events;
    }
    /**
     * Returns an object with key-value pairs of slots and their metadata definitions
     * @public
     */
    getSlots() {
        if (!this.metadata.slots) {
            this.metadata.slots = {};
        }
        return this.metadata.slots;
    }
    /**
     * Determines whether this UI5 Element has any translatable texts (needs to be invalidated upon language change)
     * @returns {boolean}
     */
    isLanguageAware() {
        return !!this.metadata.languageAware;
    }
    /**
     * Determines whether this UI5 Element has any theme dependant carachteristics.
     * @returns {boolean}
     */
    isThemeAware() {
        return !!this.metadata.themeAware;
    }
    /**
     * Matches a changed entity (property/slot) with the given name against the "invalidateOnChildChange" configuration
     * and determines whether this should cause and invalidation
     *
     * @param slotName the name of the slot in which a child was changed
     * @param type the type of change in the child: "property" or "slot"
     * @param name the name of the property/slot that changed
     * @returns {boolean}
     */
    shouldInvalidateOnChildChange(slotName, type, name) {
        const config = this.getSlots()[slotName].invalidateOnChildChange;
        // invalidateOnChildChange was not set in the slot metadata - by default child changes do not affect the component
        if (config === undefined) {
            return false;
        }
        // The simple format was used: invalidateOnChildChange: true/false;
        if (typeof config === "boolean") {
            return config;
        }
        // The complex format was used: invalidateOnChildChange: { properties, slots }
        if (typeof config === "object") {
            // A property was changed
            if (type === "property") {
                // The config object does not have a properties field
                if (config.properties === undefined) {
                    return false;
                }
                // The config object has the short format: properties: true/false
                if (typeof config.properties === "boolean") {
                    return config.properties;
                }
                // The config object has the complex format: properties: [...]
                if (Array.isArray(config.properties)) {
                    return config.properties.includes(name);
                }
                throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected");
            }
            // A slot was changed
            if (type === "slot") {
                // The config object does not have a slots field
                if (config.slots === undefined) {
                    return false;
                }
                // The config object has the short format: slots: true/false
                if (typeof config.slots === "boolean") {
                    return config.slots;
                }
                // The config object has the complex format: slots: [...]
                if (Array.isArray(config.slots)) {
                    return config.slots.includes(name);
                }
                throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected");
            }
        }
        throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected");
    }
}
const validateSingleProperty = (value, propData) => {
    const propertyType = propData.type;
    let propertyValidator = propData.validator;
    if (propertyType && propertyType.isDataTypeClass) {
        propertyValidator = propertyType;
    }
    if (propertyValidator) {
        return propertyValidator.isValid(value) ? value : propData.defaultValue;
    }
    if (!propertyType || propertyType === String) {
        return (typeof value === "string" || typeof value === "undefined" || value === null) ? value : value.toString();
    }
    if (propertyType === Boolean) {
        return typeof value === "boolean" ? value : false;
    }
    if (propertyType === Object) {
        return typeof value === "object" ? value : propData.defaultValue;
    }
    // Check if "value" is part of the enum (propertyType) values and return the defaultValue if not found.
    return value in propertyType ? value : propData.defaultValue;
};
const validateSingleSlot = (value, slotData) => {
    value && (0,_util_SlotsHelper_js__WEBPACK_IMPORTED_MODULE_1__.getSlottedNodes)(value).forEach(el => {
        if (!(el instanceof slotData.type)) {
            throw new Error(`The element is not of type ${slotData.type.toString()}`);
        }
    });
    return value;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UI5ElementMetadata);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _getRegisteredNames: () => (/* binding */ _getRegisteredNames),
/* harmony export */   getIconAccessibleName: () => (/* binding */ getIconAccessibleName),
/* harmony export */   getIconData: () => (/* binding */ getIconData),
/* harmony export */   getIconDataSync: () => (/* binding */ getIconDataSync),
/* harmony export */   registerIcon: () => (/* binding */ registerIcon),
/* harmony export */   registerIconLoader: () => (/* binding */ registerIconLoader)
/* harmony export */ });
/* harmony import */ var _getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../getSharedResource.js */ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js");
/* harmony import */ var _util_IconCollectionsAlias_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/IconCollectionsAlias.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsAlias.js");
/* harmony import */ var _util_IconCollectionsByTheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/IconCollectionsByTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsByTheme.js");
/* harmony import */ var _util_getIconCollectionByTheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/getIconCollectionByTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/getIconCollectionByTheme.js");
/* harmony import */ var _i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");





const DEFAULT_THEME_FAMILY = "legacy"; // includes sap_belize_* and sap_fiori_*
const loaders = new Map();
const registry = (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__["default"])("SVGIcons.registry", new Map());
const iconCollectionPromises = (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__["default"])("SVGIcons.promises", new Map());
const ICON_NOT_FOUND = "ICON_NOT_FOUND";
const registerIconLoader = (collectionName, loader) => {
    loaders.set(collectionName, loader);
};
const _loadIconCollectionOnce = async (collectionName) => {
    if (!iconCollectionPromises.has(collectionName)) {
        if (!loaders.has(collectionName)) {
            throw new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the "AllIcons.js" module for the respective package.`);
        }
        const loadIcons = loaders.get(collectionName);
        iconCollectionPromises.set(collectionName, loadIcons(collectionName));
    }
    return iconCollectionPromises.get(collectionName);
};
const _fillRegistry = (bundleData) => {
    Object.keys(bundleData.data).forEach(iconName => {
        const iconData = bundleData.data[iconName];
        registerIcon(iconName, {
            pathData: (iconData.path || iconData.paths),
            ltr: iconData.ltr,
            accData: iconData.acc,
            collection: bundleData.collection,
            packageName: bundleData.packageName,
        });
    });
};
// set
const registerIcon = (name, iconData) => {
    const key = `${iconData.collection}/${name}`;
    registry.set(key, {
        pathData: iconData.pathData,
        ltr: iconData.ltr,
        accData: iconData.accData,
        packageName: iconData.packageName,
        customTemplate: iconData.customTemplate,
        viewBox: iconData.viewBox,
        collection: iconData.collection,
    });
};
/**
 * Processes the full icon name and splits it into - "name", "collection".
 * - removes legacy protocol ("sap-icon://")
 * - resolves aliases (f.e "SAP-icons-TNT/actor" => "tnt/actor")
 *
 * @param { string } name
 * @return { object }
 */
const processName = (name) => {
    // silently support ui5-compatible URIs
    if (name.startsWith("sap-icon://")) {
        name = name.replace("sap-icon://", "");
    }
    let collection;
    [name, collection] = name.split("/").reverse();
    name = name.replace("icon-", "");
    if (collection) {
        collection = (0,_util_IconCollectionsAlias_js__WEBPACK_IMPORTED_MODULE_1__.getIconCollectionByAlias)(collection);
    }
    return { name, collection };
};
const getIconDataSync = (iconName) => {
    const { name, collection } = processName(iconName);
    return getRegisteredIconData(collection, name);
};
const getIconData = async (iconName) => {
    const { name, collection } = processName(iconName);
    let iconData = ICON_NOT_FOUND;
    try {
        iconData = (await _loadIconCollectionOnce((0,_util_getIconCollectionByTheme_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection)));
    }
    catch (error) {
        const e = error;
        console.error(e.message); /* eslint-disable-line */
    }
    if (iconData === ICON_NOT_FOUND) {
        return iconData;
    }
    const registeredIconData = getRegisteredIconData(collection, name);
    if (registeredIconData) {
        return registeredIconData;
    }
    // not filled by another await. many getters will await on the same loader, but fill only once
    if (Array.isArray(iconData)) {
        iconData.forEach(data => {
            _fillRegistry(data);
            (0,_util_IconCollectionsByTheme_js__WEBPACK_IMPORTED_MODULE_2__.registerIconCollectionForTheme)(collection, { [data.themeFamily || DEFAULT_THEME_FAMILY]: data.collection });
        });
    }
    else {
        _fillRegistry(iconData);
    }
    return getRegisteredIconData(collection, name);
};
const getRegisteredIconData = (collection, name) => {
    const registryKey = `${(0,_util_getIconCollectionByTheme_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection)}/${name}`;
    return registry.get(registryKey);
};
/**
 * Returns the accessible name for the given icon,
 * or undefined if accessible name is not present.
 *
 * @param { string } name
 * @return { Promise }
 */
const getIconAccessibleName = async (name) => {
    if (!name) {
        return;
    }
    let iconData = getIconDataSync(name);
    if (!iconData) {
        iconData = await getIconData(name);
    }
    if (iconData && iconData !== ICON_NOT_FOUND && iconData.accData) {
        const i18nBundle = await (0,_i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__.getI18nBundle)(iconData.packageName);
        return i18nBundle.getText(iconData.accData);
    }
};
// test page usage only
const _getRegisteredNames = async () => {
    // fetch one icon of each collection to trigger the bundle load
    await getIconData("edit");
    await getIconData("tnt/arrow");
    await getIconData("business-suite/3d");
    return Array.from(registry.keys());
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getRegisteredPackages: () => (/* binding */ getRegisteredPackages),
/* harmony export */   getThemeProperties: () => (/* binding */ getThemeProperties),
/* harmony export */   isThemeRegistered: () => (/* binding */ isThemeRegistered),
/* harmony export */   registerThemePropertiesLoader: () => (/* binding */ registerThemePropertiesLoader)
/* harmony export */ });
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");
/* harmony import */ var _theming_ThemeRegistered_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../theming/ThemeRegistered.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeRegistered.js");


const themeStyles = new Map();
const loaders = new Map();
const registeredPackages = new Set();
const registeredThemes = new Set();
const registerThemePropertiesLoader = (packageName, themeName, loader) => {
    loaders.set(`${packageName}/${themeName}`, loader);
    registeredPackages.add(packageName);
    registeredThemes.add(themeName);
    (0,_theming_ThemeRegistered_js__WEBPACK_IMPORTED_MODULE_1__.fireThemeRegistered)(themeName);
};
const getThemeProperties = async (packageName, themeName) => {
    const style = themeStyles.get(`${packageName}_${themeName}`);
    if (style !== undefined) { // it's valid for style to be an empty string
        return style;
    }
    if (!registeredThemes.has(themeName)) {
        const regThemesStr = [...registeredThemes.values()].join(", ");
        console.warn(`You have requested a non-registered theme ${themeName} - falling back to ${_generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_THEME}. Registered themes are: ${regThemesStr}`); /* eslint-disable-line */
        return _getThemeProperties(packageName, _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_THEME);
    }
    return _getThemeProperties(packageName, themeName);
};
const _getThemeProperties = async (packageName, themeName) => {
    const loader = loaders.get(`${packageName}/${themeName}`);
    if (!loader) {
        // no themes for package
        console.error(`Theme [${themeName}] not registered for package [${packageName}]`); /* eslint-disable-line */
        return;
    }
    let data;
    try {
        data = await loader(themeName);
    }
    catch (error) {
        const e = error;
        console.error(packageName, e.message); /* eslint-disable-line */
        return;
    }
    const themeProps = data._ || data; // Refactor: remove _ everywhere
    themeStyles.set(`${packageName}_${themeName}`, themeProps);
    return themeProps;
};
const getRegisteredPackages = () => {
    return registeredPackages;
};
const isThemeRegistered = (theme) => {
    return registeredThemes.has(theme);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/i18n.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/i18n.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fetchI18nBundle: () => (/* binding */ fetchI18nBundle),
/* harmony export */   getI18nBundleData: () => (/* binding */ getI18nBundleData),
/* harmony export */   registerI18nLoader: () => (/* binding */ registerI18nLoader)
/* harmony export */ });
/* harmony import */ var _locale_getLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../locale/getLocale.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/getLocale.js");
/* harmony import */ var _locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../locale/languageChange.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/languageChange.js");
/* harmony import */ var _locale_normalizeLocale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../locale/normalizeLocale.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/normalizeLocale.js");
/* harmony import */ var _locale_nextFallbackLocale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../locale/nextFallbackLocale.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/nextFallbackLocale.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");
/* harmony import */ var _config_Language_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/Language.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Language.js");






// contains package names for which the warning has been shown
const warningShown = new Set();
const reportedErrors = new Set();
const bundleData = new Map();
const bundlePromises = new Map();
const loaders = new Map();
/**
 * Registers i18n loader function for given package and locale.
 *
 * @public
 * @param {string} packageName for which package this loader can fetch data
 * @param {string} localeId locale that this loader can handle
 * @param {function} loader async function that will be passed a localeId and should return a JSON object
 */
const registerI18nLoader = (packageName, localeId, loader) => {
    // register loader by key
    const bundleKey = `${packageName}/${localeId}`;
    loaders.set(bundleKey, loader);
};
const _setI18nBundleData = (packageName, data) => {
    bundleData.set(packageName, data);
};
const getI18nBundleData = (packageName) => {
    return bundleData.get(packageName);
};
const _hasLoader = (packageName, localeId) => {
    const bundleKey = `${packageName}/${localeId}`;
    return loaders.has(bundleKey);
};
// load bundle over the network once
const _loadMessageBundleOnce = (packageName, localeId) => {
    const bundleKey = `${packageName}/${localeId}`;
    const loadMessageBundle = loaders.get(bundleKey);
    if (loadMessageBundle && !bundlePromises.get(bundleKey)) {
        bundlePromises.set(bundleKey, loadMessageBundle(localeId));
    }
    return bundlePromises.get(bundleKey); // Investigate if i18n loader exists and this won't return undefined.
};
const _showAssetsWarningOnce = (packageName) => {
    if (!warningShown.has(packageName)) {
        console.warn(`[${packageName}]: Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */ ` Add \`import "${packageName}/dist/Assets.js"\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section "Assets" in the documentation for more information.`); /* eslint-disable-line */
        warningShown.add(packageName);
    }
};
const useFallbackBundle = (packageName, localeId) => {
    return localeId !== _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_LANGUAGE && !_hasLoader(packageName, localeId);
};
/**
 * This method preforms the asynchronous task of fetching the actual text resources. It will fetch
 * each text resource over the network once (even for multiple calls to the same method).
 * It should be fully finished before the i18nBundle class is created in the webcomponents.
 * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.
 * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>
 * @param {packageName} packageName the NPM package name
 * @public
 */
const fetchI18nBundle = async (packageName) => {
    const language = (0,_locale_getLocale_js__WEBPACK_IMPORTED_MODULE_0__["default"])().getLanguage();
    const region = (0,_locale_getLocale_js__WEBPACK_IMPORTED_MODULE_0__["default"])().getRegion();
    let localeId = language + (region ? `-${region}` : ``);
    if (useFallbackBundle(packageName, localeId)) {
        localeId = (0,_locale_normalizeLocale_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeId);
        while (useFallbackBundle(packageName, localeId)) {
            localeId = (0,_locale_nextFallbackLocale_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeId);
        }
    }
    // use default language unless configured to always fetch it from the network
    const fetchDefaultLanguage = (0,_config_Language_js__WEBPACK_IMPORTED_MODULE_5__.getFetchDefaultLanguage)();
    if (localeId === _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_LANGUAGE && !fetchDefaultLanguage) {
        _setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)
        return;
    }
    if (!_hasLoader(packageName, localeId)) {
        _showAssetsWarningOnce(packageName);
        return;
    }
    try {
        const data = await _loadMessageBundleOnce(packageName, localeId);
        _setI18nBundleData(packageName, data);
    }
    catch (error) {
        const e = error;
        if (!reportedErrors.has(e.message)) {
            reportedErrors.add(e.message);
            console.error(e.message); /* eslint-disable-line */
        }
    }
};
// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles
(0,_locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__.attachLanguageChange)((lang /* eslint-disable-line */) => {
    const allPackages = [...bundleData.keys()];
    return Promise.all(allPackages.map(fetchI18nBundle));
});



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsAlias.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsAlias.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getIconCollectionByAlias: () => (/* binding */ getIconCollectionByAlias)
/* harmony export */ });
/**
 * Supported icon collection aliases.
 *
 * Users might specify a collection, using both the key and the value in the following key-value pairs,
 * e.g the following pairs are completely exchangeable:
 *
 * - "SAP-icons/accept" and "SAP-icons-v4/accept"
 * - "horizon/accept" and "SAP-icons-v5/accept"
 * - "SAP-icons-TNT/actor" and "tnt/actor"
 * - "BusinessSuiteInAppSymbols/3d" and "business-suite/3d"
 */
var IconCollectionsAlias;
(function (IconCollectionsAlias) {
    IconCollectionsAlias["SAP-icons"] = "SAP-icons-v4";
    IconCollectionsAlias["horizon"] = "SAP-icons-v5";
    IconCollectionsAlias["SAP-icons-TNT"] = "tnt";
    IconCollectionsAlias["BusinessSuiteInAppSymbols"] = "business-suite";
})(IconCollectionsAlias || (IconCollectionsAlias = {}));
/**
 * Returns the collection name for a given alias:
 *
 * - "SAP-icons-TNT"resolves to "tnt"
 * - "BusinessSuiteInAppSymbols" resolves to "business-suite"
 * - "horizon" resolves to "SAP-icons-v5"
 *
 * @param { string } collectionName
 * @return { string } the normalized collection name
 */
const getIconCollectionByAlias = (collectionName) => {
    if (IconCollectionsAlias[collectionName]) {
        return IconCollectionsAlias[collectionName];
    }
    return collectionName;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconCollectionsAlias);



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsByTheme.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsByTheme.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RegisteredIconCollection: () => (/* binding */ RegisteredIconCollection),
/* harmony export */   getIconCollectionForTheme: () => (/* binding */ getIconCollectionForTheme),
/* harmony export */   registerIconCollectionForTheme: () => (/* binding */ registerIconCollectionForTheme)
/* harmony export */ });
/* harmony import */ var _config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");

var RegisteredIconCollection;
(function (RegisteredIconCollection) {
    RegisteredIconCollection["SAPIconsV4"] = "SAP-icons-v4";
    RegisteredIconCollection["SAPIconsV5"] = "SAP-icons-v5";
    RegisteredIconCollection["SAPIconsTNTV2"] = "tnt-v2";
    RegisteredIconCollection["SAPIconsTNTV3"] = "tnt-v3";
    RegisteredIconCollection["SAPBSIconsV1"] = "business-suite-v1";
    RegisteredIconCollection["SAPBSIconsV2"] = "business-suite-v2";
})(RegisteredIconCollection || (RegisteredIconCollection = {}));
const iconCollections = new Map();
iconCollections.set("SAP-icons", {
    "legacy": RegisteredIconCollection.SAPIconsV4,
    "sap_horizon": RegisteredIconCollection.SAPIconsV5,
});
iconCollections.set("tnt", {
    "legacy": RegisteredIconCollection.SAPIconsTNTV2,
    "sap_horizon": RegisteredIconCollection.SAPIconsTNTV3,
});
iconCollections.set("business-suite", {
    "legacy": RegisteredIconCollection.SAPBSIconsV1,
    "sap_horizon": RegisteredIconCollection.SAPBSIconsV2,
});
/**
 * Registers collection version per theme.
 * </b>For exmaple:</b> registerIconCollectionForTheme("my-custom-icons", {"sap_horizon": "my-custom-icons-v5"})
 * @param { string } collectionName
 * @param { ThemeToCollectionMap } themeCollectionMap
 */
const registerIconCollectionForTheme = (collectionName, themeCollectionMap) => {
    if (iconCollections.has(collectionName)) {
        iconCollections.set(collectionName, { ...themeCollectionMap, ...iconCollections.get(collectionName) });
        return;
    }
    iconCollections.set(collectionName, themeCollectionMap);
};
const getIconCollectionForTheme = (collectionName) => {
    const themeFamily = (0,_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? "legacy" : "sap_horizon";
    return iconCollections.has(collectionName) ? iconCollections.get(collectionName)[themeFamily] : collectionName;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/getIconCollectionByTheme.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/getIconCollectionByTheme.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _config_Icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Icons.js");
/* harmony import */ var _IconCollectionsAlias_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IconCollectionsAlias.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsAlias.js");
/* harmony import */ var _IconCollectionsByTheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IconCollectionsByTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsByTheme.js");




/**
 * Returns the effective theme dependant icon collection:
 *
 * - "no collection" resolves to "SAP-icons-v4" in "Quartz" and "Belize", and to "SAP-icons-v5" in "Horizon"
 * - "tnt" (and its alias "SAP-icons-TNT") resolves to "tnt-v2" in "Quartz", "Belize", and resolves to "tnt-v3" in "Horizon"
 * - "business-suite" (and its alias "BusinessSuiteInAppSymbols") resolves to "business-suite-v1" in "Quartz", "Belize", and resolves to "business-suite-v2" in "Horizon"
 *
 * @param { IconCollection } collectionName
 * @returns { IconCollection } the effective collection name
 */
const getEffectiveIconCollection = (collectionName) => {
    const defaultIconCollection = (0,_config_Icons_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultIconCollection)((0,_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.getTheme)());
    // no collection + default collection, configured via setDefaultIconCollection - return the configured icon collection.
    if (!collectionName && defaultIconCollection) {
        return (0,_IconCollectionsAlias_js__WEBPACK_IMPORTED_MODULE_2__.getIconCollectionByAlias)(defaultIconCollection);
    }
    // no collection - return "SAP-icons-v4" or  "SAP-icons-v5".
    if (!collectionName) {
        return (0,_IconCollectionsByTheme_js__WEBPACK_IMPORTED_MODULE_3__.getIconCollectionForTheme)("SAP-icons");
    }
    // has collection - return "SAP-icons-v4", "SAP-icons-v5", "tnt-v1", "tnt-v2", "business-suite-v1", "business-suite-v2", or custom ones.
    return (0,_IconCollectionsByTheme_js__WEBPACK_IMPORTED_MODULE_3__.getIconCollectionForTheme)(collectionName);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveIconCollection);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/Icons.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/Icons.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDefaultIconCollection: () => (/* binding */ getDefaultIconCollection),
/* harmony export */   setDefaultIconCollection: () => (/* binding */ setDefaultIconCollection)
/* harmony export */ });
const IconCollectionConfiguration = new Map();
/**
 * Sets the default icon collection for a given theme.
 *
 * SAP Icons is the default icon collection (that resolves to SAP-icons version 5.x in Horizon theme family and SAP-icons version 4.x in all other themes)
 * and to display icons from other collections, you have to specify the icon collection in addition to the icon name, for example: "tnt/actor", "business-suite/1x2-grid-layout", etc.
 * This method allows setting another (built-in or custom) icon collection as default per theme.
 *
 * <b>Usage</b>
 * <b>For example</b>, to make "SAP-icons version 5.x" the default icon collection in "sap_fiori_3":
 *
 * <pre>
 * setDefaultIconCollection("sap_fiori_3", "SAP-icons-v5");
 *
 * <ui5-icon name="home"></ui5-icon>
 * </pre>
 *
 * <b>For example</b>, to make a custom icon collection (with name "my-custom-collection") the default icon collection in "sap_fiori_3":
 *
 * <pre>
 * setDefaultIconCollection("sap_fiori_3", "my-custom-collection");
 *
 * <ui5-icon name="custom-icon-name"></ui5-icon>
 * </pre>
 *
 * @public
 * @param { string } theme
 * @param { string } collectionName
 */
const setDefaultIconCollection = (theme, collectionName) => {
    IconCollectionConfiguration.set(theme, collectionName);
};
/**
 * Returns the configured default icon collection for a given theme.
 *
 * @param { string } theme
 * @public
 * @returns { string | undefined }
 */
const getDefaultIconCollection = (theme) => {
    return IconCollectionConfiguration.get(theme);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/Language.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/Language.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDefaultLanguage: () => (/* binding */ getDefaultLanguage),
/* harmony export */   getFetchDefaultLanguage: () => (/* binding */ getFetchDefaultLanguage),
/* harmony export */   getLanguage: () => (/* binding */ getLanguage),
/* harmony export */   setFetchDefaultLanguage: () => (/* binding */ setFetchDefaultLanguage),
/* harmony export */   setLanguage: () => (/* binding */ setLanguage)
/* harmony export */ });
/* harmony import */ var _InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InitialConfiguration.js */ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js");
/* harmony import */ var _locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../locale/languageChange.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/languageChange.js");
/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");




let curLanguage;
let fetchDefaultLanguage;
/**
 * Returns the currently configured language, or the browser language as a fallback.
 * @public
 * @returns {string}
 */
const getLanguage = () => {
    if (curLanguage === undefined) {
        curLanguage = (0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__.getLanguage)();
    }
    return curLanguage;
};
/**
 * Changes the current language, re-fetches all message bundles, updates all language-aware components
 * and returns a promise that resolves when all rendering is done.
 *
 * @param {string} language
 * @public
 * @returns {Promise<void>}
 */
const setLanguage = async (language) => {
    if (curLanguage === language) {
        return;
    }
    curLanguage = language;
    await (0,_locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__.fireLanguageChange)(language);
    await (0,_Render_js__WEBPACK_IMPORTED_MODULE_2__.reRenderAllUI5Elements)({ languageAware: true });
};
/**
 * Returns the default languague.
 *
 * Note: Default language might be different than the configurated one.
 *
 * @public
 * @returns {string}
 */
const getDefaultLanguage = () => {
    return _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_LANGUAGE;
};
/**
 * Defines if the default language, that is inlined, should be
 * fetched over the network instead of using the inlined one.
 * <b>Note:</b> By default the language will not be fetched.
 *
 * @public
 * @param {boolean} fetchDefaultLang
 */
const setFetchDefaultLanguage = (fetchDefaultLang) => {
    fetchDefaultLanguage = fetchDefaultLang;
};
/**
 * Returns if the default language, that is inlined, should be fetched over the network.
 * @public
 * @returns {boolean}
 */
const getFetchDefaultLanguage = () => {
    if (fetchDefaultLanguage === undefined) {
        setFetchDefaultLanguage((0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__.getFetchDefaultLanguage)());
    }
    return fetchDefaultLanguage;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNoConflict: () => (/* binding */ getNoConflict),
/* harmony export */   setNoConflict: () => (/* binding */ setNoConflict),
/* harmony export */   skipOriginalEvent: () => (/* binding */ skipOriginalEvent)
/* harmony export */ });
/* harmony import */ var _InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InitialConfiguration.js */ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js");

// Fire these events even with noConflict: true
const excludeList = [
    "value-changed",
    "click",
];
let noConflict;
const shouldFireOriginalEvent = (eventName) => {
    return excludeList.includes(eventName);
};
const shouldNotFireOriginalEvent = (eventName) => {
    const nc = getNoConflict();
    // return !(nc.events && nc.events.includes && nc.events.includes(eventName));
    return !(typeof nc !== "boolean" && nc.events && nc.events.includes && nc.events.includes(eventName));
};
/**
 * Returns if the "noConflict" configuration is set.
 * @public
 * @returns { NoConflictData }
 */
const getNoConflict = () => {
    if (noConflict === undefined) {
        noConflict = (0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__.getNoConflict)();
    }
    return noConflict;
};
/**
 * Sets the "noConflict" mode.
 * - When "false" (default value), all custom events are fired with and without the "ui5-" prefix.
 * - When "true", all custom events are fired with the "ui5-" prefix only.
 * - When an object is supplied, just the specified events will be fired with the "ui5-" prefix.
 * @public
 * @param { NoConflictData } noConflictData
 */
const setNoConflict = (noConflictData) => {
    noConflict = noConflictData;
};
const skipOriginalEvent = (eventName) => {
    const nc = getNoConflict();
    // Always fire these events
    if (shouldFireOriginalEvent(eventName)) {
        return false;
    }
    // Read from the configuration
    if (nc === true) {
        return true;
    }
    return !shouldNotFireOriginalEvent(eventName);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/RTL.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/RTL.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getRTL: () => (/* binding */ getRTL)
/* harmony export */ });
/* harmony import */ var _InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InitialConfiguration.js */ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js");
/* harmony import */ var _Language_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Language.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Language.js");
/* harmony import */ var _util_getDesigntimePropertyAsArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/getDesigntimePropertyAsArray.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js");
/* harmony import */ var _util_detectNavigatorLanguage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/detectNavigatorLanguage.js */ "./node_modules/@ui5/webcomponents-base/dist/util/detectNavigatorLanguage.js");




const M_ISO639_OLD_TO_NEW = {
    "iw": "he",
    "ji": "yi",
    "in": "id",
    "sh": "sr",
};
const A_RTL_LOCALES = (0,_util_getDesigntimePropertyAsArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])("$cldr-rtl-locales:ar,fa,he$") || [];
/**
 * Checks whether the language is using RTL
 * @param {string} language
 * @returns {boolean} whether the language is using RTL
 */
const impliesRTL = (language) => {
    language = (language && M_ISO639_OLD_TO_NEW[language]) || language;
    return A_RTL_LOCALES.indexOf(language) >= 0;
};
/**
 * Gets the effective RTL setting by first checking the configuration
 * and if not set using the currently set language or the navigator language if the language is not explicitly set.
 * @returns {boolean} whether RTL should be used
 */
const getRTL = () => {
    if (typeof document === "undefined") {
        return false;
    }
    const configurationRTL = (0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__.getRTL)();
    if (configurationRTL !== undefined) {
        return !!configurationRTL;
    }
    return impliesRTL((0,_Language_js__WEBPACK_IMPORTED_MODULE_1__.getLanguage)() || (0,_util_detectNavigatorLanguage_js__WEBPACK_IMPORTED_MODULE_3__["default"])());
};
 // eslint-disable-line


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/Theme.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDefaultTheme: () => (/* binding */ getDefaultTheme),
/* harmony export */   getTheme: () => (/* binding */ getTheme),
/* harmony export */   isLegacyThemeFamily: () => (/* binding */ isLegacyThemeFamily),
/* harmony export */   isTheme: () => (/* binding */ isTheme),
/* harmony export */   setTheme: () => (/* binding */ setTheme)
/* harmony export */ });
/* harmony import */ var _InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InitialConfiguration.js */ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js");
/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _theming_applyTheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../theming/applyTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/applyTheme.js");
/* harmony import */ var _theming_getThemeDesignerTheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../theming/getThemeDesignerTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");





let curTheme;
/**
 * Returns the current theme.
 * @public
 * @returns {string} the current theme name
 */
const getTheme = () => {
    if (curTheme === undefined) {
        curTheme = (0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_0__.getTheme)();
    }
    return curTheme;
};
/**
 * Applies a new theme after fetching its assets from the network.
 * @public
 * @param {string} theme the name of the new theme
 * @returns {Promise<void>} a promise that is resolved when the new theme assets have been fetched and applied to the DOM
 */
const setTheme = async (theme) => {
    if (curTheme === theme) {
        return;
    }
    curTheme = theme;
    // Update CSS Custom Properties
    await (0,_theming_applyTheme_js__WEBPACK_IMPORTED_MODULE_2__["default"])(curTheme);
    await (0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.reRenderAllUI5Elements)({ themeAware: true });
};
/**
 * Returns the default theme.
 *
 * Note: Default theme might be different than the configurated one.
 *
 * @public
 * @returns {string}
 */
const getDefaultTheme = () => {
    return _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_THEME;
};
/**
 * Returns if the given theme name is the one currently applied.
 * @private
 * @param {string} theme
 * @returns {boolean}
 */
const isTheme = (theme) => {
    const currentTheme = getTheme();
    return currentTheme === theme || currentTheme === `${theme}_exp`;
};
/**
 * Returns if the currently set theme is part of legacy theme families ("sap_belize" or "sap_fiori_3").
 * <b>Note</b>: in addition, the method checks the base theme of a custom theme, built via the ThemeDesigner.
 *
 * @private
 * @returns { boolean }
 */
const isLegacyThemeFamily = () => {
    const currentTheme = getTheme();
    if (!isKnownTheme(currentTheme)) {
        return !(0,_theming_getThemeDesignerTheme_js__WEBPACK_IMPORTED_MODULE_3__["default"])()?.baseThemeName?.startsWith("sap_horizon");
    }
    return !currentTheme.startsWith("sap_horizon");
};
const isKnownTheme = (theme) => _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_4__.SUPPORTED_THEMES.includes(theme);



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/config/ThemeRoot.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/config/ThemeRoot.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachCustomThemeStylesToHead: () => (/* binding */ attachCustomThemeStylesToHead),
/* harmony export */   getThemeRoot: () => (/* binding */ getThemeRoot),
/* harmony export */   setThemeRoot: () => (/* binding */ setThemeRoot)
/* harmony export */ });
/* harmony import */ var _util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/createLinkInHead.js */ "./node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js");
/* harmony import */ var _validateThemeRoot_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../validateThemeRoot.js */ "./node_modules/@ui5/webcomponents-base/dist/validateThemeRoot.js");
/* harmony import */ var _InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InitialConfiguration.js */ "./node_modules/@ui5/webcomponents-base/dist/InitialConfiguration.js");
/* harmony import */ var _Theme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");




let currThemeRoot;
/**
 * Returns the current theme root.
 *
 * @public
 * @since 1.14.0
 * @returns { string } the current theme root
 */
const getThemeRoot = () => {
    if (currThemeRoot === undefined) {
        currThemeRoot = (0,_InitialConfiguration_js__WEBPACK_IMPORTED_MODULE_2__.getThemeRoot)();
    }
    return currThemeRoot;
};
/**
 * Sets theme root for the current theme.
 * When set, the framework will validate the theme root and fetch the theme styles (CSS variables) from this location.
 *
 * <b>Note:</b> The feature is specific to custom themes, created with the `UI Theme Designer`.
 * The provided theme root is used only as a base to construct the actual location of the theme styles: `{themeRoot}/.../css_variables.css`.
 *
 * <br/>
 *
 * <b>Note:</b> Certain security restrictions will apply before fetching the theme assets.
 * Absolute URLs to a different origin than the current page will result in using the current page as an origin.
 * To allow specific origins, use &lt;meta name="sap-allowedThemeOrigins" content="https://my-example-host.com/"&gt; tag inside the &lt;head&gt; of the page.
 *
 * @public
 * @since 1.14.0
 * @param { string } themeRoot the new theme root
 * @returns { Promise<void> }
 */
const setThemeRoot = (themeRoot) => {
    if (currThemeRoot === themeRoot) {
        return;
    }
    currThemeRoot = themeRoot;
    if (!(0,_validateThemeRoot_js__WEBPACK_IMPORTED_MODULE_1__["default"])(themeRoot)) {
        console.warn(`The ${themeRoot} is not valid. Check the allowed origins as suggested in the "setThemeRoot" description.`); // eslint-disable-line
        return;
    }
    return attachCustomThemeStylesToHead((0,_Theme_js__WEBPACK_IMPORTED_MODULE_3__.getTheme)());
};
const formatThemeLink = (theme) => {
    return `${getThemeRoot()}Base/baseLib/${theme}/css_variables.css`; // theme root is always set at this point.
};
const attachCustomThemeStylesToHead = async (theme) => {
    const link = document.querySelector(`[sap-ui-webcomponents-theme="${theme}"]`);
    if (link) {
        document.head.removeChild(link);
    }
    await (0,_util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_0__["default"])(formatThemeLink(theme), { "sap-ui-webcomponents-theme": theme });
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns a custom element class decorator.
 *
 * @param { string | object } tagNameOrComponentSettings
 * @returns { ClassDecorator }
 */
const customElement = (tagNameOrComponentSettings) => {
    return (target) => {
        if (!Object.prototype.hasOwnProperty.call(target, "metadata")) {
            target.metadata = {};
        }
        if (typeof tagNameOrComponentSettings === "string") {
            target.metadata.tag = tagNameOrComponentSettings;
            return;
        }
        const { tag, languageAware, themeAware, fastNavigation, } = tagNameOrComponentSettings;
        target.metadata.tag = tag;
        if (languageAware) {
            target.metadata.languageAware = languageAware;
        }
        if (themeAware) {
            target.metadata.themeAware = themeAware;
        }
        if (fastNavigation) {
            target.metadata.fastNavigation = fastNavigation;
        }
        ["render", "renderer", "template", "staticAreaTemplate", "styles", "staticAreaStyles", "dependencies"].forEach((customElementEntity) => {
            const _customElementEntity = customElementEntity === "render" ? "renderer" : customElementEntity;
            const customElementEntityValue = tagNameOrComponentSettings[_customElementEntity];
            customElementEntityValue && Object.defineProperty(target, customElementEntity, {
                get: () => customElementEntityValue,
            });
        });
    };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (customElement);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/decorators/event.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/decorators/event.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns an event class decorator.
 *
 * @param { string } name the event name
 * @param { EventData } data the event data
 * @returns { ClassDecorator }
 */
const event = (name, data = {}) => {
    return (target) => {
        if (!Object.prototype.hasOwnProperty.call(target, "metadata")) {
            target.metadata = {};
        }
        const metadata = target.metadata;
        if (!metadata.events) {
            metadata.events = {};
        }
        const eventsMetadata = metadata.events;
        if (!eventsMetadata[name]) {
            eventsMetadata[name] = data;
        }
    };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (event);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/decorators/property.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns a property decorator.
 *
 * @param { Property } propData
 * @returns { PropertyDecorator }
 */
const property = (propData) => {
    return (target, propertyKey) => {
        const ctor = target.constructor;
        if (!Object.prototype.hasOwnProperty.call(ctor, "metadata")) {
            ctor.metadata = {};
        }
        const metadata = ctor.metadata;
        if (!metadata.properties) {
            metadata.properties = {};
        }
        const propsMetadata = metadata.properties;
        if (!propsMetadata[propertyKey]) {
            propsMetadata[propertyKey] = propData || { type: String };
        }
    };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (property);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns a slot decorator.
 *
 * @param { Slot } slotData
 * @returns { PropertyDecorator }
 */
const slot = (slotData) => {
    return (target, slotKey) => {
        const ctor = target.constructor;
        if (!Object.prototype.hasOwnProperty.call(ctor, "metadata")) {
            ctor.metadata = {};
        }
        const metadata = ctor.metadata;
        if (!metadata.slots) {
            metadata.slots = {};
        }
        const slotMetadata = metadata.slots;
        if (slotData && slotData.default && slotMetadata.default) {
            throw new Error("Only one slot can be the default slot.");
        }
        const key = slotData && slotData.default ? "default" : slotKey;
        slotData = slotData || { type: HTMLElement };
        if (!slotData.type) {
            slotData.type = HTMLElement;
        }
        if (!slotMetadata[key]) {
            slotMetadata[key] = slotData;
        }
        if (slotData.default) {
            delete slotMetadata.default.default;
            slotMetadata.default.propertyName = slotKey;
        }
        ctor.metadata.managedSlots = true;
    };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (slot);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");

let resizeObserver;
const observedElements = new Map();
const getResizeObserver = () => {
    if (!resizeObserver) {
        resizeObserver = new window.ResizeObserver(entries => {
            window.requestAnimationFrame(() => {
                entries.forEach(entry => {
                    const callbacks = observedElements.get(entry.target);
                    // Callbacks could be async and we need to handle returned promises to comply with the eslint "no-misused-promises" rule.
                    // Although Promise.all awaits all, we don't await the additional task after calling the callbacks and should not make any difference.
                    callbacks && Promise.all(callbacks.map((callback) => callback()));
                });
            });
        });
    }
    return resizeObserver;
};
const observe = (element, callback) => {
    const callbacks = observedElements.get(element) || [];
    // if no callbacks have been added for this element - start observing it
    if (!callbacks.length) {
        getResizeObserver().observe(element);
    }
    // save the callbacks in an array
    observedElements.set(element, [...callbacks, callback]);
};
const unobserve = (element, callback) => {
    const callbacks = observedElements.get(element) || [];
    if (callbacks.length === 0) {
        return;
    }
    const filteredCallbacks = callbacks.filter((fn) => fn !== callback);
    if (filteredCallbacks.length === 0) {
        getResizeObserver().unobserve(element);
        observedElements.delete(element);
    }
    else {
        observedElements.set(element, filteredCallbacks);
    }
};
/**
 * Allows to register/deregister resize observers for a DOM element
 *
 * @public
 * @class
  */
class ResizeHandler {
    /**
     * @static
     * @public
     * @param {*} element UI5 Web Component or DOM Element to be observed
     * @param {*} callback Callback to be executed
     */
    static register(element, callback) {
        let effectiveElement = element;
        if ((0,_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__.instanceOfUI5Element)(effectiveElement)) {
            effectiveElement = effectiveElement.getDomRef();
        }
        if (effectiveElement instanceof HTMLElement) {
            observe(effectiveElement, callback);
        }
        else {
            console.warn("Cannot register ResizeHandler for element", element); // eslint-disable-line
        }
    }
    /**
     * @static
     * @public
     * @param {*} element UI5 Web Component or DOM Element to be unobserved
     * @param {*} callback Callback to be removed
     */
    static deregister(element, callback) {
        let effectiveElement = element;
        if ((0,_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__.instanceOfUI5Element)(effectiveElement)) {
            effectiveElement = effectiveElement.getDomRef();
        }
        if (effectiveElement instanceof HTMLElement) {
            unobserve(effectiveElement, callback);
        }
        else {
            console.warn("Cannot deregister ResizeHandler for element", element); // eslint-disable-line
        }
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ResizeHandler);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_LANGUAGE: () => (/* binding */ DEFAULT_LANGUAGE),
/* harmony export */   DEFAULT_LOCALE: () => (/* binding */ DEFAULT_LOCALE),
/* harmony export */   DEFAULT_THEME: () => (/* binding */ DEFAULT_THEME),
/* harmony export */   SUPPORTED_LOCALES: () => (/* binding */ SUPPORTED_LOCALES),
/* harmony export */   SUPPORTED_THEMES: () => (/* binding */ SUPPORTED_THEMES)
/* harmony export */ });
const assetParameters = {"themes":{"default":"sap_horizon","all":["sap_fiori_3","sap_fiori_3_dark","sap_belize","sap_belize_hcb","sap_belize_hcw","sap_fiori_3_hcb","sap_fiori_3_hcw","sap_horizon","sap_horizon_dark","sap_horizon_hcb","sap_horizon_hcw","sap_horizon_exp","sap_horizon_dark_exp","sap_horizon_hcb_exp","sap_horizon_hcw_exp"]},"languages":{"default":"en","all":["ar","bg","ca","cs","cy","da","de","el","en","en_GB","en_US_sappsd","en_US_saprigi","en_US_saptrc","es","es_MX","et","fi","fr","fr_CA","hi","hr","hu","in","it","iw","ja","kk","ko","lt","lv","ms","nl","no","pl","pt_PT","pt","ro","ru","sh","sk","sl","sv","th","tr","uk","vi","zh_CN","zh_TW"]},"locales":{"default":"en","all":["ar","ar_EG","ar_SA","bg","ca","cs","da","de","de_AT","de_CH","el","el_CY","en","en_AU","en_GB","en_HK","en_IE","en_IN","en_NZ","en_PG","en_SG","en_ZA","es","es_AR","es_BO","es_CL","es_CO","es_MX","es_PE","es_UY","es_VE","et","fa","fi","fr","fr_BE","fr_CA","fr_CH","fr_LU","he","hi","hr","hu","id","it","it_CH","ja","kk","ko","lt","lv","ms","nb","nl","nl_BE","pl","pt","pt_PT","ro","ru","ru_UA","sk","sl","sr","sr_Latn","sv","th","tr","uk","vi","zh_CN","zh_HK","zh_SG","zh_TW"]}};

const DEFAULT_THEME = assetParameters.themes.default;
const SUPPORTED_THEMES = assetParameters.themes.all;
const DEFAULT_LANGUAGE = assetParameters.languages.default;
const DEFAULT_LOCALE = assetParameters.locales.default;
const SUPPORTED_LOCALES = assetParameters.locales.all;



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/generated/VersionInfo.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/generated/VersionInfo.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const VersionInfo = {
	version: "1.19.1",
	major: 1,
	minor: 19,
	patch: 1,
	suffix: "",
	isNext: false,
	buildTime: 1700228144,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VersionInfo);

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/generated/css/FontFace.css.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/generated/css/FontFace.css.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = {
    packageName: "@ui5/webcomponents-base",
    fileName: "FontFace.css",
    content: `@font-face{font-family:"72";font-style:normal;font-weight:400;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Regular.woff2?ui5-webcomponents) format("woff2"),local("72")}@font-face{font-family:"72full";font-style:normal;font-weight:400;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Regular-full.woff2?ui5-webcomponents) format("woff2"),local('72-full')}@font-face{font-family:"72";font-style:normal;font-weight:700;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold.woff2?ui5-webcomponents) format("woff2"),local('72-Bold')}@font-face{font-family:"72full";font-style:normal;font-weight:700;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold-full.woff2?ui5-webcomponents) format("woff2")}@font-face{font-family:'72-Bold';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold.woff2?ui5-webcomponents) format("woff2"),local('72-Bold')}@font-face{font-family:'72-Boldfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Bold-full.woff2?ui5-webcomponents) format("woff2")}@font-face{font-family:'72-Light';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Light.woff2?ui5-webcomponents) format("woff2"),local('72-Light')}@font-face{font-family:'72-Lightfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Light-full.woff2?ui5-webcomponents) format("woff2")}@font-face{font-family:'72Mono';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Regular.woff2?ui5-webcomponents) format('woff2'),local('72Mono')}@font-face{font-family:'72Monofull';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Regular-full.woff2?ui5-webcomponents) format('woff2')}@font-face{font-family:'72Mono-Bold';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Bold.woff2?ui5-webcomponents) format('woff2'),local('72Mono-Bold')}@font-face{font-family:'72Mono-Boldfull';src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72Mono-Bold-full.woff2?ui5-webcomponents) format('woff2')}@font-face{font-family:"72Black";font-style:bold;font-weight:900;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Black.woff2?ui5-webcomponents) format("woff2"),local('72Black')}@font-face{font-family:"72-SemiboldDuplex";src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-SemiboldDuplex.woff2?ui5-webcomponents) format("woff2"),local('72-SemiboldDuplex')}`,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/generated/css/OverrideFontFace.css.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/generated/css/OverrideFontFace.css.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = {
    packageName: "@ui5/webcomponents-base",
    fileName: "OverrideFontFace.css",
    content: `@font-face{font-family:'72override';unicode-range:U+0102-0103,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EB7,U+1EB8-1EC7,U+1EC8-1ECB,U+1ECC-1EE3,U+1EE4-1EF1,U+1EF4-1EF7;src:local('Arial'),local('Helvetica'),local('sans-serif')}`,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/generated/css/SystemCSSVars.css.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/generated/css/SystemCSSVars.css.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = {
    packageName: "@ui5/webcomponents-base",
    fileName: "SystemCSSVars.css",
    content: `:root{--_ui5_content_density:cozy}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_content_density:compact}[dir=rtl]{--_ui5_dir:rtl}[dir=ltr]{--_ui5_dir:ltr}`,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_getSingletonElementInstance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/getSingletonElementInstance.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getSingletonElementInstance.js");

const getMetaDomEl = () => {
    const el = document.createElement("meta");
    el.setAttribute("name", "ui5-shared-resources");
    el.setAttribute("content", ""); // attribute "content" should be present when "name" is set.
    return el;
};
const getSharedResourcesInstance = () => {
    if (typeof document === "undefined") {
        return null;
    }
    return (0,_util_getSingletonElementInstance_js__WEBPACK_IMPORTED_MODULE_0__["default"])(`meta[name="ui5-shared-resources"]`, document.head, getMetaDomEl);
};
/**
 * Use this method to initialize/get resources that you would like to be shared among UI5 Web Components runtime instances.
 * The data will be accessed via a singleton "ui5-shared-resources" HTML element in the "body" element of the page.
 *
 * @public
 * @param namespace Unique ID of the resource, may contain "." to denote hierarchy
 * @param initialValue Object or primitive that will be used as an initial value if the resource does not exist
 * @returns {*}
 */
const getSharedResource = (namespace, initialValue) => {
    const parts = namespace.split(".");
    let current = getSharedResourcesInstance();
    if (!current) {
        return initialValue;
    }
    for (let i = 0; i < parts.length; i++) {
        const part = parts[i];
        const lastPart = i === parts.length - 1;
        if (!Object.prototype.hasOwnProperty.call(current, part)) {
            current[part] = lastPart ? initialValue : {};
        }
        current = current[part];
    }
    return current;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getSharedResource);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getI18nBundle: () => (/* binding */ getI18nBundle),
/* harmony export */   registerCustomI18nBundleGetter: () => (/* binding */ registerCustomI18nBundleGetter),
/* harmony export */   registerI18nLoader: () => (/* reexport safe */ _asset_registries_i18n_js__WEBPACK_IMPORTED_MODULE_0__.registerI18nLoader)
/* harmony export */ });
/* harmony import */ var _asset_registries_i18n_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asset-registries/i18n.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/i18n.js");
/* harmony import */ var _util_formatMessage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/formatMessage.js */ "./node_modules/@ui5/webcomponents-base/dist/util/formatMessage.js");


const I18nBundleInstances = new Map();
let customGetI18nBundle;
/**
 * @class
 * @public
 */
class I18nBundle {
    constructor(packageName) {
        this.packageName = packageName;
    }
    /**
     * Returns a text in the currently loaded language
     *
     * @public
     * @param {Object|String} textObj key/defaultText pair or just the key
     * @param params Values for the placeholders
     * @returns {string}
     */
    getText(textObj, ...params) {
        if (typeof textObj === "string") {
            textObj = { key: textObj, defaultText: textObj };
        }
        if (!textObj || !textObj.key) {
            return "";
        }
        const bundle = (0,_asset_registries_i18n_js__WEBPACK_IMPORTED_MODULE_0__.getI18nBundleData)(this.packageName);
        if (bundle && !bundle[textObj.key]) {
            // eslint-disable-next-line no-console
            console.warn(`Key ${textObj.key} not found in the i18n bundle, the default text will be used`);
        }
        const messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : (textObj.defaultText || textObj.key);
        return (0,_util_formatMessage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(messageText, params);
    }
}
/**
 * Returns the I18nBundle instance for the given package synchronously.
 *
 * @public
 * @param packageName
 * @returns { I18nBundle }
 */
const getI18nBundleSync = (packageName) => {
    if (I18nBundleInstances.has(packageName)) {
        return I18nBundleInstances.get(packageName);
    }
    const i18nBundle = new I18nBundle(packageName);
    I18nBundleInstances.set(packageName, i18nBundle);
    return i18nBundle;
};
/**
 * Fetches and returns the I18nBundle instance for the given package.
 *
 * @public
 * @param packageName
 * @returns { Promise<I18nBundle> }
 */
const getI18nBundle = async (packageName) => {
    if (customGetI18nBundle) {
        return customGetI18nBundle(packageName);
    }
    await (0,_asset_registries_i18n_js__WEBPACK_IMPORTED_MODULE_0__.fetchI18nBundle)(packageName);
    return getI18nBundleSync(packageName);
};
/**
 * Allows developers to provide a custom getI18nBundle implementation
 * If this function is called, the custom implementation will be used for all components and will completely
 * replace the default implementation.
 *
 * @public
 * @param customGet the function to use instead of the standard getI18nBundle implementation
 */
const registerCustomI18nBundleGetter = (customGet) => {
    customGetI18nBundle = customGet;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (I18nBundle);



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/Locale.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/Locale.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");

const rLocale = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
class Locale {
    constructor(sLocaleId) {
        const aResult = rLocale.exec(sLocaleId.replace(/_/g, "-"));
        if (aResult === null) {
            throw new Error(`The given language ${sLocaleId} does not adhere to BCP-47.`);
        }
        this.sLocaleId = sLocaleId;
        this.sLanguage = aResult[1] || _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LANGUAGE;
        this.sScript = aResult[2] || "";
        this.sRegion = aResult[3] || "";
        this.sVariant = (aResult[4] && aResult[4].slice(1)) || null;
        this.sExtension = (aResult[5] && aResult[5].slice(1)) || null;
        this.sPrivateUse = aResult[6] || null;
        if (this.sLanguage) {
            this.sLanguage = this.sLanguage.toLowerCase();
        }
        if (this.sScript) {
            this.sScript = this.sScript.toLowerCase().replace(/^[a-z]/, s => {
                return s.toUpperCase();
            });
        }
        if (this.sRegion) {
            this.sRegion = this.sRegion.toUpperCase();
        }
    }
    getLanguage() {
        return this.sLanguage;
    }
    getScript() {
        return this.sScript;
    }
    getRegion() {
        return this.sRegion;
    }
    getVariant() {
        return this.sVariant;
    }
    getVariantSubtags() {
        return this.sVariant ? this.sVariant.split("-") : [];
    }
    getExtension() {
        return this.sExtension;
    }
    getExtensionSubtags() {
        return this.sExtension ? this.sExtension.slice(2).split("-") : [];
    }
    getPrivateUse() {
        return this.sPrivateUse;
    }
    getPrivateUseSubtags() {
        return this.sPrivateUse ? this.sPrivateUse.slice(2).split("-") : [];
    }
    hasPrivateUseSubtag(sSubtag) {
        return this.getPrivateUseSubtags().indexOf(sSubtag) >= 0;
    }
    toString() {
        const r = [this.sLanguage];
        if (this.sScript) {
            r.push(this.sScript);
        }
        if (this.sRegion) {
            r.push(this.sRegion);
        }
        if (this.sVariant) {
            r.push(this.sVariant);
        }
        if (this.sExtension) {
            r.push(this.sExtension);
        }
        if (this.sPrivateUse) {
            r.push(this.sPrivateUse);
        }
        return r.join("-");
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Locale);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/RTLAwareRegistry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/RTLAwareRegistry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isRtlAware: () => (/* binding */ isRtlAware),
/* harmony export */   markAsRtlAware: () => (/* binding */ markAsRtlAware)
/* harmony export */ });
const rtlAwareSet = new Set();
const markAsRtlAware = (klass) => {
    rtlAwareSet.add(klass);
};
const isRtlAware = (klass) => {
    return rtlAwareSet.has(klass);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _config_RTL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/RTL.js */ "./node_modules/@ui5/webcomponents-base/dist/config/RTL.js");

const GLOBAL_DIR_CSS_VAR = "--_ui5_dir";
const getEffectiveDir = (element) => {
    const doc = window.document;
    const dirValues = ["ltr", "rtl"]; // exclude "auto" and "" from all calculations
    const locallyAppliedDir = getComputedStyle(element).getPropertyValue(GLOBAL_DIR_CSS_VAR);
    // In that order, inspect the CSS Var (for modern browsers), the element itself, html and body (for IE fallback)
    if (dirValues.includes(locallyAppliedDir)) {
        return locallyAppliedDir;
    }
    if (dirValues.includes(element.dir)) {
        return element.dir;
    }
    if (dirValues.includes(doc.documentElement.dir)) {
        return doc.documentElement.dir;
    }
    if (dirValues.includes(doc.body.dir)) {
        return doc.body.dir;
    }
    // Finally, check the configuration for explicitly set RTL or language-implied RTL
    return (0,_config_RTL_js__WEBPACK_IMPORTED_MODULE_0__.getRTL)() ? "rtl" : undefined;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveDir);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/getLocale.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/getLocale.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_detectNavigatorLanguage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/detectNavigatorLanguage.js */ "./node_modules/@ui5/webcomponents-base/dist/util/detectNavigatorLanguage.js");
/* harmony import */ var _config_Language_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/Language.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Language.js");
/* harmony import */ var _Locale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Locale.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/Locale.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");




const cache = new Map();
const getLocaleInstance = (lang) => {
    if (!cache.has(lang)) {
        cache.set(lang, new _Locale_js__WEBPACK_IMPORTED_MODULE_2__["default"](lang));
    }
    return cache.get(lang);
};
const convertToLocaleOrNull = (lang) => {
    try {
        if (lang && typeof lang === "string") {
            return getLocaleInstance(lang);
        }
    }
    catch (e) {
        // ignore
    }
    return new _Locale_js__WEBPACK_IMPORTED_MODULE_2__["default"](_generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_LOCALE);
};
/**
 * Returns the locale based on the parameter or configured language Configuration#getLanguage
 * If no language has been configured - a new locale based on browser language is returned
 */
const getLocale = (lang) => {
    if (lang) {
        return convertToLocaleOrNull(lang);
    }
    const configLanguage = (0,_config_Language_js__WEBPACK_IMPORTED_MODULE_1__.getLanguage)();
    if (configLanguage) {
        return getLocaleInstance(configLanguage);
    }
    return convertToLocaleOrNull((0,_util_detectNavigatorLanguage_js__WEBPACK_IMPORTED_MODULE_0__["default"])());
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getLocale);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/languageChange.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/languageChange.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachLanguageChange: () => (/* binding */ attachLanguageChange),
/* harmony export */   detachLanguageChange: () => (/* binding */ detachLanguageChange),
/* harmony export */   fireLanguageChange: () => (/* binding */ fireLanguageChange)
/* harmony export */ });
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");

const eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
const LANG_CHANGE = "languageChange";
const attachLanguageChange = (listener) => {
    eventProvider.attachEvent(LANG_CHANGE, listener);
};
const detachLanguageChange = (listener) => {
    eventProvider.detachEvent(LANG_CHANGE, listener);
};
const fireLanguageChange = (lang) => {
    return eventProvider.fireEventAsync(LANG_CHANGE, lang);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/nextFallbackLocale.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/nextFallbackLocale.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");

/**
 * Calculates the next fallback locale for the given locale.
 *
 * @param {string} locale Locale string in Java format (underscores) or null
 * @returns {string} Next fallback Locale or "en" if no fallbacks found.
 */
const nextFallbackLocale = (locale) => {
    if (!locale) {
        return _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LOCALE;
    }
    if (locale === "zh_HK") {
        return "zh_TW";
    }
    // if there are multiple segments (separated by underscores), remove the last one
    const p = locale.lastIndexOf("_");
    if (p >= 0) {
        return locale.slice(0, p);
    }
    // for any language but the default, fallback to the default first before falling back to the 'raw' language (empty string)
    return locale !== _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LOCALE ? _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LOCALE : "";
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nextFallbackLocale);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/locale/normalizeLocale.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/locale/normalizeLocale.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");

const localeRegEX = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
const SAPSupportabilityLocales = /(?:^|-)(saptrc|sappsd)(?:-|$)/i;
/* Map for old language names for a few ISO639 codes. */
const M_ISO639_NEW_TO_OLD = {
    "he": "iw",
    "yi": "ji",
    "nb": "no",
    "sr": "sh",
};
/**
 * Normalizes the given locale in BCP-47 syntax.
 * @param {string} locale locale to normalize
 * @returns {string} Normalized locale, "undefined" if the locale can't be normalized or the default locale, if no locale provided.
 */
const normalizeLocale = (locale) => {
    let m;
    if (!locale) {
        return _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LOCALE;
    }
    if (typeof locale === "string" && (m = localeRegEX.exec(locale.replace(/_/g, "-")))) { /* eslint-disable-line */
        let language = m[1].toLowerCase();
        let region = m[3] ? m[3].toUpperCase() : undefined;
        const script = m[2] ? m[2].toLowerCase() : undefined;
        const variants = m[4] ? m[4].slice(1) : undefined;
        const isPrivate = m[6];
        language = M_ISO639_NEW_TO_OLD[language] || language;
        // recognize and convert special SAP supportability locales (overwrites m[]!)
        if ((isPrivate && (m = SAPSupportabilityLocales.exec(isPrivate))) /* eslint-disable-line */ ||
            (variants && (m = SAPSupportabilityLocales.exec(variants)))) { /* eslint-disable-line */
            return `en_US_${m[1].toLowerCase()}`; // for now enforce en_US (agreed with SAP SLS)
        }
        // Chinese: when no region but a script is specified, use default region for each script
        if (language === "zh" && !region) {
            if (script === "hans") {
                region = "CN";
            }
            else if (script === "hant") {
                region = "TW";
            }
        }
        return language + (region ? "_" + region + (variants ? "_" + variants.replace("-", "_") : "") : ""); /* eslint-disable-line */
    }
    return _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LOCALE;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (normalizeLocale);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   classMap: () => (/* reexport safe */ lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__.classMap),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   html: () => (/* binding */ effectiveHtml),
/* harmony export */   ifDefined: () => (/* reexport safe */ lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined),
/* harmony export */   repeat: () => (/* reexport safe */ lit_html_directives_repeat_js__WEBPACK_IMPORTED_MODULE_2__.repeat),
/* harmony export */   scopeTag: () => (/* binding */ scopeTag),
/* harmony export */   styleMap: () => (/* reexport safe */ _directives_style_map_js__WEBPACK_IMPORTED_MODULE_4__.styleMap),
/* harmony export */   svg: () => (/* binding */ effectiveSvg),
/* harmony export */   unsafeHTML: () => (/* reexport safe */ lit_html_directives_unsafe_html_js__WEBPACK_IMPORTED_MODULE_6__.unsafeHTML)
/* harmony export */ });
/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var lit_html_directives_repeat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-html/directives/repeat.js */ "./node_modules/lit-html/development/directives/repeat.js");
/* harmony import */ var lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/directives/class-map.js */ "./node_modules/lit-html/development/directives/class-map.js");
/* harmony import */ var _directives_style_map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./directives/style-map.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js");
/* harmony import */ var lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit-html/directives/if-defined.js */ "./node_modules/lit-html/development/directives/if-defined.js");
/* harmony import */ var lit_html_directives_unsafe_html_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lit-html/directives/unsafe-html.js */ "./node_modules/lit-html/development/directives/unsafe-html.js");


const effectiveHtml = (strings, ...values) => {
    const litStatic = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("LitStatic");
    const fn = litStatic ? litStatic.html : lit_html__WEBPACK_IMPORTED_MODULE_0__.html;
    return fn(strings, ...values);
};
const effectiveSvg = (strings, ...values) => {
    const litStatic = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("LitStatic");
    const fn = litStatic ? litStatic.svg : lit_html__WEBPACK_IMPORTED_MODULE_0__.svg;
    return fn(strings, ...values);
};
const litRender = (templateResult, container, styleStrOrHrefsArr, forStaticArea, options) => {
    const openUI5Enablement = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("OpenUI5Enablement");
    if (openUI5Enablement && !forStaticArea) {
        templateResult = openUI5Enablement.wrapTemplateResultInBusyMarkup(effectiveHtml, options.host, templateResult);
    }
    if (typeof styleStrOrHrefsArr === "string") {
        templateResult = effectiveHtml `<style>${styleStrOrHrefsArr}</style>${templateResult}`;
    }
    else if (Array.isArray(styleStrOrHrefsArr) && styleStrOrHrefsArr.length) {
        templateResult = effectiveHtml `${styleStrOrHrefsArr.map(href => effectiveHtml `<link type="text/css" rel="stylesheet" href="${href}">`)}${templateResult}`;
    }
    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(templateResult, container, options);
};
const scopeTag = (tag, tags, suffix) => {
    const litStatic = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("LitStatic");
    if (litStatic) {
        return litStatic.unsafeStatic((tags || []).includes(tag) ? `${tag}-${suffix}` : tag);
    }
};




// @ts-ignore style-map is a JS file



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (litRender);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleMap: () => (/* binding */ styleMap)
/* harmony export */ });
/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var lit_html_directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directive.js */ "./node_modules/lit-html/development/directive.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */

/**
 * This is the original style-map.js directive from lit-html 2 with the only difference that "render" is not called even for the first rendering (update is used instead)
 */



class StyleMapDirective extends lit_html_directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {
	constructor(partInfo) {
		var _a;
		super(partInfo);
		if (partInfo.type !== lit_html_directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.ATTRIBUTE ||
			partInfo.name !== 'style' ||
			((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {
			throw new Error('The `styleMap` directive must be used in the `style` attribute ' +
				'and must be the only part in the attribute.');
		}
	}
	render(styleInfo) {
		return "";
	}
	update(part, [styleInfo]) {
		const { style } = part.element;
		if (this._previousStyleProperties === undefined) {
			this._previousStyleProperties = new Set();
			for (const name in styleInfo) {
				this._previousStyleProperties.add(name);
			}
			// return this.render(styleInfo);
		}
		// Remove old properties that no longer exist in styleInfo
		// We use forEach() instead of for-of so that re don't require down-level
		// iteration.
		this._previousStyleProperties.forEach((name) => {
			// If the name isn't in styleInfo or it's null/undefined
			if (styleInfo[name] == null) {
				this._previousStyleProperties.delete(name);
				if (name.includes('-')) {
					style.removeProperty(name);
				}
				else {
					// Note reset using empty string (vs null) as IE11 does not always
					// reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)
					// eslint-disable-next-line @typescript-eslint/no-explicit-any
					style[name] = '';
				}
			}
		});
		// Add or update properties
		for (const name in styleInfo) {
			const value = styleInfo[name];
			if (value != null) {
				this._previousStyleProperties.add(name);
				if (name.includes('-')) {
					style.setProperty(name, value);
				}
				else {
					// eslint-disable-next-line @typescript-eslint/no-explicit-any
					style[name] = value;
				}
			}
		}
		return lit_html__WEBPACK_IMPORTED_MODULE_0__.noChange;
	}
}

const styleMap = (0,lit_html_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(StyleMapDirective);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CustomElementsScopeUtils.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js");

/**
 * Runs a component's template with the component's current state, while also scoping HTML
 *
 * @param template - the template to execute
 * @param component - the component
 * @public
 */
const executeTemplate = (template, component) => {
    const tagsToScope = getTagsToScope(component);
    const scope = (0,_CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_0__.getCustomElementsScopingSuffix)();
    return template.call(component, component, tagsToScope, scope);
};
/**
 * Returns all tags, used inside component's template subject to scoping.
 * @param component - the component
 * @returns {Array[]}
 * @private
 */
const getTagsToScope = (component) => {
    const ctor = component.constructor;
    const componentTag = ctor.getMetadata().getPureTag();
    const tagsToScope = ctor.getUniqueDependencies().map((dep) => dep.getMetadata().getPureTag()).filter(_CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_0__.shouldScopeCustomElement);
    if ((0,_CustomElementsScopeUtils_js__WEBPACK_IMPORTED_MODULE_0__.shouldScopeCustomElement)(componentTag)) {
        tagsToScope.push(componentTag);
    }
    return tagsToScope;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (executeTemplate);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addCustomCSS: () => (/* binding */ addCustomCSS),
/* harmony export */   attachCustomCSSChange: () => (/* binding */ attachCustomCSSChange),
/* harmony export */   detachCustomCSSChange: () => (/* binding */ detachCustomCSSChange),
/* harmony export */   getCustomCSS: () => (/* binding */ getCustomCSS)
/* harmony export */ });
/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _getSharedResource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../getSharedResource.js */ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js");
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");



const getEventProvider = () => (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_1__["default"])("CustomStyle.eventProvider", new _EventProvider_js__WEBPACK_IMPORTED_MODULE_2__["default"]());
const CUSTOM_CSS_CHANGE = "CustomCSSChange";
const attachCustomCSSChange = (listener) => {
    getEventProvider().attachEvent(CUSTOM_CSS_CHANGE, listener);
};
const detachCustomCSSChange = (listener) => {
    getEventProvider().detachEvent(CUSTOM_CSS_CHANGE, listener);
};
const fireCustomCSSChange = (tag) => {
    return getEventProvider().fireEvent(CUSTOM_CSS_CHANGE, tag);
};
const getCustomCSSFor = () => (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_1__["default"])("CustomStyle.customCSSFor", {});
// Listen to the eventProvider, in case other copies of this CustomStyle module fire this
// event, and this copy would therefore need to reRender the ui5 webcomponents; but
// don't reRender if it was this copy that fired the event to begin with.
let skipRerender;
attachCustomCSSChange((tag) => {
    if (!skipRerender) {
        (0,_Render_js__WEBPACK_IMPORTED_MODULE_0__.reRenderAllUI5Elements)({ tag });
    }
});
const addCustomCSS = (tag, css) => {
    const customCSSFor = getCustomCSSFor();
    if (!customCSSFor[tag]) {
        customCSSFor[tag] = [];
    }
    customCSSFor[tag].push(css);
    skipRerender = true;
    try {
        // The event is fired and the attached event listeners are all called synchronously
        // The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy
        // of CustomStyle.js which is firing the `CustomCSSChange` event.
        fireCustomCSSChange(tag);
    }
    finally {
        skipRerender = false;
    }
    return (0,_Render_js__WEBPACK_IMPORTED_MODULE_0__.reRenderAllUI5Elements)({ tag });
};
const getCustomCSS = (tag) => {
    const customCSSFor = getCustomCSSFor();
    return customCSSFor[tag] ? customCSSFor[tag].join("") : "";
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeLoaded.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/ThemeLoaded.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachThemeLoaded: () => (/* binding */ attachThemeLoaded),
/* harmony export */   detachThemeLoaded: () => (/* binding */ detachThemeLoaded),
/* harmony export */   fireThemeLoaded: () => (/* binding */ fireThemeLoaded)
/* harmony export */ });
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");

const eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
const THEME_LOADED = "themeLoaded";
const attachThemeLoaded = (listener) => {
    eventProvider.attachEvent(THEME_LOADED, listener);
};
const detachThemeLoaded = (listener) => {
    eventProvider.detachEvent(THEME_LOADED, listener);
};
const fireThemeLoaded = (theme) => {
    return eventProvider.fireEvent(THEME_LOADED, theme);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeRegistered.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/ThemeRegistered.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachThemeRegistered: () => (/* binding */ attachThemeRegistered),
/* harmony export */   fireThemeRegistered: () => (/* binding */ fireThemeRegistered)
/* harmony export */ });
/* harmony import */ var _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventProvider.js */ "./node_modules/@ui5/webcomponents-base/dist/EventProvider.js");

const eventProvider = new _EventProvider_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
const THEME_REGISTERED = "themeRegistered";
const attachThemeRegistered = (listener) => {
    eventProvider.attachEvent(THEME_REGISTERED, listener);
};
const fireThemeRegistered = (theme) => {
    return eventProvider.fireEvent(THEME_REGISTERED, theme);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/applyTheme.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/applyTheme.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ManagedStyles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ManagedStyles.js */ "./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js");
/* harmony import */ var _getThemeDesignerTheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getThemeDesignerTheme.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js");
/* harmony import */ var _ThemeLoaded_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ThemeLoaded.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeLoaded.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _config_ThemeRoot_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/ThemeRoot.js */ "./node_modules/@ui5/webcomponents-base/dist/config/ThemeRoot.js");
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");
/* harmony import */ var _Runtimes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Runtimes.js */ "./node_modules/@ui5/webcomponents-base/dist/Runtimes.js");








const BASE_THEME_PACKAGE = "@ui5/webcomponents-theming";
const isThemeBaseRegistered = () => {
    const registeredPackages = (0,_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.getRegisteredPackages)();
    return registeredPackages.has(BASE_THEME_PACKAGE);
};
const loadThemeBase = async (theme) => {
    if (!isThemeBaseRegistered()) {
        return;
    }
    const cssData = await (0,_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.getThemeProperties)(BASE_THEME_PACKAGE, theme);
    if (cssData) {
        (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdateStyle)(cssData, "data-ui5-theme-properties", BASE_THEME_PACKAGE, theme);
    }
};
const deleteThemeBase = () => {
    (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_1__.removeStyle)("data-ui5-theme-properties", BASE_THEME_PACKAGE);
};
const loadComponentPackages = async (theme) => {
    const registeredPackages = (0,_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.getRegisteredPackages)();
    const packagesStylesPromises = [...registeredPackages].map(async (packageName) => {
        if (packageName === BASE_THEME_PACKAGE) {
            return;
        }
        const cssData = await (0,_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.getThemeProperties)(packageName, theme);
        if (cssData) {
            (0,_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_1__.createOrUpdateStyle)(cssData, `data-ui5-component-properties-${(0,_Runtimes_js__WEBPACK_IMPORTED_MODULE_7__.getCurrentRuntimeIndex)()}`, packageName);
        }
    });
    return Promise.all(packagesStylesPromises);
};
const detectExternalTheme = async (theme) => {
    // If theme designer theme is detected, use this
    const extTheme = (0,_getThemeDesignerTheme_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
    if (extTheme) {
        return extTheme;
    }
    // If OpenUI5Support is enabled, try to find out if it loaded variables
    const openUI5Support = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_4__.getFeature)("OpenUI5Support");
    if (openUI5Support && openUI5Support.isOpenUI5Detected()) {
        const varsLoaded = openUI5Support.cssVariablesLoaded();
        if (varsLoaded) {
            return {
                themeName: openUI5Support.getConfigurationSettingsObject()?.theme,
                baseThemeName: "", // baseThemeName is only relevant for custom themes
            };
        }
    }
    else if ((0,_config_ThemeRoot_js__WEBPACK_IMPORTED_MODULE_5__.getThemeRoot)()) {
        await (0,_config_ThemeRoot_js__WEBPACK_IMPORTED_MODULE_5__.attachCustomThemeStylesToHead)(theme);
        return (0,_getThemeDesignerTheme_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
    }
};
const applyTheme = async (theme) => {
    const extTheme = await detectExternalTheme(theme);
    // Only load theme_base properties if there is no externally loaded theme, or there is, but it is not being loaded
    if (!extTheme || theme !== extTheme.themeName) {
        await loadThemeBase(theme);
    }
    else {
        deleteThemeBase();
    }
    // Always load component packages properties. For non-registered themes, try with the base theme, if any
    const packagesTheme = (0,_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.isThemeRegistered)(theme) ? theme : extTheme && extTheme.baseThemeName;
    await loadComponentPackages(packagesTheme || _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_THEME);
    (0,_ThemeLoaded_js__WEBPACK_IMPORTED_MODULE_3__.fireThemeLoaded)(theme);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (applyTheme);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getEffectiveStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getEffectiveStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js");
/* harmony import */ var _CustomStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CustomStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js");


const constructableStyleMap = new Map();
(0,_CustomStyle_js__WEBPACK_IMPORTED_MODULE_1__.attachCustomCSSChange)((tag) => {
    constructableStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part
});
/**
 * Returns (and caches) a constructable style sheet for a web component class
 * Note: Chrome
 * @param ElementClass
 * @returns {*}
 */
const getConstructableStyle = (ElementClass, forStaticArea = false) => {
    const tag = ElementClass.getMetadata().getTag();
    const key = `${tag}_${forStaticArea ? "static" : "normal"}`;
    if (!constructableStyleMap.has(key)) {
        const styleContent = (0,_getEffectiveStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ElementClass, forStaticArea);
        const style = new CSSStyleSheet();
        style.replaceSync(styleContent);
        constructableStyleMap.set(key, [style]);
    }
    return constructableStyleMap.get(key);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getConstructableStyle);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CSP_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CSP.js */ "./node_modules/@ui5/webcomponents-base/dist/CSP.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");


const MAX_DEPTH_INHERITED_CLASSES = 10; // TypeScript complains about Infinity and big numbers
const getEffectiveLinksHrefs = (ElementClass, forStaticArea = false) => {
    const stylesData = ElementClass[forStaticArea ? "staticAreaStyles" : "styles"];
    if (!stylesData) {
        return;
    }
    const stylesDataArray = Array.isArray(stylesData) ? stylesData : [stylesData];
    const openUI5Enablement = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("OpenUI5Enablement");
    if (openUI5Enablement) {
        stylesDataArray.push(openUI5Enablement.getBusyIndicatorStyles());
    }
    return stylesDataArray.flat(MAX_DEPTH_INHERITED_CLASSES).filter(data => !!data).map(data => (0,_CSP_js__WEBPACK_IMPORTED_MODULE_0__.getUrl)(data.packageName, data.fileName));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveLinksHrefs);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CustomStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js");
/* harmony import */ var _getStylesString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getStylesString.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");



const effectiveStyleMap = new Map();
(0,_CustomStyle_js__WEBPACK_IMPORTED_MODULE_0__.attachCustomCSSChange)((tag) => {
    effectiveStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part
});
const getEffectiveStyle = (ElementClass, forStaticArea = false) => {
    const tag = ElementClass.getMetadata().getTag();
    const key = `${tag}_${forStaticArea ? "static" : "normal"}`;
    const openUI5Enablement = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_2__.getFeature)("OpenUI5Enablement");
    if (!effectiveStyleMap.has(key)) {
        let effectiveStyle;
        let busyIndicatorStyles = "";
        if (openUI5Enablement) {
            busyIndicatorStyles = (0,_getStylesString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(openUI5Enablement.getBusyIndicatorStyles());
        }
        if (forStaticArea) {
            effectiveStyle = (0,_getStylesString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ElementClass.staticAreaStyles);
        }
        else {
            const customStyle = (0,_CustomStyle_js__WEBPACK_IMPORTED_MODULE_0__.getCustomCSS)(tag) || "";
            const builtInStyles = (0,_getStylesString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ElementClass.styles);
            effectiveStyle = `${builtInStyles} ${customStyle}`;
        }
        effectiveStyle = `${effectiveStyle} ${busyIndicatorStyles}`;
        effectiveStyleMap.set(key, effectiveStyle);
    }
    return effectiveStyleMap.get(key); // The key is guaranteed to exist
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveStyle);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const MAX_DEPTH_INHERITED_CLASSES = 10; // TypeScript complains about Infinity and big numbers
const getStylesString = (styles) => {
    if (Array.isArray(styles)) {
        return styles.filter(style => !!style).flat(MAX_DEPTH_INHERITED_CLASSES).map((style) => {
            return typeof style === "string" ? style : style.content;
        }).join(" ");
    }
    return typeof styles === "string" ? styles : styles.content;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getStylesString);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/getThemeDesignerTheme.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const warnings = new Set();
const getThemeMetadata = () => {
    // Check if the class was already applied, most commonly to the link/style tag with the CSS Variables
    let el = document.querySelector(".sapThemeMetaData-Base-baseLib") || document.querySelector(".sapThemeMetaData-UI5-sap-ui-core");
    if (el) {
        return getComputedStyle(el).backgroundImage;
    }
    el = document.createElement("span");
    el.style.display = "none";
    // Try with sapThemeMetaData-Base-baseLib first
    el.classList.add("sapThemeMetaData-Base-baseLib");
    document.body.appendChild(el);
    let metadata = getComputedStyle(el).backgroundImage;
    // Try with sapThemeMetaData-UI5-sap-ui-core only if the previous selector was not found
    if (metadata === "none") {
        el.classList.add("sapThemeMetaData-UI5-sap-ui-core");
        metadata = getComputedStyle(el).backgroundImage;
    }
    document.body.removeChild(el);
    return metadata;
};
const parseThemeMetadata = (metadataString) => {
    const params = /\(["']?data:text\/plain;utf-8,(.*?)['"]?\)$/i.exec(metadataString);
    if (params && params.length >= 2) {
        let paramsString = params[1];
        paramsString = paramsString.replace(/\\"/g, `"`);
        if (paramsString.charAt(0) !== "{" && paramsString.charAt(paramsString.length - 1) !== "}") {
            try {
                paramsString = decodeURIComponent(paramsString);
            }
            catch (ex) {
                if (!warnings.has("decode")) {
                    console.warn("Malformed theme metadata string, unable to decodeURIComponent"); // eslint-disable-line
                    warnings.add("decode");
                }
                return;
            }
        }
        try {
            return JSON.parse(paramsString);
        }
        catch (ex) {
            if (!warnings.has("parse")) {
                console.warn("Malformed theme metadata string, unable to parse JSON"); // eslint-disable-line
                warnings.add("parse");
            }
        }
    }
};
const processThemeMetadata = (metadata) => {
    let themeName;
    let baseThemeName;
    try {
        themeName = metadata.Path.match(/\.([^.]+)\.css_variables$/)[1];
        baseThemeName = metadata.Extends[0];
    }
    catch (ex) {
        if (!warnings.has("object")) {
            console.warn("Malformed theme metadata Object", metadata); // eslint-disable-line
            warnings.add("object");
        }
        return;
    }
    return {
        themeName,
        baseThemeName,
    };
};
const getThemeDesignerTheme = () => {
    const metadataString = getThemeMetadata();
    if (!metadataString || metadataString === "none") {
        return;
    }
    const metadata = parseThemeMetadata(metadataString);
    if (metadata) {
        return processThemeMetadata(metadata);
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getThemeDesignerTheme);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/theming/preloadLinks.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/theming/preloadLinks.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getEffectiveLinksHrefs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getEffectiveLinksHrefs.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js");
/* harmony import */ var _util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/createLinkInHead.js */ "./node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js");
/* harmony import */ var _CSP_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../CSP.js */ "./node_modules/@ui5/webcomponents-base/dist/CSP.js");



const preloaded = new Set();
const preloadLinks = (ElementClass) => {
    if (!(0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldUseLinks)() || !(0,_CSP_js__WEBPACK_IMPORTED_MODULE_2__.shouldPreloadLinks)()) {
        return;
    }
    const linksHrefs = (0,_getEffectiveLinksHrefs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ElementClass, false) || [];
    const staticAreaLinksHrefs = (0,_getEffectiveLinksHrefs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ElementClass, true) || [];
    [...linksHrefs, ...staticAreaLinksHrefs].forEach(href => {
        if (!preloaded.has(href)) {
            (0,_util_createLinkInHead_js__WEBPACK_IMPORTED_MODULE_1__["default"])(href, { rel: "preload", as: "style" });
            preloaded.add(href);
        }
    });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (preloadLinks);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/_merge.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/thirdparty/_merge.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject.js */ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/isPlainObject.js");

var oToken = Object.create(null);
var fnMerge = function (arg1, arg2, arg3, arg4) {
    var src, copyIsArray, copy, name, options, clone, target = arguments[2] || {}, i = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? undefined : oToken;
    if (typeof target !== 'object' && typeof target !== 'function') {
        target = {};
    }
    for (; i < length; i++) {
        if ((options = arguments[i]) != null) {
            for (name in options) {
                src = target[name];
                copy = options[name];
                if (name === '__proto__' || target === copy) {
                    continue;
                }
                if (deep && copy && ((0,_isPlainObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(copy) || (copyIsArray = Array.isArray(copy)))) {
                    if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && Array.isArray(src) ? src : [];
                    }
                    else {
                        clone = src && (0,_isPlainObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(src) ? src : {};
                    }
                    target[name] = fnMerge(deep, arguments[1], clone, copy);
                }
                else if (copy !== skipToken) {
                    target[name] = copy;
                }
            }
        }
    }
    return target;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fnMerge);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/isPlainObject.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/thirdparty/isPlainObject.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var class2type = {};
var hasOwn = class2type.hasOwnProperty;
var toString = class2type.toString;
var fnToString = hasOwn.toString;
var ObjectFunctionString = fnToString.call(Object);
var fnIsPlainObject = function (obj) {
    var proto, Ctor;
    if (!obj || toString.call(obj) !== "[object Object]") {
        return false;
    }
    proto = Object.getPrototypeOf(obj);
    if (!proto) {
        return true;
    }
    Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
    return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fnIsPlainObject);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/merge.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/thirdparty/merge.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_merge.js */ "./node_modules/@ui5/webcomponents-base/dist/thirdparty/_merge.js");

const fnMerge = function (arg1, arg2) {
    return (0,_merge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(true, false, ...arguments);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fnMerge);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/types/AnimationMode.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/types/AnimationMode.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different types of AnimationMode.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.base.types.AnimationMode
 */
var AnimationMode;
(function (AnimationMode) {
    /**
     * @public
     * @type {Full}
     */
    AnimationMode["Full"] = "full";
    /**
     * @public
     * @type {Basic}
     */
    AnimationMode["Basic"] = "basic";
    /**
     * @public
     * @type {Minimal}
     */
    AnimationMode["Minimal"] = "minimal";
    /**
     * @public
     * @type {None}
     */
    AnimationMode["None"] = "none";
})(AnimationMode || (AnimationMode = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnimationMode);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/types/DataType.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/types/DataType.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Base class for all data types.
 *
 * @class
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.base.types.DataType
 * @public
 */
class DataType {
    /**
     * Checks if the value is valid for its data type.
     * @public
     * @abstract
     * @returns {Boolean}
     */
    // eslint-disable-next-line
    static isValid(value) {
        return false;
    }
    static attributeToProperty(attributeValue) {
        return attributeValue;
    }
    static propertyToAttribute(propertyValue) {
        return propertyValue === null ? null : String(propertyValue);
    }
    static valuesAreEqual(value1, value2) {
        return value1 === value2;
    }
    static generateTypeAccessors(types) {
        Object.keys(types).forEach(type => {
            Object.defineProperty(this, type, {
                get() {
                    return types[type];
                },
            });
        });
    }
    static get isDataTypeClass() {
        return true;
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataType);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/types/Integer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/types/Integer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _DataType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataType.js */ "./node_modules/@ui5/webcomponents-base/dist/types/DataType.js");

/**
 * @class
 * Integer data type.
 *
 * @constructor
 * @extends sap.ui.webc.base.types.DataType
 * @author SAP SE
 * @alias sap.ui.webc.base.types.Integer
 * @public
 */
class Integer extends _DataType_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static isValid(value) {
        return Number.isInteger(value);
    }
    static attributeToProperty(attributeValue) {
        return parseInt(attributeValue);
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Integer);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/types/ValueState.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/types/ValueState.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different types of ValueStates.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.base.types.ValueState
 */
var ValueState;
(function (ValueState) {
    /**
     *
     * @public
     * @type {None}
     */
    ValueState["None"] = "None";
    /**
     *
     * @public
     * @type {Success}
     */
    ValueState["Success"] = "Success";
    /**
     *
     * @public
     * @type {Warning}
     */
    ValueState["Warning"] = "Warning";
    /**
     *
     * @public
     * @type {Error}
     */
    ValueState["Error"] = "Error";
    /**
     *
     * @public
     * @type {Information}
     */
    ValueState["Information"] = "Information";
})(ValueState || (ValueState = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ValueState);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _theming_getConstructableStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./theming/getConstructableStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js");
/* harmony import */ var _theming_getEffectiveStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theming/getEffectiveStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js");
/* harmony import */ var _theming_getEffectiveLinksHrefs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theming/getEffectiveLinksHrefs.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js");
/* harmony import */ var _CSP_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CSP.js */ "./node_modules/@ui5/webcomponents-base/dist/CSP.js");
/* harmony import */ var _Device_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Device.js */ "./node_modules/@ui5/webcomponents-base/dist/Device.js");





/**
 * Updates the shadow root of a UI5Element or its static area item
 * @param element
 * @param forStaticArea
 */
const updateShadowRoot = (element, forStaticArea = false) => {
    let styleStrOrHrefsArr;
    const ctor = element.constructor;
    const shadowRoot = forStaticArea ? element.staticAreaItem.shadowRoot : element.shadowRoot;
    let renderResult;
    if (forStaticArea) {
        renderResult = element.renderStatic(); // this is checked before calling updateShadowRoot
    }
    else {
        renderResult = element.render(); // this is checked before calling updateShadowRoot
    }
    if (!shadowRoot) {
        console.warn(`There is no shadow root to update`); // eslint-disable-line
        return;
    }
    if ((0,_CSP_js__WEBPACK_IMPORTED_MODULE_3__.shouldUseLinks)()) {
        styleStrOrHrefsArr = (0,_theming_getEffectiveLinksHrefs_js__WEBPACK_IMPORTED_MODULE_2__["default"])(ctor, forStaticArea);
    }
    else if (document.adoptedStyleSheets && !(0,_Device_js__WEBPACK_IMPORTED_MODULE_4__.isSafari)()) { // Chrome
        shadowRoot.adoptedStyleSheets = (0,_theming_getConstructableStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ctor, forStaticArea);
    }
    else { // FF, Safari
        styleStrOrHrefsArr = (0,_theming_getEffectiveStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ctor, forStaticArea);
    }
    if (ctor.renderer) {
        ctor.renderer(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });
        return;
    }
    ctor.render(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (updateShadowRoot);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deregisterUI5Element: () => (/* binding */ deregisterUI5Element),
/* harmony export */   getAllAccessibleNameRefTexts: () => (/* binding */ getAllAccessibleNameRefTexts),
/* harmony export */   getAssociatedLabelForTexts: () => (/* binding */ getAssociatedLabelForTexts),
/* harmony export */   getEffectiveAriaLabelText: () => (/* binding */ getEffectiveAriaLabelText),
/* harmony export */   registerUI5Element: () => (/* binding */ registerUI5Element)
/* harmony export */ });
const associatedElements = new WeakMap();
const registeredElements = new WeakMap();
const observerOptions = {
    attributes: true,
    childList: true,
    characterData: true,
    subtree: true,
};
const getEffectiveAriaLabelText = (el) => {
    const accessibleEl = el;
    if (!accessibleEl.accessibleNameRef) {
        if (accessibleEl.accessibleName) {
            return accessibleEl.accessibleName;
        }
        return undefined;
    }
    return getAllAccessibleNameRefTexts(el);
};
/**
 *
 * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related texts
 */
const getAllAccessibleNameRefTexts = (el) => {
    const ids = el.accessibleNameRef?.split(" ") ?? [];
    const owner = el.getRootNode();
    let result = "";
    ids.forEach((elementId, index) => {
        const element = owner.querySelector(`[id='${elementId}']`);
        const text = `${element && element.textContent ? element.textContent : ""}`;
        if (text) {
            result += text;
            if (index < ids.length - 1) {
                result += " ";
            }
        }
    });
    return result;
};
const _getAllAssociatedElementsFromDOM = (el) => {
    const set = new Set();
    // adding labels with attribute for matching the el.id
    const labelsForAssociated = _getAssociatedLabels(el);
    labelsForAssociated.forEach(itm => {
        set.add(itm);
    });
    // adding other elements that id is the same as accessibleNameRef value
    const value = el["accessibleNameRef"];
    const ids = value?.split(" ") ?? [];
    ids.forEach(id => {
        const refEl = _getReferencedElementById(el, id);
        if (refEl) {
            set.add(refEl);
        }
    });
    return Array.from(set);
};
const _getAssociatedLabels = (el) => {
    const labels = el.getRootNode().querySelectorAll(`[for="${el.id}"]`);
    return Array.from(labels);
};
const _getReferencedElementById = (el, elementId) => {
    return el.getRootNode().querySelector(`[id='${elementId}']`);
};
/**
 * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related "label for" texts
 */
const getAssociatedLabelForTexts = (el) => {
    const results = [];
    const labels = _getAssociatedLabels(el);
    labels.forEach((label) => {
        const labelText = label.textContent;
        labelText && results.push(labelText);
    });
    if (results.length) {
        return results.join(" ");
    }
    return undefined;
};
const _createInvalidationCallback = (el) => {
    const invalidationCallback = (changeInfo) => {
        if (!(changeInfo && changeInfo.type === "property" && changeInfo.name === "accessibleNameRef")) {
            return;
        }
        const registeredElement = registeredElements.get(el);
        if (!registeredElement) {
            return;
        }
        const oldAssociatedElements = registeredElement.observedElements;
        const newAssociatedElements = _getAllAssociatedElementsFromDOM(el);
        oldAssociatedElements.forEach(oldElement => {
            if (!newAssociatedElements.includes(oldElement)) {
                _removeObservedElementFromRegisteredElement(registeredElement, oldElement);
            }
        });
        newAssociatedElements.forEach(newElement => {
            if (!oldAssociatedElements.includes(newElement)) {
                _addObservedElementToRegisteredElement(registeredElement, newElement);
                registeredElement.observedElements.push(newElement);
            }
        });
        registeredElement?.callback();
    };
    return invalidationCallback;
};
const registerUI5Element = (el, callback) => {
    if (registeredElements.has(el)) {
        return;
    }
    const allAssociatedElements = _getAllAssociatedElementsFromDOM(el);
    const invalidationCallback = _createInvalidationCallback(el);
    const registeredElement = {
        host: el,
        observedElements: allAssociatedElements,
        callback,
        invalidationCallback,
    };
    registeredElements.set(el, registeredElement);
    el.attachInvalidate(invalidationCallback);
    allAssociatedElements.forEach((element) => {
        _addObservedElementToRegisteredElement(registeredElement, element);
    });
    callback();
};
const _addObservedElementToRegisteredElement = (registeredElement, element) => {
    let associatedElement = associatedElements.get(element);
    if (!associatedElement) {
        associatedElement = { observer: null, callbacks: [] };
        const observer = new MutationObserver(() => {
            const callbacks = associatedElement.callbacks;
            callbacks.forEach(callback => {
                callback();
            });
            const domEl = document.getElementById(element.id);
            // if no longer should be observed from this registeredElement, remove it
            if (!(registeredElement.host.id === element.getAttribute("for") || domEl)) {
                _removeObservedElementFromRegisteredElement(registeredElement, element);
            }
        });
        associatedElement.observer = observer;
        observer.observe(element, observerOptions);
        associatedElements.set(element, associatedElement);
    }
    if (!associatedElement.callbacks.includes(registeredElement.callback)) {
        associatedElement.callbacks.push(registeredElement.callback);
    }
};
const _removeObservedElementFromRegisteredElement = (registeredElement, element) => {
    const associatedElement = associatedElements.get(element);
    if (associatedElement) {
        associatedElement.callbacks = associatedElement.callbacks.filter(itm => itm !== registeredElement.callback);
        if (!associatedElement.callbacks.length) {
            associatedElement.observer?.disconnect();
            associatedElements.delete(element);
        }
    }
    registeredElement.observedElements = registeredElement.observedElements.filter(itm => itm !== element);
};
const deregisterUI5Element = (el) => {
    const registeredElement = registeredElements.get(el);
    if (!registeredElement) {
        return;
    }
    const oldObservedElements = [...registeredElement.observedElements];
    oldObservedElements.forEach(observedElement => {
        _removeObservedElementFromRegisteredElement(registeredElement, observedElement);
    });
    el.detachInvalidate(registeredElement.invalidationCallback);
    registeredElements.delete(el);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/FocusableElements.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/FocusableElements.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFirstFocusableElement: () => (/* binding */ getFirstFocusableElement),
/* harmony export */   getLastFocusableElement: () => (/* binding */ getLastFocusableElement)
/* harmony export */ });
/* harmony import */ var _isElementHidden_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isElementHidden.js */ "./node_modules/@ui5/webcomponents-base/dist/util/isElementHidden.js");
/* harmony import */ var _isElementClickable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isElementClickable.js */ "./node_modules/@ui5/webcomponents-base/dist/util/isElementClickable.js");
/* harmony import */ var _UI5Element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");



const isFocusTrap = (el) => {
    return el.hasAttribute("data-ui5-focus-trap");
};
const getFirstFocusableElement = async (container, startFromContainer) => {
    if (!container || (0,_isElementHidden_js__WEBPACK_IMPORTED_MODULE_0__["default"])(container)) {
        return null;
    }
    return findFocusableElement(container, true, startFromContainer);
};
const getLastFocusableElement = async (container, startFromContainer) => {
    if (!container || (0,_isElementHidden_js__WEBPACK_IMPORTED_MODULE_0__["default"])(container)) {
        return null;
    }
    return findFocusableElement(container, false, startFromContainer);
};
const isElemFocusable = (el) => {
    return el.hasAttribute("data-ui5-focus-redirect") || !(0,_isElementHidden_js__WEBPACK_IMPORTED_MODULE_0__["default"])(el);
};
const findFocusableElement = async (container, forward, startFromContainer) => {
    let child;
    let assignedElements;
    let currentIndex = -1;
    if (container.shadowRoot) {
        child = forward ? container.shadowRoot.firstChild : container.shadowRoot.lastChild;
    }
    else if (container instanceof HTMLSlotElement && container.assignedNodes()) {
        assignedElements = container.assignedNodes();
        currentIndex = forward ? 0 : assignedElements.length - 1;
        child = assignedElements[currentIndex];
    }
    else if (startFromContainer) {
        child = container;
    }
    else {
        child = forward ? container.firstElementChild : container.lastElementChild;
    }
    let focusableDescendant;
    /* eslint-disable no-await-in-loop */
    while (child) {
        const originalChild = child;
        if ((0,_UI5Element_js__WEBPACK_IMPORTED_MODULE_2__.instanceOfUI5Element)(child)) {
            child = await child.getFocusDomRefAsync();
        }
        if (!child) {
            return null;
        }
        if (child.nodeType === 1 && isElemFocusable(child) && !isFocusTrap(child)) {
            if ((0,_isElementClickable_js__WEBPACK_IMPORTED_MODULE_1__["default"])(child)) {
                return (child && typeof child.focus === "function") ? child : null;
            }
            focusableDescendant = await findFocusableElement(child, forward);
            if (focusableDescendant) {
                return (focusableDescendant && typeof focusableDescendant.focus === "function") ? focusableDescendant : null;
            }
        }
        child = forward ? originalChild.nextSibling : originalChild.previousSibling;
        // If the child element is not part of the currently assigned element,
        // we have to check the next/previous element assigned to the slot or continue with the next/previous sibling of the slot,
        // otherwise, the nextSibling/previousSibling is the next element inside the light DOM
        if (assignedElements && !assignedElements[currentIndex].contains(child)) {
            currentIndex = forward ? currentIndex + 1 : currentIndex - 1;
            child = assignedElements[currentIndex];
        }
    }
    /* eslint-enable no-await-in-loop */
    return null;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/PopupUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/PopupUtils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getClosedPopupParent: () => (/* binding */ getClosedPopupParent),
/* harmony export */   getCurrentZIndex: () => (/* binding */ getCurrentZIndex),
/* harmony export */   getFocusedElement: () => (/* binding */ getFocusedElement),
/* harmony export */   getNextZIndex: () => (/* binding */ getNextZIndex),
/* harmony export */   isClickInRect: () => (/* binding */ isClickInRect),
/* harmony export */   isFocusedElementWithinNode: () => (/* binding */ isFocusedElementWithinNode)
/* harmony export */ });
/* harmony import */ var _getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../getSharedResource.js */ "./node_modules/@ui5/webcomponents-base/dist/getSharedResource.js");
/* harmony import */ var _FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _getActiveElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActiveElement.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js");



const popupUtilsData = (0,_getSharedResource_js__WEBPACK_IMPORTED_MODULE_0__["default"])("PopupUtilsData", { currentZIndex: 100 });
const getFocusedElement = () => {
    const element = (0,_getActiveElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
    return (element && typeof element.focus === "function") ? element : null;
};
const isFocusedElementWithinNode = (node) => {
    const fe = getFocusedElement();
    if (fe) {
        return isNodeContainedWithin(node, fe);
    }
    return false;
};
const isNodeContainedWithin = (parent, child) => {
    let currentNode = parent;
    if (currentNode.shadowRoot) {
        const children = Array.from(currentNode.shadowRoot.children);
        currentNode = children.find(n => n.localName !== "style");
        if (!currentNode) {
            return false;
        }
    }
    if (currentNode === child) {
        return true;
    }
    const childNodes = currentNode.localName === "slot" ? currentNode.assignedNodes() : currentNode.children;
    if (childNodes) {
        return Array.from(childNodes).some(n => isNodeContainedWithin(n, child));
    }
    return false;
};
const isPointInRect = (x, y, rect) => {
    return x >= rect.left && x <= rect.right
        && y >= rect.top && y <= rect.bottom;
};
const isClickInRect = (e, rect) => {
    let x;
    let y;
    if (e instanceof MouseEvent) {
        x = e.clientX;
        y = e.clientY;
    }
    else {
        const touch = e.touches[0];
        x = touch.clientX;
        y = touch.clientY;
    }
    return isPointInRect(x, y, rect);
};
function instanceOfPopup(object) {
    return "isUI5Element" in object && "_show" in object;
}
const getClosedPopupParent = (el) => {
    const parent = el.parentElement || (el.getRootNode && el.getRootNode().host);
    if (parent && ((instanceOfPopup(parent) || parent === document.documentElement))) {
        return parent;
    }
    return getClosedPopupParent(parent);
};
const getNextZIndex = () => {
    const openUI5Support = (0,_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_1__.getFeature)("OpenUI5Support");
    if (openUI5Support && openUI5Support.isOpenUI5Detected()) { // use OpenUI5 for getting z-index values, if loaded
        return openUI5Support.getNextZIndex();
    }
    popupUtilsData.currentZIndex += 2;
    return popupUtilsData.currentZIndex;
};
const getCurrentZIndex = () => {
    return popupUtilsData.currentZIndex;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSlotName: () => (/* binding */ getSlotName),
/* harmony export */   getSlottedNodes: () => (/* binding */ getSlottedNodes),
/* harmony export */   getSlottedNodesList: () => (/* binding */ getSlottedNodesList)
/* harmony export */ });
/**
 * Determines the slot to which a node should be assigned
 * @param node Text node or HTML element
 * @returns {string}
 */
const getSlotName = (node) => {
    // Text nodes can only go to the default slot
    if (!(node instanceof HTMLElement)) {
        return "default";
    }
    // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)
    const slot = node.getAttribute("slot");
    if (slot) {
        const match = slot.match(/^(.+?)-\d+$/);
        return match ? match[1] : slot;
    }
    // Use default slot as a fallback
    return "default";
};
const getSlottedNodes = (node) => {
    if (node instanceof HTMLSlotElement) {
        return node.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);
    }
    return [node];
};
const getSlottedNodesList = (nodeList) => {
    return nodeList.reduce((acc, curr) => acc.concat(getSlottedNodes(curr)), []);
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   camelToKebabCase: () => (/* binding */ camelToKebabCase),
/* harmony export */   kebabToCamelCase: () => (/* binding */ kebabToCamelCase)
/* harmony export */ });
const kebabToCamelMap = new Map();
const camelToKebabMap = new Map();
const kebabToCamelCase = (string) => {
    if (!kebabToCamelMap.has(string)) {
        const result = toCamelCase(string.split("-"));
        kebabToCamelMap.set(string, result);
    }
    return kebabToCamelMap.get(string);
};
const camelToKebabCase = (string) => {
    if (!camelToKebabMap.has(string)) {
        const result = string.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
        camelToKebabMap.set(string, result);
    }
    return camelToKebabMap.get(string);
};
const toCamelCase = (parts) => {
    return parts.map((string, index) => {
        return index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
    }).join("");
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const arraysAreEqual = (arr1, arr2) => {
    if (arr1.length !== arr2.length) {
        return false;
    }
    for (let i = 0; i < arr1.length; i++) {
        if (arr1[i] !== arr2[i]) {
            return false;
        }
    }
    return true;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arraysAreEqual);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/clamp.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/clamp.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns a value clamped between an upper bound 'max' and lower bound 'min'.
 * @param {number} val value
 * @param {number} min lower bound
 * @param {number} max upper bound
 * @returns {number}
 */
const clamp = (val, min, max) => {
    return Math.min(Math.max(val, min), max);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clamp);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/createLinkInHead.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Creates a <link> tag in the <head> tag
 * @param href - the CSS
 * @param attributes - optional attributes to add to the tag
 */
const createLinkInHead = (href, attributes) => {
    const link = document.createElement("link");
    link.type = "text/css";
    link.rel = "stylesheet";
    if (attributes) {
        Object.entries(attributes).forEach(pair => link.setAttribute(...pair));
    }
    link.href = href;
    document.head.appendChild(link);
    return new Promise(resolve => {
        link.addEventListener("load", resolve);
        link.addEventListener("error", resolve); // intended
    });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createLinkInHead);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/createStyleInHead.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/createStyleInHead.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Creates a <style> tag in the <head> tag
 * @param cssText - the CSS
 * @param attributes - optional attributes to add to the tag
 * @returns {HTMLElement}
 */
const createStyleInHead = (cssText, attributes) => {
    const style = document.createElement("style");
    style.type = "text/css";
    if (attributes) {
        Object.entries(attributes).forEach(pair => style.setAttribute(...pair));
    }
    style.textContent = cssText;
    document.head.appendChild(style);
    return style;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createStyleInHead);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/detectNavigatorLanguage.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/detectNavigatorLanguage.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generated/AssetParameters.js */ "./node_modules/@ui5/webcomponents-base/dist/generated/AssetParameters.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (() => {
    const browserLanguages = navigator.languages;
    const navigatorLanguage = () => {
        return navigator.language;
    };
    const rawLocale = (browserLanguages && browserLanguages[0]) || navigatorLanguage();
    return rawLocale || _generated_AssetParameters_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_LANGUAGE;
});


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/formatMessage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/formatMessage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const messageFormatRegEX = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
const formatMessage = (text, values) => {
    values = values || [];
    return text.replace(messageFormatRegEX, ($0, $1, $2, $3, offset) => {
        if ($1) {
            return '\''; /* eslint-disable-line */
        }
        if ($2) {
            return $2.replace(/''/g, '\''); /* eslint-disable-line */
        }
        if ($3) {
            const ind = typeof $3 === "string" ? parseInt($3) : $3;
            return String(values[ind]);
        }
        throw new Error(`[i18n]: pattern syntax error at pos ${offset}`);
    });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatMessage);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const getActiveElement = () => {
    let element = document.activeElement;
    while (element && element.shadowRoot && element.shadowRoot.activeElement) {
        element = element.shadowRoot.activeElement;
    }
    return element;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getActiveElement);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((value) => {
    const m = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(value);
    return m && m[2] ? m[2].split(/,/) : null;
});


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const GLOBAL_CONTENT_DENSITY_CSS_VAR = "--_ui5_content_density";
const getEffectiveContentDensity = (el) => getComputedStyle(el).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveContentDensity);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const NO_SCROLLBAR_STYLE_CLASS = "ui5-content-native-scrollbars";
const getEffectiveScrollbarStyle = () => document.body.classList.contains(NO_SCROLLBAR_STYLE_CLASS);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getEffectiveScrollbarStyle);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/getSingletonElementInstance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/getSingletonElementInstance.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Returns a singleton HTML element, inserted in given parent element of HTML page,
 * used mostly to store and share global resources between multiple UI5 Web Components runtimes.
 *
 * @param { string } tag the element tag/selector
 * @param { HTMLElement } parentElement the parent element to insert the singleton element instance
 * @param { Function } createEl a factory function for the element instantiation, by default document.createElement is used
 * @returns { Element }
 */
const getSingletonElementInstance = (tag, parentElement = document.body, createEl) => {
    let el = document.querySelector(tag);
    if (el) {
        return el;
    }
    el = createEl ? createEl() : document.createElement(tag);
    return parentElement.insertBefore(el, parentElement.firstChild);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getSingletonElementInstance);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/isElementClickable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/isElementClickable.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const rClickable = /^(?:a|area)$/i;
const rFocusable = /^(?:input|select|textarea|button)$/i;
const isElementClickable = (el) => {
    if (el.disabled) {
        return false;
    }
    const tabIndex = el.getAttribute("tabindex");
    if (tabIndex !== null && tabIndex !== undefined) {
        return parseInt(tabIndex) >= 0;
    }
    return rFocusable.test(el.nodeName)
        || (rClickable.test(el.nodeName)
            && !!el.href);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isElementClickable);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/isElementHidden.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/isElementHidden.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const isElementHidden = (el) => {
    if (el.nodeName === "SLOT") {
        return false;
    }
    return (el.offsetWidth <= 0 && el.offsetHeight <= 0) || (el.style && el.style.visibility === "hidden");
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isElementHidden);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Note: disabled is present in IE so we explicitly allow it here.
// Others, such as title/hidden, we explicitly override, so valid too
const allowList = [
    "disabled",
    "title",
    "hidden",
    "role",
    "draggable",
];
/**
 * Checks whether a property name is valid (does not collide with existing DOM API properties)
 *
 * @param name
 * @returns {boolean}
 */
const isValidPropertyName = (name) => {
    if (allowList.includes(name) || name.startsWith("aria")) {
        return true;
    }
    const classes = [
        HTMLElement,
        Element,
        Node,
    ];
    return !classes.some(klass => klass.prototype.hasOwnProperty(name)); // eslint-disable-line
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isValidPropertyName);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/whenDOMReady.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/whenDOMReady.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const whenDOMReady = () => {
    return new Promise(resolve => {
        if (document.body) {
            resolve();
        }
        else {
            document.addEventListener("DOMContentLoaded", () => {
                resolve();
            });
        }
    });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (whenDOMReady);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/util/willShowContent.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/util/willShowContent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const willShowContent = (childNodes) => {
    return Array.from(childNodes).filter(node => {
        return node.nodeType !== Node.COMMENT_NODE && (node.nodeType !== Node.TEXT_NODE || (node.nodeValue || "").trim().length !== 0);
    }).length > 0;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (willShowContent);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-base/dist/validateThemeRoot.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-base/dist/validateThemeRoot.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const getMetaTagValue = (metaTagName) => {
    const metaTag = document.querySelector(`META[name="${metaTagName}"]`), metaTagContent = metaTag && metaTag.getAttribute("content");
    return metaTagContent;
};
const validateThemeOrigin = (origin) => {
    const allowedOrigins = getMetaTagValue("sap-allowedThemeOrigins");
    return allowedOrigins && allowedOrigins.split(",").some(allowedOrigin => {
        return allowedOrigin === "*" || origin === allowedOrigin.trim();
    });
};
const buildCorrectUrl = (oldUrl, newOrigin) => {
    const oldUrlPath = new URL(oldUrl).pathname;
    return new URL(oldUrlPath, newOrigin).toString();
};
const validateThemeRoot = (themeRoot) => {
    let resultUrl;
    try {
        if (themeRoot.startsWith(".") || themeRoot.startsWith("/")) {
            // Handle relative url
            // new URL("/newExmPath", "http://example.com/exmPath") => http://example.com/newExmPath
            // new URL("./newExmPath", "http://example.com/exmPath") => http://example.com/exmPath/newExmPath
            // new URL("../newExmPath", "http://example.com/exmPath") => http://example.com/newExmPath
            resultUrl = new URL(themeRoot, window.location.href).toString();
        }
        else {
            const themeRootURL = new URL(themeRoot);
            const origin = themeRootURL.origin;
            if (origin && validateThemeOrigin(origin)) {
                // If origin is allowed, use it
                resultUrl = themeRootURL.toString();
            }
            else {
                // If origin is not allow and the URL is not relative, we have to replace the origin
                // with current location
                resultUrl = buildCorrectUrl(themeRootURL.toString(), window.location.href);
            }
        }
        if (!resultUrl.endsWith("/")) {
            resultUrl = `${resultUrl}/`;
        }
        return `${resultUrl}UI5/`;
    }
    catch (e) {
        // Catch if URL is not correct
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validateThemeRoot);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-fiori/dist/Bar.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-fiori/dist/Bar.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/slot.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/delegate/ResizeHandler.js */ "./node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js");
/* harmony import */ var _types_BarDesign_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./types/BarDesign.js */ "./node_modules/@ui5/webcomponents-fiori/dist/types/BarDesign.js");
/* harmony import */ var _generated_templates_BarTemplate_lit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/templates/BarTemplate.lit.js */ "./node_modules/@ui5/webcomponents-fiori/dist/generated/templates/BarTemplate.lit.js");
/* harmony import */ var _generated_themes_Bar_css_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./generated/themes/Bar.css.js */ "./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Bar.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







// Template

// Styles

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 * The Bar is a container which is primarily used to hold titles, buttons and input elements
 * and its design and functionality is the basis for page headers and footers.
 * The component consists of three areas to hold its content - startContent slot, default slot and endContent slot.
 * It has the capability to center content, such as a title, while having other components on the left and right side.
 *
 * <h3>Usage</h3>
 * With the use of the design property, you can set the style of the Bar to appear designed like a Header, Subheader, Footer and FloatingFooter.
 * <br>
 * <b>Note:</b> Do not place a Bar inside another Bar or inside any bar-like component. Doing so may cause unpredictable behavior.
 *
 * <h3>Responsive Behavior</h3>
 * The default slot will be centered in the available space between the startContent and the endContent areas,
 * therefore it might not always be centered in the entire bar.
 *
 * <h3>CSS Shadow Parts</h3>
 *
 * <ui5-link target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/::part">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.
 * <br>
 * The <code>ui5-bar</code> exposes the following CSS Shadow Parts:
 * <ul>
 * <li>bar - Used to style the wrapper of the content of the component</li>
 * </ul>
 *
 * <h3>Keyboard Handling</h3>
 *
 * <h4>Fast Navigation</h4>
 * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.
 * In order to use this functionality, you need to import the following module:
 * <code>import "@ui5/webcomponents-base/dist/features/F6Navigation.js"</code>
 * <br><br>
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents-fiori/dist/Bar.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.fiori.Bar
 * @implements sap.ui.webc.fiori.IBar
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-bar
 * @public
 * @since 1.0.0-rc.11
 */
let Bar = class Bar extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    get accInfo() {
        return {
            "label": this.design,
        };
    }
    constructor() {
        super();
        this._handleResizeBound = this.handleResize.bind(this);
    }
    handleResize() {
        const bar = this.getDomRef();
        const barWidth = bar.offsetWidth;
        const needShrinked = Array.from(bar.children).some(child => {
            return child.offsetWidth > barWidth / 3;
        });
        bar.classList.toggle("ui5-bar-root-shrinked", needShrinked);
    }
    get classes() {
        return {
            root: {
                "ui5-bar-root": true,
            },
        };
    }
    onEnterDOM() {
        _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_5__["default"].register(this, this._handleResizeBound);
        this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach(child => {
            _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_5__["default"].register(child, this._handleResizeBound);
        }, this);
    }
    onExitDOM() {
        _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_5__["default"].deregister(this, this._handleResizeBound);
        this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach(child => {
            _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_5__["default"].deregister(child, this._handleResizeBound);
        }, this);
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: _types_BarDesign_js__WEBPACK_IMPORTED_MODULE_6__["default"], defaultValue: _types_BarDesign_js__WEBPACK_IMPORTED_MODULE_6__["default"].Header })
], Bar.prototype, "design", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: HTMLElement })
], Bar.prototype, "startContent", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: HTMLElement, "default": true })
], Bar.prototype, "middleContent", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: HTMLElement })
], Bar.prototype, "endContent", void 0);
Bar = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        tag: "ui5-bar",
        fastNavigation: true,
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_4__["default"],
        styles: _generated_themes_Bar_css_js__WEBPACK_IMPORTED_MODULE_8__["default"],
        template: _generated_templates_BarTemplate_lit_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    })
], Bar);
Bar.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Bar);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-fiori/dist/generated/templates/BarTemplate.lit.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-fiori/dist/generated/templates/BarTemplate.lit.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.root)}" aria-label="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.accInfo.label)}" role="toolbar" part="bar"><div class="ui5-bar-content-container ui5-bar-startcontent-container"><slot name="startContent"></slot></div><div class="ui5-bar-content-container ui5-bar-midcontent-container"><slot></slot></div><div class="ui5-bar-content-container ui5-bar-endcontent-container"><slot name="endContent"></slot></div></div>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Bar.css.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Bar.css.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-fiori", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents-fiori", fileName: "themes/Bar.css", content: ":host{background-color:var(--sapPageHeader_Background);box-shadow:var(--sapContent_HeaderShadow);display:block;height:var(--_ui5-v1-19-1_bar_base_height);width:100%}.ui5-bar-root{align-items:center;background-color:inherit;border-radius:inherit;box-shadow:inherit;display:flex;height:inherit;justify-content:space-between;width:inherit}.ui5-bar-root .ui5-bar-startcontent-container{align-items:center;display:flex;flex-direction:row;justify-content:flex-start;padding-inline-start:var(--_ui5-v1-19-1_bar-start-container-padding-start)}.ui5-bar-root .ui5-bar-content-container{min-width:calc(30% - var(--_ui5-v1-19-1_bar-start-container-padding-start) - var(--_ui5-v1-19-1_bar-end-container-padding-end) - var(--_ui5-v1-19-1_bar-mid-container-padding-start-end)*2)}.ui5-bar-root.ui5-bar-root-shrinked .ui5-bar-content-container{height:100%;min-width:0;overflow:hidden}.ui5-bar-root .ui5-bar-endcontent-container{align-items:center;display:flex;flex-direction:row;justify-content:flex-end;padding-inline-end:var(--_ui5-v1-19-1_bar-end-container-padding-end)}.ui5-bar-root .ui5-bar-midcontent-container{align-items:center;display:flex;flex-direction:row;justify-content:center;padding:0 var(--_ui5-v1-19-1_bar-mid-container-padding-start-end)}:host([design=Footer]){background-color:var(--sapPageFooter_Background);border-top:.0625rem solid var(--sapPageFooter_BorderColor);box-shadow:none}:host([design=Subheader]){height:var(--_ui5-v1-19-1_bar_subheader_height)}:host([design=FloatingFooter]){background-color:var(--sapPageFooter_Background);border:none;border-radius:var(--sapElement_BorderCornerRadius);box-shadow:var(--sapContent_Shadow1)}::slotted(*){margin:0 .25rem}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/sap_horizon/parameters-bundle.css.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-fiori/dist/generated/themes/sap_horizon/parameters-bundle.css.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = { packageName: "@ui5/webcomponents-fiori", fileName: "themes/sap_horizon/parameters-bundle.css", content: ".sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5-v1-19-1_bar_base_height:2.5rem;--_ui5-v1-19-1_bar_subheader_height:2.25rem;--_ui5-v1-19-1_side_navigation_container_padding:1.5rem 0.75rem 0.75rem 0.75rem;--_ui5-v1-19-1_side_navigation_item_gap:0.5rem;--_ui5-v1-19-1_side_navigation_item_height:2rem}:root{--_ui5-v1-19-1_bar_base_height:2.75rem;--_ui5-v1-19-1_bar_subheader_height:3rem;--_ui5-v1-19-1_bar-start-container-padding-start:0.75rem;--_ui5-v1-19-1_bar-mid-container-padding-start-end:0.5rem;--_ui5-v1-19-1_bar-end-container-padding-end:0.75rem;--_ui5-v1-19-1_fcl_solid_bg:var(--sapShell_Background);--_ui5-v1-19-1_fcl_decoration_top:linear-gradient(to top,var(--sapHighlightColor),transparent);--_ui5-v1-19-1_fcl_decoration_bottom:linear-gradient(to bottom,var(--sapHighlightColor),transparent);--sapIllus_BrandColorPrimary:var(--sapContent_Illustrative_Color1);--sapIllus_BrandColorSecondary:var(--sapContent_Illustrative_Color2);--sapIllus_StrokeDetailColor:var(--sapContent_Illustrative_Color4);--sapIllus_Layering1:var(--sapContent_Illustrative_Color5);--sapIllus_Layering2:var(--sapContent_Illustrative_Color6);--sapIllus_BackgroundColor:var(--sapContent_Illustrative_Color7);--sapIllus_ObjectFillColor:var(--sapContent_Illustrative_Color8);--sapIllus_AccentColor:var(--sapContent_Illustrative_Color3);--sapIllus_NoColor:none;--sapIllus_PatternShadow:url(#sapIllus_PatternShadow);--sapIllus_PatternHighlight:url(#sapIllus_PatternHighlight);--_ui5-v1-19-1_media_gallery_thumbnail_border:1px solid var(--sapContent_ForegroundColor);--_ui5-v1-19-1_media_gallery_thumbnail_selected_border:2px solid var(--sapSelectedColor);--_ui5-v1-19-1_media_gallery_thumbnail_focus_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_media_gallery_item_overlay_box_shadow:inset 0px 0px 80px rgba(0,0,0,.2);--_ui5-v1-19-1_page_list_bg:var(--sapGroup_ContentBackground);--_ui5-v1-19-1_page_transparent_bg:transparent;--_ui5-v1-19-1_vsd_header_container:2.75rem;--_ui5-v1-19-1_vsd_sub_header_container_height:2.75rem;--_ui5-v1-19-1_vsd_content_li_padding:0.375rem;--_ui5-v1-19-1_vsd_content_height:23.4375rem;--_ui5-v1-19-1_vsd_expand_content_height:26.1875rem;--_ui5-v1-19-1_product_switch_item_width:11.25rem;--_ui5-v1-19-1_product_switch_item_height:7rem;--_ui5-v1-19-1_product_switch_item_outline_width:.0625rem;--_ui5-v1-19-1_product_switch_item_outline_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_product_switch_item_outline:var(--_ui5-v1-19-1_product_switch_item_outline_width) var(--_ui5-v1-19-1_product_switch_item_outline_color) dotted;--_ui5-v1-19-1_product_switch_item_outline_offset:-.1875rem;--_ui5-v1-19-1_product_switch_item_outline_offset_positive:.1875rem;--_ui5-v1-19-1_product_switch_item_active_outline_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_shellbar_root_height:3.25rem;--_ui5-v1-19-1_shellbar_logo_outline_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_shellbar_logo_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v1-19-1_shellbar_logo_outline_color);--_ui5-v1-19-1_shellbar_logo_outline_offset:-0.125rem;--_ui5-v1-19-1_shellbar_outline_offset:-0.1875rem;--_ui5-v1-19-1_shellbar_button_border:none;--_ui5-v1-19-1_shellbar_button_border_radius:var(--sapButton_BorderCornerRadius);--_ui5-v1-19-1_shellbar_button_focused_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_shellbar_button_badge_border:1px solid var(--sapContent_BadgeBackground);--_ui5-v1-19-1_shellbar_logo_border_radius:0.5rem;--_ui5-v1-19-1_shellbar_button_box_shadow:var(--sapContent_Interaction_Shadow);--_ui5-v1-19-1_shellbar_button_active_color:var(--sapShell_Active_TextColor);--_ui5-v1-19-1_shellbar_logo_outline_border_radius:var(--sapField_BorderCornerRadius);--_ui5-v1-19-1_shellbar_copilot_stop_color1:#0070f2;--_ui5-v1-19-1_shellbar_copilot_stop_color2:#ebf8ff;--_ui5-v1-19-1_shellbar_copilot_focus_offset:3px;--_ui5-v1-19-1_shellbar_search_button_border_radius:50%;--_ui5-v1-19-1_shellbar_search_button_size:1.75rem;--_ui5-v1-19-1_shellbar_search_field_height:2.25rem;--_ui5-v1-19-1_shellbar_search_field_background:var(--sapShell_InteractiveBackground);--_ui5-v1-19-1_shellbar_search_field_border:none;--_ui5-v1-19-1_shellbar_search_field_color:var(--sapShell_InteractiveTextColor);--_ui5-v1-19-1_shellbar_search_field_background_hover:var(--sapShell_Hover_Background);--_ui5-v1-19-1_shellbar_search_field_box_shadow_hover:var(--sapContent_Interaction_Shadow);--_ui5-v1-19-1_shellbar_overflow_container_middle_height:3rem;--_ui5-v1-19-1_shellbar_menu_button_title_font_size:var(--sapFontHeader5Size);--_ui5-v1-19-1_shellbar_input_border_radius:1.125rem;--_ui5-v1-19-1_shellbar_input_focus_border_radius:1.125rem;--_ui5-v1-19-1_shellbar_input_background_color:var(--sapShell_InteractiveBackground);--_ui5-v1-19-1_TimelineItem_arrow_size:1.625rem;--_ui5-v1-19-1_TimelineItem_bubble_border_width:0.125rem;--_ui5-v1-19-1_TimelineItem_bubble_border_style:solid;--_ui5-v1-19-1_TimelineItem_bubble_border_radius:var(--sapElement_BorderCornerRadius);--_ui5-v1-19-1_TimelineItem_bubble_border_color:var(--sapGroup_ContentBorderColor);--_ui5-v1-19-1_TimelineItem_bubble_border_top:-0.25rem;--_ui5-v1-19-1_TimelineItem_bubble_border_right:-0.25rem;--_ui5-v1-19-1_TimelineItem_bubble_border_bottom:-0.25rem;--_ui5-v1-19-1_TimelineItem_bubble_border_left:-0.75rem;--_ui5-v1-19-1_TimelineItem_bubble_rtl_left_offset:-0.25rem;--_ui5-v1-19-1_TimelineItem_bubble_rtl_right_offset:-0.75rem;--_ui5-v1-19-1_TimelineItem_bubble_focus_border_radius:0.875rem;--_ui5-v1-19-1_TimelineItem_horizontal_bubble_focus_top_offset:-0.75rem;--_ui5-v1-19-1_TimelineItem_horizontal_bubble_focus_left_offset:-0.25rem;--_ui5-v1-19-1_TimelineItem_bubble_content_padding:0.5rem;--_ui5-v1-19-1_TimelineItem_bubble_content_subtitle_padding_top:0.125rem;--_ui5-v1-19-1_TimelineItem_bubble_content_description_padding_top:0.5rem;--_ui5-v1-19-1_side_navigation_width:16rem;--_ui5-v1-19-1_side_navigation_shadow_color1:color-mix(in srgb,var(--sapContent_ShadowColor) 16%,transparent);--_ui5-v1-19-1_side_navigation_shadow_color2:color-mix(in srgb,var(--sapContent_ShadowColor) 16%,transparent);--_ui5-v1-19-1_side_navigation_box_shadow:0 0 0.125rem 0 var(--_ui5-v1-19-1_side_navigation_shadow_color1),0 0.5rem 1rem 0 var(--_ui5-v1-19-1_side_navigation_shadow_color2);--_ui5-v1-19-1_side_navigation_popover_shadow_color1:color-mix(in srgb,var(--sapContent_ShadowColor) 48%,transparent);--_ui5-v1-19-1_side_navigation_popover_shadow_color2:color-mix(in srgb,var(--sapContent_ShadowColor) 16%,transparent);--_ui5-v1-19-1_side_navigation_popover_box_shadow:0 0 0.125rem 0 var(--_ui5-v1-19-1_side_navigation_popover_shadow_color1),0 1rem 2rem 0 var(--_ui5-v1-19-1_side_navigation_popover_shadow_color2);--_ui5-v1-19-1_side_navigation_separator_backgound:var(--sapToolbar_SeparatorColor);--_ui5-v1-19-1_side_navigation_item_icon_color:var(--sapList_TextColor);--_ui5-v1-19-1_side_navigation_icon_size:1rem;--_ui5-v1-19-1_side_navigation_toggle_icon_color:var(--sapList_TextColor);--_ui5-v1-19-1_side_navigation_toggle_icon_size:0.75rem;--_ui5-v1-19-1_side_navigation_collapsed_state_width:3.5rem;--_ui5-v1-19-1_side_navigation_indent_step:1.5rem;--_ui5-v1-19-1_side_navigation_indent_step_in_popover:0;--_ui5-v1-19-1_side_navigation_icon_padding_inline_start:0.5rem;--_ui5-v1-19-1_side_navigation_icon_padding_inline_end:0.4375rem;--_ui5-v1-19-1_side_navigation_collapsed_state_divider_padding:var(--_ui5-v1-19-1_side_navigation_divider_padding);--_ui5-v1-19-1_side_navigation_divider_padding:0.3125rem 0;--_ui5-v1-19-1_side_navigation_divider_height:0.0625rem;--_ui5-v1-19-1_side_navigation_divider_margin:0.5rem 0;--_ui5-v1-19-1_side_navigation_border_inline_end:0;--_ui5-v1-19-1_side_navigation_border_radius:0.5rem 0.5rem 0 0;--_ui5-v1-19-1_side_navigation_container_padding:0.5rem;--_ui5-v1-19-1_side_navigation_container_padding_in_popover:0.75rem;--_ui5-v1-19-1_side_navigation_item_padding:0 0.5rem;--_ui5-v1-19-1_side_navigation_item_gap:0.125rem;--_ui5-v1-19-1_side_navigation_item_border_width:0;--_ui5-v1-19-1_side_navigation_item_border_radius:0.375rem;--_ui5-v1-19-1_side_navigation_item_height:2.5rem;--_ui5-v1-19-1_side_navigation_item_level_1_font:\"72override\",var(--sapFontBoldFamily);--_ui5-v1-19-1_side_navigation_item_level_1_margin_bottom_in_popover:0.75rem;--_ui5-v1-19-1_side_navigation_item_transition:background-color 0.3s ease-in-out;--_ui5-v1-19-1_side_navigation_item_selection_indicator_display:initial;--_ui5-v1-19-1_side_navigation_item_selection_indicator_reserved_space_has_children:1.375rem;--_ui5-v1-19-1_side_navigation_subitem_selection_indicator_reserved_space_no_children:1rem;--ui5-v1-19-1_upload_collection_drag_overlay_border:0.125rem dashed var(--sapContent_ForegroundBorderColor);--ui5-v1-19-1_upload_collection_drop_overlay_border:0.125rem solid var(--sapContent_DragAndDropActiveColor);--ui5-v1-19-1_upload_collection_drop_overlay_background:transparent;--ui5-v1-19-1_upload_collection_thumbnail_size:3rem;--ui5-v1-19-1_upload_collection_thumbnail_margin_inline_end:0.75rem;--ui5-v1-19-1_upload_collection_small_size_buttons_margin_inline_start:0;--ui5-v1-19-1_upload_collection_small_size_buttons_margin_block_start:0.5rem;--_ui5-v1-19-1_wiz_content_item_wrapper_padding:1rem;--_ui5-v1-19-1_wiz_content_item_wrapper_bg:var(--sapGroup_ContentBackground);--_ui5-v1-19-1_wiz_tab_selection_line:var(--sapSelectedColor);--_ui5-v1-19-1_wiz_tab_icon_color:var(--sapSelectedColor);--_ui5-v1-19-1_wiz_tab_title_color:var(--sapTextColor);--_ui5-v1-19-1_wiz_tab_title_font_family:var(--sapFontBoldFamily);--_ui5-v1-19-1_wiz_tab_focus_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_wiz_tab_focus_border_radius:8px;--_ui5-v1-19-1_wiz_tab_border:1px solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_wiz_tab_active_separator_color:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_wiz_tab_selected_bg:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1-notification_item-border-raius:0.75rem;--_ui5-v1-19-1_fcl_column_border:solid 0.0625rem var(--sapGroup_ContentBorderColor);--_ui5-v1-19-1_media_gallery_overflow_btn_background:var(--sapButton_Background);--_ui5-v1-19-1_media_gallery_overflow_btn_color:var(--sapButton_TextColor);--_ui5-v1-19-1_media_gallery_overflow_btn_border:1px solid var(--sapButton_BorderColor)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-fiori/dist/types/BarDesign.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-fiori/dist/types/BarDesign.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different types of Bar design
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.fiori.types.BarDesign
 */
var BarDesign;
(function (BarDesign) {
    /**
     * Default type
     * @public
     * @type {Header}
     */
    BarDesign["Header"] = "Header";
    /**
     * Subheader type
     * @public
     * @type {Subheader}
     */
    BarDesign["Subheader"] = "Subheader";
    /**
     * Footer type
     * @public
     * @type {Footer}
     */
    BarDesign["Footer"] = "Footer";
    /**
     * Floating Footer type - there is visible border on all sides
     * @public
     * @type {FloatingFooter}
     */
    BarDesign["FloatingFooter"] = "FloatingFooter";
})(BarDesign || (BarDesign = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BarDesign);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/alert.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/alert.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_alert_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_alert_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_alert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/alert.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/alert.js");
/* harmony import */ var _v5_alert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/alert.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/alert.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_alert_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_alert_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("alert");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/decline.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/decline.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_decline_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_decline_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_decline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/decline.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/decline.js");
/* harmony import */ var _v5_decline_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/decline.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/decline.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_decline_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_decline_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("decline");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/error.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/error.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_error_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_error_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/error.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/error.js");
/* harmony import */ var _v5_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/error.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/error.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_error_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_error_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("error");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ICON_ACTION_SETTINGS: () => (/* binding */ ICON_ACTION_SETTINGS),
/* harmony export */   ICON_ACTIVATE: () => (/* binding */ ICON_ACTIVATE),
/* harmony export */   ICON_ADD: () => (/* binding */ ICON_ADD),
/* harmony export */   ICON_ADD_CONTACT: () => (/* binding */ ICON_ADD_CONTACT),
/* harmony export */   ICON_ADD_FILTER: () => (/* binding */ ICON_ADD_FILTER),
/* harmony export */   ICON_ADD_PHOTO: () => (/* binding */ ICON_ADD_PHOTO),
/* harmony export */   ICON_BACK_TO_TOP: () => (/* binding */ ICON_BACK_TO_TOP),
/* harmony export */   ICON_COLLAPSE: () => (/* binding */ ICON_COLLAPSE),
/* harmony export */   ICON_COLLAPSE_GROUP: () => (/* binding */ ICON_COLLAPSE_GROUP),
/* harmony export */   ICON_CROP: () => (/* binding */ ICON_CROP),
/* harmony export */   ICON_DECLINE: () => (/* binding */ ICON_DECLINE),
/* harmony export */   ICON_DELETE: () => (/* binding */ ICON_DELETE),
/* harmony export */   ICON_DISPLAY: () => (/* binding */ ICON_DISPLAY),
/* harmony export */   ICON_DOWN: () => (/* binding */ ICON_DOWN),
/* harmony export */   ICON_DOWNLOAD: () => (/* binding */ ICON_DOWNLOAD),
/* harmony export */   ICON_DRILL_DOWN: () => (/* binding */ ICON_DRILL_DOWN),
/* harmony export */   ICON_DRILL_UP: () => (/* binding */ ICON_DRILL_UP),
/* harmony export */   ICON_ERROR: () => (/* binding */ ICON_ERROR),
/* harmony export */   ICON_EXIT_FULL_SCREEN: () => (/* binding */ ICON_EXIT_FULL_SCREEN),
/* harmony export */   ICON_EXPAND: () => (/* binding */ ICON_EXPAND),
/* harmony export */   ICON_EXPAND_GROUP: () => (/* binding */ ICON_EXPAND_GROUP),
/* harmony export */   ICON_FILTER: () => (/* binding */ ICON_FILTER),
/* harmony export */   ICON_FLAG: () => (/* binding */ ICON_FLAG),
/* harmony export */   ICON_FORWARD: () => (/* binding */ ICON_FORWARD),
/* harmony export */   ICON_FULL_SCREEN: () => (/* binding */ ICON_FULL_SCREEN),
/* harmony export */   ICON_GENERATE_SHORTCUT: () => (/* binding */ ICON_GENERATE_SHORTCUT),
/* harmony export */   ICON_GROUP_2: () => (/* binding */ ICON_GROUP_2),
/* harmony export */   ICON_HIDE: () => (/* binding */ ICON_HIDE),
/* harmony export */   ICON_IPAD: () => (/* binding */ ICON_IPAD),
/* harmony export */   ICON_IPHONE: () => (/* binding */ ICON_IPHONE),
/* harmony export */   ICON_LAPTOP: () => (/* binding */ ICON_LAPTOP),
/* harmony export */   ICON_MESSAGE_ERROR: () => (/* binding */ ICON_MESSAGE_ERROR),
/* harmony export */   ICON_MESSAGE_INFORMATION: () => (/* binding */ ICON_MESSAGE_INFORMATION),
/* harmony export */   ICON_MESSAGE_SUCCESS: () => (/* binding */ ICON_MESSAGE_SUCCESS),
/* harmony export */   ICON_MESSAGE_WARNING: () => (/* binding */ ICON_MESSAGE_WARNING),
/* harmony export */   ICON_MOVE: () => (/* binding */ ICON_MOVE),
/* harmony export */   ICON_MULTI_SELECT: () => (/* binding */ ICON_MULTI_SELECT),
/* harmony export */   ICON_NAV_BACK: () => (/* binding */ ICON_NAV_BACK),
/* harmony export */   ICON_OVERFLOW: () => (/* binding */ ICON_OVERFLOW),
/* harmony export */   ICON_REDO: () => (/* binding */ ICON_REDO),
/* harmony export */   ICON_REFRESH: () => (/* binding */ ICON_REFRESH),
/* harmony export */   ICON_RESIZE: () => (/* binding */ ICON_RESIZE),
/* harmony export */   ICON_RESIZE_HORIZONTAL: () => (/* binding */ ICON_RESIZE_HORIZONTAL),
/* harmony export */   ICON_RESIZE_VERTICAL: () => (/* binding */ ICON_RESIZE_VERTICAL),
/* harmony export */   ICON_RESPONSE: () => (/* binding */ ICON_RESPONSE),
/* harmony export */   ICON_SAVE: () => (/* binding */ ICON_SAVE),
/* harmony export */   ICON_SEARCH: () => (/* binding */ ICON_SEARCH),
/* harmony export */   ICON_SETTINGS: () => (/* binding */ ICON_SETTINGS),
/* harmony export */   ICON_SHOW: () => (/* binding */ ICON_SHOW),
/* harmony export */   ICON_SORT: () => (/* binding */ ICON_SORT),
/* harmony export */   ICON_SORT_ASCENDING: () => (/* binding */ ICON_SORT_ASCENDING),
/* harmony export */   ICON_SORT_DESCENDING: () => (/* binding */ ICON_SORT_DESCENDING),
/* harmony export */   ICON_SYNCHRONIZE: () => (/* binding */ ICON_SYNCHRONIZE),
/* harmony export */   ICON_UNDO: () => (/* binding */ ICON_UNDO),
/* harmony export */   ICON_UP: () => (/* binding */ ICON_UP),
/* harmony export */   ICON_UPLOAD: () => (/* binding */ ICON_UPLOAD),
/* harmony export */   ICON_ZOOM_IN: () => (/* binding */ ICON_ZOOM_IN),
/* harmony export */   ICON_ZOOM_OUT: () => (/* binding */ ICON_ZOOM_OUT)
/* harmony export */ });
const ICON_ACTION_SETTINGS = { key: "ICON_ACTION_SETTINGS", defaultText: "Settings" };
const ICON_ACTIVATE = { key: "ICON_ACTIVATE", defaultText: "Activate" };
const ICON_ADD = { key: "ICON_ADD", defaultText: "Add" };
const ICON_ADD_CONTACT = { key: "ICON_ADD_CONTACT", defaultText: "Add Contact" };
const ICON_ADD_FILTER = { key: "ICON_ADD_FILTER", defaultText: "Add Filter" };
const ICON_ADD_PHOTO = { key: "ICON_ADD_PHOTO", defaultText: "Add Photo" };
const ICON_BACK_TO_TOP = { key: "ICON_BACK_TO_TOP", defaultText: "Back to Top" };
const ICON_COLLAPSE = { key: "ICON_COLLAPSE", defaultText: "Collapse" };
const ICON_COLLAPSE_GROUP = { key: "ICON_COLLAPSE_GROUP", defaultText: "Collapse Group" };
const ICON_CROP = { key: "ICON_CROP", defaultText: "Crop" };
const ICON_DECLINE = { key: "ICON_DECLINE", defaultText: "Decline" };
const ICON_DELETE = { key: "ICON_DELETE", defaultText: "Delete" };
const ICON_DISPLAY = { key: "ICON_DISPLAY", defaultText: "Display" };
const ICON_DOWN = { key: "ICON_DOWN", defaultText: "Down" };
const ICON_DOWNLOAD = { key: "ICON_DOWNLOAD", defaultText: "Download" };
const ICON_DRILL_DOWN = { key: "ICON_DRILL_DOWN", defaultText: "Drill Down" };
const ICON_DRILL_UP = { key: "ICON_DRILL_UP", defaultText: "Drill Up" };
const ICON_ERROR = { key: "ICON_ERROR", defaultText: "Error" };
const ICON_EXIT_FULL_SCREEN = { key: "ICON_EXIT_FULL_SCREEN", defaultText: "Exit Full Screen" };
const ICON_EXPAND = { key: "ICON_EXPAND", defaultText: "Expand" };
const ICON_EXPAND_GROUP = { key: "ICON_EXPAND_GROUP", defaultText: "Expand Group" };
const ICON_FILTER = { key: "ICON_FILTER", defaultText: "Filter" };
const ICON_FLAG = { key: "ICON_FLAG", defaultText: "Flag" };
const ICON_FORWARD = { key: "ICON_FORWARD", defaultText: "Forward" };
const ICON_FULL_SCREEN = { key: "ICON_FULL_SCREEN", defaultText: "Enter Full Screen" };
const ICON_GENERATE_SHORTCUT = { key: "ICON_GENERATE_SHORTCUT", defaultText: "Create Shortcut" };
const ICON_GROUP_2 = { key: "ICON_GROUP_2", defaultText: "Group" };
const ICON_HIDE = { key: "ICON_HIDE", defaultText: "Hide" };
const ICON_IPAD = { key: "ICON_IPAD", defaultText: "Tablet" };
const ICON_IPHONE = { key: "ICON_IPHONE", defaultText: "Phone" };
const ICON_LAPTOP = { key: "ICON_LAPTOP", defaultText: "Laptop" };
const ICON_MESSAGE_ERROR = { key: "ICON_MESSAGE_ERROR", defaultText: "Error" };
const ICON_MESSAGE_INFORMATION = { key: "ICON_MESSAGE_INFORMATION", defaultText: "Information" };
const ICON_MESSAGE_SUCCESS = { key: "ICON_MESSAGE_SUCCESS", defaultText: "Successful" };
const ICON_MESSAGE_WARNING = { key: "ICON_MESSAGE_WARNING", defaultText: "Warning" };
const ICON_MOVE = { key: "ICON_MOVE", defaultText: "Move" };
const ICON_MULTI_SELECT = { key: "ICON_MULTI_SELECT", defaultText: "Multi Select" };
const ICON_NAV_BACK = { key: "ICON_NAV_BACK", defaultText: "Navigate Back" };
const ICON_OVERFLOW = { key: "ICON_OVERFLOW", defaultText: "More" };
const ICON_REDO = { key: "ICON_REDO", defaultText: "Redo" };
const ICON_REFRESH = { key: "ICON_REFRESH", defaultText: "Refresh" };
const ICON_RESIZE = { key: "ICON_RESIZE", defaultText: "Resize" };
const ICON_RESIZE_HORIZONTAL = { key: "ICON_RESIZE_HORIZONTAL", defaultText: "Resize Horizontally" };
const ICON_RESIZE_VERTICAL = { key: "ICON_RESIZE_VERTICAL", defaultText: "Resize Vertically" };
const ICON_RESPONSE = { key: "ICON_RESPONSE", defaultText: "Reply" };
const ICON_SAVE = { key: "ICON_SAVE", defaultText: "Save" };
const ICON_SEARCH = { key: "ICON_SEARCH", defaultText: "Search" };
const ICON_SETTINGS = { key: "ICON_SETTINGS", defaultText: "Settings" };
const ICON_SHOW = { key: "ICON_SHOW", defaultText: "Show" };
const ICON_SORT = { key: "ICON_SORT", defaultText: "Sort" };
const ICON_SORT_ASCENDING = { key: "ICON_SORT_ASCENDING", defaultText: "Sort Ascending" };
const ICON_SORT_DESCENDING = { key: "ICON_SORT_DESCENDING", defaultText: "Sort Descending" };
const ICON_SYNCHRONIZE = { key: "ICON_SYNCHRONIZE", defaultText: "Synchronize" };
const ICON_UNDO = { key: "ICON_UNDO", defaultText: "Undo" };
const ICON_UP = { key: "ICON_UP", defaultText: "Up" };
const ICON_UPLOAD = { key: "ICON_UPLOAD", defaultText: "Upload" };
const ICON_ZOOM_IN = { key: "ICON_ZOOM_IN", defaultText: "Zoom In" };
const ICON_ZOOM_OUT = { key: "ICON_ZOOM_OUT", defaultText: "Zoom Out" };



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/information.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/information.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_information_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_information_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_information_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/information.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/information.js");
/* harmony import */ var _v5_information_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/information.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/information.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_information_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_information_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("information");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/resize-corner.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/resize-corner.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_resize_corner_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_resize_corner_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_resize_corner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/resize-corner.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/resize-corner.js");
/* harmony import */ var _v5_resize_corner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/resize-corner.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/resize-corner.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_resize_corner_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_resize_corner_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("resize-corner");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/sys-enter-2.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/sys-enter-2.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/sys-enter-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/sys-enter-2.js");
/* harmony import */ var _v5_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/sys-enter-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/sys-enter-2.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("sys-enter-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/sys-help-2.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/sys-help-2.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* reexport safe */ _v4_sys_help_2_js__WEBPACK_IMPORTED_MODULE_1__.accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* reexport safe */ _v4_sys_help_2_js__WEBPACK_IMPORTED_MODULE_1__.ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _v4_sys_help_2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v4/sys-help-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/v4/sys-help-2.js");
/* harmony import */ var _v5_sys_help_2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v5/sys-help-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/v5/sys-help-2.js");




const pathData = (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.isLegacyThemeFamily)() ? _v4_sys_help_2_js__WEBPACK_IMPORTED_MODULE_1__.pathData : _v5_sys_help_2_js__WEBPACK_IMPORTED_MODULE_2__.pathData;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("sys-help-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/alert.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/alert.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "alert";
const pathData = "M501 374q5 10 7.5 19.5T512 412v5q0 31-23 47t-50 16H74q-13 0-26-4t-23.5-12-17-20T0 417q0-13 4-22.5t9-20.5L198 38q21-38 61-38 38 0 59 38zM257 127q-13 0-23.5 8T223 161q1 7 2 12 3 25 4.5 48t3.5 61q0 11 7.5 16t16.5 5q22 0 23-21l2-36 9-85q0-18-10.5-26t-23.5-8zm0 299q20 0 31.5-12t11.5-32q0-19-11.5-31T257 339t-31.5 12-11.5 31q0 20 11.5 32t31.5 12z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/alert");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/decline.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/decline.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js");



const name = "decline";
const pathData = "M86 109l22-23q5-5 12-5 6 0 11 5l124 125L380 86q5-5 11-5 7 0 12 5l22 23q12 11 0 23L301 256l124 125q11 11 0 22l-22 23q-8 5-12 5-3 0-11-5L255 301 131 426q-5 5-11 5-4 0-12-5l-22-23q-11-11 0-22l124-125L86 132q-12-12 0-23z";
const ltr = false;
const accData = _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__.ICON_DECLINE;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, accData, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/decline");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/error.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/error.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js");



const name = "error";
const pathData = "M512 256q0 53-20.5 100t-55 81.5-81 54.5-99.5 20-100-20.5-81.5-55T20 355 0 256q0-54 20-100.5t55-81T156.5 20 256 0t99.5 20T437 75t55 81.5 20 99.5zM399 364q6-6 0-12l-86-86q-6-6 0-12l81-81q6-6 0-12l-37-37q-2-2-6-2t-6 2l-83 82q-1 3-6 3-3 0-6-3l-84-83q-1-2-6-2-4 0-6 2l-37 37q-6 6 0 12l83 82q6 6 0 12l-83 82q-2 2-2.5 6t2.5 6l36 37q4 2 6 2 4 0 6-2l85-84q2-2 6-2t6 2l88 88q4 2 6 2t6-2z";
const ltr = false;
const accData = _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__.ICON_ERROR;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, accData, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/error");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/information.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/information.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "information";
const pathData = "M0 256q0-53 20.5-100t55-81.5T157 20t99-20q54 0 100.5 20t81 55 54.5 81.5 20 99.5q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256zm192 112v33h128v-33h-32V215q0-6-7-6h-88v31h32v128h-33zm34-201q14 11 30 11 17 0 29.5-11.5T298 138q0-19-13-31-12-12-29-12-19 0-30.5 12.5T214 138q0 17 12 29z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/information");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/resize-corner.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/resize-corner.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "resize-corner";
const pathData = "M384 224v32q0 12-10 22L182 470q-10 10-22 10h-32zM224 480l160-160v32q0 12-10 22l-96 96q-10 10-22 10h-32zm160-64v32q0 12-10 22t-22 10h-32z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/resize-corner");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/sys-enter-2.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/sys-enter-2.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "sys-enter-2";
const pathData = "M512 256q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256t20.5-100 55-81.5T157 20t99-20q53 0 100 20t81.5 54.5T492 156t20 100zm-118-87q4-8-1-13l-36-36q-3-4-8-4t-8 5L237 294q-3 1-4 0l-70-52q-4-3-7-3t-4.5 2-2.5 3l-29 41q-6 8 2 14l113 95q2 2 7 2t8-4z";
const ltr = true;
const accData = null;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/sys-enter-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v4/sys-help-2.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v4/sys-help-2.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "sys-help-2";
const pathData = "M256 0q53 0 99.5 20T437 74.5t55 81.5 20 100-20 99.5-55 81.5-81.5 55-99.5 20-100-20-81.5-55T20 355.5 0 256t20-100 54.5-81.5T156 20 256 0zm-5 425q15 0 26-11t11-26-11-25.5-26-10.5-25.5 10.5T215 388t10.5 26 25.5 11zm101-239q0-32-27-57t-77-25q-46 0-72.5 24T146 187h52q5-24 17.5-32.5T251 146t35 12.5 12 27.5q0 10-2.5 14T282 215l-20 17q-15 12-23 21t-11.5 18.5-4.5 21-1 27.5h50q0-12 .5-19t3-12.5T283 278t15-13l27-25 16-18 9-16z";
const ltr = true;
const accData = null;
const collection = "SAP-icons-v4";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v4/sys-help-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/alert.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/alert.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "alert";
const pathData = "M505 399q7 13 7 27 0 21-15.5 37.5T456 480H56q-25 0-40.5-16.5T0 426q0-14 7-27L208 59q17-27 48-27 14 0 27 6.5T304 59zM288 176q0-14-9-23t-23-9-23 9-9 23v96q0 14 9 23t23 9 23-9 9-23v-96zm-32 240q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/alert");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/decline.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/decline.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js");



const name = "decline";
const pathData = "M292 256l117 116q7 7 7 18 0 12-7.5 19t-18.5 7q-10 0-18-8L256 292 140 408q-8 8-18 8-11 0-18.5-7.5T96 390q0-10 8-18l116-116-116-116q-8-8-8-18 0-11 7.5-18.5T122 96t18 7l116 117 116-117q7-7 18-7t18.5 7.5T416 122t-7 18z";
const ltr = false;
const accData = _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__.ICON_DECLINE;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, accData, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/decline");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/error.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/error.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js");



const name = "error";
const pathData = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm45 256l74-73q9-11 9-23 0-13-9.5-22.5T352 128q-12 0-23 9l-73 74-73-74q-10-9-23-9t-22.5 9.5T128 160q0 12 9 23l74 73-74 73q-9 10-9 23t9.5 22.5T160 384t23-9l73-74 73 74q11 9 23 9 13 0 22.5-9.5T384 352t-9-23z";
const ltr = false;
const accData = _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_1__.ICON_ERROR;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, accData, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/error");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/information.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/information.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "information";
const pathData = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm0 160q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zm32 64q0-14-9-23t-23-9-23 9-9 23v160q0 14 9 23t23 9 23-9 9-23V224z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/information");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/resize-corner.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/resize-corner.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "resize-corner";
const pathData = "M202 512q-11 0-18.5-7.5T176 486q0-10 8-18l204-205q7-7 18-7t18.5 7.5T432 282t-7 18L220 505q-7 7-18 7zm128 0q-11 0-18.5-7.5T304 486q0-10 8-18l76-77q7-7 18-7t18.5 7.5T432 410t-7 18l-77 77q-7 7-18 7z";
const ltr = false;
const accData = null;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/resize-corner");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/sys-enter-2.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/sys-enter-2.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "sys-enter-2";
const pathData = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm150 183q10-9 10-23 0-13-9.5-22.5T384 128t-22 9L186 308l-68-63q-9-9-22-9t-22.5 9.5T64 268q0 15 10 24l91 83q9 9 21 9 13 0 23-9z";
const ltr = true;
const accData = null;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/sys-enter-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-icons/dist/v5/sys-help-2.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-icons/dist/v5/sys-help-2.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accData: () => (/* binding */ accData),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   ltr: () => (/* binding */ ltr),
/* harmony export */   pathData: () => (/* binding */ pathData)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");


const name = "sys-help-2";
const pathData = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm32 289q31-10 50.5-36.5T358 192q0-43-29.5-72.5T256 90q-21 0-39.5 8T184 118.5 162 148t-8 35q0 20 9 30.5t23 10.5q13 0 22.5-9t9.5-23q0-16 11-27t27-11 27 11 11 27-11 27-27 11q-14 0-23 9.5t-9 22.5v26q0 14 9 23t23 9q13 0 22-9t10-22zm-32 127q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
const ltr = true;
const accData = null;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";

(0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_0__.registerIcon)(name, { pathData, ltr, collection, packageName });

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("SAP-icons-v5/sys-help-2");


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/context/I18nContext.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/context/I18nContext.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I18nContext: () => (/* binding */ I18nContext),
/* harmony export */   getI18nContext: () => (/* binding */ getI18nContext),
/* harmony export */   useI18nContext: () => (/* binding */ useI18nContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
'use client';

const I18nContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const getI18nContext = () => {
    globalThis['@ui5/webcomponents-react'] ??= {};
    globalThis['@ui5/webcomponents-react'].I18nContext ??= I18nContext;
    return globalThis['@ui5/webcomponents-react'].I18nContext;
};
const useI18nContext = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(getI18nContext());


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useI18nBundle.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/hooks/useI18nBundle.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useI18nBundle: () => (/* binding */ useI18nBundle)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _context_I18nContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/I18nContext.js */ "./node_modules/@ui5/webcomponents-react-base/dist/context/I18nContext.js");
/* harmony import */ var _hooks_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/index.js */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js");
'use client';




const defaultBundle = new _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_0__["default"]('defaultBundle');
const useI18nBundle = (bundleName) => {
    const i18nContext = (0,_context_I18nContext_js__WEBPACK_IMPORTED_MODULE_2__.useI18nContext)();
    if (!i18nContext) {
        throw new Error(`'useI18nBundle()' may be used only in the context of a '<ThemeProvider>' component.`);
    }
    const i18nRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(i18nContext);
    (0,_hooks_index_js__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(() => {
        const { i18nBundles, setI18nBundle } = i18nRef.current;
        let isMounted = true;
        if (!i18nBundles.hasOwnProperty(bundleName)) {
            (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_0__.getI18nBundle)(bundleName).then((internalBundle) => {
                if (isMounted) {
                    setI18nBundle(bundleName, internalBundle);
                }
            }, () => {
                // noop
            });
        }
        return () => {
            isMounted = false;
        };
    }, [bundleName]);
    return i18nContext.i18nBundles[bundleName] ?? defaultBundle;
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicId.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicId.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useIsomorphicId: () => (/* binding */ useIsomorphicId)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
'use client';

function getRandomId() {
    if ('randomUUID' in crypto) {
        return crypto.randomUUID();
    }
    const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];
    return uint32.toString(16);
}
const canUseUseId = "useId" in /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)));
function useIsomorphicId() {
    if (canUseUseId) {
        // TODO might be fixed by https://github.com/webpack/webpack/issues/14814
        return Reflect.get(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2))), 'useId')();
    }
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const localId = react__WEBPACK_IMPORTED_MODULE_0__.useRef(getRandomId()); // React version never changes at runtime
    return localId.current;
}


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useIsomorphicLayoutEffect: () => (/* binding */ useIsomorphicLayoutEffect)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
'use client';

const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useSyncRef.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/hooks/useSyncRef.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useSyncRef: () => (/* binding */ useSyncRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
'use client';

function useSyncRef(ref) {
    const localRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    const componentRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((node) => {
        if (ref) {
            if (typeof ref === 'function') {
                ref(node);
            }
            if ({}.hasOwnProperty.call(ref, 'current')) {
                ref.current = node;
            }
        }
        localRef.current = node;
    }, [ref]);
    return [componentRef, localRef];
}


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/styling/CssSizeVariables.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/styling/CssSizeVariables.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CompactSizes: () => (/* binding */ CompactSizes),
/* harmony export */   CozySizes: () => (/* binding */ CozySizes),
/* harmony export */   CssSizeVariables: () => (/* binding */ CssSizeVariables),
/* harmony export */   CssSizeVariablesNames: () => (/* binding */ CssSizeVariablesNames)
/* harmony export */ });
/* harmony import */ var _ThemingParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ThemingParameters.js */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");

var CssSizeVariablesNames;
(function (CssSizeVariablesNames) {
    CssSizeVariablesNames["ui5WcrBarHeight"] = "--_ui5wcr-BarHeight";
    CssSizeVariablesNames["ui5WcrButtonTopBottomPadding"] = "--_ui5wcr-ButtonTopBottomPadding";
    CssSizeVariablesNames["ui5WcrAnalyticalTableExpandButtonHeight"] = "--_ui5wcr-AnalyticalTableExpandButtonHeight";
    CssSizeVariablesNames["ui5WcrAnalyticalTableExpandIconHeight"] = "--_ui5wcr-AnalyticalTableExpandIconHeight";
    CssSizeVariablesNames["ui5WcrAnalyticalTableRowHeight"] = "--_ui5wcr-AnalyticalTableRowHeight";
    CssSizeVariablesNames["ui5WcrAnalyticalTableHeaderRowHeight"] = "--_ui5wcr-AnalyticalTableHeaderRowHeight";
    CssSizeVariablesNames["ui5WcrAnalyticalTableTreePaddingLevel1"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel1";
    CssSizeVariablesNames["ui5WcrAnalyticalTableTreePaddingLevel2"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel2";
    CssSizeVariablesNames["ui5WcrAnalyticalTableTreePaddingLevel3"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel3";
    CssSizeVariablesNames["ui5WcrCheckBoxWidthHeight"] = "--_ui5wcr-CheckBoxWidthHeight";
    CssSizeVariablesNames["ui5WcrAnalyticalTableSelectionColumnWidth"] = "--_ui5wcr-AnalyticalTableSelectionColumnWidth";
    CssSizeVariablesNames["ui5WcrToolbarHeight"] = "--_ui5wcr-ToolbarHeight";
    CssSizeVariablesNames["ui5WcrToolbarPopoverContentPadding"] = "--_ui5wcr-ToolbarPopoverContentPadding";
    CssSizeVariablesNames["ui5WcrToolbarSeparatorHeight"] = "--_ui5wcr-ToolbarSeparatorHeight";
    CssSizeVariablesNames["ui5WcrFormGroupTitleHeight"] = "--_ui5wcr-FormGroupTitleHeight";
    CssSizeVariablesNames["ui5WcrMessageViewListItemHeightSingle"] = "--_ui5wcr-MessageViewListItemHeightSingle";
    CssSizeVariablesNames["ui5WcrMessageViewListItemHeightByLine"] = "--_ui5wcr-MessageViewListItemHeightByLine";
    CssSizeVariablesNames["ui5WcrSplitterSize"] = "--_ui5wcr-SplitterSize";
    CssSizeVariablesNames["ui5WcrDialogHeaderHeight"] = "--_ui5wcr-DialogHeaderHeight";
    CssSizeVariablesNames["ui5WcrDialogSubHeaderHeight"] = "--_ui5wcr-DialogSubHeaderHeight";
    CssSizeVariablesNames["ui5WcrElementHeight"] = "--_ui5wcr-ElementHeight";
})(CssSizeVariablesNames || (CssSizeVariablesNames = {}));
/**
 * __Private__ CSS variables used for size calculation depending on content density.
 *
 * @private
 */
const CssSizeVariables = new Proxy(CssSizeVariablesNames, {
    get: (target, prop) => `var(${target[prop]})`
});
const CozySizes = {
    [CssSizeVariablesNames.ui5WcrBarHeight]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrButtonTopBottomPadding]: `0.25rem 0`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandButtonHeight]: `2.25rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIconHeight]: '1rem',
    [CssSizeVariablesNames.ui5WcrAnalyticalTableRowHeight]: `44px`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableHeaderRowHeight]: `44px`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel1]: `1rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel2]: `1.5rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel3]: `2rem`,
    [CssSizeVariablesNames.ui5WcrCheckBoxWidthHeight]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth]: `44px`,
    [CssSizeVariablesNames.ui5WcrToolbarHeight]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrToolbarPopoverContentPadding]: `0.25rem 0.5rem`,
    [CssSizeVariablesNames.ui5WcrToolbarSeparatorHeight]: `2rem`,
    [CssSizeVariablesNames.ui5WcrFormGroupTitleHeight]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightSingle]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightByLine]: `3.325rem`,
    [CssSizeVariablesNames.ui5WcrSplitterSize]: `1rem`,
    [CssSizeVariablesNames.ui5WcrDialogHeaderHeight]: '2.75rem',
    [CssSizeVariablesNames.ui5WcrDialogSubHeaderHeight]: '3rem',
    [CssSizeVariablesNames.ui5WcrElementHeight]: _ThemingParameters_js__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapElement_Height
};
const CompactSizes = {
    [CssSizeVariablesNames.ui5WcrBarHeight]: `2.5rem`,
    [CssSizeVariablesNames.ui5WcrButtonTopBottomPadding]: `0.1875rem 0`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandButtonHeight]: `1.5rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIconHeight]: '0.75rem',
    [CssSizeVariablesNames.ui5WcrAnalyticalTableRowHeight]: `32px`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableHeaderRowHeight]: `32px`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel1]: `1.5rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel2]: `2.25rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel3]: `2.75rem`,
    [CssSizeVariablesNames.ui5WcrCheckBoxWidthHeight]: `2rem`,
    [CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth]: `32px`,
    [CssSizeVariablesNames.ui5WcrToolbarHeight]: `2rem`,
    [CssSizeVariablesNames.ui5WcrToolbarPopoverContentPadding]: `0.1875rem 0.375rem`,
    [CssSizeVariablesNames.ui5WcrToolbarSeparatorHeight]: `1.5rem`,
    [CssSizeVariablesNames.ui5WcrFormGroupTitleHeight]: `2rem`,
    [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightSingle]: `2rem`,
    [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightByLine]: `3.25rem`,
    [CssSizeVariablesNames.ui5WcrDialogHeaderHeight]: '2.5rem',
    [CssSizeVariablesNames.ui5WcrDialogSubHeaderHeight]: '2.25rem',
    [CssSizeVariablesNames.ui5WcrElementHeight]: _ThemingParameters_js__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapElement_Compact_Height
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemingParameters: () => (/* binding */ ThemingParameters)
/* harmony export */ });
/* eslint-disable camelcase */
/*
 * ### WARNING ###
 * This is an autogenerated file, do not change manually.
 * In order to recreate this file, please run 'node scripts/generate-theming-parameters.js'
 */
const ThemingParameters = {
    sapBrandColor: 'var(--sapBrandColor)',
    sapHighlightColor: 'var(--sapHighlightColor)',
    sapBaseColor: 'var(--sapBaseColor)',
    sapShellColor: 'var(--sapShellColor)',
    sapBackgroundColor: 'var(--sapBackgroundColor)',
    sapFontFamily: 'var(--sapFontFamily)',
    sapFontSize: 'var(--sapFontSize)',
    sapTextColor: 'var(--sapTextColor)',
    sapLinkColor: 'var(--sapLinkColor)',
    sapCompanyLogo: 'var(--sapCompanyLogo)',
    sapBackgroundImage: 'var(--sapBackgroundImage)',
    sapBackgroundImageOpacity: 'var(--sapBackgroundImageOpacity)',
    sapBackgroundImageRepeat: 'var(--sapBackgroundImageRepeat)',
    sapSelectedColor: 'var(--sapSelectedColor)',
    sapHoverColor: 'var(--sapHoverColor)',
    sapActiveColor: 'var(--sapActiveColor)',
    sapHighlightTextColor: 'var(--sapHighlightTextColor)',
    sapTitleColor: 'var(--sapTitleColor)',
    sapNegativeColor: 'var(--sapNegativeColor)',
    sapCriticalColor: 'var(--sapCriticalColor)',
    sapPositiveColor: 'var(--sapPositiveColor)',
    sapInformativeColor: 'var(--sapInformativeColor)',
    sapNeutralColor: 'var(--sapNeutralColor)',
    sapNegativeElementColor: 'var(--sapNegativeElementColor)',
    sapCriticalElementColor: 'var(--sapCriticalElementColor)',
    sapPositiveElementColor: 'var(--sapPositiveElementColor)',
    sapInformativeElementColor: 'var(--sapInformativeElementColor)',
    sapNeutralElementColor: 'var(--sapNeutralElementColor)',
    sapNegativeTextColor: 'var(--sapNegativeTextColor)',
    sapCriticalTextColor: 'var(--sapCriticalTextColor)',
    sapPositiveTextColor: 'var(--sapPositiveTextColor)',
    sapInformativeTextColor: 'var(--sapInformativeTextColor)',
    sapNeutralTextColor: 'var(--sapNeutralTextColor)',
    sapErrorColor: 'var(--sapErrorColor)',
    sapWarningColor: 'var(--sapWarningColor)',
    sapSuccessColor: 'var(--sapSuccessColor)',
    sapInformationColor: 'var(--sapInformationColor)',
    sapErrorBackground: 'var(--sapErrorBackground)',
    sapWarningBackground: 'var(--sapWarningBackground)',
    sapSuccessBackground: 'var(--sapSuccessBackground)',
    sapInformationBackground: 'var(--sapInformationBackground)',
    sapNeutralBackground: 'var(--sapNeutralBackground)',
    sapErrorBorderColor: 'var(--sapErrorBorderColor)',
    sapWarningBorderColor: 'var(--sapWarningBorderColor)',
    sapSuccessBorderColor: 'var(--sapSuccessBorderColor)',
    sapInformationBorderColor: 'var(--sapInformationBorderColor)',
    sapNeutralBorderColor: 'var(--sapNeutralBorderColor)',
    sapElement_LineHeight: 'var(--sapElement_LineHeight)',
    sapElement_Height: 'var(--sapElement_Height)',
    sapElement_BorderWidth: 'var(--sapElement_BorderWidth)',
    sapElement_BorderCornerRadius: 'var(--sapElement_BorderCornerRadius)',
    sapElement_Compact_LineHeight: 'var(--sapElement_Compact_LineHeight)',
    sapElement_Compact_Height: 'var(--sapElement_Compact_Height)',
    sapElement_Condensed_LineHeight: 'var(--sapElement_Condensed_LineHeight)',
    sapElement_Condensed_Height: 'var(--sapElement_Condensed_Height)',
    sapContent_LineHeight: 'var(--sapContent_LineHeight)',
    sapContent_IconHeight: 'var(--sapContent_IconHeight)',
    sapContent_IconColor: 'var(--sapContent_IconColor)',
    sapContent_ContrastIconColor: 'var(--sapContent_ContrastIconColor)',
    sapContent_NonInteractiveIconColor: 'var(--sapContent_NonInteractiveIconColor)',
    sapContent_MarkerIconColor: 'var(--sapContent_MarkerIconColor)',
    sapContent_MarkerTextColor: 'var(--sapContent_MarkerTextColor)',
    sapContent_MeasureIndicatorColor: 'var(--sapContent_MeasureIndicatorColor)',
    sapContent_Selected_MeasureIndicatorColor: 'var(--sapContent_Selected_MeasureIndicatorColor)',
    sapContent_Placeholderloading_Background: 'var(--sapContent_Placeholderloading_Background)',
    sapContent_Placeholderloading_Gradient: 'var(--sapContent_Placeholderloading_Gradient)',
    sapContent_ImagePlaceholderBackground: 'var(--sapContent_ImagePlaceholderBackground)',
    sapContent_ImagePlaceholderForegroundColor: 'var(--sapContent_ImagePlaceholderForegroundColor)',
    sapContent_RatedColor: 'var(--sapContent_RatedColor)',
    sapContent_UnratedColor: 'var(--sapContent_UnratedColor)',
    sapContent_BusyColor: 'var(--sapContent_BusyColor)',
    sapContent_FocusColor: 'var(--sapContent_FocusColor)',
    sapContent_FocusStyle: 'var(--sapContent_FocusStyle)',
    sapContent_FocusWidth: 'var(--sapContent_FocusWidth)',
    sapContent_ContrastFocusColor: 'var(--sapContent_ContrastFocusColor)',
    sapContent_ShadowColor: 'var(--sapContent_ShadowColor)',
    sapContent_ContrastShadowColor: 'var(--sapContent_ContrastShadowColor)',
    sapContent_Shadow0: 'var(--sapContent_Shadow0)',
    sapContent_Shadow1: 'var(--sapContent_Shadow1)',
    sapContent_Shadow2: 'var(--sapContent_Shadow2)',
    sapContent_Shadow3: 'var(--sapContent_Shadow3)',
    sapContent_TextShadow: 'var(--sapContent_TextShadow)',
    sapContent_ContrastTextShadow: 'var(--sapContent_ContrastTextShadow)',
    sapContent_HeaderShadow: 'var(--sapContent_HeaderShadow)',
    sapContent_Interaction_Shadow: 'var(--sapContent_Interaction_Shadow)',
    sapContent_Selected_Shadow: 'var(--sapContent_Selected_Shadow)',
    sapContent_Negative_Shadow: 'var(--sapContent_Negative_Shadow)',
    sapContent_Critical_Shadow: 'var(--sapContent_Critical_Shadow)',
    sapContent_Positive_Shadow: 'var(--sapContent_Positive_Shadow)',
    sapContent_Informative_Shadow: 'var(--sapContent_Informative_Shadow)',
    sapContent_Neutral_Shadow: 'var(--sapContent_Neutral_Shadow)',
    sapContent_SearchHighlightColor: 'var(--sapContent_SearchHighlightColor)',
    sapContent_HelpColor: 'var(--sapContent_HelpColor)',
    sapContent_LabelColor: 'var(--sapContent_LabelColor)',
    sapContent_MonospaceFontFamily: 'var(--sapContent_MonospaceFontFamily)',
    sapContent_MonospaceBoldFontFamily: 'var(--sapContent_MonospaceBoldFontFamily)',
    sapContent_IconFontFamily: 'var(--sapContent_IconFontFamily)',
    sapContent_DisabledTextColor: 'var(--sapContent_DisabledTextColor)',
    sapContent_DisabledOpacity: 'var(--sapContent_DisabledOpacity)',
    sapContent_ContrastTextThreshold: 'var(--sapContent_ContrastTextThreshold)',
    sapContent_ContrastTextColor: 'var(--sapContent_ContrastTextColor)',
    sapContent_ForegroundColor: 'var(--sapContent_ForegroundColor)',
    sapContent_ForegroundBorderColor: 'var(--sapContent_ForegroundBorderColor)',
    sapContent_ForegroundTextColor: 'var(--sapContent_ForegroundTextColor)',
    sapContent_BadgeBackground: 'var(--sapContent_BadgeBackground)',
    sapContent_BadgeTextColor: 'var(--sapContent_BadgeTextColor)',
    sapContent_DragAndDropActiveColor: 'var(--sapContent_DragAndDropActiveColor)',
    sapContent_Selected_TextColor: 'var(--sapContent_Selected_TextColor)',
    sapContent_Selected_Background: 'var(--sapContent_Selected_Background)',
    sapContent_Selected_Hover_Background: 'var(--sapContent_Selected_Hover_Background)',
    sapContent_Selected_ForegroundColor: 'var(--sapContent_Selected_ForegroundColor)',
    sapContent_ForcedColorAdjust: 'var(--sapContent_ForcedColorAdjust)',
    sapContent_Illustrative_Color1: 'var(--sapContent_Illustrative_Color1)',
    sapContent_Illustrative_Color2: 'var(--sapContent_Illustrative_Color2)',
    sapContent_Illustrative_Color3: 'var(--sapContent_Illustrative_Color3)',
    sapContent_Illustrative_Color4: 'var(--sapContent_Illustrative_Color4)',
    sapContent_Illustrative_Color5: 'var(--sapContent_Illustrative_Color5)',
    sapContent_Illustrative_Color6: 'var(--sapContent_Illustrative_Color6)',
    sapContent_Illustrative_Color7: 'var(--sapContent_Illustrative_Color7)',
    sapContent_Illustrative_Color8: 'var(--sapContent_Illustrative_Color8)',
    sapContent_Illustrative_Color9: 'var(--sapContent_Illustrative_Color9)',
    sapContent_Illustrative_Color10: 'var(--sapContent_Illustrative_Color10)',
    sapContent_Illustrative_Color11: 'var(--sapContent_Illustrative_Color11)',
    sapContent_Illustrative_Color12: 'var(--sapContent_Illustrative_Color12)',
    sapContent_Illustrative_Color13: 'var(--sapContent_Illustrative_Color13)',
    sapContent_Illustrative_Color14: 'var(--sapContent_Illustrative_Color14)',
    sapContent_Illustrative_Color15: 'var(--sapContent_Illustrative_Color15)',
    sapContent_Illustrative_Color16: 'var(--sapContent_Illustrative_Color16)',
    sapContent_Illustrative_Color17: 'var(--sapContent_Illustrative_Color17)',
    sapContent_Illustrative_Color18: 'var(--sapContent_Illustrative_Color18)',
    sapContent_Illustrative_Color19: 'var(--sapContent_Illustrative_Color19)',
    sapContent_Illustrative_Color20: 'var(--sapContent_Illustrative_Color20)',
    sapFontLightFamily: 'var(--sapFontLightFamily)',
    sapFontBoldFamily: 'var(--sapFontBoldFamily)',
    sapFontSemiboldFamily: 'var(--sapFontSemiboldFamily)',
    sapFontSemiboldDuplexFamily: 'var(--sapFontSemiboldDuplexFamily)',
    sapFontBlackFamily: 'var(--sapFontBlackFamily)',
    sapFontHeaderFamily: 'var(--sapFontHeaderFamily)',
    sapFontSmallSize: 'var(--sapFontSmallSize)',
    sapFontLargeSize: 'var(--sapFontLargeSize)',
    sapFontHeader1Size: 'var(--sapFontHeader1Size)',
    sapFontHeader2Size: 'var(--sapFontHeader2Size)',
    sapFontHeader3Size: 'var(--sapFontHeader3Size)',
    sapFontHeader4Size: 'var(--sapFontHeader4Size)',
    sapFontHeader5Size: 'var(--sapFontHeader5Size)',
    sapFontHeader6Size: 'var(--sapFontHeader6Size)',
    sapLink_TextDecoration: 'var(--sapLink_TextDecoration)',
    sapLink_Hover_Color: 'var(--sapLink_Hover_Color)',
    sapLink_Hover_TextDecoration: 'var(--sapLink_Hover_TextDecoration)',
    sapLink_Active_Color: 'var(--sapLink_Active_Color)',
    sapLink_Active_TextDecoration: 'var(--sapLink_Active_TextDecoration)',
    sapLink_Visited_Color: 'var(--sapLink_Visited_Color)',
    sapLink_InvertedColor: 'var(--sapLink_InvertedColor)',
    sapLink_SubtleColor: 'var(--sapLink_SubtleColor)',
    sapShell_Background: 'var(--sapShell_Background)',
    sapShell_BackgroundImage: 'var(--sapShell_BackgroundImage)',
    sapShell_BackgroundImageOpacity: 'var(--sapShell_BackgroundImageOpacity)',
    sapShell_BackgroundImageRepeat: 'var(--sapShell_BackgroundImageRepeat)',
    sapShell_BorderColor: 'var(--sapShell_BorderColor)',
    sapShell_TextColor: 'var(--sapShell_TextColor)',
    sapShell_InteractiveBackground: 'var(--sapShell_InteractiveBackground)',
    sapShell_InteractiveTextColor: 'var(--sapShell_InteractiveTextColor)',
    sapShell_InteractiveBorderColor: 'var(--sapShell_InteractiveBorderColor)',
    sapShell_GroupTitleTextColor: 'var(--sapShell_GroupTitleTextColor)',
    sapShell_GroupTitleTextShadow: 'var(--sapShell_GroupTitleTextShadow)',
    sapShell_Hover_Background: 'var(--sapShell_Hover_Background)',
    sapShell_Active_Background: 'var(--sapShell_Active_Background)',
    sapShell_Active_TextColor: 'var(--sapShell_Active_TextColor)',
    sapShell_Selected_Background: 'var(--sapShell_Selected_Background)',
    sapShell_Selected_TextColor: 'var(--sapShell_Selected_TextColor)',
    sapShell_Selected_Hover_Background: 'var(--sapShell_Selected_Hover_Background)',
    sapShell_Favicon: 'var(--sapShell_Favicon)',
    sapShell_Navigation_Background: 'var(--sapShell_Navigation_Background)',
    sapShell_Navigation_Hover_Background: 'var(--sapShell_Navigation_Hover_Background)',
    sapShell_Navigation_SelectedColor: 'var(--sapShell_Navigation_SelectedColor)',
    sapShell_Navigation_Selected_TextColor: 'var(--sapShell_Navigation_Selected_TextColor)',
    sapShell_Navigation_TextColor: 'var(--sapShell_Navigation_TextColor)',
    sapShell_Navigation_Active_TextColor: 'var(--sapShell_Navigation_Active_TextColor)',
    sapShell_Navigation_Active_Background: 'var(--sapShell_Navigation_Active_Background)',
    sapShell_Shadow: 'var(--sapShell_Shadow)',
    sapShell_NegativeColor: 'var(--sapShell_NegativeColor)',
    sapShell_CriticalColor: 'var(--sapShell_CriticalColor)',
    sapShell_PositiveColor: 'var(--sapShell_PositiveColor)',
    sapShell_InformativeColor: 'var(--sapShell_InformativeColor)',
    sapShell_NeutralColor: 'var(--sapShell_NeutralColor)',
    sapShell_Category_1_Background: 'var(--sapShell_Category_1_Background)',
    sapShell_Category_1_BorderColor: 'var(--sapShell_Category_1_BorderColor)',
    sapShell_Category_1_TextColor: 'var(--sapShell_Category_1_TextColor)',
    sapShell_Category_1_TextShadow: 'var(--sapShell_Category_1_TextShadow)',
    sapShell_Category_2_Background: 'var(--sapShell_Category_2_Background)',
    sapShell_Category_2_BorderColor: 'var(--sapShell_Category_2_BorderColor)',
    sapShell_Category_2_TextColor: 'var(--sapShell_Category_2_TextColor)',
    sapShell_Category_2_TextShadow: 'var(--sapShell_Category_2_TextShadow)',
    sapShell_Category_3_Background: 'var(--sapShell_Category_3_Background)',
    sapShell_Category_3_BorderColor: 'var(--sapShell_Category_3_BorderColor)',
    sapShell_Category_3_TextColor: 'var(--sapShell_Category_3_TextColor)',
    sapShell_Category_3_TextShadow: 'var(--sapShell_Category_3_TextShadow)',
    sapShell_Category_4_Background: 'var(--sapShell_Category_4_Background)',
    sapShell_Category_4_BorderColor: 'var(--sapShell_Category_4_BorderColor)',
    sapShell_Category_4_TextColor: 'var(--sapShell_Category_4_TextColor)',
    sapShell_Category_4_TextShadow: 'var(--sapShell_Category_4_TextShadow)',
    sapShell_Category_5_Background: 'var(--sapShell_Category_5_Background)',
    sapShell_Category_5_BorderColor: 'var(--sapShell_Category_5_BorderColor)',
    sapShell_Category_5_TextColor: 'var(--sapShell_Category_5_TextColor)',
    sapShell_Category_5_TextShadow: 'var(--sapShell_Category_5_TextShadow)',
    sapShell_Category_6_Background: 'var(--sapShell_Category_6_Background)',
    sapShell_Category_6_BorderColor: 'var(--sapShell_Category_6_BorderColor)',
    sapShell_Category_6_TextColor: 'var(--sapShell_Category_6_TextColor)',
    sapShell_Category_6_TextShadow: 'var(--sapShell_Category_6_TextShadow)',
    sapShell_Category_7_Background: 'var(--sapShell_Category_7_Background)',
    sapShell_Category_7_BorderColor: 'var(--sapShell_Category_7_BorderColor)',
    sapShell_Category_7_TextColor: 'var(--sapShell_Category_7_TextColor)',
    sapShell_Category_7_TextShadow: 'var(--sapShell_Category_7_TextShadow)',
    sapShell_Category_8_Background: 'var(--sapShell_Category_8_Background)',
    sapShell_Category_8_BorderColor: 'var(--sapShell_Category_8_BorderColor)',
    sapShell_Category_8_TextColor: 'var(--sapShell_Category_8_TextColor)',
    sapShell_Category_8_TextShadow: 'var(--sapShell_Category_8_TextShadow)',
    sapShell_Category_9_Background: 'var(--sapShell_Category_9_Background)',
    sapShell_Category_9_BorderColor: 'var(--sapShell_Category_9_BorderColor)',
    sapShell_Category_9_TextColor: 'var(--sapShell_Category_9_TextColor)',
    sapShell_Category_9_TextShadow: 'var(--sapShell_Category_9_TextShadow)',
    sapShell_Category_10_Background: 'var(--sapShell_Category_10_Background)',
    sapShell_Category_10_BorderColor: 'var(--sapShell_Category_10_BorderColor)',
    sapShell_Category_10_TextColor: 'var(--sapShell_Category_10_TextColor)',
    sapShell_Category_10_TextShadow: 'var(--sapShell_Category_10_TextShadow)',
    sapShell_Category_11_Background: 'var(--sapShell_Category_11_Background)',
    sapShell_Category_11_BorderColor: 'var(--sapShell_Category_11_BorderColor)',
    sapShell_Category_11_TextColor: 'var(--sapShell_Category_11_TextColor)',
    sapShell_Category_11_TextShadow: 'var(--sapShell_Category_11_TextShadow)',
    sapShell_Category_12_Background: 'var(--sapShell_Category_12_Background)',
    sapShell_Category_12_BorderColor: 'var(--sapShell_Category_12_BorderColor)',
    sapShell_Category_12_TextColor: 'var(--sapShell_Category_12_TextColor)',
    sapShell_Category_12_TextShadow: 'var(--sapShell_Category_12_TextShadow)',
    sapShell_Category_13_Background: 'var(--sapShell_Category_13_Background)',
    sapShell_Category_13_BorderColor: 'var(--sapShell_Category_13_BorderColor)',
    sapShell_Category_13_TextColor: 'var(--sapShell_Category_13_TextColor)',
    sapShell_Category_13_TextShadow: 'var(--sapShell_Category_13_TextShadow)',
    sapShell_Category_14_Background: 'var(--sapShell_Category_14_Background)',
    sapShell_Category_14_BorderColor: 'var(--sapShell_Category_14_BorderColor)',
    sapShell_Category_14_TextColor: 'var(--sapShell_Category_14_TextColor)',
    sapShell_Category_14_TextShadow: 'var(--sapShell_Category_14_TextShadow)',
    sapShell_Category_15_Background: 'var(--sapShell_Category_15_Background)',
    sapShell_Category_15_BorderColor: 'var(--sapShell_Category_15_BorderColor)',
    sapShell_Category_15_TextColor: 'var(--sapShell_Category_15_TextColor)',
    sapShell_Category_15_TextShadow: 'var(--sapShell_Category_15_TextShadow)',
    sapShell_Category_16_Background: 'var(--sapShell_Category_16_Background)',
    sapShell_Category_16_BorderColor: 'var(--sapShell_Category_16_BorderColor)',
    sapShell_Category_16_TextColor: 'var(--sapShell_Category_16_TextColor)',
    sapShell_Category_16_TextShadow: 'var(--sapShell_Category_16_TextShadow)',
    sapAvatar_1_Background: 'var(--sapAvatar_1_Background)',
    sapAvatar_1_BorderColor: 'var(--sapAvatar_1_BorderColor)',
    sapAvatar_1_TextColor: 'var(--sapAvatar_1_TextColor)',
    sapAvatar_2_Background: 'var(--sapAvatar_2_Background)',
    sapAvatar_2_BorderColor: 'var(--sapAvatar_2_BorderColor)',
    sapAvatar_2_TextColor: 'var(--sapAvatar_2_TextColor)',
    sapAvatar_3_Background: 'var(--sapAvatar_3_Background)',
    sapAvatar_3_BorderColor: 'var(--sapAvatar_3_BorderColor)',
    sapAvatar_3_TextColor: 'var(--sapAvatar_3_TextColor)',
    sapAvatar_4_Background: 'var(--sapAvatar_4_Background)',
    sapAvatar_4_BorderColor: 'var(--sapAvatar_4_BorderColor)',
    sapAvatar_4_TextColor: 'var(--sapAvatar_4_TextColor)',
    sapAvatar_5_Background: 'var(--sapAvatar_5_Background)',
    sapAvatar_5_BorderColor: 'var(--sapAvatar_5_BorderColor)',
    sapAvatar_5_TextColor: 'var(--sapAvatar_5_TextColor)',
    sapAvatar_6_Background: 'var(--sapAvatar_6_Background)',
    sapAvatar_6_BorderColor: 'var(--sapAvatar_6_BorderColor)',
    sapAvatar_6_TextColor: 'var(--sapAvatar_6_TextColor)',
    sapAvatar_7_Background: 'var(--sapAvatar_7_Background)',
    sapAvatar_7_BorderColor: 'var(--sapAvatar_7_BorderColor)',
    sapAvatar_7_TextColor: 'var(--sapAvatar_7_TextColor)',
    sapAvatar_8_Background: 'var(--sapAvatar_8_Background)',
    sapAvatar_8_BorderColor: 'var(--sapAvatar_8_BorderColor)',
    sapAvatar_8_TextColor: 'var(--sapAvatar_8_TextColor)',
    sapAvatar_9_Background: 'var(--sapAvatar_9_Background)',
    sapAvatar_9_BorderColor: 'var(--sapAvatar_9_BorderColor)',
    sapAvatar_9_TextColor: 'var(--sapAvatar_9_TextColor)',
    sapAvatar_10_Background: 'var(--sapAvatar_10_Background)',
    sapAvatar_10_BorderColor: 'var(--sapAvatar_10_BorderColor)',
    sapAvatar_10_TextColor: 'var(--sapAvatar_10_TextColor)',
    sapButton_Background: 'var(--sapButton_Background)',
    sapButton_BorderColor: 'var(--sapButton_BorderColor)',
    sapButton_BorderWidth: 'var(--sapButton_BorderWidth)',
    sapButton_BorderCornerRadius: 'var(--sapButton_BorderCornerRadius)',
    sapButton_TextColor: 'var(--sapButton_TextColor)',
    sapButton_Hover_Background: 'var(--sapButton_Hover_Background)',
    sapButton_Hover_BorderColor: 'var(--sapButton_Hover_BorderColor)',
    sapButton_Hover_TextColor: 'var(--sapButton_Hover_TextColor)',
    sapButton_IconColor: 'var(--sapButton_IconColor)',
    sapButton_Active_Background: 'var(--sapButton_Active_Background)',
    sapButton_Active_BorderColor: 'var(--sapButton_Active_BorderColor)',
    sapButton_Active_TextColor: 'var(--sapButton_Active_TextColor)',
    sapButton_Emphasized_Background: 'var(--sapButton_Emphasized_Background)',
    sapButton_Emphasized_BorderColor: 'var(--sapButton_Emphasized_BorderColor)',
    sapButton_Emphasized_TextColor: 'var(--sapButton_Emphasized_TextColor)',
    sapButton_Emphasized_Hover_Background: 'var(--sapButton_Emphasized_Hover_Background)',
    sapButton_Emphasized_Hover_BorderColor: 'var(--sapButton_Emphasized_Hover_BorderColor)',
    sapButton_Emphasized_Hover_TextColor: 'var(--sapButton_Emphasized_Hover_TextColor)',
    sapButton_Emphasized_Active_Background: 'var(--sapButton_Emphasized_Active_Background)',
    sapButton_Emphasized_Active_BorderColor: 'var(--sapButton_Emphasized_Active_BorderColor)',
    sapButton_Emphasized_Active_TextColor: 'var(--sapButton_Emphasized_Active_TextColor)',
    sapButton_Emphasized_TextShadow: 'var(--sapButton_Emphasized_TextShadow)',
    sapButton_Emphasized_FontWeight: 'var(--sapButton_Emphasized_FontWeight)',
    sapButton_Reject_Background: 'var(--sapButton_Reject_Background)',
    sapButton_Reject_BorderColor: 'var(--sapButton_Reject_BorderColor)',
    sapButton_Reject_TextColor: 'var(--sapButton_Reject_TextColor)',
    sapButton_Reject_Hover_Background: 'var(--sapButton_Reject_Hover_Background)',
    sapButton_Reject_Hover_BorderColor: 'var(--sapButton_Reject_Hover_BorderColor)',
    sapButton_Reject_Hover_TextColor: 'var(--sapButton_Reject_Hover_TextColor)',
    sapButton_Reject_Active_Background: 'var(--sapButton_Reject_Active_Background)',
    sapButton_Reject_Active_BorderColor: 'var(--sapButton_Reject_Active_BorderColor)',
    sapButton_Reject_Active_TextColor: 'var(--sapButton_Reject_Active_TextColor)',
    sapButton_Reject_Selected_Background: 'var(--sapButton_Reject_Selected_Background)',
    sapButton_Reject_Selected_BorderColor: 'var(--sapButton_Reject_Selected_BorderColor)',
    sapButton_Reject_Selected_TextColor: 'var(--sapButton_Reject_Selected_TextColor)',
    sapButton_Reject_Selected_Hover_Background: 'var(--sapButton_Reject_Selected_Hover_Background)',
    sapButton_Reject_Selected_Hover_BorderColor: 'var(--sapButton_Reject_Selected_Hover_BorderColor)',
    sapButton_Accept_Background: 'var(--sapButton_Accept_Background)',
    sapButton_Accept_BorderColor: 'var(--sapButton_Accept_BorderColor)',
    sapButton_Accept_TextColor: 'var(--sapButton_Accept_TextColor)',
    sapButton_Accept_Hover_Background: 'var(--sapButton_Accept_Hover_Background)',
    sapButton_Accept_Hover_BorderColor: 'var(--sapButton_Accept_Hover_BorderColor)',
    sapButton_Accept_Hover_TextColor: 'var(--sapButton_Accept_Hover_TextColor)',
    sapButton_Accept_Active_Background: 'var(--sapButton_Accept_Active_Background)',
    sapButton_Accept_Active_BorderColor: 'var(--sapButton_Accept_Active_BorderColor)',
    sapButton_Accept_Active_TextColor: 'var(--sapButton_Accept_Active_TextColor)',
    sapButton_Accept_Selected_Background: 'var(--sapButton_Accept_Selected_Background)',
    sapButton_Accept_Selected_BorderColor: 'var(--sapButton_Accept_Selected_BorderColor)',
    sapButton_Accept_Selected_TextColor: 'var(--sapButton_Accept_Selected_TextColor)',
    sapButton_Accept_Selected_Hover_Background: 'var(--sapButton_Accept_Selected_Hover_Background)',
    sapButton_Accept_Selected_Hover_BorderColor: 'var(--sapButton_Accept_Selected_Hover_BorderColor)',
    sapButton_Lite_Background: 'var(--sapButton_Lite_Background)',
    sapButton_Lite_BorderColor: 'var(--sapButton_Lite_BorderColor)',
    sapButton_Lite_TextColor: 'var(--sapButton_Lite_TextColor)',
    sapButton_Lite_Hover_Background: 'var(--sapButton_Lite_Hover_Background)',
    sapButton_Lite_Hover_BorderColor: 'var(--sapButton_Lite_Hover_BorderColor)',
    sapButton_Lite_Hover_TextColor: 'var(--sapButton_Lite_Hover_TextColor)',
    sapButton_Lite_Active_Background: 'var(--sapButton_Lite_Active_Background)',
    sapButton_Lite_Active_BorderColor: 'var(--sapButton_Lite_Active_BorderColor)',
    sapButton_Selected_Background: 'var(--sapButton_Selected_Background)',
    sapButton_Selected_BorderColor: 'var(--sapButton_Selected_BorderColor)',
    sapButton_Selected_TextColor: 'var(--sapButton_Selected_TextColor)',
    sapButton_Selected_Hover_Background: 'var(--sapButton_Selected_Hover_Background)',
    sapButton_Selected_Hover_BorderColor: 'var(--sapButton_Selected_Hover_BorderColor)',
    sapButton_Attention_Background: 'var(--sapButton_Attention_Background)',
    sapButton_Attention_BorderColor: 'var(--sapButton_Attention_BorderColor)',
    sapButton_Attention_TextColor: 'var(--sapButton_Attention_TextColor)',
    sapButton_Attention_Hover_Background: 'var(--sapButton_Attention_Hover_Background)',
    sapButton_Attention_Hover_BorderColor: 'var(--sapButton_Attention_Hover_BorderColor)',
    sapButton_Attention_Hover_TextColor: 'var(--sapButton_Attention_Hover_TextColor)',
    sapButton_Attention_Active_Background: 'var(--sapButton_Attention_Active_Background)',
    sapButton_Attention_Active_BorderColor: 'var(--sapButton_Attention_Active_BorderColor)',
    sapButton_Attention_Active_TextColor: 'var(--sapButton_Attention_Active_TextColor)',
    sapButton_Attention_Selected_Background: 'var(--sapButton_Attention_Selected_Background)',
    sapButton_Attention_Selected_BorderColor: 'var(--sapButton_Attention_Selected_BorderColor)',
    sapButton_Attention_Selected_TextColor: 'var(--sapButton_Attention_Selected_TextColor)',
    sapButton_Attention_Selected_Hover_Background: 'var(--sapButton_Attention_Selected_Hover_Background)',
    sapButton_Attention_Selected_Hover_BorderColor: 'var(--sapButton_Attention_Selected_Hover_BorderColor)',
    sapButton_Negative_Background: 'var(--sapButton_Negative_Background)',
    sapButton_Negative_BorderColor: 'var(--sapButton_Negative_BorderColor)',
    sapButton_Negative_TextColor: 'var(--sapButton_Negative_TextColor)',
    sapButton_Negative_Hover_Background: 'var(--sapButton_Negative_Hover_Background)',
    sapButton_Negative_Hover_BorderColor: 'var(--sapButton_Negative_Hover_BorderColor)',
    sapButton_Negative_Hover_TextColor: 'var(--sapButton_Negative_Hover_TextColor)',
    sapButton_Negative_Active_Background: 'var(--sapButton_Negative_Active_Background)',
    sapButton_Negative_Active_BorderColor: 'var(--sapButton_Negative_Active_BorderColor)',
    sapButton_Negative_Active_TextColor: 'var(--sapButton_Negative_Active_TextColor)',
    sapButton_Critical_Background: 'var(--sapButton_Critical_Background)',
    sapButton_Critical_BorderColor: 'var(--sapButton_Critical_BorderColor)',
    sapButton_Critical_TextColor: 'var(--sapButton_Critical_TextColor)',
    sapButton_Critical_Hover_Background: 'var(--sapButton_Critical_Hover_Background)',
    sapButton_Critical_Hover_BorderColor: 'var(--sapButton_Critical_Hover_BorderColor)',
    sapButton_Critical_Hover_TextColor: 'var(--sapButton_Critical_Hover_TextColor)',
    sapButton_Critical_Active_Background: 'var(--sapButton_Critical_Active_Background)',
    sapButton_Critical_Active_BorderColor: 'var(--sapButton_Critical_Active_BorderColor)',
    sapButton_Critical_Active_TextColor: 'var(--sapButton_Critical_Active_TextColor)',
    sapButton_Success_Background: 'var(--sapButton_Success_Background)',
    sapButton_Success_BorderColor: 'var(--sapButton_Success_BorderColor)',
    sapButton_Success_TextColor: 'var(--sapButton_Success_TextColor)',
    sapButton_Success_Hover_Background: 'var(--sapButton_Success_Hover_Background)',
    sapButton_Success_Hover_BorderColor: 'var(--sapButton_Success_Hover_BorderColor)',
    sapButton_Success_Hover_TextColor: 'var(--sapButton_Success_Hover_TextColor)',
    sapButton_Success_Active_Background: 'var(--sapButton_Success_Active_Background)',
    sapButton_Success_Active_BorderColor: 'var(--sapButton_Success_Active_BorderColor)',
    sapButton_Success_Active_TextColor: 'var(--sapButton_Success_Active_TextColor)',
    sapButton_Information_Background: 'var(--sapButton_Information_Background)',
    sapButton_Information_BorderColor: 'var(--sapButton_Information_BorderColor)',
    sapButton_Information_TextColor: 'var(--sapButton_Information_TextColor)',
    sapButton_Information_Hover_Background: 'var(--sapButton_Information_Hover_Background)',
    sapButton_Information_Hover_BorderColor: 'var(--sapButton_Information_Hover_BorderColor)',
    sapButton_Information_Hover_TextColor: 'var(--sapButton_Information_Hover_TextColor)',
    sapButton_Information_Active_Background: 'var(--sapButton_Information_Active_Background)',
    sapButton_Information_Active_BorderColor: 'var(--sapButton_Information_Active_BorderColor)',
    sapButton_Information_Active_TextColor: 'var(--sapButton_Information_Active_TextColor)',
    sapButton_Neutral_Background: 'var(--sapButton_Neutral_Background)',
    sapButton_Neutral_BorderColor: 'var(--sapButton_Neutral_BorderColor)',
    sapButton_Neutral_TextColor: 'var(--sapButton_Neutral_TextColor)',
    sapButton_Neutral_Hover_Background: 'var(--sapButton_Neutral_Hover_Background)',
    sapButton_Neutral_Hover_BorderColor: 'var(--sapButton_Neutral_Hover_BorderColor)',
    sapButton_Neutral_Hover_TextColor: 'var(--sapButton_Neutral_Hover_TextColor)',
    sapButton_Neutral_Active_Background: 'var(--sapButton_Neutral_Active_Background)',
    sapButton_Neutral_Active_BorderColor: 'var(--sapButton_Neutral_Active_BorderColor)',
    sapButton_Neutral_Active_TextColor: 'var(--sapButton_Neutral_Active_TextColor)',
    sapButton_Track_Background: 'var(--sapButton_Track_Background)',
    sapButton_Track_BorderColor: 'var(--sapButton_Track_BorderColor)',
    sapButton_Track_TextColor: 'var(--sapButton_Track_TextColor)',
    sapButton_Track_Hover_Background: 'var(--sapButton_Track_Hover_Background)',
    sapButton_Track_Hover_BorderColor: 'var(--sapButton_Track_Hover_BorderColor)',
    sapButton_Track_Selected_Background: 'var(--sapButton_Track_Selected_Background)',
    sapButton_Track_Selected_BorderColor: 'var(--sapButton_Track_Selected_BorderColor)',
    sapButton_Track_Selected_TextColor: 'var(--sapButton_Track_Selected_TextColor)',
    sapButton_Track_Selected_Hover_Background: 'var(--sapButton_Track_Selected_Hover_Background)',
    sapButton_Track_Selected_Hover_BorderColor: 'var(--sapButton_Track_Selected_Hover_BorderColor)',
    sapButton_Handle_Background: 'var(--sapButton_Handle_Background)',
    sapButton_Handle_BorderColor: 'var(--sapButton_Handle_BorderColor)',
    sapButton_Handle_TextColor: 'var(--sapButton_Handle_TextColor)',
    sapButton_Handle_Hover_Background: 'var(--sapButton_Handle_Hover_Background)',
    sapButton_Handle_Hover_BorderColor: 'var(--sapButton_Handle_Hover_BorderColor)',
    sapButton_Handle_Selected_Background: 'var(--sapButton_Handle_Selected_Background)',
    sapButton_Handle_Selected_BorderColor: 'var(--sapButton_Handle_Selected_BorderColor)',
    sapButton_Handle_Selected_TextColor: 'var(--sapButton_Handle_Selected_TextColor)',
    sapButton_Handle_Selected_Hover_Background: 'var(--sapButton_Handle_Selected_Hover_Background)',
    sapButton_Handle_Selected_Hover_BorderColor: 'var(--sapButton_Handle_Selected_Hover_BorderColor)',
    sapButton_Track_Negative_Background: 'var(--sapButton_Track_Negative_Background)',
    sapButton_Track_Negative_BorderColor: 'var(--sapButton_Track_Negative_BorderColor)',
    sapButton_Track_Negative_TextColor: 'var(--sapButton_Track_Negative_TextColor)',
    sapButton_Track_Negative_Hover_Background: 'var(--sapButton_Track_Negative_Hover_Background)',
    sapButton_Track_Negative_Hover_BorderColor: 'var(--sapButton_Track_Negative_Hover_BorderColor)',
    sapButton_Handle_Negative_Background: 'var(--sapButton_Handle_Negative_Background)',
    sapButton_Handle_Negative_BorderColor: 'var(--sapButton_Handle_Negative_BorderColor)',
    sapButton_Handle_Negative_TextColor: 'var(--sapButton_Handle_Negative_TextColor)',
    sapButton_Handle_Negative_Hover_Background: 'var(--sapButton_Handle_Negative_Hover_Background)',
    sapButton_Handle_Negative_Hover_BorderColor: 'var(--sapButton_Handle_Negative_Hover_BorderColor)',
    sapButton_Track_Positive_Background: 'var(--sapButton_Track_Positive_Background)',
    sapButton_Track_Positive_BorderColor: 'var(--sapButton_Track_Positive_BorderColor)',
    sapButton_Track_Positive_TextColor: 'var(--sapButton_Track_Positive_TextColor)',
    sapButton_Track_Positive_Hover_Background: 'var(--sapButton_Track_Positive_Hover_Background)',
    sapButton_Track_Positive_Hover_BorderColor: 'var(--sapButton_Track_Positive_Hover_BorderColor)',
    sapButton_Handle_Positive_Background: 'var(--sapButton_Handle_Positive_Background)',
    sapButton_Handle_Positive_BorderColor: 'var(--sapButton_Handle_Positive_BorderColor)',
    sapButton_Handle_Positive_TextColor: 'var(--sapButton_Handle_Positive_TextColor)',
    sapButton_Handle_Positive_Hover_Background: 'var(--sapButton_Handle_Positive_Hover_Background)',
    sapButton_Handle_Positive_Hover_BorderColor: 'var(--sapButton_Handle_Positive_Hover_BorderColor)',
    sapButton_TokenBackground: 'var(--sapButton_TokenBackground)',
    sapButton_TokenBorderColor: 'var(--sapButton_TokenBorderColor)',
    sapField_Background: 'var(--sapField_Background)',
    sapField_BackgroundStyle: 'var(--sapField_BackgroundStyle)',
    sapField_TextColor: 'var(--sapField_TextColor)',
    sapField_PlaceholderTextColor: 'var(--sapField_PlaceholderTextColor)',
    sapField_BorderColor: 'var(--sapField_BorderColor)',
    sapField_HelpBackground: 'var(--sapField_HelpBackground)',
    sapField_BorderWidth: 'var(--sapField_BorderWidth)',
    sapField_BorderStyle: 'var(--sapField_BorderStyle)',
    sapField_BorderCornerRadius: 'var(--sapField_BorderCornerRadius)',
    sapField_Shadow: 'var(--sapField_Shadow)',
    sapField_Hover_Background: 'var(--sapField_Hover_Background)',
    sapField_Hover_BackgroundStyle: 'var(--sapField_Hover_BackgroundStyle)',
    sapField_Hover_BorderColor: 'var(--sapField_Hover_BorderColor)',
    sapField_Hover_HelpBackground: 'var(--sapField_Hover_HelpBackground)',
    sapField_Hover_Shadow: 'var(--sapField_Hover_Shadow)',
    sapField_Hover_InvalidShadow: 'var(--sapField_Hover_InvalidShadow)',
    sapField_Hover_WarningShadow: 'var(--sapField_Hover_WarningShadow)',
    sapField_Hover_SuccessShadow: 'var(--sapField_Hover_SuccessShadow)',
    sapField_Hover_InformationShadow: 'var(--sapField_Hover_InformationShadow)',
    sapField_Active_BorderColor: 'var(--sapField_Active_BorderColor)',
    sapField_Focus_Background: 'var(--sapField_Focus_Background)',
    sapField_Focus_BorderColor: 'var(--sapField_Focus_BorderColor)',
    sapField_Focus_HelpBackground: 'var(--sapField_Focus_HelpBackground)',
    sapField_ReadOnly_Background: 'var(--sapField_ReadOnly_Background)',
    sapField_ReadOnly_BackgroundStyle: 'var(--sapField_ReadOnly_BackgroundStyle)',
    sapField_ReadOnly_BorderColor: 'var(--sapField_ReadOnly_BorderColor)',
    sapField_ReadOnly_BorderStyle: 'var(--sapField_ReadOnly_BorderStyle)',
    sapField_ReadOnly_HelpBackground: 'var(--sapField_ReadOnly_HelpBackground)',
    sapField_RequiredColor: 'var(--sapField_RequiredColor)',
    sapField_InvalidColor: 'var(--sapField_InvalidColor)',
    sapField_InvalidBackground: 'var(--sapField_InvalidBackground)',
    sapField_InvalidBackgroundStyle: 'var(--sapField_InvalidBackgroundStyle)',
    sapField_InvalidBorderWidth: 'var(--sapField_InvalidBorderWidth)',
    sapField_InvalidBorderStyle: 'var(--sapField_InvalidBorderStyle)',
    sapField_InvalidShadow: 'var(--sapField_InvalidShadow)',
    sapField_WarningColor: 'var(--sapField_WarningColor)',
    sapField_WarningBackground: 'var(--sapField_WarningBackground)',
    sapField_WarningBackgroundStyle: 'var(--sapField_WarningBackgroundStyle)',
    sapField_WarningBorderWidth: 'var(--sapField_WarningBorderWidth)',
    sapField_WarningBorderStyle: 'var(--sapField_WarningBorderStyle)',
    sapField_WarningShadow: 'var(--sapField_WarningShadow)',
    sapField_SuccessColor: 'var(--sapField_SuccessColor)',
    sapField_SuccessBackground: 'var(--sapField_SuccessBackground)',
    sapField_SuccessBackgroundStyle: 'var(--sapField_SuccessBackgroundStyle)',
    sapField_SuccessBorderWidth: 'var(--sapField_SuccessBorderWidth)',
    sapField_SuccessBorderStyle: 'var(--sapField_SuccessBorderStyle)',
    sapField_SuccessShadow: 'var(--sapField_SuccessShadow)',
    sapField_InformationColor: 'var(--sapField_InformationColor)',
    sapField_InformationBackground: 'var(--sapField_InformationBackground)',
    sapField_InformationBackgroundStyle: 'var(--sapField_InformationBackgroundStyle)',
    sapField_InformationBorderWidth: 'var(--sapField_InformationBorderWidth)',
    sapField_InformationBorderStyle: 'var(--sapField_InformationBorderStyle)',
    sapField_InformationShadow: 'var(--sapField_InformationShadow)',
    sapGroup_TitleBackground: 'var(--sapGroup_TitleBackground)',
    sapGroup_TitleBorderColor: 'var(--sapGroup_TitleBorderColor)',
    sapGroup_TitleTextColor: 'var(--sapGroup_TitleTextColor)',
    sapGroup_Title_FontSize: 'var(--sapGroup_Title_FontSize)',
    sapGroup_ContentBackground: 'var(--sapGroup_ContentBackground)',
    sapGroup_ContentBorderColor: 'var(--sapGroup_ContentBorderColor)',
    sapGroup_BorderWidth: 'var(--sapGroup_BorderWidth)',
    sapGroup_BorderCornerRadius: 'var(--sapGroup_BorderCornerRadius)',
    sapGroup_FooterBackground: 'var(--sapGroup_FooterBackground)',
    sapToolbar_Background: 'var(--sapToolbar_Background)',
    sapToolbar_SeparatorColor: 'var(--sapToolbar_SeparatorColor)',
    sapList_HeaderBackground: 'var(--sapList_HeaderBackground)',
    sapList_HeaderBorderColor: 'var(--sapList_HeaderBorderColor)',
    sapList_HeaderTextColor: 'var(--sapList_HeaderTextColor)',
    sapList_BorderColor: 'var(--sapList_BorderColor)',
    sapList_BorderWidth: 'var(--sapList_BorderWidth)',
    sapList_TextColor: 'var(--sapList_TextColor)',
    sapList_Active_TextColor: 'var(--sapList_Active_TextColor)',
    sapList_Active_Background: 'var(--sapList_Active_Background)',
    sapList_SelectionBackgroundColor: 'var(--sapList_SelectionBackgroundColor)',
    sapList_SelectionBorderColor: 'var(--sapList_SelectionBorderColor)',
    sapList_Hover_SelectionBackground: 'var(--sapList_Hover_SelectionBackground)',
    sapList_Background: 'var(--sapList_Background)',
    sapList_Hover_Background: 'var(--sapList_Hover_Background)',
    sapList_AlternatingBackground: 'var(--sapList_AlternatingBackground)',
    sapList_GroupHeaderBackground: 'var(--sapList_GroupHeaderBackground)',
    sapList_GroupHeaderBorderColor: 'var(--sapList_GroupHeaderBorderColor)',
    sapList_GroupHeaderTextColor: 'var(--sapList_GroupHeaderTextColor)',
    sapList_TableGroupHeaderBackground: 'var(--sapList_TableGroupHeaderBackground)',
    sapList_TableGroupHeaderBorderColor: 'var(--sapList_TableGroupHeaderBorderColor)',
    sapList_TableGroupHeaderTextColor: 'var(--sapList_TableGroupHeaderTextColor)',
    sapList_FooterBackground: 'var(--sapList_FooterBackground)',
    sapList_FooterTextColor: 'var(--sapList_FooterTextColor)',
    sapList_TableFooterBorder: 'var(--sapList_TableFooterBorder)',
    sapList_TableFixedBorderColor: 'var(--sapList_TableFixedBorderColor)',
    sapMessage_ErrorBorderColor: 'var(--sapMessage_ErrorBorderColor)',
    sapMessage_WarningBorderColor: 'var(--sapMessage_WarningBorderColor)',
    sapMessage_SuccessBorderColor: 'var(--sapMessage_SuccessBorderColor)',
    sapMessage_InformationBorderColor: 'var(--sapMessage_InformationBorderColor)',
    sapPopover_BorderCornerRadius: 'var(--sapPopover_BorderCornerRadius)',
    sapProgress_Background: 'var(--sapProgress_Background)',
    sapProgress_BorderColor: 'var(--sapProgress_BorderColor)',
    sapProgress_TextColor: 'var(--sapProgress_TextColor)',
    sapProgress_FontSize: 'var(--sapProgress_FontSize)',
    sapProgress_NegativeBackground: 'var(--sapProgress_NegativeBackground)',
    sapProgress_NegativeBorderColor: 'var(--sapProgress_NegativeBorderColor)',
    sapProgress_NegativeTextColor: 'var(--sapProgress_NegativeTextColor)',
    sapProgress_CriticalBackground: 'var(--sapProgress_CriticalBackground)',
    sapProgress_CriticalBorderColor: 'var(--sapProgress_CriticalBorderColor)',
    sapProgress_CriticalTextColor: 'var(--sapProgress_CriticalTextColor)',
    sapProgress_PositiveBackground: 'var(--sapProgress_PositiveBackground)',
    sapProgress_PositiveBorderColor: 'var(--sapProgress_PositiveBorderColor)',
    sapProgress_PositiveTextColor: 'var(--sapProgress_PositiveTextColor)',
    sapProgress_InformationBackground: 'var(--sapProgress_InformationBackground)',
    sapProgress_InformationBorderColor: 'var(--sapProgress_InformationBorderColor)',
    sapProgress_InformationTextColor: 'var(--sapProgress_InformationTextColor)',
    sapProgress_Value_Background: 'var(--sapProgress_Value_Background)',
    sapProgress_Value_BorderColor: 'var(--sapProgress_Value_BorderColor)',
    sapProgress_Value_TextColor: 'var(--sapProgress_Value_TextColor)',
    sapProgress_Value_NegativeBackground: 'var(--sapProgress_Value_NegativeBackground)',
    sapProgress_Value_NegativeBorderColor: 'var(--sapProgress_Value_NegativeBorderColor)',
    sapProgress_Value_NegativeTextColor: 'var(--sapProgress_Value_NegativeTextColor)',
    sapProgress_Value_CriticalBackground: 'var(--sapProgress_Value_CriticalBackground)',
    sapProgress_Value_CriticalBorderColor: 'var(--sapProgress_Value_CriticalBorderColor)',
    sapProgress_Value_CriticalTextColor: 'var(--sapProgress_Value_CriticalTextColor)',
    sapProgress_Value_PositiveBackground: 'var(--sapProgress_Value_PositiveBackground)',
    sapProgress_Value_PositiveBorderColor: 'var(--sapProgress_Value_PositiveBorderColor)',
    sapProgress_Value_PositiveTextColor: 'var(--sapProgress_Value_PositiveTextColor)',
    sapProgress_Value_InformationBackground: 'var(--sapProgress_Value_InformationBackground)',
    sapProgress_Value_InformationBorderColor: 'var(--sapProgress_Value_InformationBorderColor)',
    sapProgress_Value_InformationTextColor: 'var(--sapProgress_Value_InformationTextColor)',
    sapScrollBar_FaceColor: 'var(--sapScrollBar_FaceColor)',
    sapScrollBar_TrackColor: 'var(--sapScrollBar_TrackColor)',
    sapScrollBar_BorderColor: 'var(--sapScrollBar_BorderColor)',
    sapScrollBar_SymbolColor: 'var(--sapScrollBar_SymbolColor)',
    sapScrollBar_Dimension: 'var(--sapScrollBar_Dimension)',
    sapScrollBar_Hover_FaceColor: 'var(--sapScrollBar_Hover_FaceColor)',
    sapSlider_Background: 'var(--sapSlider_Background)',
    sapSlider_BorderColor: 'var(--sapSlider_BorderColor)',
    sapSlider_Selected_Background: 'var(--sapSlider_Selected_Background)',
    sapSlider_Selected_BorderColor: 'var(--sapSlider_Selected_BorderColor)',
    sapSlider_HandleBackground: 'var(--sapSlider_HandleBackground)',
    sapSlider_HandleBorderColor: 'var(--sapSlider_HandleBorderColor)',
    sapSlider_RangeHandleBackground: 'var(--sapSlider_RangeHandleBackground)',
    sapSlider_Hover_HandleBackground: 'var(--sapSlider_Hover_HandleBackground)',
    sapSlider_Hover_HandleBorderColor: 'var(--sapSlider_Hover_HandleBorderColor)',
    sapSlider_Hover_RangeHandleBackground: 'var(--sapSlider_Hover_RangeHandleBackground)',
    sapSlider_Active_HandleBackground: 'var(--sapSlider_Active_HandleBackground)',
    sapSlider_Active_HandleBorderColor: 'var(--sapSlider_Active_HandleBorderColor)',
    sapSlider_Active_RangeHandleBackground: 'var(--sapSlider_Active_RangeHandleBackground)',
    sapPageHeader_Background: 'var(--sapPageHeader_Background)',
    sapPageHeader_BorderColor: 'var(--sapPageHeader_BorderColor)',
    sapPageHeader_TextColor: 'var(--sapPageHeader_TextColor)',
    sapPageFooter_Background: 'var(--sapPageFooter_Background)',
    sapPageFooter_BorderColor: 'var(--sapPageFooter_BorderColor)',
    sapPageFooter_TextColor: 'var(--sapPageFooter_TextColor)',
    sapInfobar_Background: 'var(--sapInfobar_Background)',
    sapInfobar_Hover_Background: 'var(--sapInfobar_Hover_Background)',
    sapInfobar_Active_Background: 'var(--sapInfobar_Active_Background)',
    sapInfobar_NonInteractive_Background: 'var(--sapInfobar_NonInteractive_Background)',
    sapInfobar_TextColor: 'var(--sapInfobar_TextColor)',
    sapObjectHeader_Background: 'var(--sapObjectHeader_Background)',
    sapObjectHeader_Hover_Background: 'var(--sapObjectHeader_Hover_Background)',
    sapObjectHeader_BorderColor: 'var(--sapObjectHeader_BorderColor)',
    sapObjectHeader_Title_TextColor: 'var(--sapObjectHeader_Title_TextColor)',
    sapObjectHeader_Title_FontSize: 'var(--sapObjectHeader_Title_FontSize)',
    sapObjectHeader_Title_SnappedFontSize: 'var(--sapObjectHeader_Title_SnappedFontSize)',
    sapObjectHeader_Title_FontFamily: 'var(--sapObjectHeader_Title_FontFamily)',
    sapObjectHeader_Subtitle_TextColor: 'var(--sapObjectHeader_Subtitle_TextColor)',
    sapBlockLayer_Background: 'var(--sapBlockLayer_Background)',
    sapTile_Background: 'var(--sapTile_Background)',
    sapTile_Hover_Background: 'var(--sapTile_Hover_Background)',
    sapTile_Active_Background: 'var(--sapTile_Active_Background)',
    sapTile_BorderColor: 'var(--sapTile_BorderColor)',
    sapTile_BorderCornerRadius: 'var(--sapTile_BorderCornerRadius)',
    sapTile_TitleTextColor: 'var(--sapTile_TitleTextColor)',
    sapTile_TextColor: 'var(--sapTile_TextColor)',
    sapTile_IconColor: 'var(--sapTile_IconColor)',
    sapTile_SeparatorColor: 'var(--sapTile_SeparatorColor)',
    sapTile_Interactive_BorderColor: 'var(--sapTile_Interactive_BorderColor)',
    sapTile_OverlayBackground: 'var(--sapTile_OverlayBackground)',
    sapTile_OverlayForegroundColor: 'var(--sapTile_OverlayForegroundColor)',
    sapAccentColor1: 'var(--sapAccentColor1)',
    sapAccentColor2: 'var(--sapAccentColor2)',
    sapAccentColor3: 'var(--sapAccentColor3)',
    sapAccentColor4: 'var(--sapAccentColor4)',
    sapAccentColor5: 'var(--sapAccentColor5)',
    sapAccentColor6: 'var(--sapAccentColor6)',
    sapAccentColor7: 'var(--sapAccentColor7)',
    sapAccentColor8: 'var(--sapAccentColor8)',
    sapAccentColor9: 'var(--sapAccentColor9)',
    sapAccentColor10: 'var(--sapAccentColor10)',
    sapAccentBackgroundColor1: 'var(--sapAccentBackgroundColor1)',
    sapAccentBackgroundColor2: 'var(--sapAccentBackgroundColor2)',
    sapAccentBackgroundColor3: 'var(--sapAccentBackgroundColor3)',
    sapAccentBackgroundColor4: 'var(--sapAccentBackgroundColor4)',
    sapAccentBackgroundColor5: 'var(--sapAccentBackgroundColor5)',
    sapAccentBackgroundColor6: 'var(--sapAccentBackgroundColor6)',
    sapAccentBackgroundColor7: 'var(--sapAccentBackgroundColor7)',
    sapAccentBackgroundColor8: 'var(--sapAccentBackgroundColor8)',
    sapAccentBackgroundColor9: 'var(--sapAccentBackgroundColor9)',
    sapAccentBackgroundColor10: 'var(--sapAccentBackgroundColor10)',
    sapIndicationColor_1: 'var(--sapIndicationColor_1)',
    sapIndicationColor_1_Background: 'var(--sapIndicationColor_1_Background)',
    sapIndicationColor_1_BorderColor: 'var(--sapIndicationColor_1_BorderColor)',
    sapIndicationColor_1_TextColor: 'var(--sapIndicationColor_1_TextColor)',
    sapIndicationColor_1_Hover_Background: 'var(--sapIndicationColor_1_Hover_Background)',
    sapIndicationColor_1_Active_Background: 'var(--sapIndicationColor_1_Active_Background)',
    sapIndicationColor_1_Active_BorderColor: 'var(--sapIndicationColor_1_Active_BorderColor)',
    sapIndicationColor_1_Active_TextColor: 'var(--sapIndicationColor_1_Active_TextColor)',
    sapIndicationColor_1_Selected_Background: 'var(--sapIndicationColor_1_Selected_Background)',
    sapIndicationColor_1_Selected_BorderColor: 'var(--sapIndicationColor_1_Selected_BorderColor)',
    sapIndicationColor_1_Selected_TextColor: 'var(--sapIndicationColor_1_Selected_TextColor)',
    sapIndicationColor_1b: 'var(--sapIndicationColor_1b)',
    sapIndicationColor_1b_BorderColor: 'var(--sapIndicationColor_1b_BorderColor)',
    sapIndicationColor_1b_Hover_Background: 'var(--sapIndicationColor_1b_Hover_Background)',
    sapIndicationColor_2: 'var(--sapIndicationColor_2)',
    sapIndicationColor_2_Background: 'var(--sapIndicationColor_2_Background)',
    sapIndicationColor_2_BorderColor: 'var(--sapIndicationColor_2_BorderColor)',
    sapIndicationColor_2_TextColor: 'var(--sapIndicationColor_2_TextColor)',
    sapIndicationColor_2_Hover_Background: 'var(--sapIndicationColor_2_Hover_Background)',
    sapIndicationColor_2_Active_Background: 'var(--sapIndicationColor_2_Active_Background)',
    sapIndicationColor_2_Active_BorderColor: 'var(--sapIndicationColor_2_Active_BorderColor)',
    sapIndicationColor_2_Active_TextColor: 'var(--sapIndicationColor_2_Active_TextColor)',
    sapIndicationColor_2_Selected_Background: 'var(--sapIndicationColor_2_Selected_Background)',
    sapIndicationColor_2_Selected_BorderColor: 'var(--sapIndicationColor_2_Selected_BorderColor)',
    sapIndicationColor_2_Selected_TextColor: 'var(--sapIndicationColor_2_Selected_TextColor)',
    sapIndicationColor_2b: 'var(--sapIndicationColor_2b)',
    sapIndicationColor_2b_BorderColor: 'var(--sapIndicationColor_2b_BorderColor)',
    sapIndicationColor_2b_Hover_Background: 'var(--sapIndicationColor_2b_Hover_Background)',
    sapIndicationColor_3: 'var(--sapIndicationColor_3)',
    sapIndicationColor_3_Background: 'var(--sapIndicationColor_3_Background)',
    sapIndicationColor_3_BorderColor: 'var(--sapIndicationColor_3_BorderColor)',
    sapIndicationColor_3_TextColor: 'var(--sapIndicationColor_3_TextColor)',
    sapIndicationColor_3_Hover_Background: 'var(--sapIndicationColor_3_Hover_Background)',
    sapIndicationColor_3_Active_Background: 'var(--sapIndicationColor_3_Active_Background)',
    sapIndicationColor_3_Active_BorderColor: 'var(--sapIndicationColor_3_Active_BorderColor)',
    sapIndicationColor_3_Active_TextColor: 'var(--sapIndicationColor_3_Active_TextColor)',
    sapIndicationColor_3_Selected_Background: 'var(--sapIndicationColor_3_Selected_Background)',
    sapIndicationColor_3_Selected_BorderColor: 'var(--sapIndicationColor_3_Selected_BorderColor)',
    sapIndicationColor_3_Selected_TextColor: 'var(--sapIndicationColor_3_Selected_TextColor)',
    sapIndicationColor_3b: 'var(--sapIndicationColor_3b)',
    sapIndicationColor_3b_BorderColor: 'var(--sapIndicationColor_3b_BorderColor)',
    sapIndicationColor_3b_Hover_Background: 'var(--sapIndicationColor_3b_Hover_Background)',
    sapIndicationColor_4: 'var(--sapIndicationColor_4)',
    sapIndicationColor_4_Background: 'var(--sapIndicationColor_4_Background)',
    sapIndicationColor_4_BorderColor: 'var(--sapIndicationColor_4_BorderColor)',
    sapIndicationColor_4_TextColor: 'var(--sapIndicationColor_4_TextColor)',
    sapIndicationColor_4_Hover_Background: 'var(--sapIndicationColor_4_Hover_Background)',
    sapIndicationColor_4_Active_Background: 'var(--sapIndicationColor_4_Active_Background)',
    sapIndicationColor_4_Active_BorderColor: 'var(--sapIndicationColor_4_Active_BorderColor)',
    sapIndicationColor_4_Active_TextColor: 'var(--sapIndicationColor_4_Active_TextColor)',
    sapIndicationColor_4_Selected_Background: 'var(--sapIndicationColor_4_Selected_Background)',
    sapIndicationColor_4_Selected_BorderColor: 'var(--sapIndicationColor_4_Selected_BorderColor)',
    sapIndicationColor_4_Selected_TextColor: 'var(--sapIndicationColor_4_Selected_TextColor)',
    sapIndicationColor_4b: 'var(--sapIndicationColor_4b)',
    sapIndicationColor_4b_BorderColor: 'var(--sapIndicationColor_4b_BorderColor)',
    sapIndicationColor_4b_Hover_Background: 'var(--sapIndicationColor_4b_Hover_Background)',
    sapIndicationColor_5: 'var(--sapIndicationColor_5)',
    sapIndicationColor_5_Background: 'var(--sapIndicationColor_5_Background)',
    sapIndicationColor_5_BorderColor: 'var(--sapIndicationColor_5_BorderColor)',
    sapIndicationColor_5_TextColor: 'var(--sapIndicationColor_5_TextColor)',
    sapIndicationColor_5_Hover_Background: 'var(--sapIndicationColor_5_Hover_Background)',
    sapIndicationColor_5_Active_Background: 'var(--sapIndicationColor_5_Active_Background)',
    sapIndicationColor_5_Active_BorderColor: 'var(--sapIndicationColor_5_Active_BorderColor)',
    sapIndicationColor_5_Active_TextColor: 'var(--sapIndicationColor_5_Active_TextColor)',
    sapIndicationColor_5_Selected_Background: 'var(--sapIndicationColor_5_Selected_Background)',
    sapIndicationColor_5_Selected_BorderColor: 'var(--sapIndicationColor_5_Selected_BorderColor)',
    sapIndicationColor_5_Selected_TextColor: 'var(--sapIndicationColor_5_Selected_TextColor)',
    sapIndicationColor_5b: 'var(--sapIndicationColor_5b)',
    sapIndicationColor_5b_BorderColor: 'var(--sapIndicationColor_5b_BorderColor)',
    sapIndicationColor_5b_Hover_Background: 'var(--sapIndicationColor_5b_Hover_Background)',
    sapIndicationColor_6: 'var(--sapIndicationColor_6)',
    sapIndicationColor_6_Background: 'var(--sapIndicationColor_6_Background)',
    sapIndicationColor_6_BorderColor: 'var(--sapIndicationColor_6_BorderColor)',
    sapIndicationColor_6_TextColor: 'var(--sapIndicationColor_6_TextColor)',
    sapIndicationColor_6_Hover_Background: 'var(--sapIndicationColor_6_Hover_Background)',
    sapIndicationColor_6_Active_Background: 'var(--sapIndicationColor_6_Active_Background)',
    sapIndicationColor_6_Active_BorderColor: 'var(--sapIndicationColor_6_Active_BorderColor)',
    sapIndicationColor_6_Active_TextColor: 'var(--sapIndicationColor_6_Active_TextColor)',
    sapIndicationColor_6_Selected_Background: 'var(--sapIndicationColor_6_Selected_Background)',
    sapIndicationColor_6_Selected_BorderColor: 'var(--sapIndicationColor_6_Selected_BorderColor)',
    sapIndicationColor_6_Selected_TextColor: 'var(--sapIndicationColor_6_Selected_TextColor)',
    sapIndicationColor_6b: 'var(--sapIndicationColor_6b)',
    sapIndicationColor_6b_BorderColor: 'var(--sapIndicationColor_6b_BorderColor)',
    sapIndicationColor_6b_Hover_Background: 'var(--sapIndicationColor_6b_Hover_Background)',
    sapIndicationColor_7: 'var(--sapIndicationColor_7)',
    sapIndicationColor_7_Background: 'var(--sapIndicationColor_7_Background)',
    sapIndicationColor_7_BorderColor: 'var(--sapIndicationColor_7_BorderColor)',
    sapIndicationColor_7_TextColor: 'var(--sapIndicationColor_7_TextColor)',
    sapIndicationColor_7_Hover_Background: 'var(--sapIndicationColor_7_Hover_Background)',
    sapIndicationColor_7_Active_Background: 'var(--sapIndicationColor_7_Active_Background)',
    sapIndicationColor_7_Active_BorderColor: 'var(--sapIndicationColor_7_Active_BorderColor)',
    sapIndicationColor_7_Active_TextColor: 'var(--sapIndicationColor_7_Active_TextColor)',
    sapIndicationColor_7_Selected_Background: 'var(--sapIndicationColor_7_Selected_Background)',
    sapIndicationColor_7_Selected_BorderColor: 'var(--sapIndicationColor_7_Selected_BorderColor)',
    sapIndicationColor_7_Selected_TextColor: 'var(--sapIndicationColor_7_Selected_TextColor)',
    sapIndicationColor_7b: 'var(--sapIndicationColor_7b)',
    sapIndicationColor_7b_BorderColor: 'var(--sapIndicationColor_7b_BorderColor)',
    sapIndicationColor_7b_Hover_Background: 'var(--sapIndicationColor_7b_Hover_Background)',
    sapIndicationColor_8: 'var(--sapIndicationColor_8)',
    sapIndicationColor_8_Background: 'var(--sapIndicationColor_8_Background)',
    sapIndicationColor_8_BorderColor: 'var(--sapIndicationColor_8_BorderColor)',
    sapIndicationColor_8_TextColor: 'var(--sapIndicationColor_8_TextColor)',
    sapIndicationColor_8_Hover_Background: 'var(--sapIndicationColor_8_Hover_Background)',
    sapIndicationColor_8_Active_Background: 'var(--sapIndicationColor_8_Active_Background)',
    sapIndicationColor_8_Active_BorderColor: 'var(--sapIndicationColor_8_Active_BorderColor)',
    sapIndicationColor_8_Active_TextColor: 'var(--sapIndicationColor_8_Active_TextColor)',
    sapIndicationColor_8_Selected_Background: 'var(--sapIndicationColor_8_Selected_Background)',
    sapIndicationColor_8_Selected_BorderColor: 'var(--sapIndicationColor_8_Selected_BorderColor)',
    sapIndicationColor_8_Selected_TextColor: 'var(--sapIndicationColor_8_Selected_TextColor)',
    sapIndicationColor_8b: 'var(--sapIndicationColor_8b)',
    sapIndicationColor_8b_BorderColor: 'var(--sapIndicationColor_8b_BorderColor)',
    sapIndicationColor_8b_Hover_Background: 'var(--sapIndicationColor_8b_Hover_Background)',
    sapIndicationColor_9: 'var(--sapIndicationColor_9)',
    sapIndicationColor_9_Background: 'var(--sapIndicationColor_9_Background)',
    sapIndicationColor_9_BorderColor: 'var(--sapIndicationColor_9_BorderColor)',
    sapIndicationColor_9_TextColor: 'var(--sapIndicationColor_9_TextColor)',
    sapIndicationColor_9_Hover_Background: 'var(--sapIndicationColor_9_Hover_Background)',
    sapIndicationColor_9_Active_Background: 'var(--sapIndicationColor_9_Active_Background)',
    sapIndicationColor_9_Active_BorderColor: 'var(--sapIndicationColor_9_Active_BorderColor)',
    sapIndicationColor_9_Active_TextColor: 'var(--sapIndicationColor_9_Active_TextColor)',
    sapIndicationColor_9_Selected_Background: 'var(--sapIndicationColor_9_Selected_Background)',
    sapIndicationColor_9_Selected_BorderColor: 'var(--sapIndicationColor_9_Selected_BorderColor)',
    sapIndicationColor_9_Selected_TextColor: 'var(--sapIndicationColor_9_Selected_TextColor)',
    sapIndicationColor_9b: 'var(--sapIndicationColor_9b)',
    sapIndicationColor_9b_BorderColor: 'var(--sapIndicationColor_9b_BorderColor)',
    sapIndicationColor_9b_Hover_Background: 'var(--sapIndicationColor_9b_Hover_Background)',
    sapIndicationColor_10: 'var(--sapIndicationColor_10)',
    sapIndicationColor_10_Background: 'var(--sapIndicationColor_10_Background)',
    sapIndicationColor_10_BorderColor: 'var(--sapIndicationColor_10_BorderColor)',
    sapIndicationColor_10_TextColor: 'var(--sapIndicationColor_10_TextColor)',
    sapIndicationColor_10_Hover_Background: 'var(--sapIndicationColor_10_Hover_Background)',
    sapIndicationColor_10_Active_Background: 'var(--sapIndicationColor_10_Active_Background)',
    sapIndicationColor_10_Active_BorderColor: 'var(--sapIndicationColor_10_Active_BorderColor)',
    sapIndicationColor_10_Active_TextColor: 'var(--sapIndicationColor_10_Active_TextColor)',
    sapIndicationColor_10_Selected_Background: 'var(--sapIndicationColor_10_Selected_Background)',
    sapIndicationColor_10_Selected_BorderColor: 'var(--sapIndicationColor_10_Selected_BorderColor)',
    sapIndicationColor_10_Selected_TextColor: 'var(--sapIndicationColor_10_Selected_TextColor)',
    sapIndicationColor_10b: 'var(--sapIndicationColor_10b)',
    sapIndicationColor_10b_BorderColor: 'var(--sapIndicationColor_10b_BorderColor)',
    sapIndicationColor_10b_Hover_Background: 'var(--sapIndicationColor_10b_Hover_Background)',
    sapLegend_WorkingBackground: 'var(--sapLegend_WorkingBackground)',
    sapLegend_NonWorkingBackground: 'var(--sapLegend_NonWorkingBackground)',
    sapLegend_CurrentDateTime: 'var(--sapLegend_CurrentDateTime)',
    sapLegendColor1: 'var(--sapLegendColor1)',
    sapLegendColor2: 'var(--sapLegendColor2)',
    sapLegendColor3: 'var(--sapLegendColor3)',
    sapLegendColor4: 'var(--sapLegendColor4)',
    sapLegendColor5: 'var(--sapLegendColor5)',
    sapLegendColor6: 'var(--sapLegendColor6)',
    sapLegendColor7: 'var(--sapLegendColor7)',
    sapLegendColor8: 'var(--sapLegendColor8)',
    sapLegendColor9: 'var(--sapLegendColor9)',
    sapLegendColor10: 'var(--sapLegendColor10)',
    sapLegendColor11: 'var(--sapLegendColor11)',
    sapLegendColor12: 'var(--sapLegendColor12)',
    sapLegendColor13: 'var(--sapLegendColor13)',
    sapLegendColor14: 'var(--sapLegendColor14)',
    sapLegendColor15: 'var(--sapLegendColor15)',
    sapLegendColor16: 'var(--sapLegendColor16)',
    sapLegendColor17: 'var(--sapLegendColor17)',
    sapLegendColor18: 'var(--sapLegendColor18)',
    sapLegendColor19: 'var(--sapLegendColor19)',
    sapLegendColor20: 'var(--sapLegendColor20)',
    sapLegendBackgroundColor1: 'var(--sapLegendBackgroundColor1)',
    sapLegendBackgroundColor2: 'var(--sapLegendBackgroundColor2)',
    sapLegendBackgroundColor3: 'var(--sapLegendBackgroundColor3)',
    sapLegendBackgroundColor4: 'var(--sapLegendBackgroundColor4)',
    sapLegendBackgroundColor5: 'var(--sapLegendBackgroundColor5)',
    sapLegendBackgroundColor6: 'var(--sapLegendBackgroundColor6)',
    sapLegendBackgroundColor7: 'var(--sapLegendBackgroundColor7)',
    sapLegendBackgroundColor8: 'var(--sapLegendBackgroundColor8)',
    sapLegendBackgroundColor9: 'var(--sapLegendBackgroundColor9)',
    sapLegendBackgroundColor10: 'var(--sapLegendBackgroundColor10)',
    sapLegendBackgroundColor11: 'var(--sapLegendBackgroundColor11)',
    sapLegendBackgroundColor12: 'var(--sapLegendBackgroundColor12)',
    sapLegendBackgroundColor13: 'var(--sapLegendBackgroundColor13)',
    sapLegendBackgroundColor14: 'var(--sapLegendBackgroundColor14)',
    sapLegendBackgroundColor15: 'var(--sapLegendBackgroundColor15)',
    sapLegendBackgroundColor16: 'var(--sapLegendBackgroundColor16)',
    sapLegendBackgroundColor17: 'var(--sapLegendBackgroundColor17)',
    sapLegendBackgroundColor18: 'var(--sapLegendBackgroundColor18)',
    sapLegendBackgroundColor19: 'var(--sapLegendBackgroundColor19)',
    sapLegendBackgroundColor20: 'var(--sapLegendBackgroundColor20)',
    sapChart_OrderedColor_1: 'var(--sapChart_OrderedColor_1)',
    sapChart_OrderedColor_2: 'var(--sapChart_OrderedColor_2)',
    sapChart_OrderedColor_3: 'var(--sapChart_OrderedColor_3)',
    sapChart_OrderedColor_4: 'var(--sapChart_OrderedColor_4)',
    sapChart_OrderedColor_5: 'var(--sapChart_OrderedColor_5)',
    sapChart_OrderedColor_6: 'var(--sapChart_OrderedColor_6)',
    sapChart_OrderedColor_7: 'var(--sapChart_OrderedColor_7)',
    sapChart_OrderedColor_8: 'var(--sapChart_OrderedColor_8)',
    sapChart_OrderedColor_9: 'var(--sapChart_OrderedColor_9)',
    sapChart_OrderedColor_10: 'var(--sapChart_OrderedColor_10)',
    sapChart_OrderedColor_11: 'var(--sapChart_OrderedColor_11)',
    sapChart_Bad: 'var(--sapChart_Bad)',
    sapChart_Critical: 'var(--sapChart_Critical)',
    sapChart_Good: 'var(--sapChart_Good)',
    sapChart_Neutral: 'var(--sapChart_Neutral)',
    sapChart_Sequence_1: 'var(--sapChart_Sequence_1)',
    sapChart_Sequence_2: 'var(--sapChart_Sequence_2)',
    sapChart_Sequence_3: 'var(--sapChart_Sequence_3)',
    sapChart_Sequence_4: 'var(--sapChart_Sequence_4)',
    sapChart_Sequence_5: 'var(--sapChart_Sequence_5)',
    sapChart_Sequence_6: 'var(--sapChart_Sequence_6)',
    sapChart_Sequence_7: 'var(--sapChart_Sequence_7)',
    sapChart_Sequence_8: 'var(--sapChart_Sequence_8)',
    sapChart_Sequence_9: 'var(--sapChart_Sequence_9)',
    sapChart_Sequence_10: 'var(--sapChart_Sequence_10)',
    sapChart_Sequence_11: 'var(--sapChart_Sequence_11)',
    sapChart_Sequence_Neutral: 'var(--sapChart_Sequence_Neutral)',
    'sapFontUrl_SAP-icons_ttf': 'var(--sapFontUrl_SAP-icons_ttf)',
    'sapFontUrl_SAP-icons_woff': 'var(--sapFontUrl_SAP-icons_woff)',
    'sapFontUrl_SAP-icons_woff2': 'var(--sapFontUrl_SAP-icons_woff2)',
    'sapFontUrl_SAP-icons-TNT_ttf': 'var(--sapFontUrl_SAP-icons-TNT_ttf)',
    'sapFontUrl_SAP-icons-TNT_woff': 'var(--sapFontUrl_SAP-icons-TNT_woff)',
    'sapFontUrl_SAP-icons-TNT_woff2': 'var(--sapFontUrl_SAP-icons-TNT_woff2)',
    'sapFontUrl_SAP-icons-Business-Suite_ttf': 'var(--sapFontUrl_SAP-icons-Business-Suite_ttf)',
    'sapFontUrl_SAP-icons-Business-Suite_woff': 'var(--sapFontUrl_SAP-icons-Business-Suite_woff)',
    'sapFontUrl_SAP-icons-Business-Suite_woff2': 'var(--sapFontUrl_SAP-icons-Business-Suite_woff2)',
    sapFontUrl_72_Regular_woff2: 'var(--sapFontUrl_72_Regular_woff2)',
    sapFontUrl_72_Regular_woff: 'var(--sapFontUrl_72_Regular_woff)',
    sapFontUrl_72_Regular_full_woff2: 'var(--sapFontUrl_72_Regular_full_woff2)',
    sapFontUrl_72_Regular_full_woff: 'var(--sapFontUrl_72_Regular_full_woff)',
    sapFontUrl_72_Bold_woff2: 'var(--sapFontUrl_72_Bold_woff2)',
    sapFontUrl_72_Bold_woff: 'var(--sapFontUrl_72_Bold_woff)',
    sapFontUrl_72_Bold_full_woff2: 'var(--sapFontUrl_72_Bold_full_woff2)',
    sapFontUrl_72_Bold_full_woff: 'var(--sapFontUrl_72_Bold_full_woff)',
    sapFontUrl_72_Semibold_woff2: 'var(--sapFontUrl_72_Semibold_woff2)',
    sapFontUrl_72_Semibold_woff: 'var(--sapFontUrl_72_Semibold_woff)',
    sapFontUrl_72_Semibold_full_woff2: 'var(--sapFontUrl_72_Semibold_full_woff2)',
    sapFontUrl_72_Semibold_full_woff: 'var(--sapFontUrl_72_Semibold_full_woff)',
    sapFontUrl_72_SemiboldDuplex_woff2: 'var(--sapFontUrl_72_SemiboldDuplex_woff2)',
    sapFontUrl_72_SemiboldDuplex_woff: 'var(--sapFontUrl_72_SemiboldDuplex_woff)',
    sapFontUrl_72_SemiboldDuplex_full_woff2: 'var(--sapFontUrl_72_SemiboldDuplex_full_woff2)',
    sapFontUrl_72_SemiboldDuplex_full_woff: 'var(--sapFontUrl_72_SemiboldDuplex_full_woff)',
    sapFontUrl_72_Light_woff2: 'var(--sapFontUrl_72_Light_woff2)',
    sapFontUrl_72_Light_woff: 'var(--sapFontUrl_72_Light_woff)',
    sapFontUrl_72_Light_full_woff2: 'var(--sapFontUrl_72_Light_full_woff2)',
    sapFontUrl_72_Light_full_woff: 'var(--sapFontUrl_72_Light_full_woff)',
    sapFontUrl_72_Black_woff2: 'var(--sapFontUrl_72_Black_woff2)',
    sapFontUrl_72_Black_woff: 'var(--sapFontUrl_72_Black_woff)',
    sapFontUrl_72_Black_full_woff2: 'var(--sapFontUrl_72_Black_full_woff2)',
    sapFontUrl_72_Black_full_woff: 'var(--sapFontUrl_72_Black_full_woff)',
    sapFontUrl_72_BoldItalic_woff2: 'var(--sapFontUrl_72_BoldItalic_woff2)',
    sapFontUrl_72_BoldItalic_woff: 'var(--sapFontUrl_72_BoldItalic_woff)',
    sapFontUrl_72_BoldItalic_full_woff2: 'var(--sapFontUrl_72_BoldItalic_full_woff2)',
    sapFontUrl_72_BoldItalic_full_woff: 'var(--sapFontUrl_72_BoldItalic_full_woff)',
    sapFontUrl_72_Condensed_woff2: 'var(--sapFontUrl_72_Condensed_woff2)',
    sapFontUrl_72_Condensed_woff: 'var(--sapFontUrl_72_Condensed_woff)',
    sapFontUrl_72_Condensed_full_woff2: 'var(--sapFontUrl_72_Condensed_full_woff2)',
    sapFontUrl_72_Condensed_full_woff: 'var(--sapFontUrl_72_Condensed_full_woff)',
    sapFontUrl_72_CondensedBold_woff2: 'var(--sapFontUrl_72_CondensedBold_woff2)',
    sapFontUrl_72_CondensedBold_woff: 'var(--sapFontUrl_72_CondensedBold_woff)',
    sapFontUrl_72_CondensedBold_full_woff2: 'var(--sapFontUrl_72_CondensedBold_full_woff2)',
    sapFontUrl_72_CondensedBold_full_woff: 'var(--sapFontUrl_72_CondensedBold_full_woff)',
    sapFontUrl_72_Italic_woff2: 'var(--sapFontUrl_72_Italic_woff2)',
    sapFontUrl_72_Italic_woff: 'var(--sapFontUrl_72_Italic_woff)',
    sapFontUrl_72_Italic_full_woff2: 'var(--sapFontUrl_72_Italic_full_woff2)',
    sapFontUrl_72_Italic_full_woff: 'var(--sapFontUrl_72_Italic_full_woff)',
    sapFontUrl_72Mono_Regular_woff2: 'var(--sapFontUrl_72Mono_Regular_woff2)',
    sapFontUrl_72Mono_Regular_woff: 'var(--sapFontUrl_72Mono_Regular_woff)',
    sapFontUrl_72Mono_Regular_full_woff2: 'var(--sapFontUrl_72Mono_Regular_full_woff2)',
    sapFontUrl_72Mono_Regular_full_woff: 'var(--sapFontUrl_72Mono_Regular_full_woff)',
    sapFontUrl_72Mono_Bold_woff2: 'var(--sapFontUrl_72Mono_Bold_woff2)',
    sapFontUrl_72Mono_Bold_woff: 'var(--sapFontUrl_72Mono_Bold_woff)',
    sapFontUrl_72Mono_Bold_full_woff2: 'var(--sapFontUrl_72Mono_Bold_full_woff2)',
    sapFontUrl_72Mono_Bold_full_woff: 'var(--sapFontUrl_72Mono_Bold_full_woff)'
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/utils/debounce.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/utils/debounce.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounce: () => (/* binding */ debounce)
/* harmony export */ });
// Copied from https://github.com/jashkenas/underscore/blob/master/modules/debounce.js (31th May 2021)
const now = Date.now || (() => new Date().getTime());
/**
 * When a sequence of calls of the returned function ends, the argument
 * function is triggered. The end of a sequence is defined by the `wait`
 * parameter.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
const debounce = (func, wait) => {
    let timeout;
    let previous;
    let args;
    let result;
    let context;
    const later = () => {
        const passed = now() - previous;
        if (wait > passed) {
            timeout = setTimeout(later, wait - passed);
        }
        else {
            timeout = null;
            result = func.apply(context, args);
            // This check is needed because `func` can recursively invoke `debounced`.
            if (!timeout)
                args = context = null;
        }
    };
    const debounced = function (..._args) {
        // @ts-expect-error: copied - no need to infer types here
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        context = this;
        args = _args;
        previous = now();
        if (!timeout) {
            timeout = setTimeout(later, wait);
        }
        return result;
    };
    debounced.cancel = () => {
        clearTimeout(timeout);
        timeout = args = context = null;
    };
    // @ts-expect-error: copied - no need to infer types here
    return debounced;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/utils/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/utils/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounce: () => (/* reexport safe */ _debounce_js__WEBPACK_IMPORTED_MODULE_0__.debounce),
/* harmony export */   deprecationNotice: () => (/* binding */ deprecationNotice),
/* harmony export */   enrichEventWithDetails: () => (/* binding */ enrichEventWithDetails),
/* harmony export */   throttle: () => (/* reexport safe */ _throttle_js__WEBPACK_IMPORTED_MODULE_1__.throttle)
/* harmony export */ });
/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debounce.js */ "./node_modules/@ui5/webcomponents-react-base/dist/utils/debounce.js");
/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ "./node_modules/@ui5/webcomponents-react-base/dist/utils/throttle.js");
const deprecationNotice = (component, message) => {
    if (true) {
        const value = `*** ui5-webcomponents-react Deprecation Notice - ${component} ***\n`;
        // eslint-disable-next-line no-console
        if (console && console.warn) {
            // eslint-disable-next-line no-console
            console.warn(`${value}${message}`);
        }
    }
};
const enrichEventWithDetails = (event, payload = null) => {
    if (event.hasOwnProperty('persist')) {
        // if there is a persist method, it's an SyntheticEvent so we need to persist it
        event.persist();
    }
    const shouldCreateNewDetails = event.detail === null || event.detail === undefined || typeof event.detail !== 'object';
    Object.defineProperty(event, 'detail', {
        value: shouldCreateNewDetails ? {} : event.detail,
        writable: true,
        configurable: true
    });
    Object.assign(event.detail, payload);
    return event;
};




/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react-base/dist/utils/throttle.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react-base/dist/utils/throttle.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   throttle: () => (/* binding */ throttle)
/* harmony export */ });
// Copied from https://github.com/jashkenas/underscore/blob/master/modules/throttle.js (24th January 2023)
const now = Date.now || (() => new Date().getTime());
/**
 * Returns a function, that, when invoked, will only be triggered at most once
 * during a given window of time. Normally, the throttled function will run
 * as much as it can, without ever going more than once per `wait` duration;
 * but if you'd like to disable the execution on the leading edge, pass
 * `{leading: false}`. To disable execution on the trailing edge, ditto.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
const throttle = (func, wait, options = { leading: true, trailing: true }) => {
    let timeout;
    let context;
    let args;
    let result;
    let previous = 0;
    if (!options)
        options = {};
    const later = () => {
        previous = options.leading === false ? 0 : now();
        timeout = null;
        result = func.apply(context, args);
        if (!timeout)
            context = args = null;
    };
    const throttled = function (...params) {
        const _now = now();
        if (!previous && options.leading === false)
            previous = _now;
        const remaining = wait - (_now - previous);
        // @ts-expect-error: copied - no need to infer types here
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        context = this;
        args = params;
        if (remaining <= 0 || remaining > wait) {
            if (timeout) {
                clearTimeout(timeout);
                timeout = null;
            }
            previous = _now;
            result = func.apply(context, args);
            if (!timeout)
                context = args = null;
        }
        else if (!timeout && options.trailing !== false) {
            timeout = setTimeout(later, remaining);
        }
        return result;
    };
    throttled.cancel = () => {
        clearTimeout(timeout);
        previous = 0;
        timeout = context = args = null;
    };
    // @ts-expect-error: copied - no need to infer types here
    return throttled;
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/MessageBox.jss.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/MessageBox.jss.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/CssSizeVariables.js");

const style = {
  messageBox: {
    '&[data-type="Confirm"]': {
      '&::part(header)': {
        boxShadow: `inset 0 -0.0625rem ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapNeutralBorderColor}, ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapContent_HeaderShadow}`
      },
      '& $header': {
        '--sapContent_NonInteractiveIconColor': _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapNeutralElementColor
      }
    }
  },
  header: {
    display: 'flex',
    height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.CssSizeVariables.ui5WcrBarHeight,
    textAlign: 'center',
    width: '100%',
    alignItems: 'center',
    boxSizing: 'border-box',
    borderBottom: `1px solid var(--messageBoxBorderColor)`,
    color: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapContent_LabelColor,
    fontSize: '1rem',
    '& ui5-icon:first-child': {
      width: '1rem',
      height: '1rem'
    },
    '& [ui5-title]': {
      fontSize: '1rem'
    }
  },
  spacer: {
    width: '0.5rem'
  },
  confirmIcon: {
    color: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapNeutralColor
  },
  footer: {
    height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.CssSizeVariables.ui5WcrBarHeight,
    width: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    '& > *': {
      margin: '0 0.25rem'
    },
    '& > ui5-button': {
      display: 'flex',
      minWidth: '4rem'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (style);

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageBox: () => (/* binding */ MessageBox)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_icons_dist_sys_help_2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/sys-help-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/sys-help-2.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useI18nBundle.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/utils/index.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicId.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-jss */ "./node_modules/react-jss/dist/react-jss.esm.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxTypes.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-react/dist/enums/ValueState.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxActions.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/TitleLevel.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js");
/* harmony import */ var _i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents-react/dist/i18n/i18n-defaults.js");
/* harmony import */ var _internal_stopPropagation_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../internal/stopPropagation.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/stopPropagation.js");
/* harmony import */ var _webComponents_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../webComponents/index.js */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Icon/index.js");
/* harmony import */ var _webComponents_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../webComponents/index.js */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Dialog/index.js");
/* harmony import */ var _webComponents_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../webComponents/index.js */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Title/index.js");
/* harmony import */ var _webComponents_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../webComponents/index.js */ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js");
/* harmony import */ var _Text_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../Text/index.js */ "./node_modules/@ui5/webcomponents-react/dist/components/Text/index.js");
/* harmony import */ var _MessageBox_jss_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MessageBox.jss.js */ "./node_modules/@ui5/webcomponents-react/dist/components/MessageBox/MessageBox.jss.js");
'use client';













// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents

const useStyles = (0,react_jss__WEBPACK_IMPORTED_MODULE_3__.createUseStyles)(_MessageBox_jss_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
  name: 'MessageBox'
});
const getIcon = (icon, type, classes) => {
  if ( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(icon)) return icon;
  switch (type) {
    case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Confirm:
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_webComponents_index_js__WEBPACK_IMPORTED_MODULE_6__.Icon, {
        name: _ui5_webcomponents_icons_dist_sys_help_2_js__WEBPACK_IMPORTED_MODULE_0__["default"],
        "aria-hidden": "true",
        accessibleRole: "presentation",
        className: classes.confirmIcon
      });
    default:
      return null;
  }
};
const convertMessageBoxTypeToState = type => {
  switch (type) {
    case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Information:
      return _enums_index_js__WEBPACK_IMPORTED_MODULE_7__.ValueState.Information;
    case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Success:
      return _enums_index_js__WEBPACK_IMPORTED_MODULE_7__.ValueState.Success;
    case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Warning:
      return _enums_index_js__WEBPACK_IMPORTED_MODULE_7__.ValueState.Warning;
    case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Error:
      return _enums_index_js__WEBPACK_IMPORTED_MODULE_7__.ValueState.Error;
    default:
      return _enums_index_js__WEBPACK_IMPORTED_MODULE_7__.ValueState.None;
  }
};
const getActions = (actions, type) => {
  if (actions && actions.length > 0) {
    return actions;
  }
  if (type === _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Confirm) {
    return [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.OK, _enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Cancel];
  }
  if (type === _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Error) {
    return [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Close];
  }
  return [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.OK];
};

/**
 * The `MessageBox` component provides easier methods to create a `Dialog`, such as standard alerts, confirmation dialogs, or arbitrary message dialogs.
 * For convenience, it also provides an `open` prop, so it is not necessary to attach a `ref` to open the `MessageBox`.
 */
const MessageBox = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)((props, ref) => {
  const {
    open,
    type,
    children,
    className,
    titleText,
    icon,
    actions,
    emphasizedAction,
    onClose,
    initialFocus,
    ...rest
  } = props;
  const classes = useStyles();
  const i18nBundle = (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_9__.useI18nBundle)('@ui5/webcomponents-react');
  const actionTranslations = {
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Abort]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.ABORT),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Cancel]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.CANCEL),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Close]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.CLOSE),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Delete]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.DELETE),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Ignore]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.IGNORE),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.No]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.NO),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.OK]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.OK),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Retry]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.RETRY),
    [_enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.Yes]: i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.YES)
  };
  const titleToRender = () => {
    if (titleText) {
      return titleText;
    }
    switch (type) {
      case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Confirm:
        return i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.CONFIRMATION);
      case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Error:
        return i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.ERROR);
      case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Information:
        return i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.INFORMATION);
      case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Success:
        return i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.SUCCESS);
      case _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Warning:
        return i18nBundle.getText(_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.WARNING);
      default:
        return null;
    }
  };
  const handleOnClose = e => {
    const {
      action
    } = e.target.dataset;
    (0,_internal_stopPropagation_js__WEBPACK_IMPORTED_MODULE_11__.stopPropagation)(e);
    onClose((0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_12__.enrichEventWithDetails)(e, {
      action
    }));
  };
  const messageBoxId = (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_13__.useIsomorphicId)();
  const internalActions = getActions(actions, type);
  const getInitialFocus = () => {
    const actionToFocus = internalActions.find(action => action === initialFocus);
    if (typeof actionToFocus === 'string') {
      return `${messageBoxId}-action-${actionToFocus}`;
    }
    return initialFocus;
  };

  // @ts-expect-error: footer, headerText and onAfterClose are already omitted via prop types
  const {
    footer: _0,
    headerText: _1,
    onAfterClose: _2,
    ...restWithoutOmitted
  } = rest;
  const iconToRender = getIcon(icon, type, classes);
  const needsCustomHeader = !props.header && !!iconToRender;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_webComponents_index_js__WEBPACK_IMPORTED_MODULE_14__.Dialog, {
    open: open,
    ref: ref,
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(classes.messageBox, className),
    onAfterClose: open ? handleOnClose : _internal_stopPropagation_js__WEBPACK_IMPORTED_MODULE_11__.stopPropagation,
    accessibleNameRef: needsCustomHeader ? `${messageBoxId}-title ${messageBoxId}-text` : undefined,
    accessibleRole: _enums_index_js__WEBPACK_IMPORTED_MODULE_15__["default"].AlertDialog,
    ...restWithoutOmitted,
    headerText: titleToRender(),
    state: convertMessageBoxTypeToState(type),
    initialFocus: getInitialFocus(),
    "data-type": type
  }, needsCustomHeader && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement("header", {
    slot: "header",
    className: classes.header
  }, iconToRender, iconToRender && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement("span", {
    className: classes.spacer
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_webComponents_index_js__WEBPACK_IMPORTED_MODULE_16__.Title, {
    id: `${messageBoxId}-title`,
    level: _enums_index_js__WEBPACK_IMPORTED_MODULE_17__["default"].H1
  }, titleToRender())), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Text_index_js__WEBPACK_IMPORTED_MODULE_18__.Text, {
    id: `${messageBoxId}-text`
  }, children), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement("footer", {
    slot: "footer",
    className: classes.footer
  }, internalActions.map((action, index) => {
    if (typeof action !== 'string' && /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(action)) {
      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(action, {
        onClick: action?.props?.onClick ? e => {
          action?.props?.onClick(e);
          handleOnClose(e);
        } : handleOnClose,
        'data-action': action?.props?.['data-action'] ?? `${index}: custom action`
      });
    }
    if (typeof action === 'string') {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_webComponents_index_js__WEBPACK_IMPORTED_MODULE_19__.Button, {
        id: `${messageBoxId}-action-${action}`,
        key: `${action}-${index}`,
        design: emphasizedAction === action ? _enums_index_js__WEBPACK_IMPORTED_MODULE_20__["default"].Emphasized : _enums_index_js__WEBPACK_IMPORTED_MODULE_20__["default"].Transparent,
        onClick: handleOnClose,
        "data-action": action
      }, actionTranslations[action] ?? action);
    }
    return null;
  })));
});
MessageBox.displayName = 'MessageBox';
MessageBox.defaultProps = {
  open: false,
  type: _enums_index_js__WEBPACK_IMPORTED_MODULE_5__.MessageBoxTypes.Confirm,
  emphasizedAction: _enums_index_js__WEBPACK_IMPORTED_MODULE_8__.MessageBoxActions.OK,
  actions: []
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/Modals/ModalsProvider.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/Modals/ModalsProvider.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ModalsProvider: () => (/* binding */ ModalsProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _internal_ModalsContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/ModalsContext.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/ModalsContext.js");



//@ts-expect-error: can't assume state generics at this point
const modalStateReducer = (state, action) => {
  switch (action.type) {
    case 'set':
      return [...state, action.payload];
    case 'reset':
      return state.filter(modal => modal.id !== action.payload.id);
    default:
      return state;
  }
};
function ModalsProvider({
  children
}) {
  const [modals, setModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(modalStateReducer, []);
  const isSyncedWithWindow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  if (!isSyncedWithWindow.current && typeof window !== 'undefined') {
    window['@ui5/webcomponents-react'] ??= {};
    window['@ui5/webcomponents-react'].ModalsContext = _internal_ModalsContext_js__WEBPACK_IMPORTED_MODULE_2__.ModalsContext;
    window['@ui5/webcomponents-react'].setModal = setModal;
    isSyncedWithWindow.current = true;
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_ModalsContext_js__WEBPACK_IMPORTED_MODULE_2__.ModalsContext.Provider, {
    value: {
      setModal
    }
  }, modals.map(modal => {
    if (modal?.Component) {
      return /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(modal.Component, {
        ...modal.props,
        ref: modal.ref,
        key: modal.id,
        "data-id": modal.id
      }), modal.container ?? document.body);
    }
  }), children);
}

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/Text/Text.jss.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/Text/Text.jss.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextStyles: () => (/* binding */ TextStyles)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");

const TextStyles = {
  // Text Style
  text: {
    fontFamily: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapFontFamily,
    fontSize: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapFontSize,
    fontWeight: 'normal',
    color: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapTextColor,
    display: 'inline-block',
    boxSizing: 'border-box',
    whiteSpace: 'pre-line',
    wordWrap: 'break-word',
    maxWidth: '100%',
    '&::selection': {
      background: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapSelectedColor,
      color: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_0__.ThemingParameters.sapContent_ContrastTextColor
    }
  },
  renderWhitespace: {
    whiteSpace: 'pre-wrap'
  },
  noWrap: {
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    wordWrap: 'normal',
    overflow: 'hidden',
    '&$renderWhitespace': {
      whiteSpace: 'pre'
    }
  },
  maxLines: {
    display: '-webkit-box',
    WebkitBoxOrient: 'vertical',
    overflow: 'hidden',
    WebkitLineClamp: 'var(--_ui5wcr_maxLines)'
  }
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/Text/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/Text/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Text: () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-jss */ "./node_modules/react-jss/dist/react-jss.esm.js");
/* harmony import */ var _Text_jss_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Text.jss.js */ "./node_modules/@ui5/webcomponents-react/dist/components/Text/Text.jss.js");
'use client';





const useStyles = (0,react_jss__WEBPACK_IMPORTED_MODULE_2__.createUseStyles)(_Text_jss_js__WEBPACK_IMPORTED_MODULE_3__.TextStyles, {
  name: 'Text'
});
/**
 * The `Text` component can be used for embedding text into your app. You can hyphenate the text with the use of the `wrapping` prop.
 * <br />__Note:__ Line breaks will always be visualized except when the wrapping property is set to false. In addition, tabs and whitespace can be preserved by setting the renderWhitespace property to true.
 */
const Text = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, ref) => {
  const {
    children,
    renderWhitespace,
    wrapping = true,
    className,
    style,
    maxLines,
    ...rest
  } = props;
  const classes = useStyles();
  const classNameString = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(classes.text, wrapping === false && classes.noWrap, renderWhitespace && classes.renderWhitespace, typeof maxLines === 'number' && classes.maxLines, className);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    ref: ref,
    style: {
      '--_ui5wcr_maxLines': typeof maxLines === 'number' ? maxLines : undefined,
      ...style
    },
    className: classNameString,
    ...rest
  }, children);
});
Text.displayName = 'Text';


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/GlobalStyleClasses.jss.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/GlobalStyleClasses.jss.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GlobalStyleClassesStyles: () => (/* binding */ GlobalStyleClassesStyles)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/CssSizeVariables.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-react/dist/enums/GlobalStyleClasses.js");
/* harmony import */ var _themes_base_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../themes/base.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/base.js");
/* harmony import */ var _themes_CustomVariables_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../themes/CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");
/* harmony import */ var _themes_sap_belize_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../themes/sap_belize.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize.js");
/* harmony import */ var _themes_sap_belize_hcb_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../themes/sap_belize_hcb.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcb.js");
/* harmony import */ var _themes_sap_belize_hcw_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../themes/sap_belize_hcw.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcw.js");
/* harmony import */ var _themes_sap_fiori_3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../themes/sap_fiori_3.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3.js");
/* harmony import */ var _themes_sap_fiori_3_dark_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../themes/sap_fiori_3_dark.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_dark.js");
/* harmony import */ var _themes_sap_fiori_3_hcb_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../themes/sap_fiori_3_hcb.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcb.js");
/* harmony import */ var _themes_sap_fiori_3_hcw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../themes/sap_fiori_3_hcw.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcw.js");
/* harmony import */ var _themes_sap_horizon_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../themes/sap_horizon.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon.js");
/* harmony import */ var _themes_sap_horizon_dark_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../themes/sap_horizon_dark.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_dark.js");
/* harmony import */ var _themes_sap_horizon_hcb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../themes/sap_horizon_hcb.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcb.js");
/* harmony import */ var _themes_sap_horizon_hcw_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../themes/sap_horizon_hcw.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcw.js");















const GlobalStyleClassesStyles = {
  '@global': {
    [`.${_enums_index_js__WEBPACK_IMPORTED_MODULE_0__.GlobalStyleClasses.inheritingSapScrollBar} *:not([data-native-scrollbar])`]: {
      '&::-webkit-scrollbar': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_TrackColor,
        borderInlineStart: _themes_CustomVariables_js__WEBPACK_IMPORTED_MODULE_2__.CustomThemingParameters.ScrollbarBorder,
        '&:horizontal': {
          height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        },
        '&:vertical': {
          width: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        }
      },
      '&::-webkit-scrollbar-thumb': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_FaceColor,
        borderRadius: _themes_CustomVariables_js__WEBPACK_IMPORTED_MODULE_2__.CustomThemingParameters.ScrollbarBorderRadius,
        '&:hover': {
          backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Hover_FaceColor
        },
        '&:horizontal': {
          height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        },
        '&:vertical': {
          width: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        }
      },
      '&::-webkit-scrollbar-corner': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_TrackColor
      }
    },
    [`.${_enums_index_js__WEBPACK_IMPORTED_MODULE_0__.GlobalStyleClasses.sapScrollBar}:not([data-native-scrollbar])`]: {
      '&::-webkit-scrollbar': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_TrackColor,
        borderInlineStart: _themes_CustomVariables_js__WEBPACK_IMPORTED_MODULE_2__.CustomThemingParameters.ScrollbarBorder,
        '&:horizontal': {
          height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        },
        '&:vertical': {
          width: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        }
      },
      '&::-webkit-scrollbar-thumb': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_FaceColor,
        borderRadius: _themes_CustomVariables_js__WEBPACK_IMPORTED_MODULE_2__.CustomThemingParameters.ScrollbarBorderRadius,
        '&:hover': {
          backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Hover_FaceColor
        },
        '&:horizontal': {
          height: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        },
        '&:vertical': {
          width: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_Dimension
        }
      },
      '&::-webkit-scrollbar-corner': {
        backgroundColor: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapScrollBar_TrackColor
      }
    },
    ':root': {
      extend: [_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__.CozySizes, _themes_base_js__WEBPACK_IMPORTED_MODULE_4__.baseParameters]
    },
    ['[data-ui5-compact-size], .ui5-content-density-compact, .sapUiSizeCompact']: {
      extend: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__.CompactSizes
    },
    '[data-sap-theme="sap_belize"]': _themes_sap_belize_js__WEBPACK_IMPORTED_MODULE_5__.sapBelizeParameters,
    '[data-sap-theme="sap_belize_hcb"]': _themes_sap_belize_hcb_js__WEBPACK_IMPORTED_MODULE_6__.sapBelizeHcbParameters,
    '[data-sap-theme="sap_belize_hcw"]': _themes_sap_belize_hcw_js__WEBPACK_IMPORTED_MODULE_7__.sapBelizeHcwParameters,
    '[data-sap-theme="sap_fiori_3"]': _themes_sap_fiori_3_js__WEBPACK_IMPORTED_MODULE_8__.sapFiori3Parameters,
    '[data-sap-theme="sap_fiori_3_dark"]': _themes_sap_fiori_3_dark_js__WEBPACK_IMPORTED_MODULE_9__.sapFiori3DarkParameters,
    '[data-sap-theme="sap_fiori_3_hcb"]': _themes_sap_fiori_3_hcb_js__WEBPACK_IMPORTED_MODULE_10__.sapFioriHcbParameters,
    '[data-sap-theme="sap_fiori_3_hcw"]': _themes_sap_fiori_3_hcw_js__WEBPACK_IMPORTED_MODULE_11__.sapFioriHcwParameters,
    '[data-sap-theme="sap_horizon"]': _themes_sap_horizon_js__WEBPACK_IMPORTED_MODULE_12__.sapHorizonParameters,
    '[data-sap-theme="sap_horizon_dark"]': _themes_sap_horizon_dark_js__WEBPACK_IMPORTED_MODULE_13__.sapHorizonDarkParameters,
    '[data-sap-theme="sap_horizon_hcb"]': _themes_sap_horizon_hcb_js__WEBPACK_IMPORTED_MODULE_14__.sapHorizonHcbParameters,
    '[data-sap-theme="sap_horizon_hcw"]': _themes_sap_horizon_hcw_js__WEBPACK_IMPORTED_MODULE_15__.sapHorizonHcwParameters
  }
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/config/Theme.js */ "./node_modules/@ui5/webcomponents-base/dist/config/Theme.js");
/* harmony import */ var _ui5_webcomponents_base_dist_theming_ThemeLoaded_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/theming/ThemeLoaded.js */ "./node_modules/@ui5/webcomponents-base/dist/theming/ThemeLoaded.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-jss */ "./node_modules/react-jss/dist/react-jss.esm.js");
/* harmony import */ var react_jss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-jss */ "./node_modules/theming/dist/theming.esm.js");
/* harmony import */ var _internal_I18nProvider_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../internal/I18nProvider.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/I18nProvider.js");
/* harmony import */ var _Modals_ModalsProvider_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Modals/ModalsProvider.js */ "./node_modules/@ui5/webcomponents-react/dist/components/Modals/ModalsProvider.js");
/* harmony import */ var _GlobalStyleClasses_jss_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GlobalStyleClasses.jss.js */ "./node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/GlobalStyleClasses.jss.js");
'use client';










// todo remove after jss types have been enhanced (https://github.com/cssinjs/jss/issues/1480)
// @ts-expect-error: types currently don't allow an array of objects for the `extend` value, but the implementation does
const useStyles = (0,react_jss__WEBPACK_IMPORTED_MODULE_3__.createUseStyles)(_GlobalStyleClasses_jss_js__WEBPACK_IMPORTED_MODULE_4__.GlobalStyleClassesStyles, {
  name: 'ThemeProvider'
});
const ThemeProvider = props => {
  const {
    children
  } = props;
  useStyles();
  (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_5__.useIsomorphicLayoutEffect)(() => {
    document.documentElement.setAttribute('data-sap-theme', (0,_ui5_webcomponents_base_dist_config_Theme_js__WEBPACK_IMPORTED_MODULE_0__.getTheme)());
    const handler = newTheme => {
      document.documentElement.setAttribute('data-sap-theme', newTheme);
    };
    // themeLoaded is fired on theme change
    (0,_ui5_webcomponents_base_dist_theming_ThemeLoaded_js__WEBPACK_IMPORTED_MODULE_1__.attachThemeLoaded)(handler);
    return () => {
      (0,_ui5_webcomponents_base_dist_theming_ThemeLoaded_js__WEBPACK_IMPORTED_MODULE_1__.detachThemeLoaded)(handler);
    };
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(react_jss__WEBPACK_IMPORTED_MODULE_6__.ThemeProvider, {
    theme: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_7__.ThemingParameters
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_internal_I18nProvider_js__WEBPACK_IMPORTED_MODULE_8__.I18nProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Modals_ModalsProvider_js__WEBPACK_IMPORTED_MODULE_9__.ModalsProvider, null, children)));
};
ThemeProvider.displayName = 'ThemeProvider';


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/enums/GlobalStyleClasses.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/enums/GlobalStyleClasses.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GlobalStyleClasses: () => (/* binding */ GlobalStyleClasses)
/* harmony export */ });
let GlobalStyleClasses = /*#__PURE__*/function (GlobalStyleClasses) {
  GlobalStyleClasses["sapScrollBar"] = "sapScrollBar";
  GlobalStyleClasses["inheritingSapScrollBar"] = "inheritingSapScrollBar";
  return GlobalStyleClasses;
}({});

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxActions.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxActions.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageBoxActions: () => (/* binding */ MessageBoxActions)
/* harmony export */ });
let MessageBoxActions = /*#__PURE__*/function (MessageBoxActions) {
  MessageBoxActions["Abort"] = "Abort";
  MessageBoxActions["Cancel"] = "Cancel";
  MessageBoxActions["Close"] = "Close";
  MessageBoxActions["Delete"] = "Delete";
  MessageBoxActions["Ignore"] = "Ignore";
  MessageBoxActions["No"] = "No";
  MessageBoxActions["OK"] = "OK";
  MessageBoxActions["Retry"] = "Retry";
  MessageBoxActions["Yes"] = "Yes";
  return MessageBoxActions;
}({});

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxTypes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxTypes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageBoxTypes: () => (/* binding */ MessageBoxTypes)
/* harmony export */ });
let MessageBoxTypes = /*#__PURE__*/function (MessageBoxTypes) {
  MessageBoxTypes["Confirm"] = "Confirm";
  MessageBoxTypes["Error"] = "Error";
  MessageBoxTypes["Information"] = "Information";
  MessageBoxTypes["Success"] = "Success";
  MessageBoxTypes["Warning"] = "Warning";
  return MessageBoxTypes;
}({});

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/enums/ValueState.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/enums/ValueState.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ValueState: () => (/* binding */ ValueState)
/* harmony export */ });
let ValueState = /*#__PURE__*/function (ValueState) {
  ValueState["Error"] = "Error";
  ValueState["None"] = "None";
  ValueState["Success"] = "Success";
  ValueState["Warning"] = "Warning";
  ValueState["Information"] = "Information";
  return ValueState;
}({});

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/i18n/i18n-defaults.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/i18n/i18n-defaults.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ABORT: () => (/* binding */ ABORT),
/* harmony export */   ACTIVE: () => (/* binding */ ACTIVE),
/* harmony export */   ADAPT_FILTERS: () => (/* binding */ ADAPT_FILTERS),
/* harmony export */   ALL: () => (/* binding */ ALL),
/* harmony export */   APPLY_AUTOMATICALLY: () => (/* binding */ APPLY_AUTOMATICALLY),
/* harmony export */   ARIA_DESC_CARD_HEADER: () => (/* binding */ ARIA_DESC_CARD_HEADER),
/* harmony export */   ARIA_OBJ_STATUS_DESC: () => (/* binding */ ARIA_OBJ_STATUS_DESC),
/* harmony export */   ARIA_OBJ_STATUS_DESC_INACTIVE: () => (/* binding */ ARIA_OBJ_STATUS_DESC_INACTIVE),
/* harmony export */   AVAILABLE_ACTIONS: () => (/* binding */ AVAILABLE_ACTIONS),
/* harmony export */   BASIC: () => (/* binding */ BASIC),
/* harmony export */   CANCEL: () => (/* binding */ CANCEL),
/* harmony export */   CLEAR: () => (/* binding */ CLEAR),
/* harmony export */   CLEAR_SORTING: () => (/* binding */ CLEAR_SORTING),
/* harmony export */   CLOSE: () => (/* binding */ CLOSE),
/* harmony export */   COLLAPSE_GROUP: () => (/* binding */ COLLAPSE_GROUP),
/* harmony export */   COLLAPSE_HEADER: () => (/* binding */ COLLAPSE_HEADER),
/* harmony export */   COLLAPSE_NODE: () => (/* binding */ COLLAPSE_NODE),
/* harmony export */   COLLAPSE_PRESS_SPACE: () => (/* binding */ COLLAPSE_PRESS_SPACE),
/* harmony export */   CONFIRMATION: () => (/* binding */ CONFIRMATION),
/* harmony export */   CREATED_BY: () => (/* binding */ CREATED_BY),
/* harmony export */   DEFAULT: () => (/* binding */ DEFAULT),
/* harmony export */   DELETE: () => (/* binding */ DELETE),
/* harmony export */   DELETE_VIEW: () => (/* binding */ DELETE_VIEW),
/* harmony export */   DESELECT_ALL: () => (/* binding */ DESELECT_ALL),
/* harmony export */   DEVIATION: () => (/* binding */ DEVIATION),
/* harmony export */   DRAG_TO_RESIZE: () => (/* binding */ DRAG_TO_RESIZE),
/* harmony export */   EMPTY_VALUE: () => (/* binding */ EMPTY_VALUE),
/* harmony export */   ERROR: () => (/* binding */ ERROR),
/* harmony export */   EXPAND_GROUP: () => (/* binding */ EXPAND_GROUP),
/* harmony export */   EXPAND_HEADER: () => (/* binding */ EXPAND_HEADER),
/* harmony export */   EXPAND_NODE: () => (/* binding */ EXPAND_NODE),
/* harmony export */   EXPAND_PRESS_SPACE: () => (/* binding */ EXPAND_PRESS_SPACE),
/* harmony export */   FIELD: () => (/* binding */ FIELD),
/* harmony export */   FIELDS_BY_ATTRIBUTE: () => (/* binding */ FIELDS_BY_ATTRIBUTE),
/* harmony export */   FILTERED: () => (/* binding */ FILTERED),
/* harmony export */   FILTERS: () => (/* binding */ FILTERS),
/* harmony export */   GO: () => (/* binding */ GO),
/* harmony export */   GROUP: () => (/* binding */ GROUP),
/* harmony export */   GROUPED: () => (/* binding */ GROUPED),
/* harmony export */   GROUP_VIEW: () => (/* binding */ GROUP_VIEW),
/* harmony export */   HIDE_FILTER_BAR: () => (/* binding */ HIDE_FILTER_BAR),
/* harmony export */   HIDE_VALUES: () => (/* binding */ HIDE_VALUES),
/* harmony export */   IGNORE: () => (/* binding */ IGNORE),
/* harmony export */   INDICATION_COLOR: () => (/* binding */ INDICATION_COLOR),
/* harmony export */   INFORMATION: () => (/* binding */ INFORMATION),
/* harmony export */   INVALID_TABLE: () => (/* binding */ INVALID_TABLE),
/* harmony export */   LIST_NO_DATA: () => (/* binding */ LIST_NO_DATA),
/* harmony export */   LIST_VIEW: () => (/* binding */ LIST_VIEW),
/* harmony export */   MANAGE: () => (/* binding */ MANAGE),
/* harmony export */   MANAGE_VIEWS: () => (/* binding */ MANAGE_VIEWS),
/* harmony export */   MANDATORY: () => (/* binding */ MANDATORY),
/* harmony export */   MARK_AS_FAVORITE: () => (/* binding */ MARK_AS_FAVORITE),
/* harmony export */   MARK_AS_STANDARD: () => (/* binding */ MARK_AS_STANDARD),
/* harmony export */   MY_VIEWS: () => (/* binding */ MY_VIEWS),
/* harmony export */   NO: () => (/* binding */ NO),
/* harmony export */   NUMERICCONTENT_DEVIATION_DOWN: () => (/* binding */ NUMERICCONTENT_DEVIATION_DOWN),
/* harmony export */   NUMERICCONTENT_DEVIATION_UP: () => (/* binding */ NUMERICCONTENT_DEVIATION_UP),
/* harmony export */   OK: () => (/* binding */ OK),
/* harmony export */   PIN_HEADER: () => (/* binding */ PIN_HEADER),
/* harmony export */   PLEASE_WAIT: () => (/* binding */ PLEASE_WAIT),
/* harmony export */   PRESS_ARROW_KEYS_TO_MOVE: () => (/* binding */ PRESS_ARROW_KEYS_TO_MOVE),
/* harmony export */   PRIVATE: () => (/* binding */ PRIVATE),
/* harmony export */   PUBLIC: () => (/* binding */ PUBLIC),
/* harmony export */   RESET: () => (/* binding */ RESET),
/* harmony export */   RESTORE: () => (/* binding */ RESTORE),
/* harmony export */   RETRY: () => (/* binding */ RETRY),
/* harmony export */   SAVE: () => (/* binding */ SAVE),
/* harmony export */   SAVE_AS: () => (/* binding */ SAVE_AS),
/* harmony export */   SAVE_VIEW: () => (/* binding */ SAVE_VIEW),
/* harmony export */   SEARCH: () => (/* binding */ SEARCH),
/* harmony export */   SEARCH_FOR_FILTERS: () => (/* binding */ SEARCH_FOR_FILTERS),
/* harmony export */   SEARCH_VARIANT: () => (/* binding */ SEARCH_VARIANT),
/* harmony export */   SELECT: () => (/* binding */ SELECT),
/* harmony export */   SELECTED: () => (/* binding */ SELECTED),
/* harmony export */   SELECTED_AS_FAVORITE: () => (/* binding */ SELECTED_AS_FAVORITE),
/* harmony export */   SELECT_ALL: () => (/* binding */ SELECT_ALL),
/* harmony export */   SELECT_PRESS_SPACE: () => (/* binding */ SELECT_PRESS_SPACE),
/* harmony export */   SELECT_VIEW: () => (/* binding */ SELECT_VIEW),
/* harmony export */   SEMANTIC_COLOR_CRITICAL: () => (/* binding */ SEMANTIC_COLOR_CRITICAL),
/* harmony export */   SEMANTIC_COLOR_ERROR: () => (/* binding */ SEMANTIC_COLOR_ERROR),
/* harmony export */   SEMANTIC_COLOR_GOOD: () => (/* binding */ SEMANTIC_COLOR_GOOD),
/* harmony export */   SEMANTIC_COLOR_NEUTRAL: () => (/* binding */ SEMANTIC_COLOR_NEUTRAL),
/* harmony export */   SEPARATOR: () => (/* binding */ SEPARATOR),
/* harmony export */   SET_AS_DEFAULT: () => (/* binding */ SET_AS_DEFAULT),
/* harmony export */   SHARING: () => (/* binding */ SHARING),
/* harmony export */   SHOW_FILTER_BAR: () => (/* binding */ SHOW_FILTER_BAR),
/* harmony export */   SHOW_LESS: () => (/* binding */ SHOW_LESS),
/* harmony export */   SHOW_MORE: () => (/* binding */ SHOW_MORE),
/* harmony export */   SHOW_ON_FILTER_BAR: () => (/* binding */ SHOW_ON_FILTER_BAR),
/* harmony export */   SHOW_VALUES: () => (/* binding */ SHOW_VALUES),
/* harmony export */   SORT_ASCENDING: () => (/* binding */ SORT_ASCENDING),
/* harmony export */   SORT_DESCENDING: () => (/* binding */ SORT_DESCENDING),
/* harmony export */   SPECIFY_VIEW_NAME: () => (/* binding */ SPECIFY_VIEW_NAME),
/* harmony export */   SUCCESS: () => (/* binding */ SUCCESS),
/* harmony export */   TARGET: () => (/* binding */ TARGET),
/* harmony export */   UNGROUP: () => (/* binding */ UNGROUP),
/* harmony export */   UNPIN_HEADER: () => (/* binding */ UNPIN_HEADER),
/* harmony export */   UNSELECTED_AS_FAVORITE: () => (/* binding */ UNSELECTED_AS_FAVORITE),
/* harmony export */   UNSELECT_PRESS_SPACE: () => (/* binding */ UNSELECT_PRESS_SPACE),
/* harmony export */   VARIANT_MANAGEMENT_ERROR_DUPLICATE: () => (/* binding */ VARIANT_MANAGEMENT_ERROR_DUPLICATE),
/* harmony export */   VIEW: () => (/* binding */ VIEW),
/* harmony export */   VISIBLE: () => (/* binding */ VISIBLE),
/* harmony export */   VISIBLE_AND_ACTIVE: () => (/* binding */ VISIBLE_AND_ACTIVE),
/* harmony export */   WARNING: () => (/* binding */ WARNING),
/* harmony export */   X_OF_Y: () => (/* binding */ X_OF_Y),
/* harmony export */   YES: () => (/* binding */ YES)
/* harmony export */ });
const TARGET = {
  key: "TARGET",
  defaultText: "Target"
};
const DEVIATION = {
  key: "DEVIATION",
  defaultText: "Deviation"
};
const ABORT = {
  key: "ABORT",
  defaultText: "Abort"
};
const CANCEL = {
  key: "CANCEL",
  defaultText: "Cancel"
};
const CLOSE = {
  key: "CLOSE",
  defaultText: "Close"
};
const DELETE = {
  key: "DELETE",
  defaultText: "Delete"
};
const IGNORE = {
  key: "IGNORE",
  defaultText: "Ignore"
};
const NO = {
  key: "NO",
  defaultText: "No"
};
const OK = {
  key: "OK",
  defaultText: "OK"
};
const RETRY = {
  key: "RETRY",
  defaultText: "Retry"
};
const YES = {
  key: "YES",
  defaultText: "Yes"
};
const CLEAR_SORTING = {
  key: "CLEAR_SORTING",
  defaultText: "Clear Sorting"
};
const SORT_ASCENDING = {
  key: "SORT_ASCENDING",
  defaultText: "Sort Ascending"
};
const SORT_DESCENDING = {
  key: "SORT_DESCENDING",
  defaultText: "Sort Descending"
};
const GROUP = {
  key: "GROUP",
  defaultText: "Group"
};
const GROUPED = {
  key: "GROUPED",
  defaultText: "Grouped"
};
const UNGROUP = {
  key: "UNGROUP",
  defaultText: "Ungroup"
};
const DRAG_TO_RESIZE = {
  key: "DRAG_TO_RESIZE",
  defaultText: "Drag to resize"
};
const PLEASE_WAIT = {
  key: "PLEASE_WAIT",
  defaultText: "Please wait"
};
const CONFIRMATION = {
  key: "CONFIRMATION",
  defaultText: "Confirmation"
};
const ERROR = {
  key: "ERROR",
  defaultText: "Error"
};
const INFORMATION = {
  key: "INFORMATION",
  defaultText: "Information"
};
const SUCCESS = {
  key: "SUCCESS",
  defaultText: "Success"
};
const WARNING = {
  key: "WARNING",
  defaultText: "Warning"
};
const SHOW_LESS = {
  key: "SHOW_LESS",
  defaultText: "Show less"
};
const SHOW_MORE = {
  key: "SHOW_MORE",
  defaultText: "Show more"
};
const EXPAND_GROUP = {
  key: "EXPAND_GROUP",
  defaultText: "Expand Group"
};
const COLLAPSE_GROUP = {
  key: "COLLAPSE_GROUP",
  defaultText: "Collapse Group"
};
const SHOW_FILTER_BAR = {
  key: "SHOW_FILTER_BAR",
  defaultText: "Show Filter Bar"
};
const HIDE_FILTER_BAR = {
  key: "HIDE_FILTER_BAR",
  defaultText: "Hide Filter Bar"
};
const CLEAR = {
  key: "CLEAR",
  defaultText: "Clear"
};
const RESTORE = {
  key: "RESTORE",
  defaultText: "Restore"
};
const FILTERS = {
  key: "FILTERS",
  defaultText: "Filters"
};
const ADAPT_FILTERS = {
  key: "ADAPT_FILTERS",
  defaultText: "Adapt Filters"
};
const GO = {
  key: "GO",
  defaultText: "Go"
};
const SAVE = {
  key: "SAVE",
  defaultText: "Save"
};
const SHOW_ON_FILTER_BAR = {
  key: "SHOW_ON_FILTER_BAR",
  defaultText: "Show on Filter Bar"
};
const BASIC = {
  key: "BASIC",
  defaultText: "Basic"
};
const SEARCH_FOR_FILTERS = {
  key: "SEARCH_FOR_FILTERS",
  defaultText: "Search for filters"
};
const FIELDS_BY_ATTRIBUTE = {
  key: "FIELDS_BY_ATTRIBUTE",
  defaultText: "Show Fields by Attribute"
};
const VISIBLE = {
  key: "VISIBLE",
  defaultText: "Visible"
};
const ACTIVE = {
  key: "ACTIVE",
  defaultText: "Active"
};
const VISIBLE_AND_ACTIVE = {
  key: "VISIBLE_AND_ACTIVE",
  defaultText: "Visible and Active"
};
const MANDATORY = {
  key: "MANDATORY",
  defaultText: "Mandatory"
};
const LIST_VIEW = {
  key: "LIST_VIEW",
  defaultText: "List View"
};
const GROUP_VIEW = {
  key: "GROUP_VIEW",
  defaultText: "Group View"
};
const SHOW_VALUES = {
  key: "SHOW_VALUES",
  defaultText: "Show Values"
};
const HIDE_VALUES = {
  key: "HIDE_VALUES",
  defaultText: "Hide Values"
};
const FIELD = {
  key: "FIELD",
  defaultText: "Field"
};
const COLLAPSE_HEADER = {
  key: "COLLAPSE_HEADER",
  defaultText: "Collapse Header"
};
const EXPAND_HEADER = {
  key: "EXPAND_HEADER",
  defaultText: "Expand Header"
};
const PIN_HEADER = {
  key: "PIN_HEADER",
  defaultText: "Pin Header"
};
const UNPIN_HEADER = {
  key: "UNPIN_HEADER",
  defaultText: "Unpin Header"
};
const SEPARATOR = {
  key: "SEPARATOR",
  defaultText: "Separator"
};
const AVAILABLE_ACTIONS = {
  key: "AVAILABLE_ACTIONS",
  defaultText: "Available Actions"
};
const X_OF_Y = {
  key: "X_OF_Y",
  defaultText: "Item {0} of {1}"
};
const MY_VIEWS = {
  key: "MY_VIEWS",
  defaultText: "My Views"
};
const SAVE_VIEW = {
  key: "SAVE_VIEW",
  defaultText: "Save View"
};
const MANAGE_VIEWS = {
  key: "MANAGE_VIEWS",
  defaultText: "Manage Views"
};
const VIEW = {
  key: "VIEW",
  defaultText: "View"
};
const VARIANT_MANAGEMENT_ERROR_DUPLICATE = {
  key: "VARIANT_MANAGEMENT_ERROR_DUPLICATE",
  defaultText: "The view name already exists. Please enter a different name."
};
const SPECIFY_VIEW_NAME = {
  key: "SPECIFY_VIEW_NAME",
  defaultText: "Please specify a view name"
};
const SET_AS_DEFAULT = {
  key: "SET_AS_DEFAULT",
  defaultText: "Set as Default"
};
const PUBLIC = {
  key: "PUBLIC",
  defaultText: "Public"
};
const APPLY_AUTOMATICALLY = {
  key: "APPLY_AUTOMATICALLY",
  defaultText: "Apply Automatically"
};
const SHARING = {
  key: "SHARING",
  defaultText: "Sharing"
};
const DEFAULT = {
  key: "DEFAULT",
  defaultText: "Default"
};
const CREATED_BY = {
  key: "CREATED_BY",
  defaultText: "Created By"
};
const MANAGE = {
  key: "MANAGE",
  defaultText: "Manage"
};
const PRIVATE = {
  key: "PRIVATE",
  defaultText: "Private"
};
const MARK_AS_STANDARD = {
  key: "MARK_AS_STANDARD",
  defaultText: "Use as standard view"
};
const MARK_AS_FAVORITE = {
  key: "MARK_AS_FAVORITE",
  defaultText: "Mark as favorite view"
};
const DELETE_VIEW = {
  key: "DELETE_VIEW",
  defaultText: "Delete view"
};
const SELECT_VIEW = {
  key: "SELECT_VIEW",
  defaultText: "Select view"
};
const SEARCH_VARIANT = {
  key: "SEARCH_VARIANT",
  defaultText: "Search variant"
};
const ALL = {
  key: "ALL",
  defaultText: "All"
};
const SEARCH = {
  key: "SEARCH",
  defaultText: "Search"
};
const SAVE_AS = {
  key: "SAVE_AS",
  defaultText: "Save As"
};
const RESET = {
  key: "RESET",
  defaultText: "Reset"
};
const SELECTED_AS_FAVORITE = {
  key: "SELECTED_AS_FAVORITE",
  defaultText: "Selected as Favorite"
};
const UNSELECTED_AS_FAVORITE = {
  key: "UNSELECTED_AS_FAVORITE",
  defaultText: "Unselected as Favorite"
};
const SELECT = {
  key: "SELECT",
  defaultText: "Select"
};
const SELECTED = {
  key: "SELECTED",
  defaultText: "Selected"
};
const PRESS_ARROW_KEYS_TO_MOVE = {
  key: "PRESS_ARROW_KEYS_TO_MOVE",
  defaultText: "Press ARROW keys to move"
};
const LIST_NO_DATA = {
  key: "LIST_NO_DATA",
  defaultText: "No data"
};
const EXPAND_NODE = {
  key: "EXPAND_NODE",
  defaultText: "Expand Node"
};
const COLLAPSE_NODE = {
  key: "COLLAPSE_NODE",
  defaultText: "Collapse Node"
};
const EXPAND_PRESS_SPACE = {
  key: "EXPAND_PRESS_SPACE",
  defaultText: "To expand the row, press the spacebar"
};
const COLLAPSE_PRESS_SPACE = {
  key: "COLLAPSE_PRESS_SPACE",
  defaultText: "To collapse the row, press the spacebar"
};
const SELECT_PRESS_SPACE = {
  key: "SELECT_PRESS_SPACE",
  defaultText: "To select the row, press the spacebar"
};
const UNSELECT_PRESS_SPACE = {
  key: "UNSELECT_PRESS_SPACE",
  defaultText: "To deselect the row, press the spacebar"
};
const INVALID_TABLE = {
  key: "INVALID_TABLE",
  defaultText: "Invalid Table"
};
const FILTERED = {
  key: "FILTERED",
  defaultText: "Filtered"
};
const ARIA_DESC_CARD_HEADER = {
  key: "ARIA_DESC_CARD_HEADER",
  defaultText: "Card Header"
};
const SEMANTIC_COLOR_CRITICAL = {
  key: "SEMANTIC_COLOR_CRITICAL",
  defaultText: "Warning"
};
const SEMANTIC_COLOR_GOOD = {
  key: "SEMANTIC_COLOR_GOOD",
  defaultText: "Good"
};
const SEMANTIC_COLOR_NEUTRAL = {
  key: "SEMANTIC_COLOR_NEUTRAL",
  defaultText: "Neutral"
};
const SEMANTIC_COLOR_ERROR = {
  key: "SEMANTIC_COLOR_ERROR",
  defaultText: "Critical"
};
const NUMERICCONTENT_DEVIATION_UP = {
  key: "NUMERICCONTENT_DEVIATION_UP",
  defaultText: "Ascending"
};
const NUMERICCONTENT_DEVIATION_DOWN = {
  key: "NUMERICCONTENT_DEVIATION_DOWN",
  defaultText: "Descending"
};
const ARIA_OBJ_STATUS_DESC = {
  key: "ARIA_OBJ_STATUS_DESC",
  defaultText: "Object Status Button"
};
const ARIA_OBJ_STATUS_DESC_INACTIVE = {
  key: "ARIA_OBJ_STATUS_DESC_INACTIVE",
  defaultText: "Object Status"
};
const INDICATION_COLOR = {
  key: "INDICATION_COLOR",
  defaultText: "Indication Color"
};
const EMPTY_VALUE = {
  key: "EMPTY_VALUE",
  defaultText: "Empty Value"
};
const SELECT_ALL = {
  key: "SELECT_ALL",
  defaultText: "Select All"
};
const DESELECT_ALL = {
  key: "DESELECT_ALL",
  defaultText: "Deselect All"
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/internal/I18nProvider.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/internal/I18nProvider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I18nProvider: () => (/* binding */ I18nProvider)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _ui5_webcomponents_base_dist_locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/locale/languageChange.js */ "./node_modules/@ui5/webcomponents-base/dist/locale/languageChange.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/context/I18nContext.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




const bundleReducer = (currentBundles, action) => {
  return {
    ...currentBundles,
    ...action.payload
  };
};
function I18nProvider({
  children
}) {
  const [i18nBundles, setI18nBundles] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useReducer)(bundleReducer, {});
  const localBundles = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({});
  const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);
  const updateBundles = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {
    return Promise.all(Object.keys(localBundles.current).map(bundleName => (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_0__.getI18nBundle)(bundleName))).then(bundles => {
      const bundleMap = bundles.reduce((acc, bundle) => ({
        ...acc,
        [bundle.packageName]: bundle
      }), {});
      if (isMounted.current) {
        setI18nBundles({
          payload: bundleMap
        });
      }
    });
  }, []);
  const setI18nBundle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((name, bundle) => {
    localBundles.current[name] = bundle;
    void updateBundles();
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    isMounted.current = true;
    (0,_ui5_webcomponents_base_dist_locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__.attachLanguageChange)(updateBundles);
    return () => {
      isMounted.current = false;
      (0,_ui5_webcomponents_base_dist_locale_languageChange_js__WEBPACK_IMPORTED_MODULE_1__.detachLanguageChange)(updateBundles);
    };
  }, []);
  const Context = (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__.getI18nContext)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(Context.Provider, {
    value: {
      i18nBundles,
      setI18nBundle
    }
  }, children);
}

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/internal/ModalsContext.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/internal/ModalsContext.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ModalsContext: () => (/* binding */ ModalsContext),
/* harmony export */   useModalsContext: () => (/* binding */ useModalsContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");

const ModalsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  setModal: null
});
const useModalsContext = () => {
  let context = ModalsContext;
  if (typeof window !== 'undefined' && window['@ui5/webcomponents-react']?.ModalsContext) {
    context = window['@ui5/webcomponents-react'].ModalsContext;
  }
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/internal/stopPropagation.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/internal/stopPropagation.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   stopPropagation: () => (/* binding */ stopPropagation)
/* harmony export */ });
const stopPropagation = e => {
  e.stopPropagation();
  e.stopImmediatePropagation?.();
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/internal/utils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/internal/utils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   camelToKebabCase: () => (/* binding */ camelToKebabCase),
/* harmony export */   capitalizeFirstLetter: () => (/* binding */ capitalizeFirstLetter),
/* harmony export */   cssVarVersionInfoPrefix: () => (/* binding */ cssVarVersionInfoPrefix),
/* harmony export */   flattenFragments: () => (/* binding */ flattenFragments),
/* harmony export */   getUi5TagWithSuffix: () => (/* binding */ getUi5TagWithSuffix),
/* harmony export */   isSSR: () => (/* binding */ isSSR),
/* harmony export */   kebabToCamelCase: () => (/* binding */ kebabToCamelCase),
/* harmony export */   lowercaseFirstLetter: () => (/* binding */ lowercaseFirstLetter),
/* harmony export */   trimAndRemoveSpaces: () => (/* binding */ trimAndRemoveSpaces)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_CustomElementsScope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/CustomElementsScope.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScope.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");


function flattenFragments(children, depth = 1) {
  const flatChildren = [];
  const removeFragments = (element, level = 0, key = []) => {
    if (!element) {
      return;
    }
    if (Array.isArray(element)) {
      react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(element).forEach((child, index) => {
        removeFragments(child, level + 1, [...key, index]);
      });
      return;
    }
    if (element.type === react__WEBPACK_IMPORTED_MODULE_1__.Fragment && level <= depth) {
      react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(element.props?.children).forEach((item, index) => {
        removeFragments(item, level + 1, [...key, index]);
      });
    } else if (typeof element === 'string' || typeof element === 'number') {
      flatChildren.push(element);
    } else {
      flatChildren.push( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(element, {
        key: key.join('.')
      }));
    }
  };
  removeFragments(children);
  return flatChildren;
}
const capitalizeFirstLetter = s => s.charAt(0).toUpperCase() + s.slice(1);
const lowercaseFirstLetter = s => s.charAt(0).toLowerCase() + s.slice(1);
const camelToKebabCase = s => s.replace(/([A-Z])/g, (a, b) => `-${b.toLowerCase()}`);
const kebabToCamelCase = str => str.replace(/([-_]\w)/g, g => g[1].toUpperCase());
function getUi5TagWithSuffix(baseTagName) {
  const tagNameSuffix = (0,_ui5_webcomponents_base_dist_CustomElementsScope_js__WEBPACK_IMPORTED_MODULE_0__.getEffectiveScopingSuffixForTag)(baseTagName);
  return tagNameSuffix ? `${baseTagName}-${tagNameSuffix}` : baseTagName;
}
const isSSR = () => typeof window === 'undefined';
function trimAndRemoveSpaces(value) {
  return value.trim().replace(/\s\s+/g, ' ');
}
const cssVarVersionInfoPrefix = (0,_ui5_webcomponents_base_dist_CustomElementsScope_js__WEBPACK_IMPORTED_MODULE_0__.getScopedVarName)('--_ui5_').replace('--_ui5_', '');

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withWebComponent: () => (/* binding */ withWebComponent)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_CustomElementsScope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/CustomElementsScope.js */ "./node_modules/@ui5/webcomponents-base/dist/CustomElementsScope.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useSyncRef.js");
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/utils.js");
'use client';





const createEventPropName = eventName => `on${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.capitalizeFirstLetter)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.kebabToCamelCase)(eventName))}`;
const definedWebComponents = new Set([]);
const withWebComponent = (tagName, regularProperties, booleanProperties, slotProperties, eventProperties, loader) => {
  // displayName will be assigned in the individual files
  // eslint-disable-next-line react/display-name
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, wcRef) => {
    const {
      className,
      children,
      waitForDefine,
      ...rest
    } = props;
    const [componentRef, ref] = (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_3__.useSyncRef)(wcRef);
    const tagNameSuffix = (0,_ui5_webcomponents_base_dist_CustomElementsScope_js__WEBPACK_IMPORTED_MODULE_0__.getEffectiveScopingSuffixForTag)(tagName);
    const Component = tagNameSuffix ? `${tagName}-${tagNameSuffix}` : tagName;
    const [isDefined, setIsDefined] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(definedWebComponents.has(Component));
    // regular props (no booleans, no slots and no events)
    const regularProps = regularProperties.reduce((acc, name) => {
      if (rest.hasOwnProperty(name)) {
        return {
          ...acc,
          [(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.camelToKebabCase)(name)]: rest[name]
        };
      }
      return acc;
    }, {});

    // boolean properties - only attach if they are truthy
    const booleanProps = booleanProperties.reduce((acc, name) => {
      if (rest[name] === true || rest[name] === 'true') {
        return {
          ...acc,
          [(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.camelToKebabCase)(name)]: true
        };
      }
      return acc;
    }, {});
    const slots = slotProperties.reduce((acc, name) => {
      const slotValue = rest[name];
      if (!slotValue) {
        return acc;
      }
      if (rest[name]?.$$typeof === Symbol.for('react.portal')) {
        console.warn('ReactPortal is not supported for slot props.');
        return acc;
      }
      const slottedChildren = [];
      let index = 0;
      const removeFragments = element => {
        if (! /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(element)) return;
        if (element.type === react__WEBPACK_IMPORTED_MODULE_1__.Fragment) {
          const elementChildren = element.props?.children;
          if (Array.isArray(elementChildren)) {
            elementChildren.forEach(item => {
              if (Array.isArray(item)) {
                item.forEach(removeFragments);
              } else {
                removeFragments(item);
              }
            });
          } else {
            removeFragments(elementChildren);
          }
        } else {
          slottedChildren.push( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(element, {
            key: element.key ?? `${name}-${index}`,
            slot: name
          }));
          index++;
        }
      };
      if (Array.isArray(slotValue)) {
        slotValue.forEach(item => {
          removeFragments(item);
        });
      } else {
        removeFragments(slotValue);
      }
      return [...acc, ...slottedChildren];
    }, []);

    // event binding
    (0,_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_4__.useIsomorphicLayoutEffect)(() => {
      const localRef = ref.current;
      const eventRegistry = {};
      if (!waitForDefine || isDefined) {
        eventProperties.forEach(eventName => {
          const eventHandler = rest[createEventPropName(eventName)];
          if (typeof eventHandler === 'function') {
            eventRegistry[eventName] = eventHandler;
            // @ts-expect-error: all custom events can be passed here, so `keyof HTMLElementEventMap` isn't sufficient
            localRef?.addEventListener(eventName, eventRegistry[eventName]);
          }
        });
        return () => {
          for (const eventName in eventRegistry) {
            // @ts-expect-error: all custom events can be passed here, so `keyof HTMLElementEventMap` isn't sufficient
            localRef?.removeEventListener(eventName, eventRegistry[eventName]);
          }
        };
      }
    }, [...eventProperties.map(eventName => rest[createEventPropName(eventName)]), isDefined, waitForDefine]);

    // non web component related props, just pass them
    const nonWebComponentRelatedProps = Object.entries(rest).filter(([key]) => !regularProperties.includes(key)).filter(([key]) => !slotProperties.includes(key)).filter(([key]) => !booleanProperties.includes(key)).filter(([key]) => !eventProperties.map(eventName => createEventPropName(eventName)).includes(key)).reduce((acc, [key, val]) => {
      if (!key.startsWith('aria-') && !key.startsWith('data-') && val === false) {
        return acc;
      }
      acc[key] = val;
      return acc;
    }, {});
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (waitForDefine && !isDefined) {
        customElements.whenDefined(Component).then(() => {
          setIsDefined(true);
          definedWebComponents.add(Component);
        });
      }
    }, [Component, waitForDefine, isDefined]);
    if (waitForDefine && !isDefined) {
      return null;
    }
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Component, {
      ref: componentRef,
      ...booleanProps,
      ...regularProps,
      ...nonWebComponentRelatedProps,
      class: className
    }, slots, children);
  });
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CustomThemingParameters: () => (/* binding */ CustomThemingParameters),
/* harmony export */   CustomVariables: () => (/* binding */ CustomVariables)
/* harmony export */ });
let CustomVariables = /*#__PURE__*/function (CustomVariables) {
  CustomVariables["ActionSheetBoxShadow"] = "--_ui5wcr_ActionSheet_BoxShadow";
  CustomVariables["ActionSheetHeaderBoxShadow"] = "--_ui5wcr_ActionSheet_HeaderBoxShadow";
  CustomVariables["ActionSheetMobileHeaderBackground"] = "--_ui5wcr_ActionSheet_MobileHeaderBackground";
  CustomVariables["ActionSheetMobileHeaderBorderRadius"] = "--_ui5wcr_ActionSheet_MobileHeaderBorderRadius";
  CustomVariables["ActionSheetMobileHeaderBoxShadow"] = "--_ui5wcr_ActionSheet_MobileHeaderBoxShadow";
  CustomVariables["ActionSheetMobileHeaderTextColor"] = "--_ui5wcr_ActionSheet_MobileHeaderTextColor";
  CustomVariables["ActionSheetTopBorderRadius"] = "--_ui5wcr_ActionSheet_TopBorderRadius";
  CustomVariables["AnalyticalTableHeaderActiveTextColor"] = "--_ui5wcr-AnalyticalTable-HeaderActiveTextColor";
  CustomVariables["AnalyticalTableHeaderBorderWidth"] = "--_ui5wcr-AnalyticalTable-HeaderBorderWidth";
  CustomVariables["AnalyticalTableHeaderFontFamily"] = "--_ui5wcr-AnalyticalTable-HeaderFontFamily";
  CustomVariables["AnalyticalTableOuterBorderBlock"] = "--_ui5wcr-AnalyticalTable-OuterBorderBlock";
  CustomVariables["AnalyticalTableOuterBorderInline"] = "--_ui5wcr-AnalyticalTable-OuterBorderInline";
  CustomVariables["AnalyticalTableOuterCellBorder"] = "--_ui5wcr-AnalyticalTable-OuterCellBorder";
  CustomVariables["ObjectPageSectionBorderTop"] = "--_ui5wcr_ObjectPage_SectionBorderTop";
  CustomVariables["ObjectPageSectionTitleFontFamily"] = "--_ui5wcr_ObjectPage_SectionTitleFontFamily";
  CustomVariables["ObjectPageSectionTitleHeight"] = "--_ui5wcr_ObjectPage_SectionTitleHeight";
  CustomVariables["ObjectPageSectionTitleLineHeight"] = "--_ui5wcr_ObjectPage_SectionTitleLineHeight";
  CustomVariables["ObjectPageSectionTitleTextDecoration"] = "--_ui5wcr_ObjectPage_SectionTitleTextDecoration";
  CustomVariables["ObjectPageSubSectionBackgroundColor"] = "--_ui5wcr_ObjectPage_SubSectionBackgroundColor";
  CustomVariables["ObjectPageSubSectionBorderRadius"] = "--_ui5wcr_ObjectPage_SubSectionBorderRadius";
  CustomVariables["ObjectPageSubSectionPaddingBlockStart"] = "--_ui5wcr_ObjectPage_PaddingBlockStart";
  CustomVariables["SplitterBarBorderFix"] = "--_ui5wcr_Splitter_BarBorderHighContrastFix";
  CustomVariables["SplitterBarBorderFocus"] = "--_ui5wcr_Splitter_BarBorderFocus";
  CustomVariables["SplitterBarBorderStyle"] = "--_ui5wcr_Splitter_BarBorderStyle";
  CustomVariables["SplitterBarOutline"] = "--_ui5wcr_Splitter_BarOutline";
  CustomVariables["SplitterContentBorderColor"] = "--_ui5wcr_Splitter_ContentBorderColor";
  CustomVariables["SplitterIconColor"] = "--_ui5wcr_Splitter_IconColor";
  CustomVariables["ToolbarFocusOutline"] = "--_ui5wcr_Toolbar_FocusOutline";
  CustomVariables["ToolbarFocusShadow"] = "--_ui5wcr_Toolbar_FocusShadow";
  CustomVariables["ScrollbarBorder"] = "--_ui5wcr_Scrollbar_Border";
  CustomVariables["ScrollbarBorderRadius"] = "--_ui5wcr_Scrollbar_BorderRadius";
  return CustomVariables;
}({});
const CustomThemingParameters = new Proxy(CustomVariables, {
  get: (target, prop) => `var(${target[prop]})`
});

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/base.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/base.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   baseParameters: () => (/* binding */ baseParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const baseParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetHeaderBoxShadow]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBackground]: `transparent`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBorderRadius]: `0`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBoxShadow]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_ContrastTextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderActiveTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_HeaderTextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderBorderWidth]: '0.0625rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderBlock]: `1px solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_BorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderInline]: `1px solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_BorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterCellBorder]: `1px solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_BorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionBorderTop]: `0.0625rem solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_TitleBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleHeight]: '2.25rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleLineHeight]: '2.25rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleTextDecoration]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBackgroundColor]: `transparent`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBorderRadius]: `0`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionPaddingBlockStart]: `2rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusWidth} solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusWidth} solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderStyle]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarOutline]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapHighlightColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterIconColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapButton_Lite_TextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusOutline]: `${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusWidth} ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusStyle} ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusShadow]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorder]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapBelizeParameters: () => (/* binding */ sapBelizeParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapBelizeParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorderRadius]: 0
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcb.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcb.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapBelizeHcbParameters: () => (/* binding */ sapBelizeHcbParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapBelizeHcbParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorder]: '0.0625rem solid #999',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorderRadius]: 0
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcw.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_belize_hcw.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapBelizeHcwParameters: () => (/* binding */ sapBelizeHcwParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapBelizeHcwParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorder]: '0.0625rem solid #585858',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ScrollbarBorderRadius]: 0
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapFiori3Parameters: () => (/* binding */ sapFiori3Parameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapFiori3Parameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_dark.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_dark.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapFiori3DarkParameters: () => (/* binding */ sapFiori3DarkParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapFiori3DarkParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `.0625rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcb.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcb.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapFioriHcbParameters: () => (/* binding */ sapFioriHcbParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapFioriHcbParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderStyle]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarOutline]: `0.15rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `none`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcw.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_fiori_3_hcw.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapFioriHcwParameters: () => (/* binding */ sapFioriHcwParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapFioriHcwParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetTopBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderStyle]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarOutline]: `0.15rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `none`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapHorizonParameters: () => (/* binding */ sapHorizonParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapHorizonParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBackground]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_Background,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPopover_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_Shadow2,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_TextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderBlock]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderInline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterCellBorder]: `1px solid transparent`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionBorderTop]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleHeight]: '2.75rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleLineHeight]: '4rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBackgroundColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBackground,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionPaddingBlockStart]: `0.5rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusOutline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusShadow]: `inset 0 0 0 0.125rem ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_dark.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_dark.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapHorizonDarkParameters: () => (/* binding */ sapHorizonDarkParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapHorizonDarkParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBackground]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_Background,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPopover_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_Shadow2,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_TextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderBlock]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderInline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterCellBorder]: `1px solid transparent`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleLineHeight]: '4rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleHeight]: '2.75rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionBorderTop]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBackgroundColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBackground,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionPaddingBlockStart]: `0.5rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusOutline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ToolbarFocusShadow]: `inset 0 0 0 0.125rem ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_FocusColor}`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcb.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcb.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapHorizonHcbParameters: () => (/* binding */ sapHorizonHcbParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapHorizonHcbParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleTextDecoration]: `underline ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_SelectionBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionBorderTop]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBackgroundColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBackground,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBackground]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_Background,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPopover_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_Shadow2,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_TextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderStyle]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarOutline]: `0.15rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderActiveTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_ContrastTextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderBorderWidth]: '0.188rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderInline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterCellBorder]: `1px solid transparent`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcw.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/themes/sap_horizon_hcw.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sapHorizonHcwParameters: () => (/* binding */ sapHorizonHcwParameters)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-react-base */ "./node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js");
/* harmony import */ var _CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomVariables.js */ "./node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js");


const sapHorizonHcwParameters = {
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionTitleTextDecoration]: `underline ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapList_SelectionBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSectionBorderTop]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBackgroundColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBackground,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ObjectPageSubSectionBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapElement_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_HeaderShadow,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBackground]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_Background,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBorderRadius]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPopover_BorderCornerRadius,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderBoxShadow]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_Shadow2,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.ActionSheetMobileHeaderTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapPageHeader_TextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterContentBorderColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderStyle]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarOutline]: `0.15rem dotted ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor}`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFocus]: `solid ${_ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapGroup_ContentBorderColor} 0.0625rem`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.SplitterBarBorderFix]: `none`,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderFontFamily]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapFontBoldFamily,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderActiveTextColor]: _ui5_webcomponents_react_base__WEBPACK_IMPORTED_MODULE_1__.ThemingParameters.sapContent_ContrastTextColor,
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableHeaderBorderWidth]: '0.188rem',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterBorderInline]: 'none',
  [_CustomVariables_js__WEBPACK_IMPORTED_MODULE_0__.CustomVariables.AnalyticalTableOuterCellBorder]: `1px solid transparent`
};

/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Bar/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/Bar/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Bar: () => (/* binding */ Bar)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_fiori_dist_Bar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-fiori/dist/Bar.js */ "./node_modules/@ui5/webcomponents-fiori/dist/Bar.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-fiori/dist/types/BarDesign.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The Bar is a container which is primarily used to hold titles, buttons and input elements and its design and functionality is the basis for page headers and footers. The component consists of three areas to hold its content - startContent slot, default slot and endContent slot. It has the capability to center content, such as a title, while having other components on the left and right side.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/fiori-Bar)
 */
const Bar = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-bar', ['design'], [], ['endContent', 'startContent'], []);
Bar.displayName = 'Bar';
Bar.defaultProps = {
  design: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].Header
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/BusyIndicator/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/BusyIndicator/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BusyIndicator: () => (/* binding */ BusyIndicator)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_BusyIndicator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/BusyIndicator.js */ "./node_modules/@ui5/webcomponents/dist/BusyIndicator.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `BusyIndicator` signals that some operation is going on and that the user must wait. It does not block the current UI screen so other operations could be triggered in parallel. It displays 3 dots and each dot expands and shrinks at a different rate, resulting in a cascading flow of animation.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-BusyIndicator)
 */
const BusyIndicator = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-busy-indicator', ['delay', 'size', 'text'], ['active'], [], []);
BusyIndicator.displayName = 'BusyIndicator';
BusyIndicator.defaultProps = {
  delay: 1000,
  size: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].Medium
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_Button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/Button.js */ "./node_modules/@ui5/webcomponents/dist/Button.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/ButtonType.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `Button` component represents a simple push button. It enables users to trigger actions by clicking or tapping the `Button`, or by pressing certain keyboard keys, such as Enter.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Button)
 */
const Button = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-button', ['accessibleName', 'accessibleNameRef', 'design', 'icon', 'tooltip', 'type'], ['disabled', 'iconEnd', 'submits'], [], ['click']);
Button.displayName = 'Button';
Button.defaultProps = {
  design: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].Default,
  type: _enums_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].Button
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Dialog/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/Dialog/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dialog: () => (/* binding */ Dialog)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_Dialog_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/Dialog.js */ "./node_modules/@ui5/webcomponents/dist/Dialog.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents-react/dist/enums/ValueState.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `Dialog` component is used to temporarily display some information in a size-limited window in front of the regular app screen. It is used to prompt the user for an action or a confirmation. The `Dialog` interrupts the current app processing as it is the only focused UI element and the main screen is dimmed/blocked. The dialog combines concepts known from other technologies where the windows have names such as dialog box, dialog window, pop-up, pop-up window, alert box, or message box.
 *
 * The `Dialog` is modal, which means that an user action is required before it is possible to return to the parent window. To open multiple dialogs, each dialog element should be separate in the markup. This will ensure the correct modal behavior. Avoid nesting dialogs within each other. The content of the `Dialog` is fully customizable.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Dialog)
 */
const Dialog = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-dialog', ['headerText', 'state', 'accessibleName', 'accessibleNameRef', 'accessibleRole', 'initialFocus'], ['draggable', 'resizable', 'stretch', 'open', 'preventFocusRestore'], ['footer', 'header'], ['after-close', 'after-open', 'before-close', 'before-open']);
Dialog.displayName = 'Dialog';
Dialog.defaultProps = {
  state: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__.ValueState.None,
  accessibleRole: _enums_index_js__WEBPACK_IMPORTED_MODULE_3__["default"].Dialog
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Icon/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/Icon/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Icon: () => (/* binding */ Icon)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_Icon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/Icon.js */ "./node_modules/@ui5/webcomponents/dist/Icon.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/IconDesign.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `Icon` component represents an SVG icon. There are two main scenarios how the `Icon` component is used: as a purely decorative element,
 * or as an interactive element that can be focused and clicked.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Icon)
 */
const Icon = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-icon', ['accessibleName', 'accessibleRole', 'design', 'name'], ['interactive', 'showTooltip'], [], []);
Icon.displayName = 'Icon';
Icon.defaultProps = {
  design: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].Default
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/MessageStrip/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/MessageStrip/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageStrip: () => (/* binding */ MessageStrip)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_MessageStrip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/MessageStrip.js */ "./node_modules/@ui5/webcomponents/dist/MessageStrip.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `MessageStrip` component enables the embedding of app-related messages. It displays 4 designs of messages, each with corresponding semantic color and icon: Information, Positive, Warning and Negative. Each message can have a Close button, so that it can be removed from the UI, if needed.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-MessageStrip)
 */
const MessageStrip = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-message-strip', ['design'], ['hideCloseButton', 'hideIcon'], ['icon'], ['close']);
MessageStrip.displayName = 'MessageStrip';
MessageStrip.defaultProps = {
  design: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].Information
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-react/dist/webComponents/Title/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-react/dist/webComponents/Title/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Title: () => (/* binding */ Title)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_dist_Title_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents/dist/Title.js */ "./node_modules/@ui5/webcomponents/dist/Title.js");
/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/index.js */ "./node_modules/@ui5/webcomponents/dist/types/TitleLevel.js");
/* harmony import */ var _internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/withWebComponent.js */ "./node_modules/@ui5/webcomponents-react/dist/internal/withWebComponent.js");
'use client';




/**
 * The `Title` component is used to display titles inside a page. It is a simple, large-sized text with explicit header/title semantics.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * [UI5 Web Components Storybook](https://sap.github.io/ui5-webcomponents/playground/?path=/docs/main-Title)
 */
const Title = (0,_internal_withWebComponent_js__WEBPACK_IMPORTED_MODULE_1__.withWebComponent)('ui5-title', ['level', 'wrappingType'], [], [], []);
Title.displayName = 'Title';
Title.defaultProps = {
  level: _enums_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].H2
};


/***/ }),

/***/ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = { packageName: "@ui5/webcomponents-theming", fileName: "themes/sap_horizon/parameters-bundle.css", content: ":root{--sapThemeMetaData-Base-baseLib:{\"Path\":\"Base.baseLib.sap_horizon.css_variables\",\"PathPattern\":\"/%frameworkId%/%libId%/%themeId%/%fileId%.css\",\"Extends\":[\"baseTheme\"],\"Tags\":[\"Fiori_3\",\"LightColorScheme\"],\"FallbackThemeId\":\"sap_fiori_3\",\"Engine\":{\"Name\":\"theming-engine\",\"Version\":\"1.23061.0\"},\"Version\":{ \"Build\":\"11.6.8.20230911071338\",\"Source\":\"11.6.8\"}};--sapBrandColor:#0070f2;--sapHighlightColor:#0064d9;--sapBaseColor:#fff;--sapShellColor:#fff;--sapBackgroundColor:#f5f6f7;--sapFontFamily:\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontSize:.875rem;--sapTextColor:#1d2d3e;--sapLinkColor:#0064d9;--sapCompanyLogo:none;--sapBackgroundImage:none;--sapBackgroundImageOpacity:1.0;--sapBackgroundImageRepeat:false;--sapSelectedColor:#0064d9;--sapHoverColor:#eaecee;--sapActiveColor:#dee2e5;--sapHighlightTextColor:#fff;--sapTitleColor:#1d2d3e;--sapNegativeColor:#aa0808;--sapCriticalColor:#e76500;--sapPositiveColor:#256f3a;--sapInformativeColor:#0070f2;--sapNeutralColor:#788fa6;--sapNegativeElementColor:#f53232;--sapCriticalElementColor:#e76500;--sapPositiveElementColor:#30914c;--sapInformativeElementColor:#0070f2;--sapNeutralElementColor:#788fa6;--sapNegativeTextColor:#aa0808;--sapCriticalTextColor:#b44f00;--sapPositiveTextColor:#256f3a;--sapInformativeTextColor:#0064d9;--sapNeutralTextColor:#1d2d3e;--sapErrorColor:#aa0808;--sapWarningColor:#e76500;--sapSuccessColor:#256f3a;--sapInformationColor:#0070f2;--sapErrorBackground:#ffeaf4;--sapWarningBackground:#fff8d6;--sapSuccessBackground:#f5fae5;--sapInformationBackground:#e1f4ff;--sapNeutralBackground:#eff1f2;--sapErrorBorderColor:#e90b0b;--sapWarningBorderColor:#dd6100;--sapSuccessBorderColor:#30914c;--sapInformationBorderColor:#0070f2;--sapNeutralBorderColor:#788fa6;--sapElement_LineHeight:2.75rem;--sapElement_Height:2.25rem;--sapElement_BorderWidth:.0625rem;--sapElement_BorderCornerRadius:.75rem;--sapElement_Compact_LineHeight:2rem;--sapElement_Compact_Height:1.625rem;--sapElement_Condensed_LineHeight:1.5rem;--sapElement_Condensed_Height:1.375rem;--sapContent_LineHeight:1.5;--sapContent_IconHeight:1rem;--sapContent_IconColor:#1d2d3e;--sapContent_ContrastIconColor:#fff;--sapContent_NonInteractiveIconColor:#758ca4;--sapContent_MarkerIconColor:#5d36ff;--sapContent_MarkerTextColor:#046c7a;--sapContent_MeasureIndicatorColor:#556b81;--sapContent_Selected_MeasureIndicatorColor:#0064d9;--sapContent_Placeholderloading_Background:#ccc;--sapContent_Placeholderloading_Gradient:linear-gradient(90deg,#ccc 0%,#ccc 20%,#999 50%,#ccc 80%,#ccc);--sapContent_ImagePlaceholderBackground:#eaecee;--sapContent_ImagePlaceholderForegroundColor:#5b738b;--sapContent_RatedColor:#d27700;--sapContent_UnratedColor:#758ca4;--sapContent_BusyColor:#0064d9;--sapContent_FocusColor:#0032a5;--sapContent_FocusStyle:solid;--sapContent_FocusWidth:.125rem;--sapContent_ContrastFocusColor:#fff;--sapContent_ShadowColor:#223548;--sapContent_ContrastShadowColor:#fff;--sapContent_Shadow0:0 0 0.125rem 0 rgba(34,53,72,.2),0 0.125rem 0.25rem 0 rgba(34,53,72,.2);--sapContent_Shadow1:0 0 0 0.0625rem rgba(34,53,72,.48),0 0.125rem 0.5rem 0 rgba(34,53,72,.3);--sapContent_Shadow2:0 0 0 0.0625rem rgba(34,53,72,.48),0 0.625rem 1.875rem 0 rgba(34,53,72,.25);--sapContent_Shadow3:0 0 0 0.0625rem rgba(34,53,72,.48),0 1.25rem 5rem 0 rgba(34,53,72,.25);--sapContent_TextShadow:0 0 0.125rem #fff;--sapContent_ContrastTextShadow:0 0 0.0625rem rgba(0,0,0,.7);--sapContent_HeaderShadow:0 0.125rem 0.125rem 0 rgba(34,53,72,.05),inset 0 -0.0625rem 0 0 #d9d9d9;--sapContent_Interaction_Shadow:inset 0 0 0 0.0625rem rgba(85,107,129,.25);--sapContent_Selected_Shadow:inset 0 0 0 0.0625rem rgba(79,160,255,.5);--sapContent_Negative_Shadow:inset 0 0 0 0.0625rem rgba(255,142,196,.45);--sapContent_Critical_Shadow:inset 0 0 0 0.0625rem rgba(255,213,10,.4);--sapContent_Positive_Shadow:inset 0 0 0 0.0625rem rgba(48,145,76,.18);--sapContent_Informative_Shadow:inset 0 0 0 0.0625rem rgba(104,174,255,.5);--sapContent_Neutral_Shadow:inset 0 0 0 0.0625rem rgba(120,143,166,.3);--sapContent_SearchHighlightColor:#dafdf5;--sapContent_HelpColor:#188918;--sapContent_LabelColor:#556b82;--sapContent_MonospaceFontFamily:\"72Mono\",\"72Monofull\",lucida console,monospace;--sapContent_MonospaceBoldFontFamily:\"72Mono-Bold\",\"72Mono-Boldfull\",lucida console,monospace;--sapContent_IconFontFamily:\"SAP-icons\";--sapContent_DisabledTextColor:rgba(29,45,62,.6);--sapContent_DisabledOpacity:0.4;--sapContent_ContrastTextThreshold:0.65;--sapContent_ContrastTextColor:#fff;--sapContent_ForegroundColor:#efefef;--sapContent_ForegroundBorderColor:#758ca4;--sapContent_ForegroundTextColor:#1d2d3e;--sapContent_BadgeBackground:#aa0808;--sapContent_BadgeTextColor:#fff;--sapContent_DragAndDropActiveColor:#0064d9;--sapContent_Selected_TextColor:#0064d9;--sapContent_Selected_Background:#fff;--sapContent_Selected_Hover_Background:#e3f0ff;--sapContent_Selected_ForegroundColor:#0064d9;--sapContent_ForcedColorAdjust:none;--sapContent_Illustrative_Color1:#5d36ff;--sapContent_Illustrative_Color2:#0070f2;--sapContent_Illustrative_Color3:#f58b00;--sapContent_Illustrative_Color4:#00144a;--sapContent_Illustrative_Color5:#a9b4be;--sapContent_Illustrative_Color6:#d5dadd;--sapContent_Illustrative_Color7:#ebf8ff;--sapContent_Illustrative_Color8:#fff;--sapContent_Illustrative_Color9:#64edd2;--sapContent_Illustrative_Color10:#ebf8ff;--sapContent_Illustrative_Color11:#f31ded;--sapContent_Illustrative_Color12:#00a800;--sapContent_Illustrative_Color13:#005dc9;--sapContent_Illustrative_Color14:#004da5;--sapContent_Illustrative_Color15:#cc7400;--sapContent_Illustrative_Color16:#3b0ac6;--sapContent_Illustrative_Color17:#00a58a;--sapContent_Illustrative_Color18:#d1efff;--sapContent_Illustrative_Color19:#b8e6ff;--sapContent_Illustrative_Color20:#9eddff;--sapFontLightFamily:\"72-Light\",\"72-Lightfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontBoldFamily:\"72-Bold\",\"72-Boldfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontSemiboldFamily:\"72-Semibold\",\"72-Semiboldfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontSemiboldDuplexFamily:\"72-SemiboldDuplex\",\"72-SemiboldDuplexfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontBlackFamily:\"72Black\",\"72Blackfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontHeaderFamily:\"72-Bold\",\"72-Boldfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontSmallSize:.75rem;--sapFontLargeSize:1rem;--sapFontHeader1Size:3rem;--sapFontHeader2Size:2rem;--sapFontHeader3Size:1.5rem;--sapFontHeader4Size:1.25rem;--sapFontHeader5Size:1rem;--sapFontHeader6Size:.875rem;--sapLink_TextDecoration:none;--sapLink_Hover_Color:#0064d9;--sapLink_Hover_TextDecoration:underline;--sapLink_Active_Color:#0064d9;--sapLink_Active_TextDecoration:none;--sapLink_Visited_Color:#0064d9;--sapLink_InvertedColor:#a6cfff;--sapLink_SubtleColor:#1d2d3e;--sapShell_Background:#eff1f2;--sapShell_BackgroundImage:linear-gradient(180deg,#eff1f2,#eff1f2);--sapShell_BackgroundImageOpacity:1.0;--sapShell_BackgroundImageRepeat:false;--sapShell_BorderColor:#fff;--sapShell_TextColor:#1d2d3e;--sapShell_InteractiveBackground:#eff1f2;--sapShell_InteractiveTextColor:#1d2d3e;--sapShell_InteractiveBorderColor:#556b81;--sapShell_GroupTitleTextColor:#1d2d3e;--sapShell_GroupTitleTextShadow:0 0 0.125rem #fff;--sapShell_Hover_Background:#fff;--sapShell_Active_Background:#fff;--sapShell_Active_TextColor:#0070f2;--sapShell_Selected_Background:#fff;--sapShell_Selected_TextColor:#0070f2;--sapShell_Selected_Hover_Background:#fff;--sapShell_Favicon:none;--sapShell_Navigation_Background:#fff;--sapShell_Navigation_Hover_Background:#fff;--sapShell_Navigation_SelectedColor:#0064d9;--sapShell_Navigation_Selected_TextColor:#0064d9;--sapShell_Navigation_TextColor:#1d2d3e;--sapShell_Navigation_Active_TextColor:#0064d9;--sapShell_Navigation_Active_Background:#fff;--sapShell_Shadow:0 0.125rem 0.125rem 0 rgba(34,53,72,.15),inset 0 -0.0625rem 0 0 rgba(34,53,72,.2);--sapShell_NegativeColor:#aa0808;--sapShell_CriticalColor:#b44f00;--sapShell_PositiveColor:#256f3a;--sapShell_InformativeColor:#0064d9;--sapShell_NeutralColor:#1d2d3e;--sapShell_Category_1_Background:#0057d2;--sapShell_Category_1_BorderColor:#0057d2;--sapShell_Category_1_TextColor:#fff;--sapShell_Category_1_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_2_Background:#df1278;--sapShell_Category_2_BorderColor:#df1278;--sapShell_Category_2_TextColor:#fff;--sapShell_Category_2_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_3_Background:#e76500;--sapShell_Category_3_BorderColor:#e76500;--sapShell_Category_3_TextColor:#fff;--sapShell_Category_3_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_4_Background:#7800a4;--sapShell_Category_4_BorderColor:#7800a4;--sapShell_Category_4_TextColor:#fff;--sapShell_Category_4_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_5_Background:#aa2608;--sapShell_Category_5_BorderColor:#aa2608;--sapShell_Category_5_TextColor:#fff;--sapShell_Category_5_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_6_Background:#07838f;--sapShell_Category_6_BorderColor:#07838f;--sapShell_Category_6_TextColor:#fff;--sapShell_Category_6_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_7_Background:#f31ded;--sapShell_Category_7_BorderColor:#f31ded;--sapShell_Category_7_TextColor:#fff;--sapShell_Category_7_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_8_Background:#188918;--sapShell_Category_8_BorderColor:#188918;--sapShell_Category_8_TextColor:#fff;--sapShell_Category_8_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_9_Background:#002a86;--sapShell_Category_9_BorderColor:#002a86;--sapShell_Category_9_TextColor:#fff;--sapShell_Category_9_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_10_Background:#5b738b;--sapShell_Category_10_BorderColor:#5b738b;--sapShell_Category_10_TextColor:#fff;--sapShell_Category_10_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_11_Background:#d20a0a;--sapShell_Category_11_BorderColor:#d20a0a;--sapShell_Category_11_TextColor:#fff;--sapShell_Category_11_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_12_Background:#7858ff;--sapShell_Category_12_BorderColor:#7858ff;--sapShell_Category_12_TextColor:#fff;--sapShell_Category_12_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_13_Background:#a00875;--sapShell_Category_13_BorderColor:#a00875;--sapShell_Category_13_TextColor:#fff;--sapShell_Category_13_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_14_Background:#14565b;--sapShell_Category_14_BorderColor:#14565b;--sapShell_Category_14_TextColor:#fff;--sapShell_Category_14_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_15_Background:#223548;--sapShell_Category_15_BorderColor:#223548;--sapShell_Category_15_TextColor:#fff;--sapShell_Category_15_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_16_Background:#1e592f;--sapShell_Category_16_BorderColor:#1e592f;--sapShell_Category_16_TextColor:#fff;--sapShell_Category_16_TextShadow:0 0 .0625rem rgba(0,0,0,.7);--sapAvatar_1_Background:#fff3b8;--sapAvatar_1_BorderColor:#fff3b8;--sapAvatar_1_TextColor:#a45d00;--sapAvatar_2_Background:#ffd0e7;--sapAvatar_2_BorderColor:#ffd0e7;--sapAvatar_2_TextColor:#aa0808;--sapAvatar_3_Background:#ffdbe7;--sapAvatar_3_BorderColor:#ffdbe7;--sapAvatar_3_TextColor:#ba066c;--sapAvatar_4_Background:#ffdcf3;--sapAvatar_4_BorderColor:#ffdcf3;--sapAvatar_4_TextColor:#a100c2;--sapAvatar_5_Background:#ded3ff;--sapAvatar_5_BorderColor:#ded3ff;--sapAvatar_5_TextColor:#552cff;--sapAvatar_6_Background:#d1efff;--sapAvatar_6_BorderColor:#d1efff;--sapAvatar_6_TextColor:#0057d2;--sapAvatar_7_Background:#c2fcee;--sapAvatar_7_BorderColor:#c2fcee;--sapAvatar_7_TextColor:#046c7a;--sapAvatar_8_Background:#ebf5cb;--sapAvatar_8_BorderColor:#ebf5cb;--sapAvatar_8_TextColor:#256f3a;--sapAvatar_9_Background:#ddccf0;--sapAvatar_9_BorderColor:#ddccf0;--sapAvatar_9_TextColor:#6c32a9;--sapAvatar_10_Background:#eaecee;--sapAvatar_10_BorderColor:#eaecee;--sapAvatar_10_TextColor:#556b82;--sapButton_Background:#fff;--sapButton_BorderColor:#bcc3ca;--sapButton_BorderWidth:.0625rem;--sapButton_BorderCornerRadius:.5rem;--sapButton_TextColor:#0064d9;--sapButton_Hover_Background:#eaecee;--sapButton_Hover_BorderColor:#bcc3ca;--sapButton_Hover_TextColor:#0064d9;--sapButton_IconColor:#0064d9;--sapButton_Active_Background:#fff;--sapButton_Active_BorderColor:#0064d9;--sapButton_Active_TextColor:#0064d9;--sapButton_Emphasized_Background:#0070f2;--sapButton_Emphasized_BorderColor:#0070f2;--sapButton_Emphasized_TextColor:#fff;--sapButton_Emphasized_Hover_Background:#0064d9;--sapButton_Emphasized_Hover_BorderColor:#0064d9;--sapButton_Emphasized_Hover_TextColor:#fff;--sapButton_Emphasized_Active_Background:#fff;--sapButton_Emphasized_Active_BorderColor:#0064d9;--sapButton_Emphasized_Active_TextColor:#0064d9;--sapButton_Emphasized_TextShadow:transparent;--sapButton_Emphasized_FontWeight:bold;--sapButton_Reject_Background:#ffd6e9;--sapButton_Reject_BorderColor:#ffc2de;--sapButton_Reject_TextColor:#aa0808;--sapButton_Reject_Hover_Background:#ffbddb;--sapButton_Reject_Hover_BorderColor:#ffbddb;--sapButton_Reject_Hover_TextColor:#aa0808;--sapButton_Reject_Active_Background:#fff;--sapButton_Reject_Active_BorderColor:#e90b0b;--sapButton_Reject_Active_TextColor:#aa0808;--sapButton_Reject_Selected_Background:#fff;--sapButton_Reject_Selected_BorderColor:#e90b0b;--sapButton_Reject_Selected_TextColor:#aa0808;--sapButton_Reject_Selected_Hover_Background:#ffbddb;--sapButton_Reject_Selected_Hover_BorderColor:#e90b0b;--sapButton_Accept_Background:#ebf5cb;--sapButton_Accept_BorderColor:#dbeda0;--sapButton_Accept_TextColor:#256f3a;--sapButton_Accept_Hover_Background:#e3f1b6;--sapButton_Accept_Hover_BorderColor:#e3f1b6;--sapButton_Accept_Hover_TextColor:#256f3a;--sapButton_Accept_Active_Background:#fff;--sapButton_Accept_Active_BorderColor:#30914c;--sapButton_Accept_Active_TextColor:#256f3a;--sapButton_Accept_Selected_Background:#fff;--sapButton_Accept_Selected_BorderColor:#30914c;--sapButton_Accept_Selected_TextColor:#256f3a;--sapButton_Accept_Selected_Hover_Background:#e3f1b6;--sapButton_Accept_Selected_Hover_BorderColor:#30914c;--sapButton_Lite_Background:transparent;--sapButton_Lite_BorderColor:transparent;--sapButton_Lite_TextColor:#0064d9;--sapButton_Lite_Hover_Background:#eaecee;--sapButton_Lite_Hover_BorderColor:#bcc3ca;--sapButton_Lite_Hover_TextColor:#0064d9;--sapButton_Lite_Active_Background:#fff;--sapButton_Lite_Active_BorderColor:#0064d9;--sapButton_Selected_Background:#fff;--sapButton_Selected_BorderColor:#0064d9;--sapButton_Selected_TextColor:#0064d9;--sapButton_Selected_Hover_Background:#e3f0ff;--sapButton_Selected_Hover_BorderColor:#0064d9;--sapButton_Attention_Background:#fff3b7;--sapButton_Attention_BorderColor:#ffeb84;--sapButton_Attention_TextColor:#b44f00;--sapButton_Attention_Hover_Background:#ffef9e;--sapButton_Attention_Hover_BorderColor:#ffef9e;--sapButton_Attention_Hover_TextColor:#b44f00;--sapButton_Attention_Active_Background:#fff;--sapButton_Attention_Active_BorderColor:#dd6100;--sapButton_Attention_Active_TextColor:#b44f00;--sapButton_Attention_Selected_Background:#fff;--sapButton_Attention_Selected_BorderColor:#dd6100;--sapButton_Attention_Selected_TextColor:#b44f00;--sapButton_Attention_Selected_Hover_Background:#ffef9e;--sapButton_Attention_Selected_Hover_BorderColor:#dd6100;--sapButton_Negative_Background:#f53232;--sapButton_Negative_BorderColor:#f53232;--sapButton_Negative_TextColor:#fff;--sapButton_Negative_Hover_Background:#e90b0b;--sapButton_Negative_Hover_BorderColor:#e90b0b;--sapButton_Negative_Hover_TextColor:#fff;--sapButton_Negative_Active_Background:#fff;--sapButton_Negative_Active_BorderColor:#f53232;--sapButton_Negative_Active_TextColor:#aa0808;--sapButton_Critical_Background:#e76500;--sapButton_Critical_BorderColor:#e76500;--sapButton_Critical_TextColor:#fff;--sapButton_Critical_Hover_Background:#dd6100;--sapButton_Critical_Hover_BorderColor:#dd6100;--sapButton_Critical_Hover_TextColor:#fff;--sapButton_Critical_Active_Background:#fff;--sapButton_Critical_Active_BorderColor:#dd6100;--sapButton_Critical_Active_TextColor:#b44f00;--sapButton_Success_Background:#30914c;--sapButton_Success_BorderColor:#30914c;--sapButton_Success_TextColor:#fff;--sapButton_Success_Hover_Background:#2c8646;--sapButton_Success_Hover_BorderColor:#2c8646;--sapButton_Success_Hover_TextColor:#fff;--sapButton_Success_Active_Background:#fff;--sapButton_Success_Active_BorderColor:#30914c;--sapButton_Success_Active_TextColor:#256f3a;--sapButton_Information_Background:#e8f3ff;--sapButton_Information_BorderColor:#b5d8ff;--sapButton_Information_TextColor:#0064d9;--sapButton_Information_Hover_Background:#d4e8ff;--sapButton_Information_Hover_BorderColor:#b5d8ff;--sapButton_Information_Hover_TextColor:#0064d9;--sapButton_Information_Active_Background:#fff;--sapButton_Information_Active_BorderColor:#0064d9;--sapButton_Information_Active_TextColor:#0064d9;--sapButton_Neutral_Background:#e8f3ff;--sapButton_Neutral_BorderColor:#b5d8ff;--sapButton_Neutral_TextColor:#0064d9;--sapButton_Neutral_Hover_Background:#d4e8ff;--sapButton_Neutral_Hover_BorderColor:#b5d8ff;--sapButton_Neutral_Hover_TextColor:#0064d9;--sapButton_Neutral_Active_Background:#fff;--sapButton_Neutral_Active_BorderColor:#0064d9;--sapButton_Neutral_Active_TextColor:#0064d9;--sapButton_Track_Background:#788fa6;--sapButton_Track_BorderColor:#788fa6;--sapButton_Track_TextColor:#fff;--sapButton_Track_Hover_Background:#637d97;--sapButton_Track_Hover_BorderColor:#637d97;--sapButton_Track_Selected_Background:#0064d9;--sapButton_Track_Selected_BorderColor:#0064d9;--sapButton_Track_Selected_TextColor:#fff;--sapButton_Track_Selected_Hover_Background:#0058c0;--sapButton_Track_Selected_Hover_BorderColor:#0058c0;--sapButton_Handle_Background:#fff;--sapButton_Handle_BorderColor:#fff;--sapButton_Handle_TextColor:#1d2d3e;--sapButton_Handle_Hover_Background:#fff;--sapButton_Handle_Hover_BorderColor:hsla(0,0%,100%,.5);--sapButton_Handle_Selected_Background:#fff;--sapButton_Handle_Selected_BorderColor:#fff;--sapButton_Handle_Selected_TextColor:#0064d9;--sapButton_Handle_Selected_Hover_Background:#fff;--sapButton_Handle_Selected_Hover_BorderColor:hsla(0,0%,100%,.5);--sapButton_Track_Negative_Background:#f53232;--sapButton_Track_Negative_BorderColor:#f53232;--sapButton_Track_Negative_TextColor:#fff;--sapButton_Track_Negative_Hover_Background:#e90b0b;--sapButton_Track_Negative_Hover_BorderColor:#e90b0b;--sapButton_Handle_Negative_Background:#fff;--sapButton_Handle_Negative_BorderColor:#fff;--sapButton_Handle_Negative_TextColor:#aa0808;--sapButton_Handle_Negative_Hover_Background:#fff;--sapButton_Handle_Negative_Hover_BorderColor:hsla(0,0%,100%,.5);--sapButton_Track_Positive_Background:#30914c;--sapButton_Track_Positive_BorderColor:#30914c;--sapButton_Track_Positive_TextColor:#fff;--sapButton_Track_Positive_Hover_Background:#2c8646;--sapButton_Track_Positive_Hover_BorderColor:#2c8646;--sapButton_Handle_Positive_Background:#fff;--sapButton_Handle_Positive_BorderColor:#fff;--sapButton_Handle_Positive_TextColor:#256f3a;--sapButton_Handle_Positive_Hover_Background:#fff;--sapButton_Handle_Positive_Hover_BorderColor:hsla(0,0%,100%,.5);--sapButton_TokenBackground:#fff;--sapButton_TokenBorderColor:#bcc3ca;--sapField_Background:#fff;--sapField_BackgroundStyle:0 100%/100% .0625rem no-repeat linear-gradient(0deg,#556b81,#556b81) border-box;--sapField_TextColor:#131e29;--sapField_PlaceholderTextColor:#556b82;--sapField_BorderColor:#556b81;--sapField_HelpBackground:#fff;--sapField_BorderWidth:.0625rem;--sapField_BorderStyle:none;--sapField_BorderCornerRadius:.25rem;--sapField_Shadow:inset 0 0 0 0.0625rem rgba(85,107,129,.25);--sapField_Hover_Background:#fff;--sapField_Hover_BackgroundStyle:0 100%/100% .0625rem no-repeat linear-gradient(0deg,#0064d9,#0064d9) border-box;--sapField_Hover_BorderColor:#0064d9;--sapField_Hover_HelpBackground:#fff;--sapField_Hover_Shadow:inset 0 0 0 0.0625rem rgba(79,160,255,.5);--sapField_Hover_InvalidShadow:inset 0 0 0 0.0625rem rgba(255,142,196,.45);--sapField_Hover_WarningShadow:inset 0 0 0 0.0625rem rgba(255,213,10,.4);--sapField_Hover_SuccessShadow:inset 0 0 0 0.0625rem rgba(48,145,76,.18);--sapField_Hover_InformationShadow:inset 0 0 0 0.0625rem rgba(104,174,255,.5);--sapField_Active_BorderColor:#0064d9;--sapField_Focus_Background:#fff;--sapField_Focus_BorderColor:#0032a5;--sapField_Focus_HelpBackground:#fff;--sapField_ReadOnly_Background:#eaecee;--sapField_ReadOnly_BackgroundStyle:0 100%/0.375rem .0625rem repeat-x linear-gradient(90deg,#556b81,#556b81 0.25rem,transparent 0) border-box;--sapField_ReadOnly_BorderColor:#556b81;--sapField_ReadOnly_BorderStyle:none;--sapField_ReadOnly_HelpBackground:#eaecee;--sapField_RequiredColor:#ba066c;--sapField_InvalidColor:#e90b0b;--sapField_InvalidBackground:#ffeaf4;--sapField_InvalidBackgroundStyle:0 100%/100% .125rem no-repeat linear-gradient(0deg,#e90b0b,#e90b0b) border-box;--sapField_InvalidBorderWidth:.125rem;--sapField_InvalidBorderStyle:none;--sapField_InvalidShadow:inset 0 0 0 0.0625rem rgba(255,142,196,.45);--sapField_WarningColor:#dd6100;--sapField_WarningBackground:#fff8d6;--sapField_WarningBackgroundStyle:0 100%/100% .125rem no-repeat linear-gradient(0deg,#dd6100,#dd6100) border-box;--sapField_WarningBorderWidth:.125rem;--sapField_WarningBorderStyle:none;--sapField_WarningShadow:inset 0 0 0 0.0625rem rgba(255,213,10,.4);--sapField_SuccessColor:#30914c;--sapField_SuccessBackground:#f5fae5;--sapField_SuccessBackgroundStyle:0 100%/100% .0625rem no-repeat linear-gradient(0deg,#30914c,#30914c) border-box;--sapField_SuccessBorderWidth:.0625rem;--sapField_SuccessBorderStyle:none;--sapField_SuccessShadow:inset 0 0 0 0.0625rem rgba(48,145,76,.18);--sapField_InformationColor:#0070f2;--sapField_InformationBackground:#e1f4ff;--sapField_InformationBackgroundStyle:0 100%/100% .125rem no-repeat linear-gradient(0deg,#0070f2,#0070f2) border-box;--sapField_InformationBorderWidth:.125rem;--sapField_InformationBorderStyle:none;--sapField_InformationShadow:inset 0 0 0 0.0625rem rgba(104,174,255,.5);--sapGroup_TitleBackground:#fff;--sapGroup_TitleBorderColor:#a8b2bd;--sapGroup_TitleTextColor:#1d2d3e;--sapGroup_Title_FontSize:1rem;--sapGroup_ContentBackground:#fff;--sapGroup_ContentBorderColor:#d9d9d9;--sapGroup_BorderWidth:.0625rem;--sapGroup_BorderCornerRadius:.5rem;--sapGroup_FooterBackground:transparent;--sapToolbar_Background:#fff;--sapToolbar_SeparatorColor:#d9d9d9;--sapList_HeaderBackground:#fff;--sapList_HeaderBorderColor:#a8b2bd;--sapList_HeaderTextColor:#1d2d3e;--sapList_BorderColor:#e5e5e5;--sapList_BorderWidth:.0625rem;--sapList_TextColor:#1d2d3e;--sapList_Active_TextColor:#1d2d3e;--sapList_Active_Background:#dee2e5;--sapList_SelectionBackgroundColor:#ebf8ff;--sapList_SelectionBorderColor:#0064d9;--sapList_Hover_SelectionBackground:#dcf3ff;--sapList_Background:#fff;--sapList_Hover_Background:#eaecee;--sapList_AlternatingBackground:#f5f6f7;--sapList_GroupHeaderBackground:#fff;--sapList_GroupHeaderBorderColor:#a8b2bd;--sapList_GroupHeaderTextColor:#1d2d3e;--sapList_TableGroupHeaderBackground:#eff1f2;--sapList_TableGroupHeaderBorderColor:#a8b2bd;--sapList_TableGroupHeaderTextColor:#1d2d3e;--sapList_FooterBackground:#fff;--sapList_FooterTextColor:#1d2d3e;--sapList_TableFooterBorder:#a8b2bd;--sapList_TableFixedBorderColor:#8c8c8c;--sapMessage_ErrorBorderColor:#ff8ec4;--sapMessage_WarningBorderColor:#ffe770;--sapMessage_SuccessBorderColor:#cee67e;--sapMessage_InformationBorderColor:#7bcfff;--sapPopover_BorderCornerRadius:.5rem;--sapProgress_Background:#d5dadd;--sapProgress_BorderColor:#d5dadd;--sapProgress_TextColor:#1d2d3e;--sapProgress_FontSize:.875rem;--sapProgress_NegativeBackground:#ffdbec;--sapProgress_NegativeBorderColor:#ffdbec;--sapProgress_NegativeTextColor:#1d2d3e;--sapProgress_CriticalBackground:#fff4bd;--sapProgress_CriticalBorderColor:#fff4bd;--sapProgress_CriticalTextColor:#1d2d3e;--sapProgress_PositiveBackground:#e5f2ba;--sapProgress_PositiveBorderColor:#e5f2ba;--sapProgress_PositiveTextColor:#1d2d3e;--sapProgress_InformationBackground:#cdedff;--sapProgress_InformationBorderColor:#cdedff;--sapProgress_InformationTextColor:#1d2d3e;--sapProgress_Value_Background:#788fa6;--sapProgress_Value_BorderColor:#788fa6;--sapProgress_Value_TextColor:#788fa6;--sapProgress_Value_NegativeBackground:#f53232;--sapProgress_Value_NegativeBorderColor:#f53232;--sapProgress_Value_NegativeTextColor:#f53232;--sapProgress_Value_CriticalBackground:#e76500;--sapProgress_Value_CriticalBorderColor:#e76500;--sapProgress_Value_CriticalTextColor:#e76500;--sapProgress_Value_PositiveBackground:#30914c;--sapProgress_Value_PositiveBorderColor:#30914c;--sapProgress_Value_PositiveTextColor:#30914c;--sapProgress_Value_InformationBackground:#0070f2;--sapProgress_Value_InformationBorderColor:#0070f2;--sapProgress_Value_InformationTextColor:#0070f2;--sapScrollBar_FaceColor:#7b91a8;--sapScrollBar_TrackColor:#fff;--sapScrollBar_BorderColor:#7b91a8;--sapScrollBar_SymbolColor:#0064d9;--sapScrollBar_Dimension:.75rem;--sapScrollBar_Hover_FaceColor:#5b728b;--sapSlider_Background:#d5dadd;--sapSlider_BorderColor:#d5dadd;--sapSlider_Selected_Background:#0064d9;--sapSlider_Selected_BorderColor:#0064d9;--sapSlider_HandleBackground:#fff;--sapSlider_HandleBorderColor:#b0d5ff;--sapSlider_RangeHandleBackground:#fff;--sapSlider_Hover_HandleBackground:#e3f0ff;--sapSlider_Hover_HandleBorderColor:#b0d5ff;--sapSlider_Hover_RangeHandleBackground:#e3f0ff;--sapSlider_Active_HandleBackground:#fff;--sapSlider_Active_HandleBorderColor:#0064d9;--sapSlider_Active_RangeHandleBackground:transparent;--sapPageHeader_Background:#fff;--sapPageHeader_BorderColor:#d9d9d9;--sapPageHeader_TextColor:#1d2d3e;--sapPageFooter_Background:#fff;--sapPageFooter_BorderColor:#d9d9d9;--sapPageFooter_TextColor:#1d2d3e;--sapInfobar_Background:#c2fcee;--sapInfobar_Hover_Background:#fff;--sapInfobar_Active_Background:#fff;--sapInfobar_NonInteractive_Background:#f5f6f7;--sapInfobar_TextColor:#046c7a;--sapObjectHeader_Background:#fff;--sapObjectHeader_Hover_Background:#eaecee;--sapObjectHeader_BorderColor:#d9d9d9;--sapObjectHeader_Title_TextColor:#1d2d3e;--sapObjectHeader_Title_FontSize:1.5rem;--sapObjectHeader_Title_SnappedFontSize:1.25rem;--sapObjectHeader_Title_FontFamily:\"72Black\",\"72Blackfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapObjectHeader_Subtitle_TextColor:#556b82;--sapBlockLayer_Background:#000;--sapTile_Background:#fff;--sapTile_Hover_Background:#eaecee;--sapTile_Active_Background:#dee2e5;--sapTile_BorderColor:transparent;--sapTile_BorderCornerRadius:1rem;--sapTile_TitleTextColor:#1d2d3e;--sapTile_TextColor:#556b82;--sapTile_IconColor:#556b82;--sapTile_SeparatorColor:#ccc;--sapTile_Interactive_BorderColor:#b3b3b3;--sapTile_OverlayBackground:#fff;--sapTile_OverlayForegroundColor:#1d2d3e;--sapAccentColor1:#d27700;--sapAccentColor2:#aa0808;--sapAccentColor3:#ba066c;--sapAccentColor4:#a100c2;--sapAccentColor5:#5d36ff;--sapAccentColor6:#0057d2;--sapAccentColor7:#046c7a;--sapAccentColor8:#256f3a;--sapAccentColor9:#6c32a9;--sapAccentColor10:#5b738b;--sapAccentBackgroundColor1:#fff3b8;--sapAccentBackgroundColor2:#ffd0e7;--sapAccentBackgroundColor3:#ffdbe7;--sapAccentBackgroundColor4:#ffdcf3;--sapAccentBackgroundColor5:#ded3ff;--sapAccentBackgroundColor6:#d1efff;--sapAccentBackgroundColor7:#c2fcee;--sapAccentBackgroundColor8:#ebf5cb;--sapAccentBackgroundColor9:#ddccf0;--sapAccentBackgroundColor10:#eaecee;--sapIndicationColor_1:#840606;--sapIndicationColor_1_Background:#840606;--sapIndicationColor_1_BorderColor:#840606;--sapIndicationColor_1_TextColor:#fff;--sapIndicationColor_1_Hover_Background:#6c0505;--sapIndicationColor_1_Active_Background:#fff;--sapIndicationColor_1_Active_BorderColor:#fb9d9d;--sapIndicationColor_1_Active_TextColor:#840606;--sapIndicationColor_1_Selected_Background:#fff;--sapIndicationColor_1_Selected_BorderColor:#fb9d9d;--sapIndicationColor_1_Selected_TextColor:#840606;--sapIndicationColor_1b:#fb9d9d;--sapIndicationColor_1b_BorderColor:#fb9d9d;--sapIndicationColor_1b_Hover_Background:#fa8585;--sapIndicationColor_2:#aa0808;--sapIndicationColor_2_Background:#aa0808;--sapIndicationColor_2_BorderColor:#aa0808;--sapIndicationColor_2_TextColor:#fff;--sapIndicationColor_2_Hover_Background:#920707;--sapIndicationColor_2_Active_Background:#fff;--sapIndicationColor_2_Active_BorderColor:#fcc4c4;--sapIndicationColor_2_Active_TextColor:#aa0808;--sapIndicationColor_2_Selected_Background:#fff;--sapIndicationColor_2_Selected_BorderColor:#fcc4c4;--sapIndicationColor_2_Selected_TextColor:#aa0808;--sapIndicationColor_2b:#fcc4c4;--sapIndicationColor_2b_BorderColor:#fcc4c4;--sapIndicationColor_2b_Hover_Background:#fbacac;--sapIndicationColor_3:#b95100;--sapIndicationColor_3_Background:#e76500;--sapIndicationColor_3_BorderColor:#e76500;--sapIndicationColor_3_TextColor:#fff;--sapIndicationColor_3_Hover_Background:#d85e00;--sapIndicationColor_3_Active_Background:#fff;--sapIndicationColor_3_Active_BorderColor:#fff2c0;--sapIndicationColor_3_Active_TextColor:#b95100;--sapIndicationColor_3_Selected_Background:#fff;--sapIndicationColor_3_Selected_BorderColor:#fff2c0;--sapIndicationColor_3_Selected_TextColor:#b95100;--sapIndicationColor_3b:#fff2c0;--sapIndicationColor_3b_BorderColor:#fff2c0;--sapIndicationColor_3b_Hover_Background:#ffeda6;--sapIndicationColor_4:#256f3a;--sapIndicationColor_4_Background:#256f3a;--sapIndicationColor_4_BorderColor:#256f3a;--sapIndicationColor_4_TextColor:#fff;--sapIndicationColor_4_Hover_Background:#1f5c30;--sapIndicationColor_4_Active_Background:#fff;--sapIndicationColor_4_Active_BorderColor:#bae8bc;--sapIndicationColor_4_Active_TextColor:#256f3a;--sapIndicationColor_4_Selected_Background:#fff;--sapIndicationColor_4_Selected_BorderColor:#bae8bc;--sapIndicationColor_4_Selected_TextColor:#256f3a;--sapIndicationColor_4b:#bae8bc;--sapIndicationColor_4b_BorderColor:#bae8bc;--sapIndicationColor_4b_Hover_Background:#a7e2a9;--sapIndicationColor_5:#0070f2;--sapIndicationColor_5_Background:#0070f2;--sapIndicationColor_5_BorderColor:#0070f2;--sapIndicationColor_5_TextColor:#fff;--sapIndicationColor_5_Hover_Background:#0064d9;--sapIndicationColor_5_Active_Background:#fff;--sapIndicationColor_5_Active_BorderColor:#d3effd;--sapIndicationColor_5_Active_TextColor:#0070f2;--sapIndicationColor_5_Selected_Background:#fff;--sapIndicationColor_5_Selected_BorderColor:#d3effd;--sapIndicationColor_5_Selected_TextColor:#0070f2;--sapIndicationColor_5b:#d3effd;--sapIndicationColor_5b_BorderColor:#d3effd;--sapIndicationColor_5b_Hover_Background:#bbe6fc;--sapIndicationColor_6:#046c7a;--sapIndicationColor_6_Background:#046c7a;--sapIndicationColor_6_BorderColor:#046c7a;--sapIndicationColor_6_TextColor:#fff;--sapIndicationColor_6_Hover_Background:#035661;--sapIndicationColor_6_Active_Background:#fff;--sapIndicationColor_6_Active_BorderColor:#cdf5ec;--sapIndicationColor_6_Active_TextColor:#046c7a;--sapIndicationColor_6_Selected_Background:#fff;--sapIndicationColor_6_Selected_BorderColor:#cdf5ec;--sapIndicationColor_6_Selected_TextColor:#046c7a;--sapIndicationColor_6b:#cdf5ec;--sapIndicationColor_6b_BorderColor:#cdf5ec;--sapIndicationColor_6b_Hover_Background:#b8f1e4;--sapIndicationColor_7:#5d36ff;--sapIndicationColor_7_Background:#5d36ff;--sapIndicationColor_7_BorderColor:#5d36ff;--sapIndicationColor_7_TextColor:#fff;--sapIndicationColor_7_Hover_Background:#481cff;--sapIndicationColor_7_Active_Background:#fff;--sapIndicationColor_7_Active_BorderColor:#e2dbff;--sapIndicationColor_7_Active_TextColor:#5d36ff;--sapIndicationColor_7_Selected_Background:#fff;--sapIndicationColor_7_Selected_BorderColor:#e2dbff;--sapIndicationColor_7_Selected_TextColor:#5d36ff;--sapIndicationColor_7b:#e2dbff;--sapIndicationColor_7b_BorderColor:#e2dbff;--sapIndicationColor_7b_Hover_Background:#cdc2ff;--sapIndicationColor_8:#a100c2;--sapIndicationColor_8_Background:#a100c2;--sapIndicationColor_8_BorderColor:#a100c2;--sapIndicationColor_8_TextColor:#fff;--sapIndicationColor_8_Hover_Background:#8c00a9;--sapIndicationColor_8_Active_Background:#fff;--sapIndicationColor_8_Active_BorderColor:#f8d6ff;--sapIndicationColor_8_Active_TextColor:#a100c2;--sapIndicationColor_8_Selected_Background:#fff;--sapIndicationColor_8_Selected_BorderColor:#f8d6ff;--sapIndicationColor_8_Selected_TextColor:#a100c2;--sapIndicationColor_8b:#f8d6ff;--sapIndicationColor_8b_BorderColor:#f8d6ff;--sapIndicationColor_8b_Hover_Background:#f4bdff;--sapIndicationColor_9:#1d2d3e;--sapIndicationColor_9_Background:#1d2d3e;--sapIndicationColor_9_BorderColor:#1d2d3e;--sapIndicationColor_9_TextColor:#fff;--sapIndicationColor_9_Hover_Background:#15202d;--sapIndicationColor_9_Active_Background:#fff;--sapIndicationColor_9_Active_BorderColor:#d9d9d9;--sapIndicationColor_9_Active_TextColor:#1d2d3e;--sapIndicationColor_9_Selected_Background:#fff;--sapIndicationColor_9_Selected_BorderColor:#d9d9d9;--sapIndicationColor_9_Selected_TextColor:#1d2d3e;--sapIndicationColor_9b:#fff;--sapIndicationColor_9b_BorderColor:#d9d9d9;--sapIndicationColor_9b_Hover_Background:#f2f2f2;--sapIndicationColor_10:#45484a;--sapIndicationColor_10_Background:#83888b;--sapIndicationColor_10_BorderColor:#83888b;--sapIndicationColor_10_TextColor:#fff;--sapIndicationColor_10_Hover_Background:#767b7e;--sapIndicationColor_10_Active_Background:#fff;--sapIndicationColor_10_Active_BorderColor:#eaecee;--sapIndicationColor_10_Active_TextColor:#45484a;--sapIndicationColor_10_Selected_Background:#fff;--sapIndicationColor_10_Selected_BorderColor:#eaecee;--sapIndicationColor_10_Selected_TextColor:#45484a;--sapIndicationColor_10b:#eaecee;--sapIndicationColor_10b_BorderColor:#eaecee;--sapIndicationColor_10b_Hover_Background:#dcdfe3;--sapLegend_WorkingBackground:#fff;--sapLegend_NonWorkingBackground:#ebebeb;--sapLegend_CurrentDateTime:#a100c2;--sapLegendColor1:#c35500;--sapLegendColor2:#d23a0a;--sapLegendColor3:#df1278;--sapLegendColor4:#840606;--sapLegendColor5:#cc00dc;--sapLegendColor6:#0057d2;--sapLegendColor7:#07838f;--sapLegendColor8:#188918;--sapLegendColor9:#5b738b;--sapLegendColor10:#7800a4;--sapLegendColor11:#a93e00;--sapLegendColor12:#aa2608;--sapLegendColor13:#ba066c;--sapLegendColor14:#8d2a00;--sapLegendColor15:#4e247a;--sapLegendColor16:#002a86;--sapLegendColor17:#035663;--sapLegendColor18:#1e592f;--sapLegendColor19:#1a4796;--sapLegendColor20:#470ced;--sapLegendBackgroundColor1:#ffef9f;--sapLegendBackgroundColor2:#feeae1;--sapLegendBackgroundColor3:#fbf6f8;--sapLegendBackgroundColor4:#fbebeb;--sapLegendBackgroundColor5:#ffe5fe;--sapLegendBackgroundColor6:#d1efff;--sapLegendBackgroundColor7:#c2fcee;--sapLegendBackgroundColor8:#f5fae5;--sapLegendBackgroundColor9:#f5f6f7;--sapLegendBackgroundColor10:#fff0fa;--sapLegendBackgroundColor11:#fff8d6;--sapLegendBackgroundColor12:#fff6f6;--sapLegendBackgroundColor13:#f7ebef;--sapLegendBackgroundColor14:#f1ecd5;--sapLegendBackgroundColor15:#f0e7f8;--sapLegendBackgroundColor16:#ebf8ff;--sapLegendBackgroundColor17:#dafdf5;--sapLegendBackgroundColor18:#ebf5cb;--sapLegendBackgroundColor19:#fafdff;--sapLegendBackgroundColor20:#eceeff;--sapChart_OrderedColor_1:#0070f2;--sapChart_OrderedColor_2:#c87b00;--sapChart_OrderedColor_3:#75980b;--sapChart_OrderedColor_4:#df1278;--sapChart_OrderedColor_5:#8b47d7;--sapChart_OrderedColor_6:#049f9a;--sapChart_OrderedColor_7:#3c8cdd;--sapChart_OrderedColor_8:#cc00dc;--sapChart_OrderedColor_9:#798c77;--sapChart_OrderedColor_10:#da6c6c;--sapChart_OrderedColor_11:#5d36ff;--sapChart_Bad:#f53232;--sapChart_Critical:#e76500;--sapChart_Good:#30914c;--sapChart_Neutral:#788fa6;--sapChart_Sequence_1:#0070f2;--sapChart_Sequence_2:#c87b00;--sapChart_Sequence_3:#75980b;--sapChart_Sequence_4:#df1278;--sapChart_Sequence_5:#8b47d7;--sapChart_Sequence_6:#049f9a;--sapChart_Sequence_7:#3c8cdd;--sapChart_Sequence_8:#cc00dc;--sapChart_Sequence_9:#798c77;--sapChart_Sequence_10:#da6c6c;--sapChart_Sequence_11:#5d36ff;--sapChart_Sequence_Neutral:#788fa6;}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/BusyIndicator.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/BusyIndicator.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");
/* harmony import */ var _ui5_webcomponents_base_dist_types_Integer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/types/Integer.js */ "./node_modules/@ui5/webcomponents-base/dist/types/Integer.js");
/* harmony import */ var _types_BusyIndicatorSize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types/BusyIndicatorSize.js */ "./node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js");
/* harmony import */ var _Label_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Label.js */ "./node_modules/@ui5/webcomponents/dist/Label.js");
/* harmony import */ var _generated_templates_BusyIndicatorTemplate_lit_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./generated/templates/BusyIndicatorTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/BusyIndicatorTemplate.lit.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js");
/* harmony import */ var _generated_themes_BusyIndicator_css_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generated/themes/BusyIndicator.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/BusyIndicator.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var BusyIndicator_1;









// Template


// Styles

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-busy-indicator</code> signals that some operation is going on and that the
 * user must wait. It does not block the current UI screen so other operations could be triggered in parallel.
 * It displays 3 dots and each dot expands and shrinks at a different rate, resulting in a cascading flow of animation.
 *
 * <h3>Usage</h3>
 * For the <code>ui5-busy-indicator</code> you can define the size, the text and whether it is shown or hidden.
 * In order to hide it, use the "active" property.
 * <br><br>
 * In order to show busy state over an HTML element, simply nest the HTML element in a <code>ui5-busy-indicator</code> instance.
 * <br>
 * <b>Note:</b> Since <code>ui5-busy-indicator</code> has <code>display: inline-block;</code> by default and no width of its own,
 * whenever you need to wrap a block-level element, you should set <code>display: block</code> to the busy indicator as well.
 *
 * <h4>When to use:</h4>
 * <ul>
 * <li>The user needs to be able to cancel the operation.</li>
 * <li>Only part of the application or a particular component is affected.</li>
 * </ul>
 *
 * <h4>When not to use:</h4>
 * <ul>
 * <li>The operation takes less than one second.</li>
 * <li>You need to block the screen and prevent the user from starting another activity.</li>
 * <li>Do not show multiple busy indicators at once.</li>
 * </ul>
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/BusyIndicator";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.BusyIndicator
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-busy-indicator
 * @public
 * @since 0.12.0
 */
let BusyIndicator = BusyIndicator_1 = class BusyIndicator extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super();
        this._keydownHandler = this._handleKeydown.bind(this);
        this._preventEventHandler = this._preventEvent.bind(this);
    }
    onEnterDOM() {
        this.addEventListener("keydown", this._keydownHandler, {
            capture: true,
        });
        this.addEventListener("keyup", this._preventEventHandler, {
            capture: true,
        });
    }
    onExitDOM() {
        if (this._busyTimeoutId) {
            clearTimeout(this._busyTimeoutId);
            delete this._busyTimeoutId;
        }
        this.removeEventListener("keydown", this._keydownHandler, true);
        this.removeEventListener("keyup", this._preventEventHandler, true);
    }
    static async onDefine() {
        BusyIndicator_1.i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__.getI18nBundle)("@ui5/webcomponents");
    }
    get ariaTitle() {
        return BusyIndicator_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_10__.BUSY_INDICATOR_TITLE);
    }
    get labelId() {
        return this.text ? `${this._id}-label` : undefined;
    }
    get classes() {
        return {
            root: {
                "ui5-busy-indicator-root": true,
            },
        };
    }
    onBeforeRendering() {
        if (this.active) {
            if (!this._isBusy && !this._busyTimeoutId) {
                this._busyTimeoutId = setTimeout(() => {
                    delete this._busyTimeoutId;
                    this._isBusy = true;
                }, Math.max(0, this.delay));
            }
        }
        else {
            if (this._busyTimeoutId) {
                clearTimeout(this._busyTimeoutId);
                delete this._busyTimeoutId;
            }
            this._isBusy = false;
        }
    }
    _handleKeydown(e) {
        if (!this._isBusy) {
            return;
        }
        e.stopImmediatePropagation();
        // move the focus to the last element in this DOM and let TAB continue to the next focusable element
        if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isTabNext)(e)) {
            this.focusForward = true;
            this.shadowRoot.querySelector("[data-ui5-focus-redirect]").focus();
            this.focusForward = false;
        }
    }
    _preventEvent(e) {
        if (this._isBusy) {
            e.stopImmediatePropagation();
        }
    }
    /**
     * Moves the focus to busy area when coming with SHIFT + TAB
     */
    _redirectFocus(e) {
        if (this.focusForward) {
            return;
        }
        e.preventDefault();
        this.shadowRoot.querySelector(".ui5-busy-indicator-busy-area").focus();
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], BusyIndicator.prototype, "text", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: _types_BusyIndicatorSize_js__WEBPACK_IMPORTED_MODULE_7__["default"], defaultValue: _types_BusyIndicatorSize_js__WEBPACK_IMPORTED_MODULE_7__["default"].Medium })
], BusyIndicator.prototype, "size", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], BusyIndicator.prototype, "active", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ validator: _ui5_webcomponents_base_dist_types_Integer_js__WEBPACK_IMPORTED_MODULE_6__["default"], defaultValue: 1000 })
], BusyIndicator.prototype, "delay", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], BusyIndicator.prototype, "_isBusy", void 0);
BusyIndicator = BusyIndicator_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        tag: "ui5-busy-indicator",
        languageAware: true,
        styles: _generated_themes_BusyIndicator_css_js__WEBPACK_IMPORTED_MODULE_11__["default"],
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_3__["default"],
        template: _generated_templates_BusyIndicatorTemplate_lit_js__WEBPACK_IMPORTED_MODULE_9__["default"],
        dependencies: [_Label_js__WEBPACK_IMPORTED_MODULE_8__["default"]],
    })
], BusyIndicator);
BusyIndicator.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BusyIndicator);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Button.js":
/*!********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Button.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/event.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/event.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/slot.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_AriaLabelHelper_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/AriaLabelHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js");
/* harmony import */ var _ui5_webcomponents_base_dist_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/FeaturesRegistry.js */ "./node_modules/@ui5/webcomponents-base/dist/FeaturesRegistry.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/MarkedEvents.js */ "./node_modules/@ui5/webcomponents-base/dist/MarkedEvents.js");
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Device.js */ "./node_modules/@ui5/webcomponents-base/dist/Device.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_willShowContent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/willShowContent.js */ "./node_modules/@ui5/webcomponents-base/dist/util/willShowContent.js");
/* harmony import */ var _types_ButtonDesign_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./types/ButtonDesign.js */ "./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js");
/* harmony import */ var _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./types/ButtonType.js */ "./node_modules/@ui5/webcomponents/dist/types/ButtonType.js");
/* harmony import */ var _generated_templates_ButtonTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./generated/templates/ButtonTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/ButtonTemplate.lit.js");
/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Icon.js */ "./node_modules/@ui5/webcomponents/dist/Icon.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js");
/* harmony import */ var _generated_themes_Button_css_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./generated/themes/Button.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Button.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Button_1;



















// Styles

let isGlobalHandlerAttached = false;
let activeButton = null;
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-button</code> component represents a simple push button.
 * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing
 * certain keyboard keys, such as Enter.
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify
 * whether the text or the icon is displayed first.
 * <br><br>
 * You can choose from a set of predefined types that offer different
 * styling to correspond to the triggered action.
 * <br><br>
 * You can set the <code>ui5-button</code> as enabled or disabled. An enabled
 * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes
 * its style to provide visual feedback to the user that it is pressed or hovered over with
 * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.
 *
 * <h3>CSS Shadow Parts</h3>
 *
 * <ui5-link target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/::part">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.
 * <br>
 * The <code>ui5-button</code> exposes the following CSS Shadow Parts:
 * <ul>
 * <li>button - Used to style the native button element</li>
 * </ul>
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/Button";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Button
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-button
 * @implements sap.ui.webc.main.IButton
 * @public
 */
let Button = Button_1 = class Button extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super();
        this._deactivate = () => {
            if (activeButton) {
                activeButton.active = false;
            }
        };
        if (!isGlobalHandlerAttached) {
            document.addEventListener("mouseup", this._deactivate);
            isGlobalHandlerAttached = true;
        }
        const handleTouchStartEvent = (e) => {
            (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
            if (this.nonInteractive) {
                return;
            }
            this.active = true;
        };
        this._ontouchstart = {
            handleEvent: handleTouchStartEvent,
            passive: true,
        };
    }
    onEnterDOM() {
        this._isTouch = ((0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isPhone)() || (0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isTablet)()) && !(0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isCombi)();
    }
    async onBeforeRendering() {
        const formSupport = (0,_ui5_webcomponents_base_dist_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_8__.getFeature)("FormSupport");
        if (this.type !== _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__["default"].Button && !formSupport) {
            console.warn(`In order for the "type" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
        }
        if (this.submits && !formSupport) {
            console.warn(`In order for the "submits" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
        }
        this.iconOnly = this.isIconOnly;
        this.hasIcon = !!this.icon;
        this.buttonTitle = this.tooltip || await (0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_11__.getIconAccessibleName)(this.icon);
    }
    _onclick(e) {
        if (this.nonInteractive) {
            return;
        }
        (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
        const formSupport = (0,_ui5_webcomponents_base_dist_FeaturesRegistry_js__WEBPACK_IMPORTED_MODULE_8__.getFeature)("FormSupport");
        if (formSupport && this._isSubmit) {
            formSupport.triggerFormSubmit(this);
        }
        if (formSupport && this._isReset) {
            formSupport.triggerFormReset(this);
        }
        if ((0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isSafari)()) {
            this.getDomRef()?.focus();
        }
    }
    _onmousedown(e) {
        if (this.nonInteractive || this._isTouch) {
            return;
        }
        (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
        this.active = true;
        activeButton = this; // eslint-disable-line
    }
    _ontouchend(e) {
        if (this.disabled) {
            e.preventDefault();
            e.stopPropagation();
        }
        this.active = false;
        if (activeButton) {
            activeButton.active = false;
        }
    }
    _onmouseup(e) {
        (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
    }
    _onkeydown(e) {
        (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
        if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_6__.isSpace)(e) || (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_6__.isEnter)(e)) {
            this.active = true;
        }
    }
    _onkeyup(e) {
        if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_6__.isSpace)(e) || (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_6__.isEnter)(e)) {
            this.active = false;
        }
    }
    _onfocusout() {
        if (this.nonInteractive) {
            return;
        }
        this.active = false;
        if ((0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isDesktop)()) {
            this.focused = false;
        }
    }
    _onfocusin(e) {
        if (this.nonInteractive) {
            return;
        }
        (0,_ui5_webcomponents_base_dist_MarkedEvents_js__WEBPACK_IMPORTED_MODULE_10__.markEvent)(e, "button");
        if ((0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_12__.isDesktop)()) {
            this.focused = true;
        }
    }
    get hasButtonType() {
        return this.design !== _types_ButtonDesign_js__WEBPACK_IMPORTED_MODULE_14__["default"].Default && this.design !== _types_ButtonDesign_js__WEBPACK_IMPORTED_MODULE_14__["default"].Transparent;
    }
    get iconRole() {
        if (!this.icon) {
            return "";
        }
        return "presentation";
    }
    get isIconOnly() {
        return !(0,_ui5_webcomponents_base_dist_util_willShowContent_js__WEBPACK_IMPORTED_MODULE_13__["default"])(this.text);
    }
    static typeTextMappings() {
        return {
            "Positive": _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_18__.BUTTON_ARIA_TYPE_ACCEPT,
            "Negative": _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_18__.BUTTON_ARIA_TYPE_REJECT,
            "Emphasized": _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_18__.BUTTON_ARIA_TYPE_EMPHASIZED,
        };
    }
    get buttonTypeText() {
        return Button_1.i18nBundle.getText(Button_1.typeTextMappings()[this.design]);
    }
    get tabIndexValue() {
        const tabindex = this.getAttribute("tabindex");
        if (tabindex) {
            return tabindex;
        }
        return this.nonInteractive ? "-1" : this._tabIndex;
    }
    get showIconTooltip() {
        return this.iconOnly && !this.tooltip;
    }
    get ariaLabelText() {
        return (0,_ui5_webcomponents_base_dist_util_AriaLabelHelper_js__WEBPACK_IMPORTED_MODULE_7__.getEffectiveAriaLabelText)(this);
    }
    get _isSubmit() {
        return this.type === _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__["default"].Submit || this.submits;
    }
    get _isReset() {
        return this.type === _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__["default"].Reset;
    }
    static async onDefine() {
        Button_1.i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_9__.getI18nBundle)("@ui5/webcomponents");
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: _types_ButtonDesign_js__WEBPACK_IMPORTED_MODULE_14__["default"], defaultValue: _types_ButtonDesign_js__WEBPACK_IMPORTED_MODULE_14__["default"].Default })
], Button.prototype, "design", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "disabled", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], Button.prototype, "icon", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "iconEnd", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "submits", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], Button.prototype, "tooltip", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ defaultValue: undefined })
], Button.prototype, "accessibleName", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ defaultValue: "" })
], Button.prototype, "accessibleNameRef", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Object })
], Button.prototype, "accessibilityAttributes", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__["default"], defaultValue: _types_ButtonType_js__WEBPACK_IMPORTED_MODULE_15__["default"].Button })
], Button.prototype, "type", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "active", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "iconOnly", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "focused", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "hasIcon", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "nonInteractive", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ noAttribute: true })
], Button.prototype, "buttonTitle", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Object })
], Button.prototype, "_iconSettings", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ defaultValue: "0", noAttribute: true })
], Button.prototype, "_tabIndex", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Button.prototype, "_isTouch", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Node, "default": true })
], Button.prototype, "text", void 0);
Button = Button_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        tag: "ui5-button",
        languageAware: true,
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__["default"],
        template: _generated_templates_ButtonTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__["default"],
        styles: _generated_themes_Button_css_js__WEBPACK_IMPORTED_MODULE_19__["default"],
        dependencies: [_Icon_js__WEBPACK_IMPORTED_MODULE_17__["default"]],
    })
    /**
     * Fired when the component is activated either with a
     * mouse/tap or by using the Enter or Space key.
     * <br><br>
     * <b>Note:</b> The event will not be fired if the <code>disabled</code>
     * property is set to <code>true</code>.
     *
     * @event sap.ui.webc.main.Button#click
     * @public
     * @native
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__["default"])("click")
], Button);
Button.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Dialog.js":
/*!********************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Dialog.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Device.js */ "./node_modules/@ui5/webcomponents-base/dist/Device.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/slot.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/clamp.js */ "./node_modules/@ui5/webcomponents-base/dist/util/clamp.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");
/* harmony import */ var _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/types/ValueState.js */ "./node_modules/@ui5/webcomponents-base/dist/types/ValueState.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _Popup_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Popup.js */ "./node_modules/@ui5/webcomponents/dist/Popup.js");
/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Icon.js */ "./node_modules/@ui5/webcomponents/dist/Icon.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_resize_corner_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/resize-corner.js */ "./node_modules/@ui5/webcomponents-icons/dist/resize-corner.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_error_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/error.js */ "./node_modules/@ui5/webcomponents-icons/dist/error.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_alert_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/alert.js */ "./node_modules/@ui5/webcomponents-icons/dist/alert.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/sys-enter-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/sys-enter-2.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_information_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/information.js */ "./node_modules/@ui5/webcomponents-icons/dist/information.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js");
/* harmony import */ var _generated_templates_DialogTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./generated/templates/DialogTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/DialogTemplate.lit.js");
/* harmony import */ var _generated_themes_BrowserScrollbar_css_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./generated/themes/BrowserScrollbar.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js");
/* harmony import */ var _generated_themes_PopupsCommon_css_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./generated/themes/PopupsCommon.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupsCommon.css.js");
/* harmony import */ var _generated_themes_Dialog_css_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./generated/themes/Dialog.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Dialog.css.js");
/* harmony import */ var _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./types/PopupAccessibleRole.js */ "./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Dialog_1;
















// Template

// Styles




/**
 * Defines the step size at which this component would change by when being dragged or resized with the keyboard.
 */
const STEP_SIZE = 16;
/**
 * Defines the icons corresponding to the dialog's state.
 */
const ICON_PER_STATE = {
    [_ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Error]: "error",
    [_ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Warning]: "alert",
    [_ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Success]: "sys-enter-2",
    [_ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Information]: "information",
};
/**
 * @class
 * <h3 class="comment-api-title">Overview</h3>
 * The <code>ui5-dialog</code> component is used to temporarily display some information in a
 * size-limited window in front of the regular app screen.
 * It is used to prompt the user for an action or a confirmation.
 * The <code>ui5-dialog</code> interrupts the current app processing as it is the only focused UI element and
 * the main screen is dimmed/blocked.
 * The dialog combines concepts known from other technologies where the windows have
 * names such as dialog box, dialog window, pop-up, pop-up window, alert box, or message box.
 * <br><br>
 * The <code>ui5-dialog</code> is modal, which means that an user action is required before it is possible to return to the parent window.
 * To open multiple dialogs, each dialog element should be separate in the markup. This will ensure the correct modal behavior. Avoid nesting dialogs within each other.
 * The content of the <code>ui5-dialog</code> is fully customizable.
 *
 * <h3>Structure</h3>
 * A <code>ui5-dialog</code> consists of a header, content, and a footer for action buttons.
 * The <code>ui5-dialog</code> is usually displayed at the center of the screen.
 * Its position can be changed by the user. To enable this, you need to set the property <code>draggable</code> accordingly.

 *
 * <h3>Responsive Behavior</h3>
 * The <code>stretch</code> property can be used to stretch the
 * <code>ui5-dialog</code> on full screen.
 *
 * <h3>CSS Shadow Parts</h3>
 *
 * <ui5-link target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/::part">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.
 * <br>
 * The <code>ui5-dialog</code> exposes the following CSS Shadow Parts:
 * <ul>
 * <li>header - Used to style the header of the component</li>
 * <li>content - Used to style the content of the component</li>
 * <li>footer - Used to style the footer of the component</li>
 * </ul>
 * <b>Note:</b> When a <code>ui5-bar</code> is used in the header or in the footer, you should remove the default dialog's paddings.
 * <br>
 * For more information see the sample "Bar in Header/Footer".

 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/Dialog";</code>
 *
 * <b>Note:</b> We don't recommend nesting popup-like components (<code>ui5-dialog</code>, <code>ui5-popover</code>) inside <code>ui5-dialog</code>.
 * Ideally you should create all popups on the same level inside your HTML page and just open them from one another, rather than nesting them.
 *
 * <b>Note:</b> We don't recommend nesting popup-like components (<code>ui5-dialog</code>, <code>ui5-popover</code>) inside other components containing z-index.
 * This might break z-index management.
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Dialog
 * @extends sap.ui.webc.main.Popup
 * @tagname ui5-dialog
 * @public
 */
let Dialog = Dialog_1 = class Dialog extends _Popup_js__WEBPACK_IMPORTED_MODULE_8__["default"] {
    constructor() {
        super();
        this._draggedOrResized = false;
        this._revertSize = () => {
            Object.assign(this.style, {
                top: "",
                left: "",
                width: "",
                height: "",
            });
        };
        this._screenResizeHandler = this._screenResize.bind(this);
        this._dragMouseMoveHandler = this._onDragMouseMove.bind(this);
        this._dragMouseUpHandler = this._onDragMouseUp.bind(this);
        this._resizeMouseMoveHandler = this._onResizeMouseMove.bind(this);
        this._resizeMouseUpHandler = this._onResizeMouseUp.bind(this);
        this._dragStartHandler = this._handleDragStart.bind(this);
    }
    static async onDefine() {
        Dialog_1.i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_7__.getI18nBundle)("@ui5/webcomponents");
    }
    static _isHeader(element) {
        return element.classList.contains("ui5-popup-header-root") || element.getAttribute("slot") === "header";
    }
    /**
     * Shows the dialog.
     *
     * @param {boolean} [preventInitialFocus=false] Prevents applying the focus inside the popup
     * @public
     * @method
     * @name sap.ui.webc.main.Dialog#show
     * @async
     * @returns {Promise} Resolves when the dialog is open
     */
    async show(preventInitialFocus = false) {
        await super._open(preventInitialFocus);
    }
    get isModal() {
        return true;
    }
    get shouldHideBackdrop() {
        return false;
    }
    get _ariaLabelledBy() {
        let ariaLabelledById;
        if (this.headerText !== "" && !this._ariaLabel) {
            ariaLabelledById = "ui5-popup-header-text";
        }
        return ariaLabelledById;
    }
    get ariaRoleDescriptionHeaderText() {
        return (this.resizable || this.draggable) ? Dialog_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_15__.DIALOG_HEADER_ARIA_ROLE_DESCRIPTION) : undefined;
    }
    get effectiveAriaDescribedBy() {
        return (this.resizable || this.draggable) ? `${this._id}-descr` : undefined;
    }
    get ariaDescribedByHeaderTextResizable() {
        return Dialog_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_15__.DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE);
    }
    get ariaDescribedByHeaderTextDraggable() {
        return Dialog_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_15__.DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE);
    }
    get ariaDescribedByHeaderTextDraggableAndResizable() {
        return Dialog_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_15__.DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE);
    }
    get _displayProp() {
        return "flex";
    }
    /**
     * Determines if the header should be shown.
     */
    get _displayHeader() {
        return this.header.length || this.headerText || this.draggable || this.resizable;
    }
    get _movable() {
        return !this.stretch && this.onDesktop && (this.draggable || this.resizable);
    }
    get _headerTabIndex() {
        return this._movable ? "0" : undefined;
    }
    get _showResizeHandle() {
        return this.resizable && this.onDesktop;
    }
    get _minHeight() {
        let minHeight = Number.parseInt(window.getComputedStyle(this.contentDOM).minHeight);
        const header = this._root.querySelector(".ui5-popup-header-root");
        if (header) {
            minHeight += header.offsetHeight;
        }
        const footer = this._root.querySelector(".ui5-popup-footer-root");
        if (footer) {
            minHeight += footer.offsetHeight;
        }
        return minHeight;
    }
    get hasValueState() {
        return this.state !== _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].None;
    }
    get _dialogStateIcon() {
        return ICON_PER_STATE[this.state];
    }
    get _role() {
        if (this.accessibleRole === _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_20__["default"].None) {
            return undefined;
        }
        if (this.state === _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Error || this.state === _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].Warning) {
            return _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_20__["default"].AlertDialog.toLowerCase();
        }
        return this.accessibleRole.toLowerCase();
    }
    _show() {
        super._show();
        this._center();
    }
    onBeforeRendering() {
        super.onBeforeRendering();
        this._isRTL = this.effectiveDir === "rtl";
        this.onPhone = (0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_0__.isPhone)();
        this.onDesktop = (0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_0__.isDesktop)();
    }
    onAfterRendering() {
        super.onAfterRendering();
        if (!this.isOpen() && this.open) {
            this.show();
        }
        else if (this.isOpen() && !this.open) {
            this.close();
        }
    }
    onEnterDOM() {
        super.onEnterDOM();
        this._attachScreenResizeHandler();
        this.addEventListener("dragstart", this._dragStartHandler);
    }
    onExitDOM() {
        super.onExitDOM();
        this._detachScreenResizeHandler();
        this.removeEventListener("dragstart", this._dragStartHandler);
    }
    /**
     * @override
     */
    _resize() {
        super._resize();
        if (!this._draggedOrResized) {
            this._center();
        }
    }
    _screenResize() {
        this._center();
    }
    _attachScreenResizeHandler() {
        if (!this._screenResizeHandlerAttached) {
            window.addEventListener("resize", this._screenResizeHandler);
            this._screenResizeHandlerAttached = true;
        }
    }
    _detachScreenResizeHandler() {
        if (this._screenResizeHandlerAttached) {
            window.removeEventListener("resize", this._screenResizeHandler);
            this._screenResizeHandlerAttached = false; // prevent dialog from repositioning during resizing
        }
    }
    _center() {
        const height = window.innerHeight - this.offsetHeight, width = window.innerWidth - this.offsetWidth;
        Object.assign(this.style, {
            top: `${Math.round(height / 2)}px`,
            left: `${Math.round(width / 2)}px`,
        });
    }
    /**
     * Event handlers
     */
    _onDragMouseDown(e) {
        // allow dragging only on the header
        if (!this._movable || !this.draggable || !Dialog_1._isHeader(e.target)) {
            return;
        }
        e.preventDefault();
        const { top, left, } = this.getBoundingClientRect();
        const { width, height, } = window.getComputedStyle(this);
        Object.assign(this.style, {
            top: `${top}px`,
            left: `${left}px`,
            width: `${Math.round(Number.parseFloat(width) * 100) / 100}px`,
            height: `${Math.round(Number.parseFloat(height) * 100) / 100}px`,
        });
        this._x = e.clientX;
        this._y = e.clientY;
        this._draggedOrResized = true;
        this._attachMouseDragHandlers();
    }
    _onDragMouseMove(e) {
        e.preventDefault();
        const { clientX, clientY } = e;
        const calcX = this._x - clientX;
        const calcY = this._y - clientY;
        const { left, top, } = this.getBoundingClientRect();
        Object.assign(this.style, {
            left: `${Math.floor(left - calcX)}px`,
            top: `${Math.floor(top - calcY)}px`,
        });
        this._x = clientX;
        this._y = clientY;
    }
    _onDragMouseUp() {
        delete this._x;
        delete this._y;
        this._detachMouseDragHandlers();
    }
    _onDragOrResizeKeyDown(e) {
        if (!this._movable || !Dialog_1._isHeader(e.target)) {
            return;
        }
        if (this.draggable && [_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isUp, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isDown, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isLeft, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isRight].some(key => key(e))) {
            this._dragWithEvent(e);
            return;
        }
        if (this.resizable && [_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isUpShift, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isDownShift, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isLeftShift, _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isRightShift].some(key => key(e))) {
            this._resizeWithEvent(e);
        }
    }
    _dragWithEvent(e) {
        const { top, left, width, height, } = this.getBoundingClientRect();
        let newPos = 0;
        let posDirection = "top";
        switch (true) {
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isUp)(e):
                newPos = top - STEP_SIZE;
                posDirection = "top";
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isDown)(e):
                newPos = top + STEP_SIZE;
                posDirection = "top";
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isLeft)(e):
                newPos = left - STEP_SIZE;
                posDirection = "left";
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isRight)(e):
                newPos = left + STEP_SIZE;
                posDirection = "left";
                break;
        }
        newPos = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(newPos, 0, posDirection === "left" ? window.innerWidth - width : window.innerHeight - height);
        this.style[posDirection] = `${newPos}px`;
    }
    _resizeWithEvent(e) {
        this._draggedOrResized = true;
        this.addEventListener("ui5-before-close", this._revertSize, { once: true });
        const { top, left } = this.getBoundingClientRect(), style = window.getComputedStyle(this), minWidth = Number.parseFloat(style.minWidth), maxWidth = window.innerWidth - left, maxHeight = window.innerHeight - top;
        let width = Number.parseFloat(style.width), height = Number.parseFloat(style.height);
        switch (true) {
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isUpShift)(e):
                height -= STEP_SIZE;
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isDownShift)(e):
                height += STEP_SIZE;
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isLeftShift)(e):
                width -= STEP_SIZE;
                break;
            case (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_5__.isRightShift)(e):
                width += STEP_SIZE;
                break;
        }
        width = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(width, minWidth, maxWidth);
        height = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(height, this._minHeight, maxHeight);
        Object.assign(this.style, {
            width: `${width}px`,
            height: `${height}px`,
        });
    }
    _attachMouseDragHandlers() {
        window.addEventListener("mousemove", this._dragMouseMoveHandler);
        window.addEventListener("mouseup", this._dragMouseUpHandler);
    }
    _detachMouseDragHandlers() {
        window.removeEventListener("mousemove", this._dragMouseMoveHandler);
        window.removeEventListener("mouseup", this._dragMouseUpHandler);
    }
    _onResizeMouseDown(e) {
        if (!this._movable || !this.resizable) {
            return;
        }
        e.preventDefault();
        const { top, left, } = this.getBoundingClientRect();
        const { width, height, minWidth, } = window.getComputedStyle(this);
        this._initialX = e.clientX;
        this._initialY = e.clientY;
        this._initialWidth = Number.parseFloat(width);
        this._initialHeight = Number.parseFloat(height);
        this._initialTop = top;
        this._initialLeft = left;
        this._minWidth = Number.parseFloat(minWidth);
        this._cachedMinHeight = this._minHeight;
        Object.assign(this.style, {
            top: `${top}px`,
            left: `${left}px`,
        });
        this._draggedOrResized = true;
        this._attachMouseResizeHandlers();
    }
    _onResizeMouseMove(e) {
        const { clientX, clientY } = e;
        let newWidth, newLeft;
        if (this._isRTL) {
            newWidth = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this._initialWidth - (clientX - this._initialX), this._minWidth, this._initialLeft + this._initialWidth);
            newLeft = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this._initialLeft + (clientX - this._initialX), 0, this._initialX + this._initialWidth - this._minWidth);
        }
        else {
            newWidth = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this._initialWidth + (clientX - this._initialX), this._minWidth, window.innerWidth - this._initialLeft);
        }
        const newHeight = (0,_ui5_webcomponents_base_dist_util_clamp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this._initialHeight + (clientY - this._initialY), this._cachedMinHeight, window.innerHeight - this._initialTop);
        Object.assign(this.style, {
            height: `${newHeight}px`,
            width: `${newWidth}px`,
            left: newLeft ? `${newLeft}px` : undefined,
        });
    }
    _onResizeMouseUp() {
        delete this._initialX;
        delete this._initialY;
        delete this._initialWidth;
        delete this._initialHeight;
        delete this._initialTop;
        delete this._initialLeft;
        delete this._minWidth;
        delete this._cachedMinHeight;
        this._detachMouseResizeHandlers();
    }
    _handleDragStart(e) {
        if (this.draggable) {
            e.preventDefault();
        }
    }
    _attachMouseResizeHandlers() {
        window.addEventListener("mousemove", this._resizeMouseMoveHandler);
        window.addEventListener("mouseup", this._resizeMouseUpHandler);
        this.addEventListener("ui5-before-close", this._revertSize, { once: true });
    }
    _detachMouseResizeHandlers() {
        window.removeEventListener("mousemove", this._resizeMouseMoveHandler);
        window.removeEventListener("mouseup", this._resizeMouseUpHandler);
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])()
], Dialog.prototype, "headerText", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: Boolean })
], Dialog.prototype, "stretch", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: Boolean })
], Dialog.prototype, "draggable", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: Boolean })
], Dialog.prototype, "resizable", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"], defaultValue: _ui5_webcomponents_base_dist_types_ValueState_js__WEBPACK_IMPORTED_MODULE_6__["default"].None })
], Dialog.prototype, "state", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: Boolean })
], Dialog.prototype, "onPhone", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: Boolean })
], Dialog.prototype, "onDesktop", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], Dialog.prototype, "header", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], Dialog.prototype, "footer", void 0);
Dialog = Dialog_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        tag: "ui5-dialog",
        template: _generated_templates_DialogTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__["default"],
        styles: [
            _generated_themes_BrowserScrollbar_css_js__WEBPACK_IMPORTED_MODULE_17__["default"],
            _generated_themes_PopupsCommon_css_js__WEBPACK_IMPORTED_MODULE_18__["default"],
            _generated_themes_Dialog_css_js__WEBPACK_IMPORTED_MODULE_19__["default"],
        ],
        dependencies: [
            _Icon_js__WEBPACK_IMPORTED_MODULE_9__["default"],
        ],
    })
], Dialog);
Dialog.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dialog);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Icon.js":
/*!******************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Icon.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/event.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/event.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Icons.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_executeTemplate_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/executeTemplate.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js");
/* harmony import */ var _generated_templates_IconTemplate_lit_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./generated/templates/IconTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/IconTemplate.lit.js");
/* harmony import */ var _types_IconDesign_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types/IconDesign.js */ "./node_modules/@ui5/webcomponents/dist/types/IconDesign.js");
/* harmony import */ var _generated_themes_Icon_css_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generated/themes/Icon.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Icon.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};











// Styles

const ICON_NOT_FOUND = "ICON_NOT_FOUND";
const PRESENTATION_ROLE = "presentation";
/**
 * @class
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-icon</code> component represents an SVG icon.
 * There are two main scenarios how the <code>ui5-icon</code> component is used:
 * as a purely decorative element, <br>
 * or as an interactive element that can be focused and clicked.
 *
 * <h3>Usage</h3>
 *
 * 1. <b>Get familiar with the icons collections.</b>
 * <br>
 * Before displaying an icon, you need to explore the icons collections to find and import the desired icon.
 * <br>
 * Currently there are 3 icons collection, available as 3 npm packages:
 * <br>
 *
 * <ul>
 * <li>
 * <ui5-link target="_blank" href="https://www.npmjs.com/package/@ui5/webcomponents-icons">@ui5/webcomponents-icons</ui5-link> represents the "SAP-icons" collection and includes the following
 * <ui5-link target="_blank" href="https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons">icons</ui5-link>.
 * </li>
 * <li>
 * <ui5-link target="_blank" href="https://www.npmjs.com/package/@ui5/webcomponents-icons-tnt">@ui5/webcomponents-icons-tnt</ui5-link> represents the "tnt" collection and includes the following
 * <ui5-link target="_blank" href="https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons-TNT">icons</ui5-link>.
 * </li>
 * <li>
 * <ui5-link target="_blank" href="https://www.npmjs.com/package/@ui5/webcomponents-icons-business-suite">@ui5/webcomponents-icons-icons-business-suite</ui5-link> represents the "business-suite" collection and includes the following
 * <ui5-link target="_blank" href="https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/BusinessSuiteInAppSymbols">icons</ui5-link>.
 * </li>
 * </ul>
 *
 * 2. <b>After exploring the icons collections, add one or more of the packages as dependencies to your project.</b>
 * <br>
 * <code>npm i @ui5/webcomponents-icons</code><br>
 * <code>npm i @ui5/webcomponents-icons-tnt</code><br>
 * <code>npm i @ui5/webcomponents-icons-business-suite</code>
 * <br><br>
 *
 * 3. <b>Then, import the desired icon</b>.
 * <br>
 * <code>import "@ui5/{package_name}/dist/{icon_name}.js";</code>
 * <br><br>
 *
 * <b>For Example</b>:
 * <br>
 *
 * For the standard "SAP-icons" icon collection, import an icon from the <code>@ui5/webcomponents-icons</code> package:
 * <br>
 * <code>import "@ui5/webcomponents-icons/dist/employee.js";</code>
 * <br><br>
 *
 * For the "tnt" (SAP Fiori Tools) icon collection, import an icon from the <code>@ui5/webcomponents-icons-tnt</code> package:
 * <br>
 * <code>import "@ui5/webcomponents-icons-tnt/dist/antenna.js";</code>
 * <br><br>
 *
 * For the "business-suite" (SAP Business Suite) icon collection, import an icon from the <code>@ui5/webcomponents-icons-business-suite</code> package:
 * <br>
 * <code>import "@ui5/webcomponents-icons-business-suite/dist/ab-testing.js";</code>
 * <br><br>
 *
 * 4. <b>Display the icon using the <code>ui5-icon</code> web component.</b><br>
 * Set the icon collection ("SAP-icons", "tnt" or "business-suite" - "SAP-icons" is the default icon collection and can be skipped)<br>
 * and the icon name to the <code>name</code> property.
 * <br><br>
 *
 * <code>&lt;ui5-icon name="employee">&lt;/ui5-icon></code><br>
 * <code>&lt;ui5-icon name="tnt/antenna">&lt;/ui5-icon></code><br>
 * <code>&lt;ui5-icon name="business-suite/ab-testing">&lt;/ui5-icon></code>
 *
 * <br><br>
 * <h3>CSS Shadow Parts</h3>
 *
 * <ui5-link target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/::part">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.
 * <br>
 * The <code>ui5-icon</code> exposes the following CSS Shadow Parts:
 * <ul>
 * <li>root - Used to style the outermost wrapper of the <code>ui5-icon</code></li>
 * </ul>
 *
 * <br><br>
 * <h3>Keyboard Handling</h3>
 *
 * <ul>
 * <li>[SPACE, ENTER, RETURN] - Fires the <code>click</code> event if the <code>interactive</code> property is set to true.</li>
 * <li>[SHIFT] - If [SPACE] or [ENTER],[RETURN] is pressed, pressing [SHIFT] releases the ui5-icon without triggering the click event.</li>
 * </ul>
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/Icon.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Icon
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-icon
 * @implements sap.ui.webc.main.IIcon
 * @public
 */
let Icon = class Icon extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    _onFocusInHandler() {
        if (this.interactive) {
            this.focused = true;
        }
    }
    _onFocusOutHandler() {
        this.focused = false;
    }
    _onkeydown(e) {
        if (!this.interactive) {
            return;
        }
        if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_7__.isEnter)(e)) {
            this.fireEvent("click");
        }
        if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_7__.isSpace)(e)) {
            e.preventDefault(); // prevent scrolling
        }
    }
    _onkeyup(e) {
        if (this.interactive && (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_7__.isSpace)(e)) {
            this.fireEvent("click");
        }
    }
    /**
    * Enforce "ltr" direction, based on the icons collection metadata.
    */
    get _dir() {
        return this.ltr ? "ltr" : undefined;
    }
    get effectiveAriaHidden() {
        if (this.ariaHidden === "") {
            if (this.isDecorative) {
                return true;
            }
            return;
        }
        return this.ariaHidden;
    }
    get _tabIndex() {
        return this.interactive ? "0" : undefined;
    }
    get isDecorative() {
        return this.effectiveAccessibleRole === PRESENTATION_ROLE;
    }
    get effectiveAccessibleRole() {
        if (this.accessibleRole) {
            return this.accessibleRole;
        }
        if (this.interactive) {
            return "button";
        }
        return this.effectiveAccessibleName ? "img" : PRESENTATION_ROLE;
    }
    async onBeforeRendering() {
        const name = this.name;
        if (!name) {
            /* eslint-disable-next-line */
            return console.warn("Icon name property is required", this);
        }
        let iconData = (0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_5__.getIconDataSync)(name);
        if (!iconData) {
            iconData = await (0,_ui5_webcomponents_base_dist_asset_registries_Icons_js__WEBPACK_IMPORTED_MODULE_5__.getIconData)(name);
        }
        if (!iconData) {
            this.invalid = true;
            /* eslint-disable-next-line */
            return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`);
        }
        if (iconData === ICON_NOT_FOUND) {
            this.invalid = true;
            /* eslint-disable-next-line */
            return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${name.replace("sap-icon://", "")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/AllIcons.js".`);
        }
        this.viewBox = iconData.viewBox || "0 0 512 512";
        if (iconData.customTemplate) {
            iconData.pathData = [];
            this.customSvg = (0,_ui5_webcomponents_base_dist_renderer_executeTemplate_js__WEBPACK_IMPORTED_MODULE_8__["default"])(iconData.customTemplate, this);
        }
        // in case a new valid name is set, show the icon
        this.invalid = false;
        this.pathData = Array.isArray(iconData.pathData) ? iconData.pathData : [iconData.pathData];
        this.accData = iconData.accData;
        this.ltr = iconData.ltr;
        this.packageName = iconData.packageName;
        this._onfocusout = this.interactive ? this._onFocusOutHandler.bind(this) : undefined;
        this._onfocusin = this.interactive ? this._onFocusInHandler.bind(this) : undefined;
        if (this.accessibleName) {
            this.effectiveAccessibleName = this.accessibleName;
        }
        else if (this.accData) {
            const i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_6__.getI18nBundle)(this.packageName);
            this.effectiveAccessibleName = i18nBundle.getText(this.accData) || undefined;
        }
        else {
            this.effectiveAccessibleName = undefined;
        }
    }
    get hasIconTooltip() {
        return this.showTooltip && this.effectiveAccessibleName;
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: _types_IconDesign_js__WEBPACK_IMPORTED_MODULE_10__["default"], defaultValue: _types_IconDesign_js__WEBPACK_IMPORTED_MODULE_10__["default"].Default })
], Icon.prototype, "design", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Icon.prototype, "interactive", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Icon.prototype, "name", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Icon.prototype, "accessibleName", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Icon.prototype, "showTooltip", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Icon.prototype, "accessibleRole", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Icon.prototype, "ariaHidden", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ multiple: true })
], Icon.prototype, "pathData", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Object, defaultValue: undefined, noAttribute: true })
], Icon.prototype, "accData", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Icon.prototype, "focused", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Icon.prototype, "invalid", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ noAttribute: true, defaultValue: undefined })
], Icon.prototype, "effectiveAccessibleName", void 0);
Icon = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
        tag: "ui5-icon",
        languageAware: true,
        themeAware: true,
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        template: _generated_templates_IconTemplate_lit_js__WEBPACK_IMPORTED_MODULE_9__["default"],
        styles: _generated_themes_Icon_css_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    })
    /**
     * Fired on mouseup, <code>SPACE</code> and <code>ENTER</code>.
     * - on mouse click, the icon fires native <code>click</code> event
     * - on <code>SPACE</code> and <code>ENTER</code>, the icon fires custom <code>click</code> event
     * @private
     * @since 1.0.0-rc.8
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__["default"])("click")
], Icon);
Icon.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Label.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Label.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types/WrappingType.js */ "./node_modules/@ui5/webcomponents/dist/types/WrappingType.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js");
/* harmony import */ var _generated_templates_LabelTemplate_lit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/templates/LabelTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/LabelTemplate.lit.js");
/* harmony import */ var _generated_themes_Label_css_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./generated/themes/Label.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Label.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Label_1;







// Template

// Styles

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-label</code> is a component used to represent a label for elements like input, textarea, select. <br><br>
 * The <code>for</code> property of the <code>ui5-label</code> must be the same as the id attribute of the related input element.<br><br>
 * Screen readers read out the label, when the user focuses the labelled control.
 * <br><br>
 * The <code>ui5-label</code> appearance can be influenced by properties,
 * such as <code>required</code> and <code>wrappingType</code>.
 * The appearance of the Label can be configured in a limited way by using the design property.
 * For a broader choice of designs, you can use custom styles.
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/Label";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Label
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-label
 * @public
 */
let Label = Label_1 = class Label extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static async onDefine() {
        Label_1.i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_4__.getI18nBundle)("@ui5/webcomponents");
    }
    /**
     * Defines the text of the component.
     * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
     *
     * @type {Node[]}
     * @slot
     * @public
     * @name sap.ui.webc.main.Label.prototype.default
     */
    _onclick() {
        if (!this.for) {
            return;
        }
        const elementToFocus = this.getRootNode().querySelector(`[id="${this.for}"]`);
        if (elementToFocus) {
            elementToFocus.focus();
        }
    }
    get _colonSymbol() {
        return Label_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_6__.LABEL_COLON);
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], Label.prototype, "for", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Label.prototype, "showColon", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: Boolean })
], Label.prototype, "required", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__["default"])({ type: _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__["default"], defaultValue: _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__["default"].None })
], Label.prototype, "wrappingType", void 0);
Label = Label_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_3__["default"])({
        tag: "ui5-label",
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        template: _generated_templates_LabelTemplate_lit_js__WEBPACK_IMPORTED_MODULE_7__["default"],
        styles: _generated_themes_Label_css_js__WEBPACK_IMPORTED_MODULE_8__["default"],
        languageAware: true,
    })
], Label);
Label.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Label);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/MessageStrip.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/MessageStrip.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/slot.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/event.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/event.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/i18nBundle.js */ "./node_modules/@ui5/webcomponents-base/dist/i18nBundle.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_decline_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/decline.js */ "./node_modules/@ui5/webcomponents-icons/dist/decline.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_information_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/information.js */ "./node_modules/@ui5/webcomponents-icons/dist/information.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_sys_enter_2_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/sys-enter-2.js */ "./node_modules/@ui5/webcomponents-icons/dist/sys-enter-2.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_error_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/error.js */ "./node_modules/@ui5/webcomponents-icons/dist/error.js");
/* harmony import */ var _ui5_webcomponents_icons_dist_alert_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ui5/webcomponents-icons/dist/alert.js */ "./node_modules/@ui5/webcomponents-icons/dist/alert.js");
/* harmony import */ var _types_MessageStripDesign_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./types/MessageStripDesign.js */ "./node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js");
/* harmony import */ var _generated_templates_MessageStripTemplate_lit_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./generated/templates/MessageStripTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/MessageStripTemplate.lit.js");
/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Icon.js */ "./node_modules/@ui5/webcomponents/dist/Icon.js");
/* harmony import */ var _Button_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Button.js */ "./node_modules/@ui5/webcomponents/dist/Button.js");
/* harmony import */ var _generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./generated/i18n/i18n-defaults.js */ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js");
/* harmony import */ var _generated_themes_MessageStrip_css_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./generated/themes/MessageStrip.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/MessageStrip.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MessageStrip_1;

















// Styles

var DesignClassesMapping;
(function (DesignClassesMapping) {
    DesignClassesMapping["Information"] = "ui5-message-strip-root--info";
    DesignClassesMapping["Positive"] = "ui5-message-strip-root--positive";
    DesignClassesMapping["Negative"] = "ui5-message-strip-root--negative";
    DesignClassesMapping["Warning"] = "ui5-message-strip-root--warning";
})(DesignClassesMapping || (DesignClassesMapping = {}));
var IconMapping;
(function (IconMapping) {
    IconMapping["Information"] = "information";
    IconMapping["Positive"] = "sys-enter-2";
    IconMapping["Negative"] = "error";
    IconMapping["Warning"] = "alert";
})(IconMapping || (IconMapping = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-message-strip</code> component enables the embedding of app-related messages.
 * It displays 4 designs of messages, each with corresponding semantic color and icon: Information, Positive, Warning and Negative.
 * Each message can have a Close button, so that it can be removed from the UI, if needed.
 *
 * <h3>Usage</h3>
 *
 * For the <code>ui5-message-strip</code> component, you can define whether it displays
 * an icon in the beginning and a close button. Moreover, its size and background
 * can be controlled with CSS.
 *
 * <h3>Keyboard Handling</h3>
 *
 * <h4>Fast Navigation</h4>
 * This component provides a build in fast navigation group which can be used via <code>F6 / Shift + F6</code> or <code> Ctrl + Alt(Option) + Down /  Ctrl + Alt(Option) + Up</code>.
 * In order to use this functionality, you need to import the following module:
 * <code>import "@ui5/webcomponents-base/dist/features/F6Navigation.js"</code>
 * <br><br>
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/MessageStrip";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.MessageStrip
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-message-strip
 * @public
 * @since 0.9.0
 */
let MessageStrip = MessageStrip_1 = class MessageStrip extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    _closeClick() {
        this.fireEvent("close");
    }
    static async onDefine() {
        MessageStrip_1.i18nBundle = await (0,_ui5_webcomponents_base_dist_i18nBundle_js__WEBPACK_IMPORTED_MODULE_6__.getI18nBundle)("@ui5/webcomponents");
    }
    static designAnnouncementMappings() {
        const getTranslation = (text) => {
            return MessageStrip_1.i18nBundle.getText(text);
        };
        return {
            Information: getTranslation(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_INFORMATION),
            Positive: getTranslation(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_SUCCESS),
            Negative: getTranslation(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_ERROR),
            Warning: getTranslation(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_WARNING),
        };
    }
    get hiddenText() {
        return `${MessageStrip_1.designAnnouncementMappings()[this.design]} ${this.hideCloseButton ? "" : this._closableText}`;
    }
    get _closeButtonText() {
        return MessageStrip_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_CLOSE_BUTTON);
    }
    get _closableText() {
        return MessageStrip_1.i18nBundle.getText(_generated_i18n_i18n_defaults_js__WEBPACK_IMPORTED_MODULE_16__.MESSAGE_STRIP_CLOSABLE);
    }
    get classes() {
        return {
            root: {
                "ui5-message-strip-root": true,
                "ui5-message-strip-root-hide-icon": this.hideIcon,
                "ui5-message-strip-root-hide-close-button": this.hideCloseButton,
                [this.designClasses]: true,
            },
        };
    }
    get iconProvided() {
        return this.icon.length > 0;
    }
    get standardIconName() {
        return IconMapping[this.design];
    }
    get designClasses() {
        return DesignClassesMapping[this.design];
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        type: _types_MessageStripDesign_js__WEBPACK_IMPORTED_MODULE_12__["default"],
        defaultValue: _types_MessageStripDesign_js__WEBPACK_IMPORTED_MODULE_12__["default"].Information,
    })
], MessageStrip.prototype, "design", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__["default"])({ type: Boolean })
], MessageStrip.prototype, "hideIcon", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__["default"])({ type: Boolean })
], MessageStrip.prototype, "hideCloseButton", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_2__["default"])()
], MessageStrip.prototype, "icon", void 0);
MessageStrip = MessageStrip_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
        tag: "ui5-message-strip",
        languageAware: true,
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__["default"],
        template: _generated_templates_MessageStripTemplate_lit_js__WEBPACK_IMPORTED_MODULE_13__["default"],
        styles: _generated_themes_MessageStrip_css_js__WEBPACK_IMPORTED_MODULE_17__["default"],
        dependencies: [_Icon_js__WEBPACK_IMPORTED_MODULE_14__["default"], _Button_js__WEBPACK_IMPORTED_MODULE_15__["default"]],
    })
    /**
     * Fired when the close button is pressed either with a
     * click/tap or by using the Enter or Space key.
     *
     * @event sap.ui.webc.main.MessageStrip#close
     * @public
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_3__["default"])("close")
], MessageStrip);
MessageStrip.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MessageStrip);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Popup.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Popup.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Render.js */ "./node_modules/@ui5/webcomponents-base/dist/Render.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/event.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/event.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/slot.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/slot.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Device.js */ "./node_modules/@ui5/webcomponents-base/dist/Device.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_FocusableElements_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/FocusableElements.js */ "./node_modules/@ui5/webcomponents-base/dist/util/FocusableElements.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_AriaLabelHelper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/AriaLabelHelper.js */ "./node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_getEffectiveScrollbarStyle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js */ "./node_modules/@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js");
/* harmony import */ var _ui5_webcomponents_base_dist_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/ManagedStyles.js */ "./node_modules/@ui5/webcomponents-base/dist/ManagedStyles.js");
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");
/* harmony import */ var _ui5_webcomponents_base_dist_util_PopupUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/util/PopupUtils.js */ "./node_modules/@ui5/webcomponents-base/dist/util/PopupUtils.js");
/* harmony import */ var _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/delegate/ResizeHandler.js */ "./node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js");
/* harmony import */ var _ui5_webcomponents_base_dist_MediaRange_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/MediaRange.js */ "./node_modules/@ui5/webcomponents-base/dist/MediaRange.js");
/* harmony import */ var _generated_templates_PopupTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./generated/templates/PopupTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/PopupTemplate.lit.js");
/* harmony import */ var _generated_templates_PopupBlockLayerTemplate_lit_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./generated/templates/PopupBlockLayerTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/PopupBlockLayerTemplate.lit.js");
/* harmony import */ var _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./types/PopupAccessibleRole.js */ "./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js");
/* harmony import */ var _popup_utils_OpenedPopupsRegistry_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./popup-utils/OpenedPopupsRegistry.js */ "./node_modules/@ui5/webcomponents/dist/popup-utils/OpenedPopupsRegistry.js");
/* harmony import */ var _generated_themes_Popup_css_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./generated/themes/Popup.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Popup.css.js");
/* harmony import */ var _generated_themes_PopupStaticAreaStyles_css_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./generated/themes/PopupStaticAreaStyles.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupStaticAreaStyles.css.js");
/* harmony import */ var _generated_themes_PopupGlobal_css_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./generated/themes/PopupGlobal.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupGlobal.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Popup_1;




















// Styles



const createBlockingStyle = () => {
    if (!(0,_ui5_webcomponents_base_dist_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_11__.hasStyle)("data-ui5-popup-scroll-blocker")) {
        (0,_ui5_webcomponents_base_dist_ManagedStyles_js__WEBPACK_IMPORTED_MODULE_11__.createStyle)(_generated_themes_PopupGlobal_css_js__WEBPACK_IMPORTED_MODULE_22__["default"], "data-ui5-popup-scroll-blocker");
    }
};
createBlockingStyle();
const pageScrollingBlockers = new Set();
/**
 * @class
 * <h3 class="comment-api-title">Overview</h3>
 * Base class for all popup Web Components.
 *
 * If you need to create your own popup-like custom UI5 Web Components, it is highly recommended that you extend
 * at least Popup in order to have consistency with other popups in terms of modal behavior and z-index management.
 *
 * 1. The Popup class handles modality:
 *  - The "isModal" getter can be overridden by derivatives to provide their own conditions when they are modal or not
 *  - Derivatives may call the "blockPageScrolling" and "unblockPageScrolling" static methods to temporarily remove scrollbars on the html element
 *  - Derivatives may call the "open" and "close" methods which handle focus, manage the popup registry and for modal popups, manage the blocking layer
 *
 *  2. Provides blocking layer (relevant for modal popups only):
 *   - It is in the static area
 *   - Controlled by the "open" and "close" methods
 *
 * 3. The Popup class "traps" focus:
 *  - Derivatives may call the "applyInitialFocus" method (usually when opening, to transfer focus inside the popup)
 *
 * 4. The Popup class automatically assigns "z-index"
 *  - Each time a popup is opened, it gets a higher than the previously opened popup z-index
 *
 * 5. The template of this component exposes two inline partials you can override in derivatives:
 *  - beforeContent (upper part of the box, useful for header/title/close button)
 *  - afterContent (lower part, useful for footer/action buttons)
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Popup
 * @extends sap.ui.webc.base.UI5Element
 * @public
 */
let Popup = Popup_1 = class Popup extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_6__["default"] {
    constructor() {
        super();
        this._resizeHandler = this._resize.bind(this);
    }
    onBeforeRendering() {
        this._blockLayerHidden = !this.isOpen() || !this.isTopModalPopup;
    }
    onAfterRendering() {
        this._updateMediaRange();
    }
    onEnterDOM() {
        _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_14__["default"].register(this, this._resizeHandler);
    }
    onExitDOM() {
        if (this.isOpen()) {
            Popup_1.unblockPageScrolling(this);
            this._removeOpenedPopup();
        }
        _ui5_webcomponents_base_dist_delegate_ResizeHandler_js__WEBPACK_IMPORTED_MODULE_14__["default"].deregister(this, this._resizeHandler);
    }
    get _displayProp() {
        return "block";
    }
    _resize() {
        this._updateMediaRange();
    }
    /**
     * Prevents the user from interacting with the content under the block layer
     */
    _preventBlockLayerFocus(e) {
        e.preventDefault();
    }
    /**
     * Temporarily removes scrollbars from the html element
     * @protected
     */
    static blockPageScrolling(popup) {
        pageScrollingBlockers.add(popup);
        if (pageScrollingBlockers.size !== 1) {
            return;
        }
        document.documentElement.classList.add("ui5-popup-scroll-blocker");
    }
    /**
     * Restores scrollbars on the html element, if needed
     * @protected
     */
    static unblockPageScrolling(popup) {
        pageScrollingBlockers.delete(popup);
        if (pageScrollingBlockers.size !== 0) {
            return;
        }
        document.documentElement.classList.remove("ui5-popup-scroll-blocker");
    }
    _scroll(e) {
        this.fireEvent("scroll", {
            scrollTop: e.target.scrollTop,
            targetRef: e.target,
        });
    }
    _onkeydown(e) {
        const isTabOutAttempt = e.target === this._root && (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_12__.isTabPrevious)(e);
        // if the popup is closed, focus is already moved, so Enter keydown may result in click on the newly focused element
        const isEnterOnClosedPopupChild = (0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_12__.isEnter)(e) && !this.isOpen();
        if (isTabOutAttempt || isEnterOnClosedPopupChild) {
            e.preventDefault();
        }
    }
    _onfocusout(e) {
        // relatedTarget is the element, which will get focus. If no such element exists, focus the root.
        // This happens after the mouse is released in order to not interrupt text selection.
        if (!e.relatedTarget) {
            this._shouldFocusRoot = true;
        }
    }
    _onmousedown(e) {
        if (!(0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_7__.isSafari)()) { // Remove when adopting native dialog
            this._root.removeAttribute("tabindex");
        }
        if (this.shadowRoot.contains(e.target)) {
            this._shouldFocusRoot = true;
        }
        else {
            this._shouldFocusRoot = false;
        }
    }
    _onmouseup() {
        if (!(0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_7__.isSafari)()) { // Remove when adopting native dialog
            this._root.tabIndex = -1;
        }
        if (this._shouldFocusRoot) {
            if ((0,_ui5_webcomponents_base_dist_Device_js__WEBPACK_IMPORTED_MODULE_7__.isChrome)()) {
                this._root.focus();
            }
            this._shouldFocusRoot = false;
        }
    }
    /**
     * Focus trapping
     * @private
     */
    async forwardToFirst() {
        const firstFocusable = await (0,_ui5_webcomponents_base_dist_util_FocusableElements_js__WEBPACK_IMPORTED_MODULE_8__.getFirstFocusableElement)(this);
        if (firstFocusable) {
            firstFocusable.focus();
        }
        else {
            this._root.focus();
        }
    }
    /**
     * Focus trapping
     * @private
     */
    async forwardToLast() {
        const lastFocusable = await (0,_ui5_webcomponents_base_dist_util_FocusableElements_js__WEBPACK_IMPORTED_MODULE_8__.getLastFocusableElement)(this);
        if (lastFocusable) {
            lastFocusable.focus();
        }
        else {
            this._root.focus();
        }
    }
    /**
     * Use this method to focus the element denoted by "initialFocus", if provided, or the first focusable element otherwise.
     * @protected
     */
    async applyInitialFocus() {
        await this.applyFocus();
    }
    /**
     * Focuses the element denoted by <code>initialFocus</code>, if provided,
     * or the first focusable element otherwise.
     * @public
     * @method
     * @name sap.ui.webc.main.Popup#applyFocus
     * @async
     * @returns {Promise} Promise that resolves when the focus is applied
     */
    async applyFocus() {
        await this._waitForDomRef();
        if (this.getRootNode() === this) {
            return;
        }
        let element;
        if (this.initialFocus) {
            element = this.getRootNode().getElementById(this.initialFocus)
                || document.getElementById(this.initialFocus);
        }
        element = element || await (0,_ui5_webcomponents_base_dist_util_FocusableElements_js__WEBPACK_IMPORTED_MODULE_8__.getFirstFocusableElement)(this) || this._root; // in case of no focusable content focus the root
        if (element) {
            if (element === this._root) {
                element.tabIndex = -1;
            }
            element.focus();
        }
    }
    /**
     * Tells if the component is opened
     * @public
     * @method
     * @name sap.ui.webc.main.Popup#isOpen
     * @returns {boolean}
     */
    isOpen() {
        return this.opened;
    }
    isFocusWithin() {
        return (0,_ui5_webcomponents_base_dist_util_PopupUtils_js__WEBPACK_IMPORTED_MODULE_13__.isFocusedElementWithinNode)(this._root);
    }
    /**
     * Shows the block layer (for modal popups only) and sets the correct z-index for the purpose of popup stacking
     * @protected
     */
    async _open(preventInitialFocus) {
        const prevented = !this.fireEvent("before-open", {}, true, false);
        if (prevented) {
            return;
        }
        if (this.isModal && !this.shouldHideBackdrop) {
            // create static area item ref for block layer
            this.getStaticAreaItemDomRef();
            this._blockLayerHidden = false;
            Popup_1.blockPageScrolling(this);
        }
        this._zIndex = (0,_ui5_webcomponents_base_dist_util_PopupUtils_js__WEBPACK_IMPORTED_MODULE_13__.getNextZIndex)();
        this.style.zIndex = this._zIndex?.toString() || "";
        this._focusedElementBeforeOpen = (0,_ui5_webcomponents_base_dist_util_PopupUtils_js__WEBPACK_IMPORTED_MODULE_13__.getFocusedElement)();
        this._show();
        if (this.getDomRef()) {
            this._updateMediaRange();
        }
        this._addOpenedPopup();
        this.opened = true;
        this.open = true;
        await (0,_ui5_webcomponents_base_dist_Render_js__WEBPACK_IMPORTED_MODULE_1__.renderFinished)();
        if (!this._disableInitialFocus && !preventInitialFocus) {
            await this.applyInitialFocus();
        }
        this.fireEvent("after-open", {}, false, false);
    }
    _updateMediaRange() {
        this.mediaRange = _ui5_webcomponents_base_dist_MediaRange_js__WEBPACK_IMPORTED_MODULE_15__["default"].getCurrentRange(_ui5_webcomponents_base_dist_MediaRange_js__WEBPACK_IMPORTED_MODULE_15__["default"].RANGESETS.RANGE_4STEPS, this.getDomRef().offsetWidth);
    }
    /**
     * Adds the popup to the "opened popups registry"
     * @protected
     */
    _addOpenedPopup() {
        (0,_popup_utils_OpenedPopupsRegistry_js__WEBPACK_IMPORTED_MODULE_19__.addOpenedPopup)(this);
    }
    /**
     * Closes the popup.
     * @public
     * @method
     * @name sap.ui.webc.main.Popup#close
     * @returns {void}
     */
    close(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
        if (!this.opened) {
            return;
        }
        const prevented = !this.fireEvent("before-close", { escPressed }, true, false);
        if (prevented) {
            return;
        }
        if (this.isModal) {
            this._blockLayerHidden = true;
            Popup_1.unblockPageScrolling(this);
        }
        this.hide();
        this.opened = false;
        this.open = false;
        if (!preventRegistryUpdate) {
            this._removeOpenedPopup();
        }
        if (!this.preventFocusRestore && !preventFocusRestore) {
            this.resetFocus();
        }
        this.fireEvent("after-close", {}, false, false);
    }
    /**
     * Removes the popup from the "opened popups registry"
     * @protected
     */
    _removeOpenedPopup() {
        (0,_popup_utils_OpenedPopupsRegistry_js__WEBPACK_IMPORTED_MODULE_19__.removeOpenedPopup)(this);
    }
    /**
     * Returns the focus to the previously focused element
     * @protected
     */
    resetFocus() {
        if (!this._focusedElementBeforeOpen) {
            return;
        }
        this._focusedElementBeforeOpen.focus();
        this._focusedElementBeforeOpen = null;
    }
    /**
     * Sets "block" display to the popup. The property can be overriden by derivatives of Popup.
     * @protected
     */
    _show() {
        this.style.display = this._displayProp;
    }
    /**
     * Sets "none" display to the popup
     * @protected
     */
    hide() {
        this.style.display = "none";
    }
    /**
     * Ensures ariaLabel is never null or empty string
     * @returns {string | undefined}
     * @protected
     */
    get _ariaLabel() {
        return (0,_ui5_webcomponents_base_dist_util_AriaLabelHelper_js__WEBPACK_IMPORTED_MODULE_9__.getEffectiveAriaLabelText)(this);
    }
    get _root() {
        return this.shadowRoot.querySelector(".ui5-popup-root");
    }
    get _role() {
        return (this.accessibleRole === _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_18__["default"].None) ? undefined : this.accessibleRole.toLowerCase();
    }
    get _ariaModal() {
        return this.accessibleRole === _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_18__["default"].None ? undefined : "true";
    }
    get contentDOM() {
        return this.shadowRoot.querySelector(".ui5-popup-content");
    }
    get styles() {
        return {
            root: {},
            content: {},
            blockLayer: {
                "zIndex": this._zIndex ? this._zIndex - 1 : "",
            },
        };
    }
    get classes() {
        return {
            root: {
                "ui5-popup-root": true,
                "ui5-content-native-scrollbars": (0,_ui5_webcomponents_base_dist_util_getEffectiveScrollbarStyle_js__WEBPACK_IMPORTED_MODULE_10__["default"])(),
            },
            content: {
                "ui5-popup-content": true,
            },
        };
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Popup.prototype, "initialFocus", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Popup.prototype, "preventFocusRestore", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Popup.prototype, "open", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean, noAttribute: true })
], Popup.prototype, "opened", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ defaultValue: undefined })
], Popup.prototype, "accessibleName", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ defaultValue: "" })
], Popup.prototype, "accessibleNameRef", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_18__["default"], defaultValue: _types_PopupAccessibleRole_js__WEBPACK_IMPORTED_MODULE_18__["default"].Dialog })
], Popup.prototype, "accessibleRole", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])()
], Popup.prototype, "mediaRange", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Popup.prototype, "_disableInitialFocus", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean })
], Popup.prototype, "_blockLayerHidden", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])({ type: Boolean, noAttribute: true })
], Popup.prototype, "isTopModalPopup", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_slot_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: HTMLElement, "default": true })
], Popup.prototype, "content", void 0);
Popup = Popup_1 = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_5__["default"],
        styles: _generated_themes_Popup_css_js__WEBPACK_IMPORTED_MODULE_20__["default"],
        template: _generated_templates_PopupTemplate_lit_js__WEBPACK_IMPORTED_MODULE_16__["default"],
        staticAreaTemplate: _generated_templates_PopupBlockLayerTemplate_lit_js__WEBPACK_IMPORTED_MODULE_17__["default"],
        staticAreaStyles: _generated_themes_PopupStaticAreaStyles_css_js__WEBPACK_IMPORTED_MODULE_21__["default"],
    })
    /**
     * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. <b>This event does not bubble.</b>
     *
     * @public
     * @event sap.ui.webc.main.Popup#before-open
     * @allowPreventDefault
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__["default"])("before-open")
    /**
     * Fired after the component is opened. <b>This event does not bubble.</b>
     *
     * @public
     * @event sap.ui.webc.main.Popup#after-open
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__["default"])("after-open")
    /**
     * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. <b>This event does not bubble.</b>
     *
     * @public
     * @event sap.ui.webc.main.Popup#before-close
     * @allowPreventDefault
     * @param {boolean} escPressed Indicates that <code>ESC</code> key has triggered the event.
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__["default"])("before-close", {
        escPressed: { type: Boolean },
    })
    /**
     * Fired after the component is closed. <b>This event does not bubble.</b>
     *
     * @public
     * @event sap.ui.webc.main.Popup#after-close
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__["default"])("after-close")
    /**
     * Fired whenever the popup content area is scrolled
     *
     * @private
     * @event sap.ui.webc.main.Popup#scroll
     */
    ,
    (0,_ui5_webcomponents_base_dist_decorators_event_js__WEBPACK_IMPORTED_MODULE_2__["default"])("scroll")
], Popup);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Popup);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/Title.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/Title.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/UI5Element.js */ "./node_modules/@ui5/webcomponents-base/dist/UI5Element.js");
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/customElement.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js");
/* harmony import */ var _ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/decorators/property.js */ "./node_modules/@ui5/webcomponents-base/dist/decorators/property.js");
/* harmony import */ var _types_TitleLevel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types/TitleLevel.js */ "./node_modules/@ui5/webcomponents/dist/types/TitleLevel.js");
/* harmony import */ var _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types/WrappingType.js */ "./node_modules/@ui5/webcomponents/dist/types/WrappingType.js");
/* harmony import */ var _generated_templates_TitleTemplate_lit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generated/templates/TitleTemplate.lit.js */ "./node_modules/@ui5/webcomponents/dist/generated/templates/TitleTemplate.lit.js");
/* harmony import */ var _generated_themes_Title_css_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/themes/Title.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/Title.css.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






// Template

// Styles

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>ui5-title</code> component is used to display titles inside a page.
 * It is a simple, large-sized text with explicit header/title semantics.
 *
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@ui5/webcomponents/dist/Title";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.main.Title
 * @extends sap.ui.webc.base.UI5Element
 * @tagname ui5-title
 * @public
 */
let Title = class Title extends _ui5_webcomponents_base_dist_UI5Element_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Defines the text of the component.
     * This component supports nesting a <code>Link</code> component inside.
     * <br><br>
     * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
     *
     * @type {Node[]}
     * @slot
     * @name sap.ui.webc.main.Title.prototype.default
     * @public
     */
    get normalizedLevel() {
        return this.level.toLowerCase();
    }
    get h1() {
        return this.normalizedLevel === "h1";
    }
    get h2() {
        return this.normalizedLevel === "h2";
    }
    get h3() {
        return this.normalizedLevel === "h3";
    }
    get h4() {
        return this.normalizedLevel === "h4";
    }
    get h5() {
        return this.normalizedLevel === "h5";
    }
    get h6() {
        return this.normalizedLevel === "h6";
    }
};
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__["default"], defaultValue: _types_WrappingType_js__WEBPACK_IMPORTED_MODULE_5__["default"].None })
], Title.prototype, "wrappingType", void 0);
__decorate([
    (0,_ui5_webcomponents_base_dist_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__["default"])({ type: _types_TitleLevel_js__WEBPACK_IMPORTED_MODULE_4__["default"], defaultValue: _types_TitleLevel_js__WEBPACK_IMPORTED_MODULE_4__["default"].H2 })
], Title.prototype, "level", void 0);
Title = __decorate([
    (0,_ui5_webcomponents_base_dist_decorators_customElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
        tag: "ui5-title",
        renderer: _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        template: _generated_templates_TitleTemplate_lit_js__WEBPACK_IMPORTED_MODULE_6__["default"],
        styles: _generated_themes_Title_css_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    })
], Title);
Title.define();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Title);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ARIA_LABEL_CARD_CONTENT: () => (/* binding */ ARIA_LABEL_CARD_CONTENT),
/* harmony export */   ARIA_LABEL_EMPTY_CELL: () => (/* binding */ ARIA_LABEL_EMPTY_CELL),
/* harmony export */   ARIA_LABEL_LIST_DELETABLE: () => (/* binding */ ARIA_LABEL_LIST_DELETABLE),
/* harmony export */   ARIA_LABEL_LIST_ITEM_CHECKBOX: () => (/* binding */ ARIA_LABEL_LIST_ITEM_CHECKBOX),
/* harmony export */   ARIA_LABEL_LIST_ITEM_RADIO_BUTTON: () => (/* binding */ ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),
/* harmony export */   ARIA_LABEL_LIST_MULTISELECTABLE: () => (/* binding */ ARIA_LABEL_LIST_MULTISELECTABLE),
/* harmony export */   ARIA_LABEL_LIST_SELECTABLE: () => (/* binding */ ARIA_LABEL_LIST_SELECTABLE),
/* harmony export */   ARIA_LABEL_ROW_SELECTION: () => (/* binding */ ARIA_LABEL_ROW_SELECTION),
/* harmony export */   ARIA_LABEL_SELECT_ALL_CHECKBOX: () => (/* binding */ ARIA_LABEL_SELECT_ALL_CHECKBOX),
/* harmony export */   ARIA_ROLEDESCRIPTION_CARD: () => (/* binding */ ARIA_ROLEDESCRIPTION_CARD),
/* harmony export */   ARIA_ROLEDESCRIPTION_CARD_HEADER: () => (/* binding */ ARIA_ROLEDESCRIPTION_CARD_HEADER),
/* harmony export */   ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER: () => (/* binding */ ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER),
/* harmony export */   AVATAR_GROUP_ARIA_LABEL_GROUP: () => (/* binding */ AVATAR_GROUP_ARIA_LABEL_GROUP),
/* harmony export */   AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL: () => (/* binding */ AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL),
/* harmony export */   AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL: () => (/* binding */ AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL),
/* harmony export */   AVATAR_GROUP_MOVE: () => (/* binding */ AVATAR_GROUP_MOVE),
/* harmony export */   AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL: () => (/* binding */ AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL),
/* harmony export */   AVATAR_TOOLTIP: () => (/* binding */ AVATAR_TOOLTIP),
/* harmony export */   BADGE_DESCRIPTION: () => (/* binding */ BADGE_DESCRIPTION),
/* harmony export */   BREADCRUMBS_ARIA_LABEL: () => (/* binding */ BREADCRUMBS_ARIA_LABEL),
/* harmony export */   BREADCRUMBS_CANCEL_BUTTON: () => (/* binding */ BREADCRUMBS_CANCEL_BUTTON),
/* harmony export */   BREADCRUMBS_OVERFLOW_ARIA_LABEL: () => (/* binding */ BREADCRUMBS_OVERFLOW_ARIA_LABEL),
/* harmony export */   BREADCRUMB_ITEM_POS: () => (/* binding */ BREADCRUMB_ITEM_POS),
/* harmony export */   BUSY_INDICATOR_TITLE: () => (/* binding */ BUSY_INDICATOR_TITLE),
/* harmony export */   BUTTON_ARIA_TYPE_ACCEPT: () => (/* binding */ BUTTON_ARIA_TYPE_ACCEPT),
/* harmony export */   BUTTON_ARIA_TYPE_EMPHASIZED: () => (/* binding */ BUTTON_ARIA_TYPE_EMPHASIZED),
/* harmony export */   BUTTON_ARIA_TYPE_REJECT: () => (/* binding */ BUTTON_ARIA_TYPE_REJECT),
/* harmony export */   CALENDAR_HEADER_NEXT_BUTTON: () => (/* binding */ CALENDAR_HEADER_NEXT_BUTTON),
/* harmony export */   CALENDAR_HEADER_PREVIOUS_BUTTON: () => (/* binding */ CALENDAR_HEADER_PREVIOUS_BUTTON),
/* harmony export */   CAROUSEL_DOT_TEXT: () => (/* binding */ CAROUSEL_DOT_TEXT),
/* harmony export */   CAROUSEL_NEXT_ARROW_TEXT: () => (/* binding */ CAROUSEL_NEXT_ARROW_TEXT),
/* harmony export */   CAROUSEL_OF_TEXT: () => (/* binding */ CAROUSEL_OF_TEXT),
/* harmony export */   CAROUSEL_PREVIOUS_ARROW_TEXT: () => (/* binding */ CAROUSEL_PREVIOUS_ARROW_TEXT),
/* harmony export */   COLORPALETTE_COLOR_LABEL: () => (/* binding */ COLORPALETTE_COLOR_LABEL),
/* harmony export */   COLORPALETTE_CONTAINER_LABEL: () => (/* binding */ COLORPALETTE_CONTAINER_LABEL),
/* harmony export */   COLORPALETTE_POPOVER_TITLE: () => (/* binding */ COLORPALETTE_POPOVER_TITLE),
/* harmony export */   COLORPICKER_ALPHA: () => (/* binding */ COLORPICKER_ALPHA),
/* harmony export */   COLORPICKER_ALPHA_SLIDER: () => (/* binding */ COLORPICKER_ALPHA_SLIDER),
/* harmony export */   COLORPICKER_BLUE: () => (/* binding */ COLORPICKER_BLUE),
/* harmony export */   COLORPICKER_GREEN: () => (/* binding */ COLORPICKER_GREEN),
/* harmony export */   COLORPICKER_HEX: () => (/* binding */ COLORPICKER_HEX),
/* harmony export */   COLORPICKER_HUE_SLIDER: () => (/* binding */ COLORPICKER_HUE_SLIDER),
/* harmony export */   COLORPICKER_RED: () => (/* binding */ COLORPICKER_RED),
/* harmony export */   COLOR_PALETTE_DIALOG_CANCEL_BUTTON: () => (/* binding */ COLOR_PALETTE_DIALOG_CANCEL_BUTTON),
/* harmony export */   COLOR_PALETTE_DIALOG_OK_BUTTON: () => (/* binding */ COLOR_PALETTE_DIALOG_OK_BUTTON),
/* harmony export */   COLOR_PALETTE_DIALOG_TITLE: () => (/* binding */ COLOR_PALETTE_DIALOG_TITLE),
/* harmony export */   COLOR_PALETTE_MORE_COLORS_TEXT: () => (/* binding */ COLOR_PALETTE_MORE_COLORS_TEXT),
/* harmony export */   DATEPICKER_DATE_DESCRIPTION: () => (/* binding */ DATEPICKER_DATE_DESCRIPTION),
/* harmony export */   DATEPICKER_OPEN_ICON_TITLE: () => (/* binding */ DATEPICKER_OPEN_ICON_TITLE),
/* harmony export */   DATERANGE_DESCRIPTION: () => (/* binding */ DATERANGE_DESCRIPTION),
/* harmony export */   DATETIME_DESCRIPTION: () => (/* binding */ DATETIME_DESCRIPTION),
/* harmony export */   DATETIME_PICKER_DATE_BUTTON: () => (/* binding */ DATETIME_PICKER_DATE_BUTTON),
/* harmony export */   DATETIME_PICKER_TIME_BUTTON: () => (/* binding */ DATETIME_PICKER_TIME_BUTTON),
/* harmony export */   DAY_PICKER_NON_WORKING_DAY: () => (/* binding */ DAY_PICKER_NON_WORKING_DAY),
/* harmony export */   DAY_PICKER_TODAY: () => (/* binding */ DAY_PICKER_TODAY),
/* harmony export */   DAY_PICKER_WEEK_NUMBER_TEXT: () => (/* binding */ DAY_PICKER_WEEK_NUMBER_TEXT),
/* harmony export */   DELETE: () => (/* binding */ DELETE),
/* harmony export */   DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE: () => (/* binding */ DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE),
/* harmony export */   DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE: () => (/* binding */ DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE),
/* harmony export */   DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE: () => (/* binding */ DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE),
/* harmony export */   DIALOG_HEADER_ARIA_ROLE_DESCRIPTION: () => (/* binding */ DIALOG_HEADER_ARIA_ROLE_DESCRIPTION),
/* harmony export */   DURATION_INPUT_DESCRIPTION: () => (/* binding */ DURATION_INPUT_DESCRIPTION),
/* harmony export */   FILEUPLOADER_TITLE: () => (/* binding */ FILEUPLOADER_TITLE),
/* harmony export */   FILEUPLOAD_BROWSE: () => (/* binding */ FILEUPLOAD_BROWSE),
/* harmony export */   GROUP_HEADER_TEXT: () => (/* binding */ GROUP_HEADER_TEXT),
/* harmony export */   INPUT_CLEAR_ICON_ACC_NAME: () => (/* binding */ INPUT_CLEAR_ICON_ACC_NAME),
/* harmony export */   INPUT_SUGGESTIONS: () => (/* binding */ INPUT_SUGGESTIONS),
/* harmony export */   INPUT_SUGGESTIONS_MORE_HITS: () => (/* binding */ INPUT_SUGGESTIONS_MORE_HITS),
/* harmony export */   INPUT_SUGGESTIONS_NO_HIT: () => (/* binding */ INPUT_SUGGESTIONS_NO_HIT),
/* harmony export */   INPUT_SUGGESTIONS_ONE_HIT: () => (/* binding */ INPUT_SUGGESTIONS_ONE_HIT),
/* harmony export */   INPUT_SUGGESTIONS_TITLE: () => (/* binding */ INPUT_SUGGESTIONS_TITLE),
/* harmony export */   LABEL_COLON: () => (/* binding */ LABEL_COLON),
/* harmony export */   LINK_EMPHASIZED: () => (/* binding */ LINK_EMPHASIZED),
/* harmony export */   LINK_SUBTLE: () => (/* binding */ LINK_SUBTLE),
/* harmony export */   LIST_ITEM_GROUP_HEADER: () => (/* binding */ LIST_ITEM_GROUP_HEADER),
/* harmony export */   LIST_ITEM_NOT_SELECTED: () => (/* binding */ LIST_ITEM_NOT_SELECTED),
/* harmony export */   LIST_ITEM_POSITION: () => (/* binding */ LIST_ITEM_POSITION),
/* harmony export */   LIST_ITEM_SELECTED: () => (/* binding */ LIST_ITEM_SELECTED),
/* harmony export */   LOAD_MORE_TEXT: () => (/* binding */ LOAD_MORE_TEXT),
/* harmony export */   MENU_BACK_BUTTON_ARIA_LABEL: () => (/* binding */ MENU_BACK_BUTTON_ARIA_LABEL),
/* harmony export */   MENU_CLOSE_BUTTON_ARIA_LABEL: () => (/* binding */ MENU_CLOSE_BUTTON_ARIA_LABEL),
/* harmony export */   MESSAGE_STRIP_CLOSABLE: () => (/* binding */ MESSAGE_STRIP_CLOSABLE),
/* harmony export */   MESSAGE_STRIP_CLOSE_BUTTON: () => (/* binding */ MESSAGE_STRIP_CLOSE_BUTTON),
/* harmony export */   MESSAGE_STRIP_ERROR: () => (/* binding */ MESSAGE_STRIP_ERROR),
/* harmony export */   MESSAGE_STRIP_INFORMATION: () => (/* binding */ MESSAGE_STRIP_INFORMATION),
/* harmony export */   MESSAGE_STRIP_SUCCESS: () => (/* binding */ MESSAGE_STRIP_SUCCESS),
/* harmony export */   MESSAGE_STRIP_WARNING: () => (/* binding */ MESSAGE_STRIP_WARNING),
/* harmony export */   MONTH_PICKER_DESCRIPTION: () => (/* binding */ MONTH_PICKER_DESCRIPTION),
/* harmony export */   MULTICOMBOBOX_DIALOG_OK_BUTTON: () => (/* binding */ MULTICOMBOBOX_DIALOG_OK_BUTTON),
/* harmony export */   MULTIINPUT_ROLEDESCRIPTION_TEXT: () => (/* binding */ MULTIINPUT_ROLEDESCRIPTION_TEXT),
/* harmony export */   MULTIINPUT_SHOW_MORE_TOKENS: () => (/* binding */ MULTIINPUT_SHOW_MORE_TOKENS),
/* harmony export */   PANEL_ICON: () => (/* binding */ PANEL_ICON),
/* harmony export */   RADIO_BUTTON_GROUP_REQUIRED: () => (/* binding */ RADIO_BUTTON_GROUP_REQUIRED),
/* harmony export */   RANGE_SLIDER_ARIA_DESCRIPTION: () => (/* binding */ RANGE_SLIDER_ARIA_DESCRIPTION),
/* harmony export */   RANGE_SLIDER_END_HANDLE_DESCRIPTION: () => (/* binding */ RANGE_SLIDER_END_HANDLE_DESCRIPTION),
/* harmony export */   RANGE_SLIDER_START_HANDLE_DESCRIPTION: () => (/* binding */ RANGE_SLIDER_START_HANDLE_DESCRIPTION),
/* harmony export */   RATING_INDICATOR_ARIA_DESCRIPTION: () => (/* binding */ RATING_INDICATOR_ARIA_DESCRIPTION),
/* harmony export */   RATING_INDICATOR_TEXT: () => (/* binding */ RATING_INDICATOR_TEXT),
/* harmony export */   RATING_INDICATOR_TOOLTIP_TEXT: () => (/* binding */ RATING_INDICATOR_TOOLTIP_TEXT),
/* harmony export */   RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON: () => (/* binding */ RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON),
/* harmony export */   SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION: () => (/* binding */ SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION),
/* harmony export */   SEGMENTEDBUTTON_ARIA_DESCRIBEDBY: () => (/* binding */ SEGMENTEDBUTTON_ARIA_DESCRIBEDBY),
/* harmony export */   SEGMENTEDBUTTON_ARIA_DESCRIPTION: () => (/* binding */ SEGMENTEDBUTTON_ARIA_DESCRIPTION),
/* harmony export */   SELECT_OPTIONS: () => (/* binding */ SELECT_OPTIONS),
/* harmony export */   SELECT_ROLE_DESCRIPTION: () => (/* binding */ SELECT_ROLE_DESCRIPTION),
/* harmony export */   SLIDER_ARIA_DESCRIPTION: () => (/* binding */ SLIDER_ARIA_DESCRIPTION),
/* harmony export */   SPLIT_BUTTON_DESCRIPTION: () => (/* binding */ SPLIT_BUTTON_DESCRIPTION),
/* harmony export */   SPLIT_BUTTON_KEYBOARD_HINT: () => (/* binding */ SPLIT_BUTTON_KEYBOARD_HINT),
/* harmony export */   STEPINPUT_DEC_ICON_TITLE: () => (/* binding */ STEPINPUT_DEC_ICON_TITLE),
/* harmony export */   STEPINPUT_INC_ICON_TITLE: () => (/* binding */ STEPINPUT_INC_ICON_TITLE),
/* harmony export */   TABCONTAINER_END_OVERFLOW: () => (/* binding */ TABCONTAINER_END_OVERFLOW),
/* harmony export */   TABCONTAINER_NEXT_ICON_ACC_NAME: () => (/* binding */ TABCONTAINER_NEXT_ICON_ACC_NAME),
/* harmony export */   TABCONTAINER_OVERFLOW_MENU_TITLE: () => (/* binding */ TABCONTAINER_OVERFLOW_MENU_TITLE),
/* harmony export */   TABCONTAINER_POPOVER_CANCEL_BUTTON: () => (/* binding */ TABCONTAINER_POPOVER_CANCEL_BUTTON),
/* harmony export */   TABCONTAINER_PREVIOUS_ICON_ACC_NAME: () => (/* binding */ TABCONTAINER_PREVIOUS_ICON_ACC_NAME),
/* harmony export */   TABCONTAINER_SUBTABS_DESCRIPTION: () => (/* binding */ TABCONTAINER_SUBTABS_DESCRIPTION),
/* harmony export */   TABLE_GROUP_ROW_ARIA_LABEL: () => (/* binding */ TABLE_GROUP_ROW_ARIA_LABEL),
/* harmony export */   TABLE_HEADER_ROW_INFORMATION: () => (/* binding */ TABLE_HEADER_ROW_INFORMATION),
/* harmony export */   TABLE_ROW_POSITION: () => (/* binding */ TABLE_ROW_POSITION),
/* harmony export */   TAB_ARIA_DESIGN_CRITICAL: () => (/* binding */ TAB_ARIA_DESIGN_CRITICAL),
/* harmony export */   TAB_ARIA_DESIGN_NEGATIVE: () => (/* binding */ TAB_ARIA_DESIGN_NEGATIVE),
/* harmony export */   TAB_ARIA_DESIGN_NEUTRAL: () => (/* binding */ TAB_ARIA_DESIGN_NEUTRAL),
/* harmony export */   TAB_ARIA_DESIGN_POSITIVE: () => (/* binding */ TAB_ARIA_DESIGN_POSITIVE),
/* harmony export */   TAB_SPLIT_ROLE_DESCRIPTION: () => (/* binding */ TAB_SPLIT_ROLE_DESCRIPTION),
/* harmony export */   TEXTAREA_CHARACTERS_EXCEEDED: () => (/* binding */ TEXTAREA_CHARACTERS_EXCEEDED),
/* harmony export */   TEXTAREA_CHARACTERS_LEFT: () => (/* binding */ TEXTAREA_CHARACTERS_LEFT),
/* harmony export */   TIMEPICKER_CANCEL_BUTTON: () => (/* binding */ TIMEPICKER_CANCEL_BUTTON),
/* harmony export */   TIMEPICKER_CLOCK_DIAL_LABEL: () => (/* binding */ TIMEPICKER_CLOCK_DIAL_LABEL),
/* harmony export */   TIMEPICKER_HOURS_LABEL: () => (/* binding */ TIMEPICKER_HOURS_LABEL),
/* harmony export */   TIMEPICKER_INPUTS_ENTER_HOURS: () => (/* binding */ TIMEPICKER_INPUTS_ENTER_HOURS),
/* harmony export */   TIMEPICKER_INPUTS_ENTER_MINUTES: () => (/* binding */ TIMEPICKER_INPUTS_ENTER_MINUTES),
/* harmony export */   TIMEPICKER_INPUTS_ENTER_SECONDS: () => (/* binding */ TIMEPICKER_INPUTS_ENTER_SECONDS),
/* harmony export */   TIMEPICKER_INPUT_DESCRIPTION: () => (/* binding */ TIMEPICKER_INPUT_DESCRIPTION),
/* harmony export */   TIMEPICKER_MINUTES_LABEL: () => (/* binding */ TIMEPICKER_MINUTES_LABEL),
/* harmony export */   TIMEPICKER_SECONDS_LABEL: () => (/* binding */ TIMEPICKER_SECONDS_LABEL),
/* harmony export */   TIMEPICKER_SUBMIT_BUTTON: () => (/* binding */ TIMEPICKER_SUBMIT_BUTTON),
/* harmony export */   TOKENIZER_ARIA_CONTAIN_ONE_TOKEN: () => (/* binding */ TOKENIZER_ARIA_CONTAIN_ONE_TOKEN),
/* harmony export */   TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS: () => (/* binding */ TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS),
/* harmony export */   TOKENIZER_ARIA_CONTAIN_TOKEN: () => (/* binding */ TOKENIZER_ARIA_CONTAIN_TOKEN),
/* harmony export */   TOKENIZER_ARIA_LABEL: () => (/* binding */ TOKENIZER_ARIA_LABEL),
/* harmony export */   TOKENIZER_POPOVER_REMOVE: () => (/* binding */ TOKENIZER_POPOVER_REMOVE),
/* harmony export */   TOKENIZER_SHOW_ALL_ITEMS: () => (/* binding */ TOKENIZER_SHOW_ALL_ITEMS),
/* harmony export */   TOKEN_ARIA_DELETABLE: () => (/* binding */ TOKEN_ARIA_DELETABLE),
/* harmony export */   TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL: () => (/* binding */ TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL),
/* harmony export */   TREE_ITEM_ARIA_LABEL: () => (/* binding */ TREE_ITEM_ARIA_LABEL),
/* harmony export */   TREE_ITEM_COLLAPSE_NODE: () => (/* binding */ TREE_ITEM_COLLAPSE_NODE),
/* harmony export */   TREE_ITEM_EXPAND_NODE: () => (/* binding */ TREE_ITEM_EXPAND_NODE),
/* harmony export */   VALUE_STATE_ERROR: () => (/* binding */ VALUE_STATE_ERROR),
/* harmony export */   VALUE_STATE_ERROR_ALREADY_SELECTED: () => (/* binding */ VALUE_STATE_ERROR_ALREADY_SELECTED),
/* harmony export */   VALUE_STATE_INFORMATION: () => (/* binding */ VALUE_STATE_INFORMATION),
/* harmony export */   VALUE_STATE_SUCCESS: () => (/* binding */ VALUE_STATE_SUCCESS),
/* harmony export */   VALUE_STATE_TYPE_ERROR: () => (/* binding */ VALUE_STATE_TYPE_ERROR),
/* harmony export */   VALUE_STATE_TYPE_INFORMATION: () => (/* binding */ VALUE_STATE_TYPE_INFORMATION),
/* harmony export */   VALUE_STATE_TYPE_SUCCESS: () => (/* binding */ VALUE_STATE_TYPE_SUCCESS),
/* harmony export */   VALUE_STATE_TYPE_WARNING: () => (/* binding */ VALUE_STATE_TYPE_WARNING),
/* harmony export */   VALUE_STATE_WARNING: () => (/* binding */ VALUE_STATE_WARNING),
/* harmony export */   YEAR_PICKER_DESCRIPTION: () => (/* binding */ YEAR_PICKER_DESCRIPTION)
/* harmony export */ });
const ARIA_LABEL_CARD_CONTENT = { key: "ARIA_LABEL_CARD_CONTENT", defaultText: "Card Content" };
const ARIA_ROLEDESCRIPTION_CARD = { key: "ARIA_ROLEDESCRIPTION_CARD", defaultText: "Card" };
const ARIA_ROLEDESCRIPTION_CARD_HEADER = { key: "ARIA_ROLEDESCRIPTION_CARD_HEADER", defaultText: "Card Header" };
const ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER = { key: "ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER", defaultText: "Interactive Card Header" };
const AVATAR_TOOLTIP = { key: "AVATAR_TOOLTIP", defaultText: "Avatar" };
const AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL = { key: "AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL", defaultText: "{0} displayed, {1} hidden." };
const AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL = { key: "AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL", defaultText: "Activate for complete list." };
const AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL = { key: "AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL", defaultText: "Individual avatars." };
const AVATAR_GROUP_ARIA_LABEL_GROUP = { key: "AVATAR_GROUP_ARIA_LABEL_GROUP", defaultText: "Conjoined avatars." };
const AVATAR_GROUP_MOVE = { key: "AVATAR_GROUP_MOVE", defaultText: "Press ARROW keys to move." };
const BADGE_DESCRIPTION = { key: "BADGE_DESCRIPTION", defaultText: "Badge" };
const BREADCRUMB_ITEM_POS = { key: "BREADCRUMB_ITEM_POS", defaultText: "{0} of {1}" };
const BREADCRUMBS_ARIA_LABEL = { key: "BREADCRUMBS_ARIA_LABEL", defaultText: "Breadcrumb Trail" };
const BREADCRUMBS_OVERFLOW_ARIA_LABEL = { key: "BREADCRUMBS_OVERFLOW_ARIA_LABEL", defaultText: "More" };
const BREADCRUMBS_CANCEL_BUTTON = { key: "BREADCRUMBS_CANCEL_BUTTON", defaultText: "Cancel" };
const BUSY_INDICATOR_TITLE = { key: "BUSY_INDICATOR_TITLE", defaultText: "Please wait" };
const BUTTON_ARIA_TYPE_ACCEPT = { key: "BUTTON_ARIA_TYPE_ACCEPT", defaultText: "Positive Action" };
const BUTTON_ARIA_TYPE_REJECT = { key: "BUTTON_ARIA_TYPE_REJECT", defaultText: "Negative Action" };
const BUTTON_ARIA_TYPE_EMPHASIZED = { key: "BUTTON_ARIA_TYPE_EMPHASIZED", defaultText: "Emphasized" };
const CAROUSEL_OF_TEXT = { key: "CAROUSEL_OF_TEXT", defaultText: "of" };
const CAROUSEL_DOT_TEXT = { key: "CAROUSEL_DOT_TEXT", defaultText: "Item {0} of {1} displayed" };
const CAROUSEL_PREVIOUS_ARROW_TEXT = { key: "CAROUSEL_PREVIOUS_ARROW_TEXT", defaultText: "Previous Page" };
const CAROUSEL_NEXT_ARROW_TEXT = { key: "CAROUSEL_NEXT_ARROW_TEXT", defaultText: "Next Page" };
const COLORPALETTE_CONTAINER_LABEL = { key: "COLORPALETTE_CONTAINER_LABEL", defaultText: "Color palette - Predefined colors" };
const COLORPALETTE_POPOVER_TITLE = { key: "COLORPALETTE_POPOVER_TITLE", defaultText: "Color Palette" };
const COLORPALETTE_COLOR_LABEL = { key: "COLORPALETTE_COLOR_LABEL", defaultText: "Color" };
const COLOR_PALETTE_DIALOG_CANCEL_BUTTON = { key: "COLOR_PALETTE_DIALOG_CANCEL_BUTTON", defaultText: "Cancel" };
const COLOR_PALETTE_DIALOG_OK_BUTTON = { key: "COLOR_PALETTE_DIALOG_OK_BUTTON", defaultText: "OK" };
const COLOR_PALETTE_DIALOG_TITLE = { key: "COLOR_PALETTE_DIALOG_TITLE", defaultText: "Change Color" };
const COLOR_PALETTE_MORE_COLORS_TEXT = { key: "COLOR_PALETTE_MORE_COLORS_TEXT", defaultText: "More Colors..." };
const COLORPICKER_ALPHA_SLIDER = { key: "COLORPICKER_ALPHA_SLIDER", defaultText: "Alpha control" };
const COLORPICKER_HUE_SLIDER = { key: "COLORPICKER_HUE_SLIDER", defaultText: "Hue control" };
const COLORPICKER_HEX = { key: "COLORPICKER_HEX", defaultText: "Hexadecimal" };
const COLORPICKER_RED = { key: "COLORPICKER_RED", defaultText: "Red" };
const COLORPICKER_GREEN = { key: "COLORPICKER_GREEN", defaultText: "Green" };
const COLORPICKER_BLUE = { key: "COLORPICKER_BLUE", defaultText: "Blue" };
const COLORPICKER_ALPHA = { key: "COLORPICKER_ALPHA", defaultText: "Alpha" };
const DATEPICKER_OPEN_ICON_TITLE = { key: "DATEPICKER_OPEN_ICON_TITLE", defaultText: "Open Picker" };
const DATEPICKER_DATE_DESCRIPTION = { key: "DATEPICKER_DATE_DESCRIPTION", defaultText: "Date Input" };
const DATETIME_DESCRIPTION = { key: "DATETIME_DESCRIPTION", defaultText: "Date Time Input" };
const DATERANGE_DESCRIPTION = { key: "DATERANGE_DESCRIPTION", defaultText: "Date Range Input" };
const DELETE = { key: "DELETE", defaultText: "Delete" };
const FILEUPLOAD_BROWSE = { key: "FILEUPLOAD_BROWSE", defaultText: "Browse..." };
const FILEUPLOADER_TITLE = { key: "FILEUPLOADER_TITLE", defaultText: "Upload File" };
const GROUP_HEADER_TEXT = { key: "GROUP_HEADER_TEXT", defaultText: "Group Header" };
const SELECT_ROLE_DESCRIPTION = { key: "SELECT_ROLE_DESCRIPTION", defaultText: "Listbox" };
const SELECT_OPTIONS = { key: "SELECT_OPTIONS", defaultText: "Select Options" };
const INPUT_SUGGESTIONS = { key: "INPUT_SUGGESTIONS", defaultText: "Suggestions available" };
const INPUT_SUGGESTIONS_TITLE = { key: "INPUT_SUGGESTIONS_TITLE", defaultText: "Select" };
const INPUT_SUGGESTIONS_ONE_HIT = { key: "INPUT_SUGGESTIONS_ONE_HIT", defaultText: "1 result available" };
const INPUT_SUGGESTIONS_MORE_HITS = { key: "INPUT_SUGGESTIONS_MORE_HITS", defaultText: "{0} results are available" };
const INPUT_SUGGESTIONS_NO_HIT = { key: "INPUT_SUGGESTIONS_NO_HIT", defaultText: "No results" };
const INPUT_CLEAR_ICON_ACC_NAME = { key: "INPUT_CLEAR_ICON_ACC_NAME", defaultText: "Clear" };
const LINK_SUBTLE = { key: "LINK_SUBTLE", defaultText: "Subtle" };
const LINK_EMPHASIZED = { key: "LINK_EMPHASIZED", defaultText: "Emphasized" };
const LIST_ITEM_POSITION = { key: "LIST_ITEM_POSITION", defaultText: "List item {0} of {1}" };
const LIST_ITEM_SELECTED = { key: "LIST_ITEM_SELECTED", defaultText: "Selected" };
const LIST_ITEM_NOT_SELECTED = { key: "LIST_ITEM_NOT_SELECTED", defaultText: "Not Selected" };
const LIST_ITEM_GROUP_HEADER = { key: "LIST_ITEM_GROUP_HEADER", defaultText: "Group Header" };
const ARIA_LABEL_LIST_ITEM_CHECKBOX = { key: "ARIA_LABEL_LIST_ITEM_CHECKBOX", defaultText: "Multiple Selection mode." };
const ARIA_LABEL_LIST_ITEM_RADIO_BUTTON = { key: "ARIA_LABEL_LIST_ITEM_RADIO_BUTTON", defaultText: "Item Selection." };
const ARIA_LABEL_LIST_SELECTABLE = { key: "ARIA_LABEL_LIST_SELECTABLE", defaultText: "Contains Selectable Items" };
const ARIA_LABEL_LIST_MULTISELECTABLE = { key: "ARIA_LABEL_LIST_MULTISELECTABLE", defaultText: "Contains Multi-Selectable Items" };
const ARIA_LABEL_LIST_DELETABLE = { key: "ARIA_LABEL_LIST_DELETABLE", defaultText: "Contains Deletable Items" };
const MESSAGE_STRIP_CLOSE_BUTTON = { key: "MESSAGE_STRIP_CLOSE_BUTTON", defaultText: "Information Bar Close" };
const MESSAGE_STRIP_CLOSABLE = { key: "MESSAGE_STRIP_CLOSABLE", defaultText: "Closable" };
const MESSAGE_STRIP_ERROR = { key: "MESSAGE_STRIP_ERROR", defaultText: "Error Information Bar" };
const MESSAGE_STRIP_WARNING = { key: "MESSAGE_STRIP_WARNING", defaultText: "Warning Information Bar" };
const MESSAGE_STRIP_SUCCESS = { key: "MESSAGE_STRIP_SUCCESS", defaultText: "Success Information Bar" };
const MESSAGE_STRIP_INFORMATION = { key: "MESSAGE_STRIP_INFORMATION", defaultText: "Information Bar" };
const MULTICOMBOBOX_DIALOG_OK_BUTTON = { key: "MULTICOMBOBOX_DIALOG_OK_BUTTON", defaultText: "OK" };
const RADIO_BUTTON_GROUP_REQUIRED = { key: "RADIO_BUTTON_GROUP_REQUIRED", defaultText: "Select one of the available options." };
const VALUE_STATE_ERROR_ALREADY_SELECTED = { key: "VALUE_STATE_ERROR_ALREADY_SELECTED", defaultText: "This value is already selected." };
const MULTIINPUT_ROLEDESCRIPTION_TEXT = { key: "MULTIINPUT_ROLEDESCRIPTION_TEXT", defaultText: "Multi Value Input" };
const MULTIINPUT_SHOW_MORE_TOKENS = { key: "MULTIINPUT_SHOW_MORE_TOKENS", defaultText: "{0} More" };
const PANEL_ICON = { key: "PANEL_ICON", defaultText: "Expand/Collapse" };
const RANGE_SLIDER_ARIA_DESCRIPTION = { key: "RANGE_SLIDER_ARIA_DESCRIPTION", defaultText: "Range" };
const RANGE_SLIDER_START_HANDLE_DESCRIPTION = { key: "RANGE_SLIDER_START_HANDLE_DESCRIPTION", defaultText: "Left handle" };
const RANGE_SLIDER_END_HANDLE_DESCRIPTION = { key: "RANGE_SLIDER_END_HANDLE_DESCRIPTION", defaultText: "Right handle" };
const RATING_INDICATOR_TOOLTIP_TEXT = { key: "RATING_INDICATOR_TOOLTIP_TEXT", defaultText: "Rating" };
const RATING_INDICATOR_TEXT = { key: "RATING_INDICATOR_TEXT", defaultText: "Rating Indicator" };
const RATING_INDICATOR_ARIA_DESCRIPTION = { key: "RATING_INDICATOR_ARIA_DESCRIPTION", defaultText: "Required" };
const RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON = { key: "RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON", defaultText: "Decline" };
const SEGMENTEDBUTTON_ARIA_DESCRIPTION = { key: "SEGMENTEDBUTTON_ARIA_DESCRIPTION", defaultText: "Segmented button group" };
const SEGMENTEDBUTTON_ARIA_DESCRIBEDBY = { key: "SEGMENTEDBUTTON_ARIA_DESCRIBEDBY", defaultText: "Press SPACE or ENTER to select an item" };
const SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION = { key: "SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION", defaultText: "Segmented button" };
const SLIDER_ARIA_DESCRIPTION = { key: "SLIDER_ARIA_DESCRIPTION", defaultText: "Slider handle" };
const LOAD_MORE_TEXT = { key: "LOAD_MORE_TEXT", defaultText: "More" };
const TABLE_HEADER_ROW_INFORMATION = { key: "TABLE_HEADER_ROW_INFORMATION", defaultText: "Header Row 1 of {0}" };
const TABLE_ROW_POSITION = { key: "TABLE_ROW_POSITION", defaultText: "{0} of {1}" };
const TABLE_GROUP_ROW_ARIA_LABEL = { key: "TABLE_GROUP_ROW_ARIA_LABEL", defaultText: "Group header row." };
const ARIA_LABEL_ROW_SELECTION = { key: "ARIA_LABEL_ROW_SELECTION", defaultText: "Item selection" };
const ARIA_LABEL_SELECT_ALL_CHECKBOX = { key: "ARIA_LABEL_SELECT_ALL_CHECKBOX", defaultText: "Select All Rows" };
const ARIA_LABEL_EMPTY_CELL = { key: "ARIA_LABEL_EMPTY_CELL", defaultText: "Empty" };
const TAB_ARIA_DESIGN_POSITIVE = { key: "TAB_ARIA_DESIGN_POSITIVE", defaultText: "Positive" };
const TAB_ARIA_DESIGN_NEGATIVE = { key: "TAB_ARIA_DESIGN_NEGATIVE", defaultText: "Negative" };
const TAB_ARIA_DESIGN_CRITICAL = { key: "TAB_ARIA_DESIGN_CRITICAL", defaultText: "Critical" };
const TAB_ARIA_DESIGN_NEUTRAL = { key: "TAB_ARIA_DESIGN_NEUTRAL", defaultText: "Neutral" };
const TAB_SPLIT_ROLE_DESCRIPTION = { key: "TAB_SPLIT_ROLE_DESCRIPTION", defaultText: "Tab with subitems" };
const TABCONTAINER_NEXT_ICON_ACC_NAME = { key: "TABCONTAINER_NEXT_ICON_ACC_NAME", defaultText: "Next" };
const TABCONTAINER_PREVIOUS_ICON_ACC_NAME = { key: "TABCONTAINER_PREVIOUS_ICON_ACC_NAME", defaultText: "Previous" };
const TABCONTAINER_OVERFLOW_MENU_TITLE = { key: "TABCONTAINER_OVERFLOW_MENU_TITLE", defaultText: "Overflow Menu" };
const TABCONTAINER_END_OVERFLOW = { key: "TABCONTAINER_END_OVERFLOW", defaultText: "More" };
const TABCONTAINER_POPOVER_CANCEL_BUTTON = { key: "TABCONTAINER_POPOVER_CANCEL_BUTTON", defaultText: "Cancel" };
const TABCONTAINER_SUBTABS_DESCRIPTION = { key: "TABCONTAINER_SUBTABS_DESCRIPTION", defaultText: "Press down arrow key to open subitems menu" };
const TEXTAREA_CHARACTERS_LEFT = { key: "TEXTAREA_CHARACTERS_LEFT", defaultText: "{0} characters remaining" };
const TEXTAREA_CHARACTERS_EXCEEDED = { key: "TEXTAREA_CHARACTERS_EXCEEDED", defaultText: "{0} characters over limit" };
const TIMEPICKER_HOURS_LABEL = { key: "TIMEPICKER_HOURS_LABEL", defaultText: "Hours" };
const TIMEPICKER_MINUTES_LABEL = { key: "TIMEPICKER_MINUTES_LABEL", defaultText: "Minutes" };
const TIMEPICKER_SECONDS_LABEL = { key: "TIMEPICKER_SECONDS_LABEL", defaultText: "Seconds" };
const TIMEPICKER_SUBMIT_BUTTON = { key: "TIMEPICKER_SUBMIT_BUTTON", defaultText: "OK" };
const TIMEPICKER_CANCEL_BUTTON = { key: "TIMEPICKER_CANCEL_BUTTON", defaultText: "Cancel" };
const TIMEPICKER_INPUT_DESCRIPTION = { key: "TIMEPICKER_INPUT_DESCRIPTION", defaultText: "Time Input" };
const TIMEPICKER_CLOCK_DIAL_LABEL = { key: "TIMEPICKER_CLOCK_DIAL_LABEL", defaultText: "Clock Dial" };
const TIMEPICKER_INPUTS_ENTER_HOURS = { key: "TIMEPICKER_INPUTS_ENTER_HOURS", defaultText: "Please enter hours" };
const TIMEPICKER_INPUTS_ENTER_MINUTES = { key: "TIMEPICKER_INPUTS_ENTER_MINUTES", defaultText: "Please enter minutes" };
const TIMEPICKER_INPUTS_ENTER_SECONDS = { key: "TIMEPICKER_INPUTS_ENTER_SECONDS", defaultText: "Please enter seconds" };
const DURATION_INPUT_DESCRIPTION = { key: "DURATION_INPUT_DESCRIPTION", defaultText: "Duration Input" };
const DATETIME_PICKER_DATE_BUTTON = { key: "DATETIME_PICKER_DATE_BUTTON", defaultText: "Date" };
const DATETIME_PICKER_TIME_BUTTON = { key: "DATETIME_PICKER_TIME_BUTTON", defaultText: "Time" };
const TOKEN_ARIA_DELETABLE = { key: "TOKEN_ARIA_DELETABLE", defaultText: "Deletable" };
const TOKENIZER_ARIA_CONTAIN_TOKEN = { key: "TOKENIZER_ARIA_CONTAIN_TOKEN", defaultText: "No Tokens" };
const TOKENIZER_ARIA_CONTAIN_ONE_TOKEN = { key: "TOKENIZER_ARIA_CONTAIN_ONE_TOKEN", defaultText: "Contains 1 token" };
const TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS = { key: "TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS", defaultText: "Contains {0} tokens" };
const TOKENIZER_ARIA_LABEL = { key: "TOKENIZER_ARIA_LABEL", defaultText: "Tokenizer" };
const TOKENIZER_POPOVER_REMOVE = { key: "TOKENIZER_POPOVER_REMOVE", defaultText: "Remove" };
const TOKENIZER_SHOW_ALL_ITEMS = { key: "TOKENIZER_SHOW_ALL_ITEMS", defaultText: "{0} Items" };
const TREE_ITEM_ARIA_LABEL = { key: "TREE_ITEM_ARIA_LABEL", defaultText: "Tree Item" };
const TREE_ITEM_EXPAND_NODE = { key: "TREE_ITEM_EXPAND_NODE", defaultText: "Expand Node" };
const TREE_ITEM_COLLAPSE_NODE = { key: "TREE_ITEM_COLLAPSE_NODE", defaultText: "Collapse Node" };
const VALUE_STATE_TYPE_ERROR = { key: "VALUE_STATE_TYPE_ERROR", defaultText: "Value State Error" };
const VALUE_STATE_TYPE_WARNING = { key: "VALUE_STATE_TYPE_WARNING", defaultText: "Value State Warning" };
const VALUE_STATE_TYPE_SUCCESS = { key: "VALUE_STATE_TYPE_SUCCESS", defaultText: "Value State Success" };
const VALUE_STATE_TYPE_INFORMATION = { key: "VALUE_STATE_TYPE_INFORMATION", defaultText: "Value State Information" };
const VALUE_STATE_ERROR = { key: "VALUE_STATE_ERROR", defaultText: "Invalid entry" };
const VALUE_STATE_WARNING = { key: "VALUE_STATE_WARNING", defaultText: "Warning issued" };
const VALUE_STATE_INFORMATION = { key: "VALUE_STATE_INFORMATION", defaultText: "Informative entry" };
const VALUE_STATE_SUCCESS = { key: "VALUE_STATE_SUCCESS", defaultText: "Entry successfully validated" };
const CALENDAR_HEADER_NEXT_BUTTON = { key: "CALENDAR_HEADER_NEXT_BUTTON", defaultText: "Next" };
const CALENDAR_HEADER_PREVIOUS_BUTTON = { key: "CALENDAR_HEADER_PREVIOUS_BUTTON", defaultText: "Previous" };
const DAY_PICKER_WEEK_NUMBER_TEXT = { key: "DAY_PICKER_WEEK_NUMBER_TEXT", defaultText: "Week number" };
const DAY_PICKER_NON_WORKING_DAY = { key: "DAY_PICKER_NON_WORKING_DAY", defaultText: "Non-Working Day" };
const DAY_PICKER_TODAY = { key: "DAY_PICKER_TODAY", defaultText: "Today" };
const MONTH_PICKER_DESCRIPTION = { key: "MONTH_PICKER_DESCRIPTION", defaultText: "Month Picker" };
const YEAR_PICKER_DESCRIPTION = { key: "YEAR_PICKER_DESCRIPTION", defaultText: "Year Picker" };
const STEPINPUT_DEC_ICON_TITLE = { key: "STEPINPUT_DEC_ICON_TITLE", defaultText: "Decrease" };
const STEPINPUT_INC_ICON_TITLE = { key: "STEPINPUT_INC_ICON_TITLE", defaultText: "Increase" };
const SPLIT_BUTTON_DESCRIPTION = { key: "SPLIT_BUTTON_DESCRIPTION", defaultText: "Split Button" };
const SPLIT_BUTTON_KEYBOARD_HINT = { key: "SPLIT_BUTTON_KEYBOARD_HINT", defaultText: "Press Space or Enter to trigger default action and Alt + Arrow Down or F4 to trigger arrow action" };
const MENU_BACK_BUTTON_ARIA_LABEL = { key: "MENU_BACK_BUTTON_ARIA_LABEL", defaultText: "Back" };
const MENU_CLOSE_BUTTON_ARIA_LABEL = { key: "MENU_CLOSE_BUTTON_ARIA_LABEL", defaultText: "Decline" };
const DIALOG_HEADER_ARIA_ROLE_DESCRIPTION = { key: "DIALOG_HEADER_ARIA_ROLE_DESCRIPTION", defaultText: "Interactive Header" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE", defaultText: "Use Shift+Arrow keys to resize" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE", defaultText: "Use Arrow keys to move" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE", defaultText: "Use Arrow keys to move, Shift+Arrow keys to resize" };
const LABEL_COLON = { key: "LABEL_COLON", defaultText: ":" };
const TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL = { key: "TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL", defaultText: "Additional Options" };



/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/BusyIndicatorTemplate.lit.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/BusyIndicatorTemplate.lit.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.root)}">${this._isBusy ? block1.call(this, context, tags, suffix) : undefined}<slot></slot>${this._isBusy ? block3.call(this, context, tags, suffix) : undefined}</div>`; }
function block1(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="ui5-busy-indicator-busy-area" title="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaTitle)}" tabindex="0" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuetext="Busy" aria-labelledby="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.labelId)}" data-sap-focus-ref><div class="ui5-busy-indicator-circles-wrapper"><div class="ui5-busy-indicator-circle circle-animation-0"></div><div class="ui5-busy-indicator-circle circle-animation-1"></div><div class="ui5-busy-indicator-circle circle-animation-2"></div></div>${this.text ? block2.call(this, context, tags, suffix) : undefined}</div>`; }
function block2(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-label", tags, suffix)} id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-label" class="ui5-busy-indicator-text" wrapping-type="Normal">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.text)}</${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-label", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-label id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-label" class="ui5-busy-indicator-text" wrapping-type="Normal">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.text)}</ui5-label>`; }
function block3(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<span data-ui5-focus-redirect tabindex="0" @focusin="${this._redirectFocus}"></span>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/ButtonTemplate.lit.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/ButtonTemplate.lit.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<button type="button" class="ui5-button-root" ?disabled="${this.disabled}" data-sap-focus-ref  @focusout=${this._onfocusout} @focusin=${this._onfocusin} @click=${this._onclick} @mousedown=${this._onmousedown} @mouseup=${this._onmouseup} @keydown=${this._onkeydown} @keyup=${this._onkeyup} @touchstart="${this._ontouchstart}" @touchend="${this._ontouchend}" tabindex=${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.tabIndexValue)} aria-expanded="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.accessibilityAttributes.expanded)}" aria-controls="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.accessibilityAttributes.controls)}" aria-haspopup="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.accessibilityAttributes.hasPopup)}" aria-label="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaLabelText)}" title="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.buttonTitle)}" part="button">${this.icon ? block1.call(this, context, tags, suffix) : undefined}<span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-content" class="ui5-button-text"><bdi><slot></slot></bdi></span>${this.hasButtonType ? block2.call(this, context, tags, suffix) : undefined}</button> `; }
function block1(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)} class="ui5-button-icon" name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.icon)}" accessible-role="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.iconRole)}" part="icon" ?show-tooltip=${this.showIconTooltip}></${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-icon class="ui5-button-icon" name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.icon)}" accessible-role="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.iconRole)}" part="icon" ?show-tooltip=${this.showIconTooltip}></ui5-icon>`; }
function block2(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<span class="ui5-hidden-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.buttonTypeText)}</span>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/DialogTemplate.lit.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/DialogTemplate.lit.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<section style="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)(this.styles.root)}" class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.root)}" role="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._role)}" aria-modal="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaModal)}" aria-label="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaLabel)}" aria-labelledby="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span>${this._displayHeader ? block1.call(this, context, tags, suffix) : undefined}<div style="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)(this.styles.content)}" class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div>${this.footer.length ? block10.call(this, context, tags, suffix) : undefined}${this._showResizeHandle ? block11.call(this, context, tags, suffix) : undefined}<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section> `; }
function block1(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<header><div class="ui5-popup-header-root" id="ui5-popup-header" role="group" aria-describedby=${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.effectiveAriaDescribedBy)} aria-roledescription=${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaRoleDescriptionHeaderText)} tabindex="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._headerTabIndex)}" @keydown="${this._onDragOrResizeKeyDown}" @mousedown="${this._onDragMouseDown}" part="header" state="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.state)}">${this.hasValueState ? block2.call(this, context, tags, suffix) : undefined}${this.header.length ? block3.call(this, context, tags, suffix) : block4.call(this, context, tags, suffix)}${this.resizable ? block5.call(this, context, tags, suffix) : block8.call(this, context, tags, suffix)}</div></header>`; }
function block2(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)} class="ui5-dialog-value-state-icon" name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._dialogStateIcon)}"></${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-icon class="ui5-dialog-value-state-icon" name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._dialogStateIcon)}"></ui5-icon>`; }
function block3(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<slot name="header"></slot>`; }
function block4(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h1 id="ui5-popup-header-text" class="ui5-popup-header-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.headerText)}</h1>`; }
function block5(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `${this.draggable ? block6.call(this, context, tags, suffix) : block7.call(this, context, tags, suffix)}`; }
function block6(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaDescribedByHeaderTextDraggableAndResizable)}</span>`; }
function block7(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaDescribedByHeaderTextResizable)}</span>`; }
function block8(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `${this.draggable ? block9.call(this, context, tags, suffix) : undefined}`; }
function block9(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.ariaDescribedByHeaderTextDraggable)}</span>`; }
function block10(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<footer class="ui5-popup-footer-root" part="footer"><slot name="footer"></slot></footer>`; }
function block11(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)} name="resize-corner" class="ui5-popup-resize-handle" @mousedown="${this._onResizeMouseDown}"></${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-icon name="resize-corner" class="ui5-popup-resize-handle" @mousedown="${this._onResizeMouseDown}"></ui5-icon>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/IconTemplate.lit.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/IconTemplate.lit.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<svg class="ui5-icon-root" part="root" tabindex="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._tabIndex)}" dir="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._dir)}" viewBox="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.viewBox)}" role="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.effectiveAccessibleRole)}" focusable="false" preserveAspectRatio="xMidYMid meet" aria-label="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.effectiveAccessibleName)}" aria-hidden=${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.effectiveAriaHidden)} xmlns="http://www.w3.org/2000/svg" @focusin=${this._onfocusin} @focusout=${this._onfocusout} @keydown=${this._onkeydown} @keyup=${this._onkeyup}>${blockSVG1.call(this, context, tags, suffix)}</svg>`; }
function block1(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.svg) `<title id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-tooltip">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.effectiveAccessibleName)}</title>`; }
function block2(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.svg) `${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.customSvg)}`; }
function block3(context, tags, suffix, item, index) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.svg) `<path d="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(item)}"></path>`; }
function blockSVG1(context, tags, suffix) {
    return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.svg) `${this.hasIconTooltip ? block1.call(this, context, tags, suffix) : undefined}<g role="presentation">${this.customSvg ? block2.call(this, context, tags, suffix) : undefined}${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.repeat)(this.pathData, (item, index) => item._id || index, (item, index) => block3.call(this, context, tags, suffix, item, index))}</g>`;
}
;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/LabelTemplate.lit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/LabelTemplate.lit.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<label class="ui5-label-root" @click=${this._onclick}><span class="ui5-label-text-wrapper"><bdi id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-bdi"><slot></slot></bdi></span><span aria-hidden="true" class="ui5-label-required-colon" data-colon="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._colonSymbol)}"></span></label>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/MessageStripTemplate.lit.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/MessageStripTemplate.lit.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.root)}" id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}" role="note" aria-live="assertive" aria-labelledby="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}">${!this.hideIcon ? block1.call(this, context, tags, suffix) : undefined}<span class="ui5-hidden-text">${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.hiddenText)}</span><span class="ui5-message-strip-text"><slot></slot></span>${!this.hideCloseButton ? block4.call(this, context, tags, suffix) : undefined}</div>`; }
function block1(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="ui5-message-strip-icon-wrapper" aria-hidden="true">${this.iconProvided ? block2.call(this, context, tags, suffix) : block3.call(this, context, tags, suffix)}</div>`; }
function block2(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<slot name="icon"></slot>`; }
function block3(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)} name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.standardIconName)}" class="ui5-message-strip-icon"></${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-icon", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-icon name="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this.standardIconName)}" class="ui5-message-strip-icon"></ui5-icon>`; }
function block4(context, tags, suffix) { return suffix ? (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-button", tags, suffix)} icon="decline" design="Transparent" class="ui5-message-strip-close-button" tooltip="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._closeButtonText)}" @click=${this._closeClick}></${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.scopeTag)("ui5-button", tags, suffix)}>` : (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<ui5-button icon="decline" design="Transparent" class="ui5-message-strip-close-button" tooltip="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._closeButtonText)}" @click=${this._closeClick}></ui5-button>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/PopupBlockLayerTemplate.lit.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/PopupBlockLayerTemplate.lit.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<div class="ui5-block-layer" ?hidden=${this._blockLayerHidden} tabindex="0" style="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)(this.styles.blockLayer)}" @keydown="${this._preventBlockLayerFocus}" @mousedown="${this._preventBlockLayerFocus}"></div>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/PopupTemplate.lit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/PopupTemplate.lit.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<section style="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)(this.styles.root)}" class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.root)}" role="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._role)}" aria-modal="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaModal)}" aria-label="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaLabel)}" aria-labelledby="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span><div style="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)(this.styles.content)}" class="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.classMap)(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div><span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section> `; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/templates/TitleTemplate.lit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/templates/TitleTemplate.lit.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/renderer/LitRenderer.js */ "./node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js");
/* eslint no-unused-vars: 0 */

function block0(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `${this.h1 ? block1.call(this, context, tags, suffix) : undefined}${this.h2 ? block2.call(this, context, tags, suffix) : undefined}${this.h3 ? block3.call(this, context, tags, suffix) : undefined}${this.h4 ? block4.call(this, context, tags, suffix) : undefined}${this.h5 ? block5.call(this, context, tags, suffix) : undefined}${this.h6 ? block6.call(this, context, tags, suffix) : undefined}`; }
function block1(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h1 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h1>`; }
function block2(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h2 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h2>`; }
function block3(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h3 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h3>`; }
function block4(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h4 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h4>`; }
function block5(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h5 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h5>`; }
function block6(context, tags, suffix) { return (0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.html) `<h6 class="ui5-title-root"><span id="${(0,_ui5_webcomponents_base_dist_renderer_LitRenderer_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)(this._id)}-inner"><slot></slot></span></h6>`; }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (block0);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/BrowserScrollbar.css", content: ":not(.ui5-content-native-scrollbars) ::-webkit-scrollbar:horizontal{height:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar:vertical{width:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor);border-left:var(--browser_scrollbar_border)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-thumb{background-color:var(--sapScrollBar_FaceColor);border-radius:var(--browser_scrollbar_border_radius)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-thumb:hover{background-color:var(--sapScrollBar_Hover_FaceColor)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-corner{background-color:var(--sapScrollBar_TrackColor)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/BusyIndicator.css.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/BusyIndicator.css.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/BusyIndicator.css", content: ":host(:not([hidden])){display:inline-block}:host([_is-busy]){color:var(--_ui5-v1-19-1_busy_indicator_color)}:host([size=Small]) .ui5-busy-indicator-root{min-height:.5rem;min-width:1.625rem}:host([size=Small][text]:not([text=\"\"])) .ui5-busy-indicator-root{min-height:1.75rem}:host([size=Small]) .ui5-busy-indicator-circle{height:.5rem;width:.5rem}:host([size=Small]) .ui5-busy-indicator-circle:first-child,:host([size=Small]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.0625rem}:host(:not([size])) .ui5-busy-indicator-root,:host([size=Medium]) .ui5-busy-indicator-root{min-height:1rem;min-width:3.375rem}:host([size=Medium]) .ui5-busy-indicator-circle:first-child,:host([size=Medium]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.1875rem}:host(:not([size])[text]:not([text=\"\"])) .ui5-busy-indicator-root,:host([size=Medium][text]:not([text=\"\"])) .ui5-busy-indicator-root{min-height:2.25rem}:host(:not([size])) .ui5-busy-indicator-circle,:host([size=Medium]) .ui5-busy-indicator-circle{height:1rem;width:1rem}:host([size=Large]) .ui5-busy-indicator-root{min-height:2rem;min-width:6.5rem}:host([size=Large]) .ui5-busy-indicator-circle:first-child,:host([size=Large]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.25rem}:host([size=Large][text]:not([text=\"\"])) .ui5-busy-indicator-root{min-height:3.25rem}:host([size=Large]) .ui5-busy-indicator-circle{height:2rem;width:2rem}.ui5-busy-indicator-root{align-items:center;background-color:inherit;display:flex;height:inherit;justify-content:center;position:relative}.ui5-busy-indicator-busy-area{align-items:center;background-color:inherit;bottom:0;display:flex;flex-direction:column;justify-content:center;left:0;position:absolute;right:0;top:0;z-index:99}.ui5-busy-indicator-busy-area:focus{border-radius:var(--_ui5-v1-19-1_busy_indicator_focus_border_radius);outline:var(--_ui5-v1-19-1_busy_indicator_focus_outline);outline-offset:-2px}.ui5-busy-indicator-circles-wrapper{line-height:0}.ui5-busy-indicator-circle{background-color:currentColor;border-radius:50%;display:inline-block}.ui5-busy-indicator-circle:before{border-radius:100%;content:\"\";height:100%;width:100%}.circle-animation-0{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite}.circle-animation-1{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite;animation-delay:.2s}.circle-animation-2{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite;animation-delay:.4s}.ui5-busy-indicator-text{margin-top:.25rem;text-align:center;width:100%}@keyframes grow{0%,50%,to{-webkit-transform:scale(.5);-moz-transform:scale(.5);transform:scale(.5)}25%{-webkit-transform:scale(1);-moz-transform:scale(1);transform:scale(1)}}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Button.css.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Button.css.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Button.css", content: ":host{vertical-align:middle}.ui5-hidden-text{clip:rect(1px,1px,1px,1px);font-size:0;left:-1000px;pointer-events:none;position:absolute;top:-1000px;user-select:none}:host(:not([hidden])){display:inline-block}:host{background-color:var(--sapButton_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);border-radius:var(--_ui5-v1-19-1_button_border_radius);box-sizing:border-box;color:var(--sapButton_TextColor);cursor:pointer;font-family:var(--_ui5-v1-19-1_button_fontFamily);font-size:var(--sapFontSize);height:var(--_ui5-v1-19-1_button_base_height);line-height:normal;min-width:var(--_ui5-v1-19-1_button_base_min_width);overflow:hidden;text-overflow:ellipsis;text-shadow:var(--_ui5-v1-19-1_button_text_shadow);white-space:nowrap}.ui5-button-root{align-items:center;background:transparent;border:none;box-sizing:border-box;color:inherit;cursor:inherit;display:flex;font:inherit;height:100%;justify-content:center;letter-spacing:inherit;line-height:inherit;min-width:inherit;outline:none;overflow:inherit;padding:0 var(--_ui5-v1-19-1_button_base_padding);position:relative;text-overflow:inherit;text-shadow:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none;white-space:inherit;width:100%;word-spacing:inherit}:host(:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host(:not([hidden]):not([disabled]).ui5_hovered){background:var(--sapButton_Hover_Background);border:1px solid var(--sapButton_Hover_BorderColor);color:var(--sapButton_Hover_TextColor)}.ui5-button-icon{color:inherit;flex-shrink:0}:host([icon-end]) .ui5-button-root{flex-direction:row-reverse}:host([icon-end]) .ui5-button-icon{margin-inline-start:var(--_ui5-v1-19-1_button_base_icon_margin)}:host([icon-only]) .ui5-button-root{min-width:auto;padding:0}:host([icon-only]) .ui5-button-text{display:none}.ui5-button-text{outline:none;overflow:inherit;position:relative;text-overflow:inherit;white-space:inherit}:host([has-icon]:not([icon-end])) .ui5-button-text{margin-inline-start:var(--_ui5-v1-19-1_button_base_icon_margin)}:host([has-icon][icon-end]) .ui5-button-text{margin-inline-start:0}:host([disabled]){cursor:default;opacity:var(--sapContent_DisabledOpacity);pointer-events:unset}:host([has-icon]:not([icon-only])) .ui5-button-text{min-width:calc(var(--_ui5-v1-19-1_button_base_min_width) - var(--_ui5-v1-19-1_button_base_icon_margin) - 1rem)}:host([disabled]:active){pointer-events:none}:host([focused]) .ui5-button-root:after{border:var(--_ui5-v1-19-1_button_focused_border);border-radius:var(--_ui5-v1-19-1_button_focused_border_radius);bottom:.0625rem;box-sizing:border-box;content:\"\";left:.0625rem;position:absolute;right:.0625rem;top:.0625rem}:host([design=Emphasized][focused]) .ui5-button-root:before{border:var(--_ui5-v1-19-1_button_emphasized_focused_border_before);border-radius:var(--_ui5-v1-19-1_button_focused_border_radius);bottom:.0625rem;box-sizing:border-box;content:\"\";left:.0625rem;position:absolute;right:.0625rem;top:.0625rem}.ui5-button-root::-moz-focus-inner{border:0}bdi{display:block;overflow:inherit;text-overflow:inherit;white-space:inherit}:host([ui5-button][active]:not([disabled]):not([non-interactive])){background-color:var(--sapButton_Active_Background);background-image:none;border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([design=Positive]){background-color:var(--sapButton_Accept_Background);border-color:var(--sapButton_Accept_BorderColor);color:var(--sapButton_Accept_TextColor)}:host([design=Positive]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered),:host([design=Positive]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover){background-color:var(--sapButton_Accept_Hover_Background);border-color:var(--sapButton_Accept_Hover_BorderColor);color:var(--sapButton_Accept_Hover_TextColor)}:host([ui5-button][design=Positive][active]:not([non-interactive])){background-color:var(--sapButton_Accept_Active_Background);border-color:var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Active_TextColor)}:host([design=Negative]){background-color:var(--sapButton_Reject_Background);border-color:var(--sapButton_Reject_BorderColor);color:var(--sapButton_Reject_TextColor)}:host([design=Negative]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered),:host([design=Negative]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover){background-color:var(--sapButton_Reject_Hover_Background);border-color:var(--sapButton_Reject_Hover_BorderColor);color:var(--sapButton_Reject_Hover_TextColor)}:host([ui5-button][design=Negative][active]:not([non-interactive])){background-color:var(--sapButton_Reject_Active_Background);border-color:var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([design=Attention]){background-color:var(--sapButton_Attention_Background);border-color:var(--sapButton_Attention_BorderColor);color:var(--sapButton_Attention_TextColor)}:host([design=Attention]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered),:host([design=Attention]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover){background-color:var(--sapButton_Attention_Hover_Background);border-color:var(--sapButton_Attention_Hover_BorderColor);color:var(--sapButton_Attention_Hover_TextColor)}:host([ui5-button][design=Attention][active]:not([non-interactive])){background-color:var(--sapButton_Attention_Active_Background);border-color:var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([design=Emphasized]){background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor);border-width:var(--_ui5-v1-19-1_button_emphasized_border_width);color:var(--sapButton_Emphasized_TextColor);font-weight:var(--sapButton_Emphasized_FontWeight)}:host([design=Emphasized]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered),:host([design=Emphasized]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover){background-color:var(--sapButton_Emphasized_Hover_Background);border-color:var(--sapButton_Emphasized_Hover_BorderColor);border-width:var(--_ui5-v1-19-1_button_emphasized_border_width);color:var(--sapButton_Emphasized_Hover_TextColor)}:host([ui5-button][design=Empasized][active]:not([non-interactive])){background-color:var(--sapButton_Emphasized_Active_Background);border-color:var(--sapButton_Emphasized_Active_BorderColor);color:var(--sapButton_Emphasized_Active_TextColor)}:host([design=Emphasized][focused]) .ui5-button-root:after{border-color:var(--_ui5-v1-19-1_button_emphasized_focused_border_color);outline:none}:host([design=Emphasized][focused][active]:not([non-interactive])) .ui5-button-root:after{border-color:var(--_ui5-v1-19-1_button_emphasized_focused_active_border_color)}:host([design=Transparent]){background-color:var(--sapButton_Lite_Background);border-color:var(--sapButton_Lite_BorderColor);color:var(--sapButton_Lite_TextColor)}:host([design=Transparent]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered),:host([design=Transparent]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover){background-color:var(--sapButton_Lite_Hover_Background);border-color:var(--sapButton_Lite_Hover_BorderColor);color:var(--sapButton_Lite_Hover_TextColor)}:host([ui5-button][design=Transparent][active]:not([non-interactive])){background-color:var(--sapButton_Lite_Active_Background);border-color:var(--sapButton_Lite_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([pressed][focused]) .ui5-button-root:after,:host([ui5-segmented-button-item][active][focused]) .ui5-button-root:after{border-color:var(--_ui5-v1-19-1_button_pressed_focused_border_color);outline:none}:host([ui5-segmented-button-item][focused]:not(:last-child)) .ui5-button-root:after{border-bottom-right-radius:var(--_ui5-v1-19-1_button_focused_inner_border_radius);border-top-right-radius:var(--_ui5-v1-19-1_button_focused_inner_border_radius)}:host([ui5-segmented-button-item][focused]:not(:first-child)) .ui5-button-root:after{border-bottom-left-radius:var(--_ui5-v1-19-1_button_focused_inner_border_radius);border-top-left-radius:var(--_ui5-v1-19-1_button_focused_inner_border_radius)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Dialog.css.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Dialog.css.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Dialog.css", content: ".ui5-hidden-text{clip:rect(1px,1px,1px,1px);font-size:0;left:-1000px;pointer-events:none;position:absolute;top:-1000px;user-select:none}:host{border-radius:var(--sapElement_BorderCornerRadius);box-shadow:var(--sapContent_Shadow3);flex-direction:column;max-height:94%;max-width:90%;min-height:6rem;min-width:20rem}:host([stretch]){height:94%;width:90%}:host([stretch][on-phone]){border-radius:0;height:100%;max-height:100%;max-width:100%;width:100%}:host([draggable]) .ui5-popup-header-root,:host([draggable]) ::slotted([slot=header]){cursor:move}:host([draggable]) .ui5-popup-header-root *{cursor:auto}:host([draggable]) .ui5-popup-root{user-select:text}.ui5-popup-root{display:flex;flex-direction:column;max-width:100vw}.ui5-popup-header-root{position:relative}.ui5-popup-header-root:before{background:var(--sapObjectHeader_BorderColor);content:\"\";height:var(--_ui5-v1-19-1_dialog_header_state_line_height);inset-block-end:0;inset-block-start:auto;inset-inline-end:0;inset-inline-start:0;position:absolute}:host([state=Error]) .ui5-popup-header-root:before{background:var(--sapErrorBorderColor)}:host([state=Information]) .ui5-popup-header-root:before{background:var(--sapInformationBorderColor)}:host([state=Success]) .ui5-popup-header-root:before{background:var(--sapSuccessBorderColor)}:host([state=Warning]) .ui5-popup-header-root:before{background:var(--sapWarningBorderColor)}.ui5-dialog-value-state-icon{margin-inline-end:.5rem}:host([state=Error]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-19-1_dialog_header_error_state_icon_color)}:host([state=Information]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-19-1_dialog_header_information_state_icon_color)}:host([state=Success]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-19-1_dialog_header_success_state_icon_color)}:host([state=Warning]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-19-1_dialog_header_warning_state_icon_color)}.ui5-popup-header-root{outline:none}.ui5-popup-header-root:focus:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v1-19-1_dialog_header_border_radius) var(--_ui5-v1-19-1_dialog_header_border_radius) 0 0;bottom:var(--_ui5-v1-19-1_dialog_header_focus_bottom_offset);content:\"\";left:var(--_ui5-v1-19-1_dialog_header_focus_left_offset);pointer-events:none;position:absolute;right:var(--_ui5-v1-19-1_dialog_header_focus_right_offset);top:var(--_ui5-v1-19-1_dialog_header_focus_top_offset)}:host([stretch]) .ui5-popup-content{height:100%;width:100%}.ui5-popup-content{flex:1 1 auto;min-height:var(--_ui5-v1-19-1_dialog_content_min_height)}.ui5-popup-resize-handle{bottom:var(--_ui5-v1-19-1_dialog_resize_handle_bottom);color:var(--_ui5-v1-19-1_dialog_resize_handle_color);cursor:var(--_ui5-v1-19-1_dialog_resize_cursor);inset-inline-end:var(--_ui5-v1-19-1_dialog_resize_handle_right);position:absolute}::slotted([slot=footer]){height:var(--_ui5-v1-19-1_dialog_footer_height)}::slotted([slot=footer][ui5-bar][design=Footer]){border-top:none}::slotted([slot=header][ui5-bar]){box-shadow:none}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Icon.css.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Icon.css.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Icon.css", content: ":host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([hidden]){display:none}:host([invalid]){display:none}:host(:not([hidden]).ui5_hovered){opacity:.7}:host{fill:currentColor;color:var(--sapContent_NonInteractiveIconColor);display:inline-block;height:1rem;outline:none;width:1rem}:host([design=Contrast]){color:var(--sapContent_ContrastIconColor)}:host([design=Critical]){color:var(--sapCriticalElementColor)}:host([design=Default]){color:var(--sapContent_IconColor)}:host([design=Information]){color:var(--sapInformativeElementColor)}:host([design=Negative]){color:var(--sapNegativeElementColor)}:host([design=Neutral]){color:var(--sapNeutralElementColor)}:host([design=NonInteractive]){color:var(--sapContent_NonInteractiveIconColor)}:host([design=Positive]){color:var(--sapPositiveElementColor)}:host([interactive][focused]) .ui5-icon-root{border-radius:var(--ui5-v1-19-1-icon-focus-border-radius);outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-icon-root{display:flex;height:100%;outline:none;vertical-align:top;width:100%}:host([interactive]){cursor:pointer}.ui5-icon-root:not([dir=ltr]){transform:var(--_ui5-v1-19-1_icon_transform_scale);transform-origin:center}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Label.css.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Label.css.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Label.css", content: ":host(:not([hidden])){display:inline-flex}:host{color:var(--sapContent_LabelColor);cursor:text;font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;max-width:100%}.ui5-label-root{cursor:inherit;width:100%}:host([wrapping-type=Normal]) .ui5-label-root{white-space:normal}:host(:not([wrapping-type=Normal])) .ui5-label-root{display:inline-flex;white-space:nowrap}:host(:not([wrapping-type=Normal])) .ui5-label-text-wrapper{display:inline-block;flex:0 1 auto;min-width:0;overflow:hidden;text-overflow:ellipsis;vertical-align:top}:host([show-colon]) .ui5-label-required-colon:before{content:attr(data-colon)}:host([required]) .ui5-label-required-colon:after{color:var(--sapField_RequiredColor);content:\"*\";font-size:1.25rem;font-style:normal;font-weight:700;line-height:0;position:relative;vertical-align:middle}:host([required][show-colon]) .ui5-label-required-colon:after{margin-inline-start:.125rem}bdi{padding-right:.075rem}:host([show-colon]) .ui5-label-required-colon{margin-inline-start:-.05rem;white-space:pre}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/MessageStrip.css.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/MessageStrip.css.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/MessageStrip.css", content: ".ui5-hidden-text{clip:rect(1px,1px,1px,1px);font-size:0;left:-1000px;pointer-events:none;position:absolute;top:-1000px;user-select:none}:host(:not([hidden])){display:inline-block;width:100%}.ui5-message-strip-root{border-radius:var(--sapPopover_BorderCornerRadius);border-style:solid;border-width:var(--_ui5-v1-19-1_message_strip_border_width);box-sizing:border-box;display:flex;height:100%;padding:var(--_ui5-v1-19-1_message_strip_padding);position:relative;width:100%}.ui5-message-strip-root-hide-icon{padding-block:var(--_ui5-v1-19-1_message_strip_padding_block_no_icon);padding-inline:var(--_ui5-v1-19-1_message_strip_padding_inline_no_icon)}.ui5-message-strip-root-hide-close-button{padding-inline-end:1rem}.ui5-message-strip-root--info{background-color:var(--sapInformationBackground);border-color:var(--sapMessage_InformationBorderColor);color:var(--sapTextColor)}.ui5-message-strip-root--info .ui5-message-strip-icon{color:var(--sapInformativeElementColor)}.ui5-message-strip-root--positive{background-color:var(--sapSuccessBackground);border-color:var(--sapMessage_SuccessBorderColor)}.ui5-message-strip-root--positive .ui5-message-strip-icon{color:var(--sapPositiveElementColor)}.ui5-message-strip-root--negative{background-color:var(--sapErrorBackground);border-color:var(--sapMessage_ErrorBorderColor)}.ui5-message-strip-root--negative .ui5-message-strip-icon{color:var(--sapNegativeElementColor)}.ui5-message-strip-root--warning{background-color:var(--sapWarningBackground);border-color:var(--sapMessage_WarningBorderColor)}.ui5-message-strip-root--warning .ui5-message-strip-icon{color:var(--sapCriticalElementColor)}.ui5-message-strip-icon-wrapper{box-sizing:border-box;inset-inline-start:.75rem;position:absolute;top:var(--_ui5-v1-19-1_message_strip_icon_top)}.ui5-message-strip-text{color:var(--sapTextColor);font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);line-height:1.2;width:100%}.ui5-message-strip-close-button{height:1.625rem;inset-inline-end:var(--_ui5-v1-19-1_message_strip_close_button_right);min-height:1.625rem;position:absolute;top:var(--_ui5-v1-19-1_message_strip_close_button_top)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Popup.css.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Popup.css.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Popup.css", content: ":host{display:none;min-width:1px;position:fixed}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupGlobal.css.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/PopupGlobal.css.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/PopupGlobal.css", content: ".ui5-popup-scroll-blocker{overflow:hidden}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupStaticAreaStyles.css.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/PopupStaticAreaStyles.css.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/PopupStaticAreaStyles.css", content: ".ui5-block-layer{background-color:var(--sapBlockLayer_Background);bottom:-500px;display:none;left:-500px;opacity:.6;outline:none;pointer-events:all;position:fixed;right:-500px;top:-500px;z-index:-1}.ui5-block-layer:not([hidden]){display:inline-block}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/PopupsCommon.css.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/PopupsCommon.css.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/PopupsCommon.css", content: ":host{background:var(--sapGroup_ContentBackground);border-radius:var(--_ui5-v1-19-1_popup_border_radius);box-sizing:border-box;display:none;min-height:2rem;position:fixed}.ui5-popup-root{background:inherit;border-radius:inherit;box-sizing:border-box;display:flex;flex-direction:column;height:100%;outline:none;overflow:hidden;width:100%}.ui5-popup-root .ui5-popup-header-root{border-bottom:var(--_ui5-v1-19-1_popup_header_border);box-shadow:var(--_ui5-v1-19-1_popup_header_shadow);color:var(--sapPageHeader_TextColor)}.ui5-popup-content{color:var(--sapTextColor)}.ui5-popup-footer-root{background:var(--sapPageFooter_Background);border-top:1px solid var(--sapPageFooter_BorderColor);color:var(--sapPageFooter_TextColor)}.ui5-popup-footer-root,.ui5-popup-header-root,:host([header-text]) .ui5-popup-header-text{align-items:center;display:flex;font-family:\"72override\",var(--_ui5-v1-19-1_popup_header_font_family);font-size:1rem;justify-content:center;margin:0}.ui5-popup-header-root .ui5-popup-header-text{font-weight:var(--_ui5-v1-19-1_popup_header_font_weight)}.ui5-popup-content{box-sizing:border-box;overflow:auto}:host([header-text]) .ui5-popup-header-text{display:inline-block;line-height:var(--_ui5-v1-19-1_popup_default_header_height);max-height:var(--_ui5-v1-19-1_popup_default_header_height);max-width:100%;min-height:var(--_ui5-v1-19-1_popup_default_header_height);overflow:hidden;text-align:center;text-overflow:ellipsis;white-space:nowrap}:host([header-text]) .ui5-popup-header-root{justify-content:var(--_ui5-v1-19-1_popup_header_prop_header_text_alignment)}:host(:not([header-text])) .ui5-popup-header-text{display:none}:host([disable-scrolling]) .ui5-popup-content{overflow:hidden}:host([media-range=S]) .ui5-popup-content{padding:1rem var(--_ui5-v1-19-1_popup_content_padding_s)}:host([media-range=L]) .ui5-popup-content,:host([media-range=M]) .ui5-popup-content{padding:1rem var(--_ui5-v1-19-1_popup_content_padding_m_l)}:host([media-range=XL]) .ui5-popup-content{padding:1rem var(--_ui5-v1-19-1_popup_content_padding_xl)}.ui5-popup-header-root{background:var(--_ui5-v1-19-1_popup_header_background)}:host([media-range=S]) .ui5-popup-footer-root,:host([media-range=S]) .ui5-popup-header-root{padding-left:var(--_ui5-v1-19-1_popup_header_footer_padding_s);padding-right:var(--_ui5-v1-19-1_popup_header_footer_padding_s)}:host([media-range=L]) .ui5-popup-footer-root,:host([media-range=L]) .ui5-popup-header-root,:host([media-range=M]) .ui5-popup-footer-root,:host([media-range=M]) .ui5-popup-header-root{padding-left:var(--_ui5-v1-19-1_popup_header_footer_padding_m_l);padding-right:var(--_ui5-v1-19-1_popup_header_footer_padding_m_l)}:host([media-range=XL]) .ui5-popup-footer-root,:host([media-range=XL]) .ui5-popup-header-root{padding-left:var(--_ui5-v1-19-1_popup_header_footer_padding_xl);padding-right:var(--_ui5-v1-19-1_popup_header_footer_padding_xl)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/Title.css.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/Title.css.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/asset-registries/Themes.js */ "./node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js");
/* harmony import */ var _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js");
/* harmony import */ var _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sap_horizon/parameters-bundle.css.js */ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js");



(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents-theming", "sap_horizon", async () => _ui5_webcomponents_theming_dist_generated_themes_sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_ui5_webcomponents_base_dist_asset_registries_Themes_js__WEBPACK_IMPORTED_MODULE_0__.registerThemePropertiesLoader)("@ui5/webcomponents", "sap_horizon", async () => _sap_horizon_parameters_bundle_css_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/Title.css", content: ":host(:not([hidden])){cursor:text;display:block}:host{color:var(--sapGroup_TitleTextColor);font-family:\"72override\",var(--sapFontHeaderFamily);font-size:var(--sapFontHeader2Size);max-width:100%;text-shadow:var(--sapContent_TextShadow)}.ui5-title-root{-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;box-sizing:border-box;cursor:inherit;display:inline-block;font-size:inherit;font-weight:400;margin:0;max-width:100%;overflow:hidden;position:relative;text-overflow:ellipsis;vertical-align:bottom;white-space:nowrap}:host([wrapping-type=Normal]) .ui5-title-root,:host([wrapping-type=Normal]) ::slotted(*){white-space:pre-line}::slotted(*){font-family:inherit;font-size:inherit;text-shadow:inherit}:host([level=H1]){font-size:var(--sapFontHeader1Size)}:host([level=H2]){font-size:var(--sapFontHeader2Size)}:host([level=H3]){font-size:var(--sapFontHeader3Size)}:host([level=H4]){font-size:var(--sapFontHeader4Size)}:host([level=H5]){font-size:var(--sapFontHeader5Size)}:host([level=H6]){font-size:var(--sapFontHeader6Size)}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const styleData = { packageName: "@ui5/webcomponents", fileName: "themes/sap_horizon/parameters-bundle.css", content: ":root{--ui5-v1-19-1-avatar-hover-box-shadow-offset:0px 0px 0px 0.0625rem;--ui5-v1-19-1-avatar-initials-color:var(--sapContent_ImagePlaceholderForegroundColor);--ui5-v1-19-1-avatar-border-radius:.25rem;--ui5-v1-19-1-avatar-border-radius-img-deduction:0.0625rem;--ui5-v1-19-1-avatar-initials-border:none;--ui5-v1-19-1-avatar-accent1:var(--sapAccentColor1);--ui5-v1-19-1-avatar-accent2:var(--sapAccentColor2);--ui5-v1-19-1-avatar-accent3:var(--sapAccentColor3);--ui5-v1-19-1-avatar-accent4:var(--sapAccentColor4);--ui5-v1-19-1-avatar-accent5:var(--sapAccentColor5);--ui5-v1-19-1-avatar-accent6:var(--sapAccentColor6);--ui5-v1-19-1-avatar-accent7:var(--sapAccentColor7);--ui5-v1-19-1-avatar-accent8:var(--sapAccentColor8);--ui5-v1-19-1-avatar-accent9:var(--sapAccentColor9);--ui5-v1-19-1-avatar-accent10:var(--sapAccentColor10);--ui5-v1-19-1-avatar-accent1-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent2-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent3-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent4-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent5-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent6-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent7-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent8-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent9-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent10-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-placeholder-color:var(--ui5-v1-19-1-avatar-initials-color);--ui5-v1-19-1-avatar-accent1-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent2-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent3-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent4-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent5-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent6-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent7-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent8-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent9-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-accent10-border-color:var(--sapField_BorderColor);--ui5-v1-19-1-avatar-placeholder-border-color:var(--sapField_BorderColor);--_ui5-v1-19-1_avatar_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_avatar_focus_offset:1px;--_ui5-v1-19-1_avatar_focus_width:1px;--_ui5-v1-19-1_avatar_focus_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_avatar_fontsize_XS:0.75rem;--_ui5-v1-19-1_avatar_fontsize_M:1.625rem;--_ui5-v1-19-1_avatar_fontsize_L:2rem;--_ui5-v1-19-1_avatar_fontsize_XL:2.75rem;--_ui5-v1-19-1_avatar_icon_XS:1rem;--_ui5-v1-19-1_avatar_icon_S:1.5rem;--_ui5-v1-19-1_avatar_icon_M:2rem;--_ui5-v1-19-1_avatar_icon_L:2.5rem;--_ui5-v1-19-1_avatar_icon_XL:3rem;--_ui5-v1-19-1_avatar_focus_offset:0.125rem;--ui5-v1-19-1-avatar-initials-border:0.0625rem solid var(--sapAvatar_1_BorderColor);--ui5-v1-19-1-avatar-border-radius:var(--sapElement_BorderCornerRadius);--_ui5-v1-19-1_avatar_fontsize_XS:1rem;--_ui5-v1-19-1_avatar_fontsize_S:1.125rem;--_ui5-v1-19-1_avatar_fontsize_M:1.5rem;--_ui5-v1-19-1_avatar_fontsize_L:2.25rem;--_ui5-v1-19-1_avatar_fontsize_XL:3rem;--ui5-v1-19-1-avatar-accent1:var(--sapAvatar_1_Background);--ui5-v1-19-1-avatar-accent2:var(--sapAvatar_2_Background);--ui5-v1-19-1-avatar-accent3:var(--sapAvatar_3_Background);--ui5-v1-19-1-avatar-accent4:var(--sapAvatar_4_Background);--ui5-v1-19-1-avatar-accent5:var(--sapAvatar_5_Background);--ui5-v1-19-1-avatar-accent6:var(--sapAvatar_6_Background);--ui5-v1-19-1-avatar-accent7:var(--sapAvatar_7_Background);--ui5-v1-19-1-avatar-accent8:var(--sapAvatar_8_Background);--ui5-v1-19-1-avatar-accent9:var(--sapAvatar_9_Background);--ui5-v1-19-1-avatar-accent10:var(--sapAvatar_10_Background);--ui5-v1-19-1-avatar-placeholder:var(--sapContent_ImagePlaceholderBackground);--ui5-v1-19-1-avatar-accent1-color:var(--sapAvatar_1_TextColor);--ui5-v1-19-1-avatar-accent2-color:var(--sapAvatar_2_TextColor);--ui5-v1-19-1-avatar-accent3-color:var(--sapAvatar_3_TextColor);--ui5-v1-19-1-avatar-accent4-color:var(--sapAvatar_4_TextColor);--ui5-v1-19-1-avatar-accent5-color:var(--sapAvatar_5_TextColor);--ui5-v1-19-1-avatar-accent6-color:var(--sapAvatar_6_TextColor);--ui5-v1-19-1-avatar-accent7-color:var(--sapAvatar_7_TextColor);--ui5-v1-19-1-avatar-accent8-color:var(--sapAvatar_8_TextColor);--ui5-v1-19-1-avatar-accent9-color:var(--sapAvatar_9_TextColor);--ui5-v1-19-1-avatar-accent10-color:var(--sapAvatar_10_TextColor);--ui5-v1-19-1-avatar-placeholder-color:var(--sapContent_ImagePlaceholderForegroundColor);--ui5-v1-19-1-avatar-accent1-border-color:var(--sapAvatar_1_BorderColor);--ui5-v1-19-1-avatar-accent2-border-color:var(--sapAvatar_2_BorderColor);--ui5-v1-19-1-avatar-accent3-border-color:var(--sapAvatar_3_BorderColor);--ui5-v1-19-1-avatar-accent4-border-color:var(--sapAvatar_4_BorderColor);--ui5-v1-19-1-avatar-accent5-border-color:var(--sapAvatar_5_BorderColor);--ui5-v1-19-1-avatar-accent6-border-color:var(--sapAvatar_6_BorderColor);--ui5-v1-19-1-avatar-accent7-border-color:var(--sapAvatar_7_BorderColor);--ui5-v1-19-1-avatar-accent8-border-color:var(--sapAvatar_8_BorderColor);--ui5-v1-19-1-avatar-accent9-border-color:var(--sapAvatar_9_BorderColor);--ui5-v1-19-1-avatar-accent10-border-color:var(--sapAvatar_10_BorderColor);--ui5-v1-19-1-avatar-placeholder-border-color:var(--sapContent_ImagePlaceholderBackground);--_ui5-v1-19-1_avatar_icon_XS:var(--_ui5-v1-19-1_avatar_fontsize_XS);--_ui5-v1-19-1_avatar_icon_S:var(--_ui5-v1-19-1_avatar_fontsize_S);--_ui5-v1-19-1_avatar_icon_M:var(--_ui5-v1-19-1_avatar_fontsize_M);--_ui5-v1-19-1_avatar_icon_L:var(--_ui5-v1-19-1_avatar_fontsize_L);--_ui5-v1-19-1_avatar_icon_XL:var(--_ui5-v1-19-1_avatar_fontsize_XL);--_ui5-v1-19-1_avatar_group_button_focus_border:none;--_ui5-v1-19-1_avatar_group_focus_border_radius:0.375rem;--ui5-v1-19-1-badge-color-scheme-1-border:var(--sapAccentColor1);--ui5-v1-19-1-badge-color-scheme-2-border:var(--sapAccentColor2);--ui5-v1-19-1-badge-color-scheme-3-border:var(--sapAccentColor3);--ui5-v1-19-1-badge-color-scheme-4-border:var(--sapAccentColor4);--ui5-v1-19-1-badge-color-scheme-5-border:var(--sapAccentColor5);--ui5-v1-19-1-badge-color-scheme-6-border:var(--sapAccentColor6);--ui5-v1-19-1-badge-color-scheme-7-border:var(--sapAccentColor7);--ui5-v1-19-1-badge-color-scheme-8-border:var(--sapLegendColor18);--ui5-v1-19-1-badge-color-scheme-9-border:var(--sapAccentColor10);--ui5-v1-19-1-badge-color-scheme-10-border:var(--sapAccentColor9);--_ui5-v1-19-1-badge-height:1.375rem;--_ui5-v1-19-1-badge-border:none;--_ui5-v1-19-1-badge-border-radius:0.25rem;--_ui5-v1-19-1-badge-padding-inline:0.375em;--_ui5-v1-19-1-badge-padding-inline-icon-only:var(--_ui5-v1-19-1-badge-padding-inline);--_ui5-v1-19-1-badge-text-transform:none;--_ui5-v1-19-1-badge-icon-gap:0.25rem;--_ui5-v1-19-1-badge-font-size:var(--sapFontSize);--_ui5-v1-19-1-badge-font:\"72override\",var(--sapFontSemiboldDuplexFamily);--_ui5-v1-19-1-badge-font-weight:normal;--_ui5-v1-19-1-badge-default-border-color:transparent;--_ui5-v1-19-1-badge-default-background:var(--ui5-v1-19-1-badge-color-scheme-1-background);--_ui5-v1-19-1-badge-default-color:var(--ui5-v1-19-1-badge-color-scheme-1-color);--_ui5-v1-19-1-badge-letter-spacing:normal;--ui5-v1-19-1-badge-color-scheme-1-background:var(--sapAvatar_1_Background);--ui5-v1-19-1-badge-color-scheme-1-color:var(--sapAvatar_1_TextColor);--ui5-v1-19-1-badge-color-scheme-2-background:var(--sapAvatar_2_Background);--ui5-v1-19-1-badge-color-scheme-2-color:var(--sapAvatar_2_TextColor);--ui5-v1-19-1-badge-color-scheme-3-background:var(--sapAvatar_3_Background);--ui5-v1-19-1-badge-color-scheme-3-color:var(--sapAvatar_3_TextColor);--ui5-v1-19-1-badge-color-scheme-4-background:var(--sapAvatar_4_Background);--ui5-v1-19-1-badge-color-scheme-4-color:var(--sapAvatar_4_TextColor);--ui5-v1-19-1-badge-color-scheme-5-background:var(--sapAvatar_5_Background);--ui5-v1-19-1-badge-color-scheme-5-color:var(--sapAvatar_5_TextColor);--ui5-v1-19-1-badge-color-scheme-6-background:var(--sapAvatar_6_Background);--ui5-v1-19-1-badge-color-scheme-6-color:var(--sapAvatar_6_TextColor);--ui5-v1-19-1-badge-color-scheme-7-background:var(--sapAvatar_7_Background);--ui5-v1-19-1-badge-color-scheme-7-color:var(--sapAvatar_7_TextColor);--ui5-v1-19-1-badge-color-scheme-8-background:var(--sapAvatar_8_Background);--ui5-v1-19-1-badge-color-scheme-8-color:var(--sapAvatar_8_TextColor);--ui5-v1-19-1-badge-color-scheme-9-background:var(--sapAvatar_9_Background);--ui5-v1-19-1-badge-color-scheme-9-color:var(--sapAvatar_9_TextColor);--ui5-v1-19-1-badge-color-scheme-10-background:var(--sapAvatar_10_Background);--ui5-v1-19-1-badge-color-scheme-10-color:var(--sapAvatar_10_TextColor);--_ui5-v1-19-1_breadcrumbs_current_location_focus_border_radius:0.25rem;--browser_scrollbar_border_radius:var(--sapElement_BorderCornerRadius);--browser_scrollbar_border:none;--_ui5-v1-19-1_busy_indicator_color:var(--sapContent_BusyColor);--_ui5-v1-19-1_busy_indicator_focus_border_radius:0.75rem;--_ui5-v1-19-1_busy_indicator_focus_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_button_base_min_compact_width:2rem;--_ui5-v1-19-1_button_base_height:var(--sapElement_Height);--_ui5-v1-19-1_button_compact_height:1.625rem;--_ui5-v1-19-1_button_border_radius:var(--sapButton_BorderCornerRadius);--_ui5-v1-19-1_button_compact_padding:0.4375rem;--_ui5-v1-19-1_button_emphasized_outline:1px dotted var(--sapContent_FocusColor);--_ui5-v1-19-1_button_focus_offset:1px;--_ui5-v1-19-1_button_focus_width:1px;--_ui5-v1-19-1_button_emphasized_focused_border_before:none;--_ui5-v1-19-1_button_emphasized_focused_active_border_color:transparent;--_ui5-v1-19-1_button_focused_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_button_focused_border_radius:0.375rem;--_ui5-v1-19-1_button_focused_inner_border_radius:0.375rem;--_ui5-v1-19-1_button_base_min_width:2.25rem;--_ui5-v1-19-1_button_base_padding:0.5625rem;--_ui5-v1-19-1_button_base_icon_only_padding:0.5625rem;--_ui5-v1-19-1_button_base_icon_margin:0.375rem;--_ui5-v1-19-1_button_icon_font_size:1rem;--_ui5-v1-19-1_button_text_shadow:none;--_ui5-v1-19-1_button_emphasized_border_width:.0625rem;--_ui5-v1-19-1_button_pressed_focused_border_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_button_fontFamily:var(--sapFontSemiboldDuplexFamily);--_ui5-v1-19-1_button_emphasized_focused_border_color:var(--sapContent_ContrastFocusColor);--_ui5-v1-19-1_card_box_shadow:var(--sapContent_Shadow0);--_ui5-v1-19-1_card_header_border_color:var(--sapTile_SeparatorColor);--_ui5-v1-19-1_card_header_focus_border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_card_header_focus_bottom_radius:0px;--_ui5-v1-19-1_card_header_title_font_weight:normal;--_ui5-v1-19-1_card_header_subtitle_margin_top:.25rem;--_ui5-v1-19-1_card_hover_box_shadow:var(--sapContent_Shadow2);--_ui5-v1-19-1_card_header_focus_offset:0px;--_ui5-v1-19-1_card_header_focus_radius:var(--_ui5-v1-19-1_card_border-radius);--_ui5-v1-19-1_card_header_title_font_family:var(--sapFontHeaderFamily);--_ui5-v1-19-1_card_header_title_font_size:var(--sapFontHeader6Size);--_ui5-v1-19-1_card_header_hover_bg:var(--sapTile_Hover_Background);--_ui5-v1-19-1_card_header_active_bg:var(--sapTile_Active_Background);--_ui5-v1-19-1_card_header_border:none;--_ui5-v1-19-1_card_border-radius:var(--sapTile_BorderCornerRadius);--_ui5-v1-19-1_card_header_padding:1rem 1rem 0.75rem 1rem;--_ui5-v1-19-1_card_border:none;--ui5-v1-19-1_carousel_background_color_solid:var(--sapGroup_ContentBackground);--ui5-v1-19-1_carousel_background_color_translucent:var(--sapBackgroundColor);--ui5-v1-19-1_carousel_button_size:2.5rem;--ui5-v1-19-1_carousel_inactive_dot_size:0.25rem;--ui5-v1-19-1_carousel_inactive_dot_margin:0 0.375rem;--ui5-v1-19-1_carousel_inactive_dot_border:1px solid var(--sapContent_ForegroundBorderColor);--ui5-v1-19-1_carousel_inactive_dot_background:var(--sapContent_ForegroundBorderColor);--ui5-v1-19-1_carousel_active_dot_border:1px solid var(--sapContent_Selected_ForegroundColor);--ui5-v1-19-1_carousel_active_dot_background:var(--sapContent_Selected_ForegroundColor);--ui5-v1-19-1_carousel_navigation_button_active_box_shadow:none;--_ui5-v1-19-1_checkbox_box_shadow:none;--_ui5-v1-19-1_checkbox_transition:unset;--_ui5-v1-19-1_checkbox_focus_border:none;--_ui5-v1-19-1_checkbox_border_radius:0;--_ui5-v1-19-1_checkbox_focus_outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_checkbox_outer_hover_background:transparent;--_ui5-v1-19-1_checkbox_inner_width_height:1.375rem;--_ui5-v1-19-1_checkbox_inner_disabled_border_color:var(--sapField_BorderColor);--_ui5-v1-19-1_checkbox_inner_information_box_shadow:none;--_ui5-v1-19-1_checkbox_inner_warning_box_shadow:none;--_ui5-v1-19-1_checkbox_inner_error_box_shadow:none;--_ui5-v1-19-1_checkbox_inner_success_box_shadow:none;--_ui5-v1-19-1_checkbox_inner_default_box_shadow:none;--_ui5-v1-19-1_checkbox_inner_background:var(--sapField_Background);--_ui5-v1-19-1_checkbox_wrapped_focus_padding:.375rem;--_ui5-v1-19-1_checkbox_wrapped_content_margin_top:.125rem;--_ui5-v1-19-1_checkbox_compact_wrapper_padding:.5rem;--_ui5-v1-19-1_checkbox_compact_width_height:2rem;--_ui5-v1-19-1_checkbox_compact_inner_size:1rem;--_ui5-v1-19-1_checkbox_compact_focus_position:.375rem;--_ui5-v1-19-1_checkbox_compact_wrapped_label_margin_top:-1px;--_ui5-v1-19-1_checkbox_label_offset:var(--_ui5-v1-19-1_checkbox_wrapper_padding);--_ui5-v1-19-1_checkbox_disabled_label_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_checkbox_default_focus_border:none;--_ui5-v1-19-1_checkbox_focus_outline_display:block;--_ui5-v1-19-1_checkbox_wrapper_padding:.6875rem;--_ui5-v1-19-1_checkbox_width_height:2.75rem;--_ui5-v1-19-1_checkbox_label_color:var(--sapField_TextColor);--_ui5-v1-19-1_checkbox_inner_border:solid var(--sapField_BorderWidth) var(--sapField_BorderColor);--_ui5-v1-19-1_checkbox_inner_border_radius:var(--sapField_BorderCornerRadius);--_ui5-v1-19-1_checkbox_checkmark_color:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_checkbox_hover_background:var(--sapContent_Selected_Hover_Background);--_ui5-v1-19-1_checkbox_inner_hover_border_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_checkbox_inner_hover_checked_border_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_checkbox_inner_selected_border_color:var(--sapField_BorderColor);--_ui5-v1-19-1_checkbox_inner_active_border_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_checkbox_active_background:var(--sapContent_Selected_Hover_Background);--_ui5-v1-19-1_checkbox_inner_readonly_border:var(--sapElement_BorderWidth) var(--sapField_ReadOnly_BorderColor) dashed;--_ui5-v1-19-1_checkbox_inner_error_border:var(--sapField_InvalidBorderWidth) solid var(--sapField_InvalidColor);--_ui5-v1-19-1_checkbox_inner_error_background_hover:var(--sapField_Hover_Background);--_ui5-v1-19-1_checkbox_inner_warning_border:var(--sapField_WarningBorderWidth) solid var(--sapField_WarningColor);--_ui5-v1-19-1_checkbox_inner_warning_color:var(--sapField_WarningColor);--_ui5-v1-19-1_checkbox_inner_warning_background_hover:var(--sapField_Hover_Background);--_ui5-v1-19-1_checkbox_checkmark_warning_color:var(--sapField_WarningColor);--_ui5-v1-19-1_checkbox_inner_success_border:var(--sapField_SuccessBorderWidth) solid var(--sapField_SuccessColor);--_ui5-v1-19-1_checkbox_inner_success_background_hover:var(--sapField_Hover_Background);--_ui5-v1-19-1_checkbox_inner_information_color:var(--sapField_InformationColor);--_ui5-v1-19-1_checkbox_inner_information_border:var(--sapField_InformationBorderWidth) solid var(--sapField_InformationColor);--_ui5-v1-19-1_checkbox_inner_information_background_hover:var(--sapField_Hover_Background);--_ui5-v1-19-1_checkbox_disabled_opacity:var(--sapContent_DisabledOpacity);--_ui5-v1-19-1_checkbox_focus_position:0.3125rem;--_ui5-v1-19-1_checkbox_focus_border_radius:0.5rem;--_ui5-v1-19-1_checkbox_right_focus_distance:var(--_ui5-v1-19-1_checkbox_focus_position);--_ui5-v1-19-1_checkbox_wrapped_focus_left_top_bottom_position:0.1875rem;--_ui5-v1-19-1_color-palette-item-outer-border-radius:0.25rem;--_ui5-v1-19-1_color-palette-item-inner-border-radius:0.1875rem;--_ui5-v1-19-1_color-palette-item-container-sides-padding:0.3125rem;--_ui5-v1-19-1_color-palette-item-container-rows-padding:0.6875rem;--_ui5-v1-19-1_color-palette-item-focus-height:1.5rem;--_ui5-v1-19-1_color-palette-item-container-padding:var(--_ui5-v1-19-1_color-palette-item-container-sides-padding) var(--_ui5-v1-19-1_color-palette-item-container-rows-padding);--_ui5-v1-19-1_color-palette-item-hover-margin:0.0625rem;--_ui5-v1-19-1_color-palette-row-height:9.5rem;--_ui5-v1-19-1_color-palette-button-height:3rem;--_ui5-v1-19-1_color-palette-item-before-focus-color:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_color-palette-item-before-focus-offset:-0.3125rem;--_ui5-v1-19-1_color-palette-item-before-focus-hover-offset:-0.0625rem;--_ui5-v1-19-1_color-palette-item-after-focus-color:0.0625rem solid var(--sapContent_ContrastFocusColor);--_ui5-v1-19-1_color-palette-item-after-focus-offset:-0.1875rem;--_ui5-v1-19-1_color-palette-item-after-focus-hover-offset:0.0625rem;--_ui5-v1-19-1_color-palette-item-before-focus-border-radius:0.4375rem;--_ui5-v1-19-1_color-palette-item-after-focus-border-radius:0.3125rem;--_ui5-v1-19-1_color-palette-item-hover-outer-border-radius:0.4375rem;--_ui5-v1-19-1_color-palette-item-hover-inner-border-radius:0.375rem;--_ui5-v1-19-1_color_picker_circle_outer_border:0.0625rem solid var(--sapContent_ContrastShadowColor);--_ui5-v1-19-1_color_picker_circle_inner_border:0.0625rem solid var(--sapField_BorderColor);--_ui5-v1-19-1_color_picker_circle_inner_circle_size:0.5625rem;--_ui5-v1-19-1_color_picker_slider_handle_box_shadow:0.125rem solid var(--sapField_BorderColor);--_ui5-v1-19-1_color_picker_slider_handle_border:0.125rem solid var(--sapField_BorderColor);--_ui5-v1-19-1_color_picker_slider_handle_outline_hover:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_color_picker_slider_handle_outline_focus:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_color_picker_slider_handle_margin_top:-.1875rem;--_ui5-v1-19-1_color_picker_slider_handle_focus_margin_top:var(--_ui5-v1-19-1_color_picker_slider_handle_margin_top);--_ui5-v1-19-1_color_picker_slider_container_margin_top:-11px;--_ui5-v1-19-1_color_picker_slider_handle_inline_focus:1px solid var(--sapContent_ContrastFocusColor);--_ui5-v1-19-1_datepicker_icon_border:none;--_ui5-v1-19-1-datepicker-hover-background:var(--sapField_Hover_Background);--_ui5-v1-19-1-datepicker_border_radius:0.25rem;--_ui5-v1-19-1-datepicker_icon_border_radius:0.125rem;--_ui5-v1-19-1_daypicker_item_box_shadow:inset 0 0 0 0.0625rem var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_daypicker_item_margin:2px;--_ui5-v1-19-1_daypicker_item_border:none;--_ui5-v1-19-1_daypicker_item_selected_border_color:var(--sapList_Background);--_ui5-v1-19-1_daypicker_daynames_container_height:2rem;--_ui5-v1-19-1_daypicker_weeknumbers_container_padding_top:2rem;--_ui5-v1-19-1_daypicker_item_othermonth_background_color:var(--sapList_Background);--_ui5-v1-19-1_daypicker_item_othermonth_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_daypicker_item_othermonth_hover_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_daypicker_item_now_inner_border_radius:0;--_ui5-v1-19-1_daypicker_item_outline_width:1px;--_ui5-v1-19-1_daypicker_item_outline_offset:1px;--_ui5-v1-19-1_daypicker_item_now_focus_after_width:calc(100% - 0.25rem);--_ui5-v1-19-1_daypicker_item_now_focus_after_height:calc(100% - 0.25rem);--_ui5-v1-19-1_daypicker_item_now_selected_focus_after_width:calc(100% - 0.375rem);--_ui5-v1-19-1_daypicker_item_now_selected_focus_after_height:calc(100% - 0.375rem);--_ui5-v1-19-1_daypicker_item_selected_background:transparent;--_ui5-v1-19-1_daypicker_item_outline_focus_after:none;--_ui5-v1-19-1_daypicker_item_border_focus_after:var(--_ui5-v1-19-1_daypicker_item_outline_width) dotted var(--sapContent_FocusColor);--_ui5-v1-19-1_daypicker_item_width_focus_after:calc(100% - 0.25rem);--_ui5-v1-19-1_daypicker_item_height_focus_after:calc(100% - 0.25rem);--_ui5-v1-19-1_daypicker_item_now_outline:none;--_ui5-v1-19-1_daypicker_item_now_outline_offset:none;--_ui5-v1-19-1_daypicker_item_now_outline_offset_focus_after:var(--_ui5-v1-19-1_daypicker_item_now_outline_offset);--_ui5-v1-19-1_daypicker_item_now_not_selected_inset:0;--_ui5-v1-19-1_daypicker_item_now_border_color:var(--sapLegend_CurrentDateTime);--_ui5-v1-19-1_daypicker_two_calendar_item_now_inset:0.1875rem;--_ui5-v1-19-1_dp_two_calendar_item_secondary_text_border_radios:0.25rem;--_ui5-v1-19-1_daypicker_item_border_radius:0.5rem;--_ui5-v1-19-1_daypicker_item_focus_border:0.0625rem dotted var(--sapContent_FocusColor);--_ui5-v1-19-1_daypicker_item_selected_border:0.0625rem solid var(--sapList_SelectionBorderColor);--_ui5-v1-19-1_daypicker_item_not_selected_focus_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_daypicker_item_selected_focus_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_daypicker_item_selected_focus_width:0.125rem;--_ui5-v1-19-1_daypicker_item_no_selected_inset:0.375rem;--_ui5-v1-19-1_daypicker_item_now_border_focus_after:0.125rem solid var(--sapList_SelectionBorderColor);--_ui5-v1-19-1_daypicker_item_now_border_radius_focus_after:0.3125rem;--_ui5-v1-19-1_day_picker_item_selected_now_border_focus:0.1875rem solid var(--sapList_SelectionBorderColor);--_ui5-v1-19-1_day_picker_item_selected_now_border_radius_focus:0.1875rem;--ui5-v1-19-1-dp-item_withsecondtype_border:0.375rem;--_ui5-v1-19-1_daypicker_item_now_border:0.125rem solid var(--sapLegend_CurrentDateTime);--_ui5-v1-19-1_daypicker_dayname_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_daypicker_weekname_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_daypicker_item_selected_box_shadow:inset 0 0 0 0.0625rem var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_daypicker_item_selected_daytext_hover_background:transparent;--_ui5-v1-19-1_daypicker_item_border_radius_item:0.5rem;--_ui5-v1-19-1_daypicker_item_border_radius_focus_after:0.1875rem;--_ui5-v1-19-1_daypicker_item_selected_between_border:0.5rem;--_ui5-v1-19-1_daypicker_item_selected_between_background:var(--sapList_SelectionBackgroundColor);--_ui5-v1-19-1_daypicker_item_selected_between_text_background:transparent;--_ui5-v1-19-1_daypicker_item_selected_between_text_font:var(--sapFontFamily);--_ui5-v1-19-1_daypicker_item_selected_text_font:var(--sapFontBoldFamily);--_ui5-v1-19-1_daypicker_item_selected_between_hover_background:var(--sapList_Hover_SelectionBackground);--_ui5-v1-19-1_daypicker_item_now_box_shadow:inset 0 0 0 0.35rem var(--sapList_Background);--_ui5-v1-19-1_daypicker_item_selected_text_outline:0.0625rem solid var(--sapSelectedColor);--_ui5-v1-19-1_daypicker_item_now_selected_outline_offset:-0.25rem;--_ui5-v1-19-1_daypicker_item_now_selected_between_inset:0.25rem;--_ui5-v1-19-1_daypicker_item_now_selected_between_border:0.0625rem solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_daypicker_item_now_selected_between_border_radius:0.1875rem;--_ui5-v1-19-1_daypicker_item_select_between_border:1px solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_daypicker_item_weeekend_filter:brightness(105%);--_ui5-v1-19-1_daypicker_item_selected_hover:var(--sapList_Hover_Background);--_ui5-v1-19-1_daypicker_item_now_inset:0.375rem;--_ui5-v1-19-1-dp-item_withsecondtype_border:0.25rem;--_ui5-v1-19-1_daypicker_item_selected__secondary_type_text_outline:0.125rem solid var(--sapSelectedColor);--_ui5-v1-19-1_daypicker_two_calendar_item_now_day_text_content:\"\";--_ui5-v1-19-1_daypicker_two_calendar_item_now_selected_border_width:0.1875rem;--_ui5-v1-19-1_daypicker_two_calendar_item_border_radius:0.5rem;--_ui5-v1-19-1_daypicker_two_calendar_item_border_focus_border_radius:0.5rem;--_ui5-v1-19-1_daypicker_two_calendar_item_no_selected_inset:0;--_ui5-v1-19-1_daypicker_two_calendar_item_selected_now_border_radius_focus:0.3125rem;--_ui5-v1-19-1_daypicker_two_calendar_item_no_selected_focus_inset:0.1875rem;--_ui5-v1-19-1_daypicker_two_calendar_item_no_select_focus_border_radius:0.3125rem;--_ui5-v1-19-1_daypicker_two_calendar_item_now_selected_border_inset:0;--_ui5-v1-19-1_dialog_resize_handle_color:var(--sapButton_Lite_TextColor);--_ui5-v1-19-1_dialog_header_error_state_icon_color:var(--sapNegativeElementColor);--_ui5-v1-19-1_dialog_header_information_state_icon_color:var(--sapInformativeElementColor);--_ui5-v1-19-1_dialog_header_success_state_icon_color:var(--sapPositiveElementColor);--_ui5-v1-19-1_dialog_header_warning_state_icon_color:var(--sapCriticalElementColor);--_ui5-v1-19-1_dialog_header_state_line_height:0.0625rem;--_ui5-v1-19-1_dialog_header_focus_bottom_offset:2px;--_ui5-v1-19-1_dialog_header_focus_top_offset:1px;--_ui5-v1-19-1_dialog_header_focus_left_offset:1px;--_ui5-v1-19-1_dialog_header_focus_right_offset:1px;--_ui5-v1-19-1_dialog_resize_handle_right:0;--_ui5-v1-19-1_dialog_resize_handle_bottom:3px;--_ui5-v1-19-1_dialog_header_border_radius:var(--sapElement_BorderCornerRadius);--_ui5-v1-19-1_file_uploader_value_state_error_hover_background_color:var(--sapField_Hover_Background);--_ui5-v1-19-1_file_uploader_hover_border:none;--ui5-v1-19-1-group-header-listitem-background-color:var(--sapList_GroupHeaderBackground);--ui5-v1-19-1-icon-focus-border-radius:0.25rem;--_ui5-v1-19-1_input_width:13.125rem;--_ui5-v1-19-1_input_min_width:2.75rem;--_ui5-v1-19-1_input_height:var(--sapElement_Height);--_ui5-v1-19-1_input_compact_height:1.625rem;--_ui5-v1-19-1_input_value_state_error_hover_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_input_background_color:var(--sapField_Background);--_ui5-v1-19-1_input_border_radius:var(--sapField_BorderCornerRadius);--_ui5-v1-19-1_input_placeholder_style:italic;--_ui5-v1-19-1_input_placeholder_color:var(--sapField_PlaceholderTextColor);--_ui5-v1-19-1_input_bottom_border_height:0;--_ui5-v1-19-1_input_bottom_border_color:transparent;--_ui5-v1-19-1_input_focused_border_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_input_state_border_width:0.125rem;--_ui5-v1-19-1_input_information_border_width:0.125rem;--_ui5-v1-19-1_input_error_font_weight:normal;--_ui5-v1-19-1_input_warning_font_weight:normal;--_ui5-v1-19-1_input_focus_border_width:1px;--_ui5-v1-19-1_input_error_warning_font_style:inherit;--_ui5-v1-19-1_input_error_warning_text_indent:0;--_ui5-v1-19-1_input_disabled_color:var(--sapContent_DisabledTextColor);--_ui5-v1-19-1_input_disabled_font_weight:normal;--_ui5-v1-19-1_input_disabled_border_color:var(--sapField_BorderColor);--_ui5-v1-19-1-input_disabled_background:var(--sapField_Background);--_ui5-v1-19-1_input_readonly_border_color:var(--sapField_ReadOnly_BorderColor);--_ui5-v1-19-1_input_readonly_background:var(--sapField_ReadOnly_Background);--_ui5-v1-19-1_input_disabled_opacity:var(--sapContent_DisabledOpacity);--_ui5-v1-19-1_input_icon_min_width:2.25rem;--_ui5-v1-19-1_input_compact_min_width:2rem;--_ui5-v1-19-1_input_transition:none;--_ui5-v1-19-1-input-value-state-icon-display:none;--_ui5-v1-19-1_input_value_state_error_border_color:var(--sapField_InvalidColor);--_ui5-v1-19-1_input_focused_value_state_error_border_color:var(--sapField_InvalidColor);--_ui5-v1-19-1_input_value_state_warning_border_color:var(--sapField_WarningColor);--_ui5-v1-19-1_input_focused_value_state_warning_border_color:var(--sapField_WarningColor);--_ui5-v1-19-1_input_value_state_success_border_color:var(--sapField_SuccessColor);--_ui5-v1-19-1_input_focused_value_state_success_border_color:var(--sapField_SuccessColor);--_ui5-v1-19-1_input_value_state_success_border_width:1px;--_ui5-v1-19-1_input_value_state_information_border_color:var(--sapField_InformationColor);--_ui5-v1-19-1_input_focused_value_state_information_border_color:var(--sapField_InformationColor);--_ui5-v1-19-1-input-value-state-information-border-width:1px;--_ui5-v1-19-1-input-background-image:none;--ui5-v1-19-1_input_focus_pseudo_element_content:\"\";--_ui5-v1-19-1_input_value_state_error_warning_placeholder_font_weight:normal;--_ui5-v1-19-1-input_error_placeholder_color:var(--sapField_PlaceholderTextColor);--_ui5-v1-19-1_input_icon_width:2.25rem;--_ui5-v1-19-1-input-icons-count:0;--_ui5-v1-19-1_input_margin_top_bottom:0.1875rem;--_ui5-v1-19-1_input_tokenizer_min_width:3.25rem;--_ui5-v1-19-1-input-border:none;--_ui5-v1-19-1_input_hover_border:none;--_ui5-v1-19-1_input_focus_border_radius:0.25rem;--_ui5-v1-19-1_input_error_warning_border_style:none;--_ui5-v1-19-1_input_focused_value_state_error_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_input_focused_value_state_warning_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_input_focused_value_state_success_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_input_focused_value_state_information_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_input_focused_value_state_error_focus_outline_color:var(--sapField_InvalidColor);--_ui5-v1-19-1_input_focused_value_state_warning_focus_outline_color:var(--sapField_WarningColor);--_ui5-v1-19-1_input_focused_value_state_success_focus_outline_color:var(--sapField_SuccessColor);--_ui5-v1-19-1_input_focus_offset:0;--_ui5-v1-19-1_input_information_icon_padding:.625rem .625rem .5rem .625rem;--_ui5-v1-19-1_input_information_focused_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_error_warning_icon_padding:.625rem .625rem .5rem .625rem;--_ui5-v1-19-1_input_error_warning_focused_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_custom_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_error_warning_custom_icon_padding:.625rem .625rem .5rem .625rem;--_ui5-v1-19-1_input_error_warning_custom_focused_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_information_custom_icon_padding:.625rem .625rem .5rem .625rem;--_ui5-v1-19-1_input_information_custom_focused_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_focus_outline_color:var(--sapField_Active_BorderColor);--_ui5-v1-19-1_input_icon_wrapper_height:calc(100% - 1px);--_ui5-v1-19-1_input_icon_wrapper_state_height:calc(100% - 2px);--_ui5-v1-19-1_input_icon_wrapper_success_state_height:calc(100% - var(--_ui5-v1-19-1_input_value_state_success_border_width));--_ui5-v1-19-1_input_icon_color:var(--sapContent_IconColor);--_ui5-v1-19-1_input_icon_pressed_bg:var(--sapButton_Selected_Background);--_ui5-v1-19-1_input_icon_padding:.625rem .625rem .5625rem .625rem;--_ui5-v1-19-1_input_icon_hover_bg:var(--sapField_Focus_Background);--_ui5-v1-19-1_input_icon_pressed_color:var(--sapButton_Active_TextColor);--_ui5-v1-19-1_input_icon_border_radius:0.25rem;--_ui5-v1-19-1_input_icon_box_shadow:var(--sapField_Hover_Shadow);--_ui5-v1-19-1_input_icon_border:none;--_ui5-v1-19-1_input_error_icon_box_shadow:var(--sapContent_Negative_Shadow);--_ui5-v1-19-1_input_warning_icon_box_shadow:var(--sapContent_Critical_Shadow);--_ui5-v1-19-1_input_information_icon_box_shadow:var(--sapContent_Informative_Shadow);--_ui5-v1-19-1_input_success_icon_box_shadow:var(--sapContent_Positive_Shadow);--_ui5-v1-19-1_input_icon_error_pressed_color:var(--sapButton_Reject_Selected_TextColor);--_ui5-v1-19-1_input_icon_warning_pressed_color:var(--sapButton_Attention_Selected_TextColor);--_ui5-v1-19-1_input_icon_information_pressed_color:var(--sapButton_Selected_TextColor);--_ui5-v1-19-1_input_icon_success_pressed_color:var(--sapButton_Accept_Selected_TextColor);--_ui5-v1-19-1_link_focus_text_decoration:underline;--_ui5-v1-19-1_link_text_decoration:var(--sapLink_TextDecoration);--_ui5-v1-19-1_link_hover_text_decoration:var(--sapLink_Hover_TextDecoration);--_ui5-v1-19-1_link_focused_hover_text_decoration:none;--_ui5-v1-19-1_link_focused_hover_text_color:var(--sapContent_ContrastTextColor);--_ui5-v1-19-1_link_active_text_decoration:var(--sapLink_Active_TextDecoration);--_ui5-v1-19-1_link_border:0.125rem solid transparent;--_ui5-v1-19-1_link_border_focus:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_link_focus_border-radius:0.125rem;--_ui5-v1-19-1_link_focus_background_color:var(--sapContent_FocusColor);--_ui5-v1-19-1_link_focus_color:var(--sapContent_ContrastTextColor);--_ui5-v1-19-1_link_subtle_text_decoration:underline;--_ui5-v1-19-1_link_subtle_text_decoration_hover:none;--ui5-v1-19-1_list_footer_text_color:var(--sapList_FooterTextColor);--ui5-v1-19-1-listitem-background-color:var(--sapList_Background);--ui5-v1-19-1-listitem-border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--ui5-v1-19-1-listitem-selected-border-bottom:1px solid var(--sapList_SelectionBorderColor);--ui5-v1-19-1-listitem-focused-selected-border-bottom:1px solid var(--sapList_SelectionBorderColor);--ui5-v1-19-1-listitem-padding:0 1rem;--ui5-v1-19-1-listitem-focus-border-radius:0;--ui5-v1-19-1-listitem-focus-offset:0.125rem;--_ui5-v1-19-1_listitembase_focus_width:1px;--_ui5-v1-19-1-listitembase_disabled_opacity:0.5;--_ui5-v1-19-1_product_switch_item_border:none;--ui5-v1-19-1-listitem-active-border-color:var(--sapContent_FocusColor);--_ui5-v1-19-1_menu_item_padding:0 1rem 0 0.75rem;--_ui5-v1-19-1_menu_item_submenu_icon_right:1rem;--_ui5-v1-19-1_menu_item_additional_text_start_margin:1rem;--_ui5-v1-19-1_menu_popover_border_radius:var(--sapPopover_BorderCornerRadius);--_ui5-v1-19-1_monthpicker_item_border:none;--_ui5-v1-19-1_monthpicker_item_margin:1px;--_ui5-v1-19-1_monthpicker_item_border_radius:0.5rem;--_ui5-v1-19-1_monthpicker_item_focus_after_border:var(--_ui5-v1-19-1_button_focused_border);--_ui5-v1-19-1_monthpicker_item_focus_after_border_radius:0.5rem;--_ui5-v1-19-1_monthpicker_item_focus_after_width:calc(100% - 0.5rem);--_ui5-v1-19-1_monthpicker_item_focus_after_height:calc(100% - 0.5rem);--_ui5-v1-19-1_monthpicker_item_focus_after_offset:0.25rem;--_ui5-v1-19-1_monthpicker_item_selected_text_color:var(--sapContent_Selected_TextColor);--_ui5-v1-19-1_monthpicker_item_selected_background_color:var(--sapLegend_WorkingBackground);--_ui5-v1-19-1_monthpicker_item_selected_hover_color:var(--sapList_Hover_Background);--_ui5-v1-19-1_monthpicker_item_selected_box_shadow:none;--_ui5-v1-19-1_monthpicker_item_focus_after_outline:0.125rem solid var(--sapSelectedColor);--_ui5-v1-19-1_monthpicker_item_selected_font_wieght:bold;--_ui5-v1-19-1_message_strip_icon_width:2.5rem;--_ui5-v1-19-1_message_strip_button_border_width:0;--_ui5-v1-19-1_message_strip_button_border_style:none;--_ui5-v1-19-1_message_strip_button_border_color:transparent;--_ui5-v1-19-1_message_strip_button_border_radius:0;--_ui5-v1-19-1_message_strip_padding:0.4375rem 2.5rem 0.4375rem 2.5rem;--_ui5-v1-19-1_message_strip_padding_block_no_icon:0.4375rem 0.4375rem;--_ui5-v1-19-1_message_strip_padding_inline_no_icon:1rem 2.5rem;--_ui5-v1-19-1_message_strip_button_height:1.625rem;--_ui5-v1-19-1_message_strip_border_width:1px;--_ui5-v1-19-1_message_strip_close_button_border:none;--_ui5-v1-19-1_message_strip_icon_top:0.4375rem;--_ui5-v1-19-1_message_strip_focus_width:1px;--_ui5-v1-19-1_message_strip_focus_offset:-2px;--_ui5-v1-19-1_message_strip_close_button_top:0.125rem;--_ui5-v1-19-1_message_strip_close_button_right:0.1875rem;--_ui5-v1-19-1_panel_focus_border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-19-1_panel_header_padding_right:0.5rem;--_ui5-v1-19-1_panel_header_button_wrapper_padding:.25rem;--_ui5-v1-19-1_panel_button_root_width:2.75rem;--_ui5-v1-19-1_panel_border_radius:var(--sapElement_BorderCornerRadius);--_ui5-v1-19-1_panel_border_bottom:none;--_ui5-v1-19-1_panel_default_header_border:0.0625rem solid var(--sapGroup_TitleBorderColor);--_ui5-v1-19-1_panel_outline_offset:-0.125rem;--_ui5-v1-19-1_panel_border_radius_expanded:var(--sapElement_BorderCornerRadius) var(--sapElement_BorderCornerRadius) 0 0;--_ui5-v1-19-1_panel_icon_color:var(--sapButton_Lite_TextColor);--_ui5-v1-19-1_panel_focus_offset:-1px;--_ui5-v1-19-1_panel_content_padding:0.625rem 1rem;--_ui5-v1-19-1_panel_header_background_color:var(--sapGroup_TitleBackground);--_ui5-v1-19-1_popover_background:var(--sapGroup_ContentBackground);--_ui5-v1-19-1_popover_box_shadow:var(--sapContent_Shadow2);--_ui5-v1-19-1_popover_no_arrow_box_shadow:var(--sapContent_Shadow1);--_ui5-v1-19-1_popup_content_padding_s:1rem;--_ui5-v1-19-1_popup_content_padding_m_l:2rem;--_ui5-v1-19-1_popup_content_padding_xl:3rem;--_ui5-v1-19-1_popup_header_footer_padding_s:1rem;--_ui5-v1-19-1_popup_header_footer_padding_m_l:2rem;--_ui5-v1-19-1_popup_header_footer_padding_xl:3rem;--_ui5-v1-19-1_popup_viewport_margin:10px;--_ui5-v1-19-1_popup_header_font_weight:400;--_ui5-v1-19-1_popup_header_prop_header_text_alignment:flex-start;--_ui5-v1-19-1_popup_header_background:var(--sapPageHeader_Background);--_ui5-v1-19-1_popup_header_shadow:var(--sapContent_HeaderShadow);--_ui5-v1-19-1_popup_header_border:none;--_ui5-v1-19-1_popup_header_font_family:var(--sapFontHeaderFamily);--_ui5-v1-19-1_popup_border_radius:0.5rem;--_ui5-v1-19-1_progress_indicator_bar_border_max:none;--_ui5-v1-19-1_progress_indicator_icon_visibility:inline-block;--_ui5-v1-19-1_progress_indicator_side_points_visibility:block;--_ui5-v1-19-1_progress_indicator_padding:1.25rem 0 0.75rem 0;--_ui5-v1-19-1_progress_indicator_padding_end:1.25rem;--_ui5-v1-19-1_progress_indicator_host_height:unset;--_ui5-v1-19-1_progress_indicator_host_min_height:unset;--_ui5-v1-19-1_progress_indicator_host_box_sizing:border-box;--_ui5-v1-19-1_progress_indicator_root_position:relative;--_ui5-v1-19-1_progress_indicator_root_border_radius:0.25rem;--_ui5-v1-19-1_progress_indicator_root_height:0.375rem;--_ui5-v1-19-1_progress_indicator_root_min_height:0.375rem;--_ui5-v1-19-1_progress_indicator_root_overflow:visible;--_ui5-v1-19-1_progress_indicator_bar_height:0.625rem;--_ui5-v1-19-1_progress_indicator_bar_border_radius:0.5rem;--_ui5-v1-19-1_progress_indicator_remaining_bar_border_radius:0.25rem;--_ui5-v1-19-1_progress_indicator_remaining_bar_position:absolute;--_ui5-v1-19-1_progress_indicator_remaining_bar_width:100%;--_ui5-v1-19-1_progress_indicator_remaining_bar_overflow:visible;--_ui5-v1-19-1_progress_indicator_icon_position:absolute;--_ui5-v1-19-1_progress_indicator_icon_right_position:-1.25rem;--_ui5-v1-19-1_progress_indicator_value_margin:0 0 0.1875rem 0;--_ui5-v1-19-1_progress_indicator_value_position:absolute;--_ui5-v1-19-1_progress_indicator_value_top_position:-1.3125rem;--_ui5-v1-19-1_progress_indicator_value_left_position:0;--_ui5-v1-19-1_progress_indicator_background_none:var(--sapProgress_Background);--_ui5-v1-19-1_progress_indicator_background_error:var(--sapProgress_NegativeBackground);--_ui5-v1-19-1_progress_indicator_background_warning:var(--sapProgress_CriticalBackground);--_ui5-v1-19-1_progress_indicator_background_success:var(--sapProgress_PositiveBackground);--_ui5-v1-19-1_progress_indicator_background_information:var(--sapProgress_InformationBackground);--_ui5-v1-19-1_progress_indicator_value_state_none:var(--sapProgress_Value_Background);--_ui5-v1-19-1_progress_indicator_value_state_error:var(--sapProgress_Value_NegativeBackground);--_ui5-v1-19-1_progress_indicator_value_state_warning:var(--sapProgress_Value_CriticalBackground);--_ui5-v1-19-1_progress_indicator_value_state_success:var(--sapProgress_Value_PositiveBackground);--_ui5-v1-19-1_progress_indicator_value_state_information:var(--sapProgress_Value_InformationBackground);--_ui5-v1-19-1_progress_indicator_value_state_none_border_color:var(--sapProgress_Value_BorderColor);--_ui5-v1-19-1_progress_indicator_value_state_error_border_color:var(--sapProgress_Value_NegativeBorderColor);--_ui5-v1-19-1_progress_indicator_value_state_warning_border_color:var(--sapProgress_Value_CriticalBorderColor);--_ui5-v1-19-1_progress_indicator_value_state_success_border_color:var(--sapProgress_Value_PositiveBorderColor);--_ui5-v1-19-1_progress_indicator_value_state_information_border_color:var(--sapProgress_Value_InformationBorderColor);--_ui5-v1-19-1_progress_indicator_value_state_error_icon_color:var(--sapProgress_Value_NegativeTextColor);--_ui5-v1-19-1_progress_indicator_value_state_warning_icon_color:var(--sapProgress_Value_CriticalTextColor);--_ui5-v1-19-1_progress_indicator_value_state_success_icon_color:var(--sapProgress_Value_PositiveTextColor);--_ui5-v1-19-1_progress_indicator_value_state_information_icon_color:var(--sapProgress_Value_InformationTextColor);--_ui5-v1-19-1_progress_indicator_border:none;--_ui5-v1-19-1_progress_indicator_border_color_error:var(--sapErrorBorderColor);--_ui5-v1-19-1_progress_indicator_border_color_warning:var(--sapWarningBorderColor);--_ui5-v1-19-1_progress_indicator_border_color_success:var(--sapSuccessBorderColor);--_ui5-v1-19-1_progress_indicator_border_color_information:var(--sapInformationBorderColor);--_ui5-v1-19-1_progress_indicator_color:var(--sapField_TextColor);--_ui5-v1-19-1_progress_indicator_bar_color:var(--sapProgress_TextColor);--_ui5-v1-19-1_progress_indicator_icon_size:var(--sapFontLargeSize);--_ui5-v1-19-1_radio_button_min_width:2.75rem;--_ui5-v1-19-1_radio_button_hover_fill_error:var(--sapField_Hover_Background);--_ui5-v1-19-1_radio_button_hover_fill_warning:var(--sapField_Hover_Background);--_ui5-v1-19-1_radio_button_hover_fill_success:var(--sapField_Hover_Background);--_ui5-v1-19-1_radio_button_hover_fill_information:var(--sapField_Hover_Background);--_ui5-v1-19-1_radio_button_checked_fill:var(--sapSelectedColor);--_ui5-v1-19-1_radio_button_checked_error_fill:var(--sapField_InvalidColor);--_ui5-v1-19-1_radio_button_checked_success_fill:var(--sapField_SuccessColor);--_ui5-v1-19-1_radio_button_checked_information_fill:var(--sapField_InformationColor);--_ui5-v1-19-1_radio_button_warning_error_border_dash:0;--_ui5-v1-19-1_radio_button_outer_ring_color:var(--sapField_BorderColor);--_ui5-v1-19-1_radio_button_outer_ring_width:var(--sapField_BorderWidth);--_ui5-v1-19-1_radio_button_outer_ring_bg:var(--sapField_Background);--_ui5-v1-19-1_radio_button_outer_ring_hover_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_radio_button_outer_ring_active_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_radio_button_outer_ring_checked_hover_color:var(--sapField_Hover_BorderColor);--_ui5-v1-19-1_radio_button_outer_ring_padding_with_label:0 0.6875rem;--_ui5-v1-19-1_radio_button_border:none;--_ui5-v1-19-1_radio_button_focus_border:none;--_ui5-v1-19-1_radio_button_focus_outline:block;--_ui5-v1-19-1_radio_button_color:var(--sapField_BorderColor);--_ui5-v1-19-1_radio_button_label_offset:1px;--_ui5-v1-19-1_radio_button_items_align:unset;--_ui5-v1-19-1_radio_button_information_border_width:var(--sapField_InformationBorderWidth);--_ui5-v1-19-1_rating_indicator_item_height:1em;--_ui5-v1-19-1_rating_indicator_item_width:1em;--_ui5-v1-19-1_rating_indicator_component_spacing:0.5rem 0px;--_ui5-v1-19-1_rating_indicator_border_radius:0.25rem;--_ui5-v1-19-1_rating_indicator_outline_offset:0.125rem;--_ui5-v1-19-1_rating_indicator_readonly_item_height:0.75em;--_ui5-v1-19-1_rating_indicator_readonly_item_width:0.75em;--_ui5-v1-19-1_rating_indicator_readonly_item_spacing:0.1875rem 0.1875rem;--_ui5-v1-19-1_segmented_btn_inner_border:0.0625rem solid transparent;--_ui5-v1-19-1_segmented_btn_inner_border_odd_child:0.0625rem solid transparent;--_ui5-v1-19-1_segmented_btn_inner_pressed_border_odd_child:0.0625rem solid var(--sapButton_Selected_BorderColor);--_ui5-v1-19-1_segmented_btn_inner_border_radius:var(--sapButton_BorderCornerRadius);--_ui5-v1-19-1_segmented_btn_background_color:var(--sapButton_Lite_Background);--_ui5-v1-19-1_segmented_btn_border_color:var(--sapButton_Lite_BorderColor);--_ui5-v1-19-1_segmented_btn_hover_box_shadow:none;--_ui5-v1-19-1_segmented_btn_item_border_left:0.0625rem;--_ui5-v1-19-1_segmented_btn_item_border_right:0.0625rem;--_ui5-v1-19-1_radio_button_border_width:var(--sapContent_FocusWidth);--_ui5-v1-19-1_radio_button_border_radius:0.5rem;--_ui5-v1-19-1_radio_button_label_color:var(--sapField_TextColor);--_ui5-v1-19-1_radio_button_inner_ring_radius:27.5%;--_ui5-v1-19-1_radio_button_outer_ring_padding:0 0.6875rem;--_ui5-v1-19-1_radio_button_read_only_border_type:4,2;--_ui5-v1-19-1_radio_button_inner_ring_color:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_radio_button_checked_warning_fill:var(--sapField_WarningColor);--_ui5-v1-19-1_radio_button_read_only_inner_ring_color:var(--sapField_TextColor);--_ui5-v1-19-1_radio_button_read_only_border_width:var(--sapElement_BorderWidth);--_ui5-v1-19-1_radio_button_hover_fill:var(--sapContent_Selected_Hover_Background);--_ui5-v1-19-1_radio_button_focus_dist:0.375rem;--_ui5-v1-19-1_switch_height:2.75rem;--_ui5-v1-19-1_switch_foucs_border_size:1px;--_ui5-v1-19-1-switch-root-border-radius:0;--_ui5-v1-19-1-switch-root-box-shadow:none;--_ui5-v1-19-1-switch-focus:\"\";--_ui5-v1-19-1_switch_track_border_radius:0.75rem;--_ui5-v1-19-1-switch-track-border:1px solid;--_ui5-v1-19-1_switch_track_transition:none;--_ui5-v1-19-1_switch_handle_border_radius:1rem;--_ui5-v1-19-1-switch-handle-icon-display:none;--_ui5-v1-19-1-switch-slider-texts-display:inline;--_ui5-v1-19-1_switch_width:3.5rem;--_ui5-v1-19-1_switch_min_width:none;--_ui5-v1-19-1_switch_with_label_width:3.875rem;--_ui5-v1-19-1_switch_focus_outline:none;--_ui5-v1-19-1_switch_root_after_outline:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_switch_root_after_boreder:none;--_ui5-v1-19-1_switch_root_after_boreder_radius:1rem;--_ui5-v1-19-1_switch_root_outline_top:0.5rem;--_ui5-v1-19-1_switch_root_outline_bottom:0.5rem;--_ui5-v1-19-1_switch_root_outline_left:0.375rem;--_ui5-v1-19-1_switch_root_outline_right:0.375rem;--_ui5-v1-19-1_switch_disabled_opacity:var(--sapContent_DisabledOpacity);--_ui5-v1-19-1_switch_transform:translateX(100%) translateX(-1.625rem);--_ui5-v1-19-1_switch_transform_with_label:translateX(100%) translateX(-1.875rem);--_ui5-v1-19-1_switch_rtl_transform:translateX(-100%) translateX(1.625rem);--_ui5-v1-19-1_switch_rtl_transform_with_label:translateX(-100%) translateX(1.875rem);--_ui5-v1-19-1_switch_track_width:2.5rem;--_ui5-v1-19-1_switch_track_height:1.5rem;--_ui5-v1-19-1_switch_track_with_label_width:2.875rem;--_ui5-v1-19-1_switch_track_with_label_height:1.5rem;--_ui5-v1-19-1_switch_track_active_background_color:var(--sapButton_Track_Selected_Background);--_ui5-v1-19-1_switch_track_inactive_background_color:var(--sapButton_Track_Background);--_ui5-v1-19-1_switch_track_hover_active_background_color:var(--sapButton_Track_Selected_Hover_Background);--_ui5-v1-19-1_switch_track_hover_inactive_background_color:var(--sapButton_Track_Hover_Background);--_ui5-v1-19-1_switch_track_active_border_color:var(--sapButton_Track_Selected_BorderColor);--_ui5-v1-19-1_switch_track_inactive_border_color:var(--sapButton_Track_BorderColor);--_ui5-v1-19-1_switch_track_hover_active_border_color:var(--sapButton_Track_Selected_Hover_BorderColor);--_ui5-v1-19-1_switch_track_hover_inactive_border_color:var(--sapButton_Track_Hover_BorderColor);--_ui5-v1-19-1_switch_track_semantic_accept_background_color:var(--sapButton_Track_Positive_Background);--_ui5-v1-19-1_switch_track_semantic_reject_background_color:var(--sapButton_Track_Negative_Background);--_ui5-v1-19-1_switch_track_semantic_hover_accept_background_color:var(--sapButton_Track_Positive_Hover_Background);--_ui5-v1-19-1_switch_track_semantic_hover_reject_background_color:var(--sapButton_Track_Negative_Hover_Background);--_ui5-v1-19-1_switch_track_semantic_accept_border_color:var(--sapButton_Track_Positive_BorderColor);--_ui5-v1-19-1_switch_track_semantic_reject_border_color:var(--sapButton_Track_Negative_BorderColor);--_ui5-v1-19-1_switch_track_semantic_hover_accept_border_color:var(--sapButton_Track_Positive_Hover_BorderColor);--_ui5-v1-19-1_switch_track_semantic_hover_reject_border_color:var(--sapButton_Track_Negative_Hover_BorderColor);--_ui5-v1-19-1_switch_track_icon_display:inline-block;--_ui5-v1-19-1_switch_handle_width:1.5rem;--_ui5-v1-19-1_switch_handle_height:1.25rem;--_ui5-v1-19-1_switch_handle_with_label_width:1.75rem;--_ui5-v1-19-1_switch_handle_with_label_height:1.25rem;--_ui5-v1-19-1_switch_handle_border:var(--_ui5-v1-19-1_switch_handle_border_width) solid var(--sapButton_Handle_BorderColor);--_ui5-v1-19-1_switch_handle_border_width:0.125rem;--_ui5-v1-19-1_switch_handle_active_background_color:var(--sapButton_Handle_Selected_Background);--_ui5-v1-19-1_switch_handle_inactive_background_color:var(--sapButton_Handle_Background);--_ui5-v1-19-1_switch_handle_hover_active_background_color:var(--sapButton_Handle_Selected_Hover_Background);--_ui5-v1-19-1_switch_handle_hover_inactive_background_color:var(--sapButton_Handle_Hover_Background);--_ui5-v1-19-1_switch_handle_active_border_color:var(--sapButton_Handle_Selected_BorderColor);--_ui5-v1-19-1_switch_handle_inactive_border_color:var(--sapButton_Handle_BorderColor);--_ui5-v1-19-1_switch_handle_hover_active_border_color:var(--sapButton_Handle_Selected_BorderColor);--_ui5-v1-19-1_switch_handle_hover_inactive_border_color:var(--sapButton_Handle_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_accept_background_color:var(--sapButton_Handle_Positive_Background);--_ui5-v1-19-1_switch_handle_semantic_reject_background_color:var(--sapButton_Handle_Negative_Background);--_ui5-v1-19-1_switch_handle_semantic_hover_accept_background_color:var(--sapButton_Handle_Positive_Hover_Background);--_ui5-v1-19-1_switch_handle_semantic_hover_reject_background_color:var(--sapButton_Handle_Negative_Hover_Background);--_ui5-v1-19-1_switch_handle_semantic_accept_border_color:var(--sapButton_Handle_Positive_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_reject_border_color:var(--sapButton_Handle_Negative_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_hover_accept_border_color:var(--sapButton_Handle_Positive_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_hover_reject_border_color:var(--sapButton_Handle_Negative_BorderColor);--_ui5-v1-19-1_switch_handle_on_hover_box_shadow:0 0 0 0.125rem var(--sapButton_Handle_Selected_Hover_BorderColor);--_ui5-v1-19-1_switch_handle_off_hover_box_shadow:0 0 0 0.125rem var(--sapButton_Handle_Hover_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_on_hover_box_shadow:0 0 0 0.125rem var(--sapButton_Handle_Positive_Hover_BorderColor);--_ui5-v1-19-1_switch_handle_semantic_off_hover_box_shadow:0 0 0 0.125rem var(--sapButton_Handle_Negative_Hover_BorderColor);--_ui5-v1-19-1_switch_handle_left:0.0625rem;--_ui5-v1-19-1_switch_text_font_family:var(--sapContent_IconFontFamily);--_ui5-v1-19-1_switch_text_font_size:var(--sapFontLargeSize);--_ui5-v1-19-1_switch_text_width:1.25rem;--_ui5-v1-19-1_switch_text_with_label_font_family:\"72-Condensed-Bold\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--_ui5-v1-19-1_switch_text_with_label_font_size:var(--sapFontSmallSize);--_ui5-v1-19-1_switch_text_with_label_width:1.75rem;--_ui5-v1-19-1_switch_text_inactive_left:0.1875rem;--_ui5-v1-19-1_switch_text_inactive_left_alternate:0.0625rem;--_ui5-v1-19-1_switch_text_inactive_right:auto;--_ui5-v1-19-1_switch_text_inactive_right_alternate:0;--_ui5-v1-19-1_switch_text_active_left:0.1875rem;--_ui5-v1-19-1_switch_text_active_left_alternate:0.0625rem;--_ui5-v1-19-1_switch_text_active_right:auto;--_ui5-v1-19-1_switch_text_active_color:var(--sapButton_Handle_Selected_TextColor);--_ui5-v1-19-1_switch_text_inactive_color:var(--sapButton_Handle_TextColor);--_ui5-v1-19-1_switch_text_semantic_accept_color:var(--sapButton_Handle_Positive_TextColor);--_ui5-v1-19-1_switch_text_semantic_reject_color:var(--sapButton_Handle_Negative_TextColor);--_ui5-v1-19-1_switch_text_overflow:hidden;--_ui5-v1-19-1_switch_text_z_index:1;--_ui5-v1-19-1_switch_text_hidden:hidden;--_ui5-v1-19-1_switch_text_min_width:none;--_ui5-v1-19-1_switch_icon_width:1rem;--_ui5-v1-19-1_switch_icon_height:1rem;--_ui5-v1-19-1_select_disabled_background:var(--sapField_Background);--_ui5-v1-19-1_select_disabled_border_color:var(--sapField_BorderColor);--_ui5-v1-19-1_select_state_error_warning_border_style:solid;--_ui5-v1-19-1_select_state_error_warning_border_width:0.125rem;--_ui5-v1-19-1_select_focus_width:1px;--_ui5-v1-19-1_select_label_color:var(--sapField_TextColor);--_ui5-v1-19-1_select_hover_icon_left_border:none;--_ui5-v1-19-1_select_option_focus_border_radius:var(--sapElement_BorderCornerRadius);--_ui5-v1-19-1_split_button_host_transparent_hover_background:transparent;--_ui5-v1-19-1_split_button_transparent_disabled_background:transparent;--_ui5-v1-19-1_split_button_host_default_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v1-19-1_split_button_host_attention_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_button_host_emphasized_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_button_host_positive_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_button_host_negative_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_button_host_transparent_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Lite_BorderColor);--_ui5-v1-19-1_split_text_button_border_color:transparent;--_ui5-v1-19-1_split_text_button_background_color:transparent;--_ui5-v1-19-1_split_text_button_emphasized_border:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_border_width:0.0625rem 0 0.0625rem 0.0625rem;--_ui5-v1-19-1_split_text_button_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_positive_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_--_ui5-v1-19-1_split_button_text_button_border_width_rtl:0.0625rem 0.0625rem 0.0625rem 0;--_ui5-v1-19-1_split_text_button_emphasized_border_width_rtl:0.0625rem;--_ui5-v1-19-1_split_arrow_button_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_arrow_button_emphasized_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_arrow_button_emphasized_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_arrow_button_positive_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_arrow_button_negative_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_arrow_button_attention_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_arrow_button_transparent_hover_border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_positive_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border_left:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_arrow_button_wrapper_emphasized_hover_border_left_width_rtl:var(--sapButton_BorderWidth);--_ui5-v1-19-1_split_button_focused_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_split_button_focused_border_radius:0.375rem;--_ui5-v1-19-1_split_button_hover_border_radius:var(--_ui5-v1-19-1_button_border_radius);--_ui5-v1-19-1_split_button_attention_separator_color:var(--sapButton_Attention_TextColor);--_ui5-v1-19-1_split_button_middle_separator_width:0;--_ui5-v1-19-1_split_button_middle_separator_left:-0.0625rem;--_ui5-v1-19-1_split_button_middle_separator_hover_display:none;--_ui5-v1-19-1_split_button_text_button_width:2.375rem;--_ui5-v1-19-1_split_button_text_button_right_border_width:0.0625rem;--_ui5-v1-19-1_split_button_transparent_hover_background:var(--sapButton_Lite_Hover_Background);--_ui5-v1-19-1_split_button_transparent_hover_color:var(--sapButton_TextColor);--_ui5-v1-19-1_split_button_host_transparent_hover_box_shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v1-19-1_split_button_inner_focused_border_radius_outer:0.375rem;--_ui5-v1-19-1_split_button_inner_focused_border_radius_inner:0.375rem;--_ui5-v1-19-1_split_text_button_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border_right:none;--_ui5-v1-19-1_split_text_button_positive_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_positive_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border_left_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_positive_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border_right_rtl:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_tc_header_height:var(--_ui5-v1-19-1_tc_item_height);--_ui5-v1-19-1_tc_header_height_text_only:var(--_ui5-v1-19-1_tc_item_text_only_height);--_ui5-v1-19-1_tc_header_height_text_with_additional_text:var(--_ui5-v1-19-1_tc_item_text_only_with_additional_text_height);--_ui5-v1-19-1_tc_header_box_shadow:var(--sapContent_HeaderShadow);--_ui5-v1-19-1_tc_header_background:var(--sapObjectHeader_Background);--_ui5-v1-19-1_tc_header_background_translucent:var(--sapObjectHeader_Background);--_ui5-v1-19-1_tc_content_background:var(--sapBackgroundColor);--_ui5-v1-19-1_tc_content_background_translucent:var(--sapGroup_ContentBackground);--_ui5-v1-19-1_tc_headeritem_padding:1rem;--_ui5-v1-19-1_tc_headerItem_additional_text_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_tc_headerItem_text_selected_color:var(--sapSelectedColor);--_ui5-v1-19-1_tc_headerItem_text_selected_hover_color:var(--sapSelectedColor);--_ui5-v1-19-1_tc_headerItem_additional_text_font_weight:normal;--_ui5-v1-19-1_tc_headerItem_neutral_color:var(--sapNeutralTextColor);--_ui5-v1-19-1_tc_headerItem_positive_color:var(--sapPositiveTextColor);--_ui5-v1-19-1_tc_headerItem_negative_color:var(--sapNegativeTextColor);--_ui5-v1-19-1_tc_headerItem_critical_color:var(--sapCriticalTextColor);--_ui5-v1-19-1_tc_headerItem_neutral_border_color:var(--sapNeutralElementColor);--_ui5-v1-19-1_tc_headerItem_positive_border_color:var(--sapPositiveElementColor);--_ui5-v1-19-1_tc_headerItem_negative_border_color:var(--sapNegativeElementColor);--_ui5-v1-19-1_tc_headerItem_critical_border_color:var(--sapCriticalElementColor);--_ui5-v1-19-1_tc_headerItem_neutral_selected_border_color:var(--_ui5-v1-19-1_tc_headerItem_neutral_color);--_ui5-v1-19-1_tc_headerItem_positive_selected_border_color:var(--_ui5-v1-19-1_tc_headerItem_positive_color);--_ui5-v1-19-1_tc_headerItem_negative_selected_border_color:var(--_ui5-v1-19-1_tc_headerItem_negative_color);--_ui5-v1-19-1_tc_headerItem_critical_selected_border_color:var(--_ui5-v1-19-1_tc_headerItem_critical_color);--_ui5-v1-19-1_tc_headerItem_transition:none;--_ui5-v1-19-1_tc_headerItem_hover_border_visibility:hidden;--_ui5-v1-19-1_tc_headerItemContent_border_radius:0.125rem 0.125rem 0 0;--_ui5-v1-19-1_tc_headerItemContent_border_bg:transparent;--_ui5-v1-19-1_tc_headerItem_neutral_border_bg:transparent;--_ui5-v1-19-1_tc_headerItem_positive_border_bg:transparent;--_ui5-v1-19-1_tc_headerItem_negative_border_bg:transparent;--_ui5-v1-19-1_tc_headerItem_critical_border_bg:transparent;--_ui5-v1-19-1_tc_headerItemContent_border_height:0;--_ui5-v1-19-1_tc_headerItemContent_focus_offset:1rem;--_ui5-v1-19-1_tc_headerItem_text_focus_border_offset_left:0px;--_ui5-v1-19-1_tc_headerItem_text_focus_border_offset_right:0px;--_ui5-v1-19-1_tc_headerItem_text_focus_border_offset_top:0px;--_ui5-v1-19-1_tc_headerItem_text_focus_border_offset_bottom:0px;--_ui5-v1-19-1_tc_headerItem_mixed_mode_focus_border_offset_left:0.75rem;--_ui5-v1-19-1_tc_headerItem_mixed_mode_focus_border_offset_right:0.625rem;--_ui5-v1-19-1_tc_headerItem_mixed_mode_focus_border_offset_top:0.75rem;--_ui5-v1-19-1_tc_headerItem_mixed_mode_focus_border_offset_bottom:0.75rem;--_ui5-v1-19-1_tc_headerItemContent_focus_border:none;--_ui5-v1-19-1_tc_headerItemContent_default_focus_border:none;--_ui5-v1-19-1_tc_headerItemContent_focus_border_radius:0;--_ui5-v1-19-1_tc_headerItemSemanticIcon_display:none;--_ui5-v1-19-1_tc_headerItemSemanticIcon_size:0.75rem;--_ui5-v1-19-1_tc_mixedMode_itemText_font_family:var(--sapFontFamily);--_ui5-v1-19-1_tc_mixedMode_itemText_font_size:var(--sapFontSmallSize);--_ui5-v1-19-1_tc_mixedMode_itemText_font_weight:normal;--_ui5-v1-19-1_tc_overflowItem_positive_color:var(--sapPositiveColor);--_ui5-v1-19-1_tc_overflowItem_negative_color:var(--sapNegativeColor);--_ui5-v1-19-1_tc_overflowItem_critical_color:var(--sapCriticalColor);--_ui5-v1-19-1_tc_overflowItem_focus_offset:0.125rem;--_ui5-v1-19-1_tc_overflowItem_extraIndent:0rem;--_ui5-v1-19-1_tc_headerItemIcon_positive_selected_background:var(--sapPositiveColor);--_ui5-v1-19-1_tc_headerItemIcon_negative_selected_background:var(--sapNegativeColor);--_ui5-v1-19-1_tc_headerItemIcon_critical_selected_background:var(--sapCriticalColor);--_ui5-v1-19-1_tc_headerItemIcon_neutral_selected_background:var(--sapNeutralColor);--_ui5-v1-19-1_tc_headerItemIcon_semantic_selected_color:var(--sapGroup_ContentBackground);--_ui5-v1-19-1_tc_header_border_bottom:0.0625rem solid var(--sapObjectHeader_Background);--_ui5-v1-19-1_tc_headerItemContent_border_bottom:0.1875rem solid var(--sapSelectedColor);--_ui5-v1-19-1_tc_headerItem_color:var(--sapTextColor);--_ui5-v1-19-1_tc_overflowItem_default_color:var(--sapTextColor);--_ui5-v1-19-1_tc_overflowItem_current_color:CurrentColor;--_ui5-v1-19-1_tc_content_border_bottom:0.0625rem solid var(--sapObjectHeader_BorderColor);--_ui5-v1-19-1_tc_headerItem_expand_button_margin_inline_start:0rem;--_ui5-v1-19-1_tc_headerItem_single_click_expand_button_margin_inline_start:0.25rem;--_ui5-v1-19-1_tc_headerItem_expand_button_border_radius:0.25rem;--_ui5-v1-19-1_tc_headerItem_expand_button_separator_display:inline-block;--_ui5-v1-19-1_tc_headerItem_focus_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_tc_headerItem_focus_border_offset:-5px;--_ui5-v1-19-1_tc_headerItemIcon_focus_border_radius:50%;--_ui5-v1-19-1_tc_headerItem_focus_border_radius:0.375rem;--_ui5-v1-19-1_tc_headeritem_text_font_weight:bold;--_ui5-v1-19-1_tc_headerItem_focus_offset:1px;--_ui5-v1-19-1_tc_headerItem_text_hover_color:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_tc_headerItemIcon_border:0.125rem solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_tc_headerItemIcon_color:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_tc_headerItemIcon_selected_background:var(--sapContent_Selected_ForegroundColor);--_ui5-v1-19-1_tc_headerItemIcon_background_color:var(--sapContent_Selected_Background);--_ui5-v1-19-1_tc_headerItemIcon_selected_color:var(--sapContent_ContrastIconColor);--_ui5-v1-19-1_tc_mixedMode_itemText_color:var(--sapTextColor);--_ui5-v1-19-1_tc_overflow_text_color:var(--sapTextColor);--_ui5-v1-19-1_textarea_state_border_width:0.125rem;--_ui5-v1-19-1_textarea_information_border_width:0.125rem;--_ui5-v1-19-1_textarea_placeholder_font_style:italic;--_ui5-v1-19-1_textarea_value_state_error_warning_placeholder_font_weight:normal;--_ui5-v1-19-1_textarea_error_placeholder_font_style:italic;--_ui5-v1-19-1_textarea_error_placeholder_color:var(--sapField_PlaceholderTextColor);--_ui5-v1-19-1_textarea_error_hover_background_color:var(--sapField_Hover_Background);--_ui5-v1-19-1_textarea_disabled_opacity:0.4;--_ui5-v1-19-1_textarea_focus_pseudo_element_content:\"\";--_ui5-v1-19-1_textarea_min_height:2.25rem;--_ui5-v1-19-1_textarea_padding_right_and_left_readonly:0.5625rem;--_ui5-v1-19-1_textarea_padding_top_readonly:0.4375rem;--_ui5-v1-19-1_textarea_exceeded_text_height:1rem;--_ui5-v1-19-1_textarea_hover_border:none;--_ui5-v1-19-1_textarea_focus_border_radius:0.25rem;--_ui5-v1-19-1_textarea_error_warning_border_style:none;--_ui5-v1-19-1_textarea_line_height:1.5;--_ui5-v1-19-1_textarea_focused_value_state_error_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_textarea_focused_value_state_warning_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_textarea_focused_value_state_success_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_textarea_focused_value_state_information_background:var(--sapField_Hover_Background);--_ui5-v1-19-1_textarea_focused_value_state_error_focus_outline_color:var(--sapField_InvalidColor);--_ui5-v1-19-1_textarea_focused_value_state_warning_focus_outline_color:var(--sapField_WarningColor);--_ui5-v1-19-1_textarea_focused_value_state_success_focus_outline_color:var(--sapField_SuccessColor);--_ui5-v1-19-1_textarea_focus_offset:0;--_ui5-v1-19-1_textarea_readonly_focus_offset:1px;--_ui5-v1-19-1_textarea_focus_outline_color:var(--sapField_Active_BorderColor);--_ui5-v1-19-1_textarea_value_state_focus_offset:0;--_ui5-v1-19-1_textarea_padding_bottom_readonly:0.375rem;--_ui5-v1-19-1_textarea_padding_top_error_warning:0.5rem;--_ui5-v1-19-1_textarea_padding_bottom_error_warning:0.4375rem;--_ui5-v1-19-1_textarea_padding_top_information:0.5rem;--_ui5-v1-19-1_textarea_padding_bottom_information:0.4375rem;--_ui5-v1-19-1_textarea_padding_right_and_left:0.625rem;--_ui5-v1-19-1_textarea_padding_right_and_left_error_warning:0.625rem;--_ui5-v1-19-1_textarea_padding_right_and_left_information:0.625rem;--_ui5-v1-19-1_textarea_readonly_border_style:dashed;--_ui5-v1-19-1_time_picker_border:0.0625rem solid transparent;--_ui5-v1-19-1-time_picker_border_radius:0.25rem;--_ui5-v1-19-1_toast_vertical_offset:3rem;--_ui5-v1-19-1_toast_horizontal_offset:2rem;--_ui5-v1-19-1_toast_background:var(--sapList_Background);--_ui5-v1-19-1_toast_shadow:var(--sapContent_Shadow2);--_ui5-v1-19-1_toast_offset_width:-0.1875rem;--_ui5-v1-19-1_wheelslider_item_text_size:var(--sapFontSize);--_ui5-v1-19-1_wheelslider_label_text_size:var(--sapFontSmallSize);--_ui5-v1-19-1_wheelslider_selection_frame_margin_top:calc(var(--_ui5-v1-19-1_wheelslider_item_height)*2);--_ui5-v1-19-1_wheelslider_mobile_selection_frame_margin_top:calc(var(--_ui5-v1-19-1_wheelslider_item_height)*4);--_ui5-v1-19-1_wheelslider_label_text_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_wheelslider_height:240px;--_ui5-v1-19-1_wheelslider_mobile_height:432px;--_ui5-v1-19-1_wheelslider_item_width:48px;--_ui5-v1-19-1_wheelslider_item_height:46px;--_ui5-v1-19-1_wheelslider_arrows_visibility:hidden;--_ui5-v1-19-1_wheelslider_item_background_color:var(--sapLegend_WorkingBackground);--_ui5-v1-19-1_wheelslider_item_text_color:var(--sapTextColor);--_ui_wheelslider_item_hover_color:var(--sapList_AlternatingBackground);--_ui_wheelslider_item_expanded_hover_color:var(--sapList_AlternatingBackground);--_ui_wheelslider_item_exanded_hover_color:var(--sapList_AlternatingBackground);--_ui5-v1-19-1_wheelslider_item_border_color:var(--sapList_SelectionBorderColor);--_ui5-v1-19-1_wheelslider_item_expanded_border_color:transparent;--_ui5-v1-19-1_wheelslider_item_hovered_border_color:transparent;--_ui5-v1-19-1_wheelslider_collapsed_item_text_color:var(--sapList_SelectionBorderColor);--_ui5-v1-19-1_wheelslider_selected_item_background_color:var(--sapContent_Selected_Background);--_ui5-v1-19-1_wheelslider_selected_item_hover_background_color:var(--sapButton_Emphasized_Hover_BorderColor);--_ui5-v1-19-1_wheelslider_active_item_background_color:var(--sapContent_Selected_Background);--_ui5-v1-19-1_wheelslider_active_item_text_color:var(--sapContent_Selected_TextColor);--_ui5-v1-19-1_wheelslider_selection_frame_color:var(--sapList_SelectionBorderColor);--_ui_wheelslider_item_border_radius:var(--_ui5-v1-19-1_button_border_radius);--_ui5-v1-19-1_toggle_button_pressed_focussed:var(--sapButton_Selected_BorderColor);--_ui5-v1-19-1_toggle_button_pressed_focussed_hovered:var(--sapButton_Selected_BorderColor);--_ui5-v1-19-1_toggle_button_selected_positive_text_color:var(--sapButton_Selected_TextColor);--_ui5-v1-19-1_toggle_button_selected_negative_text_color:var(--sapButton_Selected_TextColor);--_ui5-v1-19-1_toggle_button_selected_attention_text_color:var(--sapButton_Selected_TextColor);--_ui5-v1-19-1_toggle_button_emphasized_pressed_focussed_hovered:var(--sapContent_FocusColor);--_ui5-v1-19-1_toggle_button_emphasized_text_shadow:none;--_ui5-v1-19-1_yearpicker_item_selected_focus:var(--sapContent_Selected_Background);--_ui5-v1-19-1_yearpicker_item_border:none;--_ui5-v1-19-1_yearpicker_item_margin:1px;--_ui5-v1-19-1_yearpicker_item_border_radius:0.5rem;--_ui5-v1-19-1_yearpicker_item_focus_after_offset:0.25rem;--_ui5-v1-19-1_yearpicker_item_focus_after_border:var(--_ui5-v1-19-1_button_focused_border);--_ui5-v1-19-1_yearpicker_item_focus_after_border_radius:0.5rem;--_ui5-v1-19-1_yearpicker_item_focus_after_width:calc(100% - 0.5rem);--_ui5-v1-19-1_yearpicker_item_focus_after_height:calc(100% - 0.5rem);--_ui5-v1-19-1_yearpicker_item_selected_background_color:transparent;--_ui5-v1-19-1_yearpicker_item_selected_text_color:var(--sapContent_Selected_TextColor);--_ui5-v1-19-1_yearpicker_item_selected_box_shadow:none;--_ui5-v1-19-1_yearpicker_item_selected_hover_color:var(--sapList_Hover_Background);--_ui5-v1-19-1_yearpicker_item_focus_after_outline:none;--_ui5-v1-19-1_calendar_header_middle_button_width:6.25rem;--_ui5-v1-19-1_calendar_header_middle_button_flex:1 1 auto;--_ui5-v1-19-1_calendar_header_middle_button_focus_after_display:block;--_ui5-v1-19-1_calendar_header_middle_button_focus_after_width:calc(100% - 0.375rem);--_ui5-v1-19-1_calendar_header_middle_button_focus_after_height:calc(100% - 0.375rem);--_ui5-v1-19-1_calendar_header_middle_button_focus_after_top_offset:0.125rem;--_ui5-v1-19-1_calendar_header_middle_button_focus_after_left_offset:0.125rem;--_ui5-v1-19-1_calendar_header_arrow_button_border:none;--_ui5-v1-19-1_calendar_header_arrow_button_border_radius:0.5rem;--_ui5-v1-19-1_calendar_header_button_background_color:var(--sapButton_Lite_Background);--_ui5-v1-19-1_calendar_header_arrow_button_box_shadow:0 0 0.125rem 0 rgba(85,107,130,.72);--_ui5-v1-19-1_calendar_header_middle_button_focus_border_radius:0.5rem;--_ui5-v1-19-1_calendar_header_middle_button_focus_border:none;--_ui5-v1-19-1_calendar_header_middle_button_focus_after_border:none;--_ui5-v1-19-1_calendar_header_middle_button_focus_background:transparent;--_ui5-v1-19-1_calendar_header_middle_button_focus_outline:0.125rem solid var(--sapSelectedColor);--_ui5-v1-19-1_calendar_header_middle_button_focus_active_outline:0.0625rem solid var(--sapSelectedColor);--_ui5-v1-19-1_calendar_header_middle_button_focus_active_background:transparent;--ui5-v1-19-1_table_bottom_border:1px solid var(--sapList_BorderColor);--ui5-v1-19-1_table_multiselect_column_width:2.75rem;--ui5-v1-19-1_table_header_row_border_width:1px;--_ui5-v1-19-1_table_load_more_border-bottom:none;--_ui5-v1-19-1_token_background:var(--sapButton_TokenBackground);--_ui5-v1-19-1_token_readonly_background:var(--sapButton_TokenBackground);--_ui5-v1-19-1_token_readonly_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_token_right_margin:0.3125rem;--_ui5-v1-19-1_token_padding:0.25rem 0;--_ui5-v1-19-1_token_left_padding:0.3125rem;--_ui5-v1-19-1_token_focused_selected_border:1px solid var(--sapButton_Selected_BorderColor);--_ui5-v1-19-1_token_focus_offset:-0.25rem;--_ui5-v1-19-1_token_focus_outline_width:0.0625rem;--_ui5-v1-19-1_token_hover_border_color:var(--sapButton_TokenBorderColor);--_ui5-v1-19-1_token_selected_focus_outline:none;--_ui5-v1-19-1_token_focus_outline:none;--_ui5-v1-19-1_token_outline_offset:0.125rem;--_ui5-v1-19-1_token_selected_hover_border_color:var(--sapButton_Selected_BorderColor);--ui5-v1-19-1_token_focus_pseudo_element_content:\"\";--_ui5-v1-19-1_token_border_radius:0.375rem;--_ui5-v1-19-1_token_focus_outline_border_radius:.5rem;--_ui5-v1-19-1_token_text_color:var(--sapTextColor);--_ui5-v1-19-1_token_selected_text_font_family:var(--sapFontSemiboldDuplexFamily);--_ui5-v1-19-1_token_selected_internal_border_bottom:0.125rem solid var(--sapButton_Selected_BorderColor);--_ui5-v1-19-1_token_selected_internal_border_bottom_radius:.1875rem;--_ui5-v1-19-1_token_text_icon_top:0.0625rem;--_ui5-v1-19-1_token_selected_focused_offset_bottom:-.375rem;--_ui5-v1-19-1_token_readonly_padding:0.25rem 0.3125rem;--_ui5-v1-19-1_tokenizer-popover_offset:.3125rem;--_ui5-v1-19-1_tokenizer_n_more_text_color:var(--sapLinkColor);--_ui5-v1-19-1-tree-item-minimal-background:0 100%/100% 0.125rem no-repeat linear-gradient(0deg,var(--sapList_SelectionBorderColor),var(--sapList_SelectionBorderColor)),var(--sapList_SelectionBackgroundColor);--_ui5-v1-19-1-tree-item-minimal-children-indicator-display:none;--_ui5-v1-19-1-multi_combobox_token_margin_top:1px;--_ui5-v1-19-1_slider_progress_container_dot_background:var(--sapField_BorderColor);--_ui5-v1-19-1_slider_progress_border:none;--_ui5-v1-19-1_slider_padding:1.406rem 1.0625rem;--_ui5-v1-19-1_slider_inner_height:0.25rem;--_ui5-v1-19-1_slider_outer_height:1.6875rem;--_ui5-v1-19-1_slider_progress_border_radius:0.25rem;--_ui5-v1-19-1_slider_tickmark_bg:var(--sapField_BorderColor);--_ui5-v1-19-1_slider_handle_margin_left:calc((var(--_ui5-v1-19-1_slider_handle_width)/2)*-1);--_ui5-v1-19-1_slider_handle_outline_offset:0.075rem;--_ui5-v1-19-1_slider_progress_outline:0.0625rem dotted var(--sapContent_FocusColor);--_ui5-v1-19-1_slider_progress_outline_offset:-0.8125rem;--_ui5-v1-19-1_slider_disabled_opacity:0.4;--_ui5-v1-19-1_slider_tooltip_border_color:var(--sapField_BorderColor);--_ui5-v1-19-1_range_slider_handle_background_focus:transparent;--_ui5-v1-19-1_slider_progress_box_sizing:content-box;--_ui5-v1-19-1_range_slider_focus_outline_width:100%;--_ui5-v1-19-1_slider_progress_outline_offset_left:0;--_ui5-v1-19-1_range_slider_focus_outline_radius:0;--_ui5-v1-19-1_slider_progress_container_top:0;--_ui5-v1-19-1_slider_progress_height:100%;--_ui5-v1-19-1_slider_active_progress_border:none;--_ui5-v1-19-1_slider_active_progress_left:0;--_ui5-v1-19-1_slider_active_progress_top:0;--_ui5-v1-19-1_slider_no_tickmarks_progress_container_top:var(--_ui5-v1-19-1_slider_progress_container_top);--_ui5-v1-19-1_slider_no_tickmarks_progress_height:var(--_ui5-v1-19-1_slider_progress_height);--_ui5-v1-19-1_slider_no_tickmarks_active_progress_border:var(--_ui5-v1-19-1_slider_active_progress_border);--_ui5-v1-19-1_slider_no_tickmarks_active_progress_left:var(--_ui5-v1-19-1_slider_active_progress_left);--_ui5-v1-19-1_slider_no_tickmarks_active_progress_top:var(--_ui5-v1-19-1_slider_active_progress_top);--_ui5-v1-19-1_slider_handle_focus_visibility:none;--_ui5-v1-19-1_slider_handle_icon_size:1rem;--_ui5-v1-19-1_slider_progress_container_background:var(--sapSlider_Background);--_ui5-v1-19-1_slider_progress_container_dot_display:block;--_ui5-v1-19-1_slider_inner_min_width:4rem;--_ui5-v1-19-1_slider_progress_background:var(--sapSlider_Selected_Background);--_ui5-v1-19-1_slider_progress_before_background:var(--sapSlider_Selected_Background);--_ui5-v1-19-1_slider_progress_after_background:var(--sapContent_MeasureIndicatorColor);--_ui5-v1-19-1_slider_handle_background:var(--sapSlider_HandleBackground);--_ui5-v1-19-1_slider_handle_icon_display:inline-block;--_ui5-v1-19-1_slider_handle_border:0.0625rem solid var(--sapSlider_HandleBorderColor);--_ui5-v1-19-1_slider_handle_border_radius:0.5rem;--_ui5-v1-19-1_slider_handle_height:1.5rem;--_ui5-v1-19-1_slider_handle_width:2rem;--_ui5-v1-19-1_slider_handle_top:-0.625rem;--_ui5-v1-19-1_slider_handle_font_family:\"SAP-icons\";--_ui5-v1-19-1_slider_handle_hover_border:0.0625rem solid var(--sapSlider_Hover_HandleBorderColor);--_ui5-v1-19-1_slider_handle_focus_border:0.125rem solid var(--sapContent_FocusColor);--_ui5-v1-19-1_slider_handle_background_focus:var(--sapSlider_Active_RangeHandleBackground);--_ui5-v1-19-1_slider_handle_outline:none;--_ui5-v1-19-1_slider_handle_hover_background:var(--sapSlider_Hover_HandleBackground);--_ui5-v1-19-1_slider_tooltip_background:var(--sapField_Focus_Background);--_ui5-v1-19-1_slider_tooltip_border:none;--_ui5-v1-19-1_slider_tooltip_border_radius:0.5rem;--_ui5-v1-19-1_slider_tooltip_box_shadow:var(--sapContent_Shadow1);--_ui5-v1-19-1_range_slider_legacy_progress_focus_display:none;--_ui5-v1-19-1_range_slider_progress_focus_display:block;--_ui5-v1-19-1_slider_tickmark_in_range_bg:var(--sapSlider_Selected_BorderColor);--_ui5-v1-19-1_slider_label_fontsize:var(--sapFontSmallSize);--_ui5-v1-19-1_slider_label_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_slider_tooltip_min_width:2rem;--_ui5-v1-19-1_slider_tooltip_padding:0.25rem;--_ui5-v1-19-1_slider_tooltip_fontsize:var(--sapFontSmallSize);--_ui5-v1-19-1_slider_tooltip_color:var(--sapContent_LabelColor);--_ui5-v1-19-1_slider_tooltip_height:1.375rem;--_ui5-v1-19-1_slider_handle_focus_width:1px;--_ui5-v1-19-1_slider_start_end_point_size:.5rem;--_ui5-v1-19-1_slider_start_end_point_left:-.75rem;--_ui5-v1-19-1_slider_start_end_point_top:-0.125rem;--_ui5-v1-19-1_slider_handle_focused_tooltip_distance:calc(var(--_ui5-v1-19-1_slider_tooltip_bottom) - var(--_ui5-v1-19-1_slider_handle_focus_width));--_ui5-v1-19-1_slider_tooltip_border_box:border-box;--_ui5-v1-19-1_range_slider_handle_active_background:var(--sapSlider_Active_RangeHandleBackground);--_ui5-v1-19-1_range_slider_active_handle_icon_display:none;--_ui5-v1-19-1_range_slider_progress_focus_top:-15px;--_ui5-v1-19-1_range_slider_progress_focus_left:calc((var(--_ui5-v1-19-1_slider_handle_width)/2)*-1 - 5px);--_ui5-v1-19-1_range_slider_progress_focus_padding:0 1rem 0 1rem;--_ui5-v1-19-1_range_slider_progress_focus_width:calc(100% + var(--_ui5-v1-19-1_slider_handle_width) + 10px);--_ui5-v1-19-1_range_slider_progress_focus_height:calc(var(--_ui5-v1-19-1_slider_handle_height) + 10px);--_ui5-v1-19-1_range_slider_root_hover_handle_icon_display:inline-block;--_ui5-v1-19-1_range_slider_root_hover_handle_bg:var(--_ui5-v1-19-1_slider_handle_hover_background);--_ui5-v1-19-1_range_slider_root_active_handle_icon_display:none;--_ui5-v1-19-1_slider_tickmark_height:.5rem;--_ui5-v1-19-1_slider_tickmark_top:-2px;--_ui5-v1-19-1_slider_handle_box_sizing:border-box;--_ui5-v1-19-1_range_slider_handle_background:var(--sapSlider_RangeHandleBackground);--_ui5-v1-19-1_slider_tooltip_bottom:2rem;--_ui5-v1-19-1_value_state_message_border:none;--_ui5-v1-19-1_value_state_header_border:none;--_ui5-v1-19-1_input_value_state_icon_offset:.5rem;--_ui5-v1-19-1_input_value_state_icon_display:inline-block;--_ui5-v1-19-1_value_state_message_padding:0.5rem 0.5rem 0.5rem 1.875rem;--_ui5-v1-19-1_value_state_header_padding:.5rem .5rem .5rem 1.875rem;--_ui5-v1-19-1_value_state_message_popover_box_shadow:var(--sapContent_Shadow1);--_ui5-v1-19-1_value_state_message_icon_width:1rem;--_ui5-v1-19-1_value_state_message_icon_height:1rem;--_ui5-v1-19-1_value_state_header_offset:-0.25rem;--_ui5-v1-19-1_value_state_message_popover_border_radius:var(--sapPopover_BorderCornerRadius);--ui5-v1-19-1_table_header_row_outline_width:var(--sapContent_FocusWidth);--ui5-v1-19-1_table_header_row_font_family:var(--sapFontSemiboldDuplexFamily);--ui5-v1-19-1_table_header_row_border_bottom_color:var(--sapList_HeaderBorderColor);--ui5-v1-19-1_table_header_row_font_weight:bold;--ui5-v1-19-1_table_row_outline_width:var(--sapContent_FocusWidth);--_ui5-v1-19-1-toolbar-padding-left:0.5rem;--_ui5-v1-19-1-toolbar-padding-right:0.5rem;--_ui5-v1-19-1-toolbar-item-margin-left:0;--_ui5-v1-19-1-toolbar-item-margin-right:0.25rem;--ui5-v1-19-1_table_group_row_font-weight:bold;--ui5-v1-19-1_table_border_width:1px 0 1px 0;--_ui5-v1-19-1_step_input_min_width:7.25rem;--_ui5-v1-19-1_step_input_padding:2.5rem;--_ui5-v1-19-1_step_input_input_error_background_color:inherit;--_ui5-v1-19-1-step_input_button_state_hover_background_color:var(--sapField_Hover_Background);--_ui5-v1-19-1_step_input_border_style:none;--_ui5-v1-19-1_step_input_border_style_hover:none;--_ui5-v1-19-1_step_input_button_background_color:transparent;--_ui5-v1-19-1_step_input_input_border:none;--_ui5-v1-19-1_step_input_input_margin_top:0;--_ui5-v1-19-1_step_input_button_display:inline-flex;--_ui5-v1-19-1_step_input_button_left:0;--_ui5-v1-19-1_step_input_button_right:0;--_ui5-v1-19-1_step_input_input_border_focused_after:0.125rem solid #0070f2;--_ui5-v1-19-1_step_input_input_border_top_bottom_focused_after:0;--_ui5-v1-19-1_step_input_input_border_radius_focused_after:0.25rem;--_ui5-v1-19-1_step_input_input_information_border_color_focused_after:var(--sapField_InformationColor);--_ui5-v1-19-1_step_input_input_warning_border_color_focused_after:var(--sapField_WarningColor);--_ui5-v1-19-1_step_input_input_success_border_color_focused_after:var(--sapField_SuccessColor);--_ui5-v1-19-1_step_input_input_error_border_color_focused_after:var(--sapField_InvalidColor);--_ui5-v1-19-1_step_input_disabled_button_background:none;--_ui5-v1-19-1_step_input_border_color_hover:none;--_ui5-v1-19-1_step_input_border_hover:none;--_ui5-v1-19-1_input_input_background_color:transparent;--_ui5-v1-19-1_load_more_padding:0;--_ui5-v1-19-1_load_more_border:1px top solid transparent;--_ui5-v1-19-1_load_more_border_radius:none;--_ui5-v1-19-1_load_more_outline_width:var(--sapContent_FocusWidth);--_ui5-v1-19-1_load_more_border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--_ui5-v1-19-1_calendar_height:24.5rem;--_ui5-v1-19-1_calendar_width:20rem;--_ui5-v1-19-1_calendar_padding:1rem;--_ui5-v1-19-1_calendar_left_right_padding:0.5rem;--_ui5-v1-19-1_calendar_top_bottom_padding:1rem;--_ui5-v1-19-1_calendar_header_height:3rem;--_ui5-v1-19-1_calendar_header_arrow_button_width:2.5rem;--_ui5-v1-19-1_calendar_header_padding:0.25rem 0;--_ui5-v1-19-1_checkbox_root_side_padding:.6875rem;--_ui5-v1-19-1_checkbox_icon_size:1rem;--_ui5-v1-19-1_checkbox_partially_icon_size:.75rem;--_ui5-v1-19-1_custom_list_item_rb_min_width:2.75rem;--_ui5-v1-19-1_day_picker_item_width:2.25rem;--_ui5-v1-19-1_day_picker_item_height:2.875rem;--_ui5-v1-19-1_day_picker_empty_height:3rem;--_ui5-v1-19-1_day_picker_item_justify_content:space-between;--_ui5-v1-19-1_dp_two_calendar_item_now_text_padding_top:0.387rem;--_ui5-v1-19-1_dp_two_calendar_item_primary_text_height:1.8125rem;--_ui5-v1-19-1_dp_two_calendar_item_secondary_text_height:1rem;--_ui5-v1-19-1_dp_two_calendar_item_text_padding_top:0.575rem;--_ui5-v1-19-1_color-palette-swatch-container-padding:0.3125rem 0.6875rem;--_ui5-v1-19-1_datetime_picker_width:40.0625rem;--_ui5-v1-19-1_datetime_picker_height:25rem;--_ui5-v1-19-1_datetime_timeview_width:17rem;--_ui5-v1-19-1_datetime_timeview_phonemode_width:19.5rem;--_ui5-v1-19-1_datetime_timeview_padding:1rem;--_ui5-v1-19-1_dialog_content_min_height:2.75rem;--_ui5-v1-19-1_dialog_footer_height:2.75rem;--_ui5-v1-19-1_input_inner_padding:0 0.625rem;--_ui5-v1-19-1_input_inner_padding_with_icon:0 0.25rem 0 0.625rem;--_ui5-v1-19-1_input_inner_space_to_tokenizer:0.125rem;--_ui5-v1-19-1_input_inner_space_to_n_more_text:0.1875rem;--_ui5-v1-19-1_list_no_data_height:3rem;--_ui5-v1-19-1_list_item_cb_margin_right:0;--_ui5-v1-19-1_list_item_title_size:var(--sapFontLargeSize);--_ui5-v1-19-1_list_no_data_font_size:var(--sapFontLargeSize);--_ui5-v1-19-1_list_item_img_size:3rem;--_ui5-v1-19-1_list_item_img_top_margin:0.5rem;--_ui5-v1-19-1_list_item_img_bottom_margin:0.5rem;--_ui5-v1-19-1_list_item_img_hn_margin:0.75rem;--_ui5-v1-19-1_list_item_dropdown_base_height:2.5rem;--_ui5-v1-19-1_list_item_base_height:var(--sapElement_LineHeight);--_ui5-v1-19-1_list_item_icon_size:1.125rem;--_ui5-v1-19-1_list_item_icon_padding-inline-end:0.5rem;--_ui5-v1-19-1_list_item_selection_btn_margin_top:calc(var(--_ui5-v1-19-1_checkbox_wrapper_padding)*-1);--_ui5-v1-19-1_list_item_content_vertical_offset:calc((var(--_ui5-v1-19-1_list_item_base_height) - var(--_ui5-v1-19-1_list_item_title_size))/2);--_ui5-v1-19-1_group_header_list_item_height:2.75rem;--_ui5-v1-19-1_list_busy_row_height:3rem;--_ui5-v1-19-1_month_picker_item_height:3rem;--_ui5-v1-19-1_list_buttons_left_space:0.125rem;--_ui5-v1-19-1_popup_default_header_height:2.75rem;--_ui5-v1-19-1-notification-overflow-popover-padding:0.25rem 0.5rem;--_ui5-v1-19-1_year_picker_item_height:3rem;--_ui5-v1-19-1_tokenizer_padding:0.25rem;--_ui5-v1-19-1_token_height:1.625rem;--_ui5-v1-19-1_token_icon_size:.75rem;--_ui5-v1-19-1_token_icon_padding:0.25rem 0.5rem;--_ui5-v1-19-1_token_wrapper_right_padding:0.3125rem;--_ui5-v1-19-1_token_wrapper_left_padding:0;--_ui5-v1-19-1_tl_bubble_padding:1rem;--_ui5-v1-19-1_tl_indicator_before_bottom:-1.625rem;--_ui5-v1-19-1_tl_padding:1rem 1rem 1rem .5rem;--_ui5-v1-19-1_tl_li_margin_bottom:1.625rem;--_ui5-v1-19-1_switch_focus_width_size_horizon_exp:calc(100% + 4px);--_ui5-v1-19-1_switch_focus_height_size_horizon_exp:calc(100% + 4px);--_ui5-v1-19-1_tc_item_text:3rem;--_ui5-v1-19-1_tc_item_height:4.75rem;--_ui5-v1-19-1_tc_item_text_only_height:2.75rem;--_ui5-v1-19-1_tc_item_text_only_with_additional_text_height:3.75rem;--_ui5-v1-19-1_tc_item_text_line_height:1.325rem;--_ui5-v1-19-1_tc_item_icon_circle_size:2.75rem;--_ui5-v1-19-1_tc_item_icon_size:1.25rem;--_ui5-v1-19-1_tc_item_add_text_margin_top:0.375rem;--_ui5-v1-19-1_textarea_margin:.25rem 0;--_ui5-v1-19-1_panel_header_height:2.75rem;--_ui5-v1-19-1_radio_button_height:2.75rem;--_ui5-v1-19-1_radio_button_label_side_padding:.875rem;--_ui5-v1-19-1_radio_button_inner_size:2.75rem;--_ui5-v1-19-1_radio_button_svg_size:1.375rem;--_ui5-v1-19-1-responsive_popover_header_height:2.75rem;--ui5-v1-19-1_side_navigation_item_height:2.75rem;--_ui5-v1-19-1_load_more_text_height:2.75rem;--_ui5-v1-19-1_load_more_text_font_size:var(--sapFontMediumSize);--_ui5-v1-19-1_load_more_desc_padding:0.375rem 2rem 0.875rem 2rem;--ui5-v1-19-1_table_header_row_height:2.75rem;--ui5-v1-19-1_table_row_height:2.75rem;--ui5-v1-19-1_table_focus_outline_offset:-0.125rem;--ui5-v1-19-1_table_group_row_height:2rem;--_ui5-v1-19-1-tree-indent-step:1.5rem;--_ui5-v1-19-1-tree-toggle-box-width:2.75rem;--_ui5-v1-19-1-tree-toggle-box-height:2.25rem;--_ui5-v1-19-1-tree-toggle-icon-size:1.0625rem;--_ui5-v1-19-1_timeline_tli_indicator_before_bottom:-1.625rem;--_ui5-v1-19-1_timeline_tli_indicator_before_right:-1.625rem;--_ui5-v1-19-1_timeline_tli_indicator_before_without_icon_bottom:-1.875rem;--_ui5-v1-19-1_timeline_tli_indicator_before_without_icon_right:-1.9375rem;--_ui5-v1-19-1-toolbar-separator-height:2rem;--_ui5-v1-19-1-toolbar-height:2.75rem;--_ui5-v1-19-1_toolbar_overflow_padding:0.25rem 0.5rem;--_ui5-v1-19-1_split_button_middle_separator_top:0.625rem;--_ui5-v1-19-1_split_button_middle_separator_height:1rem;--_ui5-v1-19-1_color-palette-item-height:1.75rem;--_ui5-v1-19-1_color-palette-item-hover-height:2.25rem;--_ui5-v1-19-1_color-palette-item-margin:calc((var(--_ui5-v1-19-1_color-palette-item-hover-height) - var(--_ui5-v1-19-1_color-palette-item-height))/2 + 0.0625rem);--_ui5-v1-19-1_color-palette-row-width:12rem;--_ui5-v1-19-1_textarea_padding_top:0.5rem;--_ui5-v1-19-1_textarea_padding_bottom:0.4375rem}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5-v1-19-1_input_min_width:2rem;--_ui5-v1-19-1_input_icon_width:2rem;--_ui5-v1-19-1_input_error_warning_icon_padding:.1875rem .375rem .1875rem .4375rem;--_ui5-v1-19-1_input_error_warning_focused_icon_padding:.1875rem .375rem .1875rem .4375rem;--_ui5-v1-19-1_input_information_icon_padding:.1875rem .375rem .1875rem .4375rem;--_ui5-v1-19-1_input_information_focused_icon_padding:.1875rem .375rem .1875rem .4375rem;--_ui5-v1-19-1_input_custom_icon_padding:.25rem .5rem;--_ui5-v1-19-1_input_error_warning_custom_icon_padding:.1875rem .5rem;--_ui5-v1-19-1_input_error_warning_custom_focused_icon_padding:.1875rem .5rem;--_ui5-v1-19-1_input_information_custom_icon_padding:.1875rem .5rem;--_ui5-v1-19-1_input_information_custom_focused_icon_padding:.1875rem .5rem;--_ui5-v1-19-1_input_information_icon_padding:.3125rem .5rem .1875rem .5rem;--_ui5-v1-19-1_input_information_focused_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_input_error_warning_icon_padding:.3125rem .5rem .1875rem .5rem;--_ui5-v1-19-1_input_error_warning_focused_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_input_custom_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_input_error_warning_custom_icon_padding:.3125rem .5rem .1875rem .5rem;--_ui5-v1-19-1_input_error_warning_custom_focused_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_input_information_custom_icon_padding:.3125rem .5rem .1875rem .5rem;--_ui5-v1-19-1_input_information_custom_focused_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_input_icon_padding:.3125rem .5rem .25rem .5rem;--_ui5-v1-19-1_panel_header_button_wrapper_padding:.5625rem .375rem;--_ui5-v1-19-1_radio_button_min_width:2rem;--_ui5-v1-19-1_radio_button_outer_ring_padding_with_label:0 0.5rem;--_ui5-v1-19-1_rating_indicator_item_height:0.67em;--_ui5-v1-19-1_rating_indicator_item_width:0.67em;--_ui5-v1-19-1_rating_indicator_component_spacing:0.8125rem 0px;--_ui5-v1-19-1_rating_indicator_readonly_item_height:0.5em;--_ui5-v1-19-1_rating_indicator_readonly_item_width:0.5em;--_ui5-v1-19-1_rating_indicator_readonly_item_spacing:0.125rem 0.125rem;--_ui5-v1-19-1_radio_button_outer_ring_padding:0 0.5rem;--_ui5-v1-19-1_radio_button_focus_dist:0.1875rem;--_ui5-v1-19-1_switch_height:2rem;--_ui5-v1-19-1_switch_width:3rem;--_ui5-v1-19-1_switch_min_width:none;--_ui5-v1-19-1_switch_with_label_width:3.75rem;--_ui5-v1-19-1_switch_root_outline_top:0.25rem;--_ui5-v1-19-1_switch_root_outline_bottom:0.25rem;--_ui5-v1-19-1_switch_transform:translateX(100%) translateX(-1.375rem);--_ui5-v1-19-1_switch_transform_with_label:translateX(100%) translateX(-1.875rem);--_ui5-v1-19-1_switch_rtl_transform:translateX(1.375rem) translateX(-100%);--_ui5-v1-19-1_switch_rtl_transform_with_label:translateX(1.875rem) translateX(-100%);--_ui5-v1-19-1_switch_track_width:2rem;--_ui5-v1-19-1_switch_track_height:1.25rem;--_ui5-v1-19-1_switch_track_with_label_width:2.75rem;--_ui5-v1-19-1_switch_track_with_label_height:1.25rem;--_ui5-v1-19-1_switch_handle_width:1.25rem;--_ui5-v1-19-1_switch_handle_height:1rem;--_ui5-v1-19-1_switch_handle_with_label_width:1.75rem;--_ui5-v1-19-1_switch_handle_with_label_height:1rem;--_ui5-v1-19-1_switch_text_font_size:var(--sapFontSize);--_ui5-v1-19-1_switch_text_width:1rem;--_ui5-v1-19-1_switch_text_active_left:0.1875rem;--_ui5-v1-19-1_textarea_padding_right_and_left_readonly:0.4375rem;--_ui5-v1-19-1_textarea_padding_top_readonly:0.125rem;--_ui5-v1-19-1_textarea_exceeded_text_height:0.375rem;--_ui5-v1-19-1_textarea_min_height:1.625rem;--_ui5-v1-19-1_textarea_padding_bottom_readonly:0.0625rem;--_ui5-v1-19-1_textarea_padding_top_error_warning:0.1875rem;--_ui5-v1-19-1_textarea_padding_bottom_error_warning:0.125rem;--_ui5-v1-19-1_textarea_padding_top_information:0.1875rem;--_ui5-v1-19-1_textarea_padding_bottom_information:0.125rem;--_ui5-v1-19-1_textarea_padding_right_and_left:0.5rem;--_ui5-v1-19-1_textarea_padding_right_and_left_error_warning:0.5rem;--_ui5-v1-19-1_textarea_padding_right_and_left_information:0.5rem;--_ui5-v1-19-1_token_selected_focused_offset_bottom:-.25rem;--_ui5-v1-19-1_tokenizer-popover_offset:.1875rem;--_ui5-v1-19-1_slider_handle_icon_size:.875rem;--_ui5-v1-19-1_slider_padding:1rem 1.0625rem;--_ui5-v1-19-1_range_slider_progress_focus_width:calc(100% + var(--_ui5-v1-19-1_slider_handle_width) + 10px);--_ui5-v1-19-1_range_slider_progress_focus_height:calc(var(--_ui5-v1-19-1_slider_handle_height) + 10px);--_ui5-v1-19-1_range_slider_progress_focus_top:-.8125rem;--_ui5-v1-19-1_slider_tooltip_bottom:1.75rem;--_ui5-v1-19-1_slider_handle_focused_tooltip_distance:calc(var(--_ui5-v1-19-1_slider_tooltip_bottom) - var(--_ui5-v1-19-1_slider_handle_focus_width));--_ui5-v1-19-1_range_slider_progress_focus_left:calc((var(--_ui5-v1-19-1_slider_handle_width)/2)*-1 - 5px);--_ui5-v1-19-1_button_base_height:var(--sapElement_Compact_Height);--_ui5-v1-19-1_button_base_padding:0.4375rem;--_ui5-v1-19-1_button_base_min_width:2rem;--_ui5-v1-19-1_button_icon_font_size:1rem;--_ui5-v1-19-1_calendar_height:18rem;--_ui5-v1-19-1_calendar_width:17.75rem;--_ui5-v1-19-1_calendar_left_right_padding:0.25rem;--_ui5-v1-19-1_calendar_top_bottom_padding:0.5rem;--_ui5-v1-19-1_calendar_header_height:2rem;--_ui5-v1-19-1_calendar_header_arrow_button_width:2rem;--_ui5-v1-19-1_calendar_header_padding:0;--_ui5-v1-19-1_checkbox_root_side_padding:var(--_ui5-v1-19-1_checkbox_wrapped_focus_padding);--_ui5-v1-19-1_checkbox_wrapped_content_margin_top:var(--_ui5-v1-19-1_checkbox_compact_wrapped_label_margin_top);--_ui5-v1-19-1_checkbox_wrapped_focus_left_top_bottom_position:var(--_ui5-v1-19-1_checkbox_compact_focus_position);--_ui5-v1-19-1_checkbox_width_height:var(--_ui5-v1-19-1_checkbox_compact_width_height);--_ui5-v1-19-1_checkbox_wrapper_padding:var(--_ui5-v1-19-1_checkbox_compact_wrapper_padding);--_ui5-v1-19-1_checkbox_inner_width_height:var(--_ui5-v1-19-1_checkbox_compact_inner_size);--_ui5-v1-19-1_checkbox_icon_size:.75rem;--_ui5-v1-19-1_checkbox_partially_icon_size:.5rem;--_ui5-v1-19-1_custom_list_item_rb_min_width:2rem;--_ui5-v1-19-1_daypicker_weeknumbers_container_padding_top:2rem;--_ui5-v1-19-1_day_picker_item_width:2rem;--_ui5-v1-19-1_day_picker_item_height:2rem;--_ui5-v1-19-1_day_picker_empty_height:2.125rem;--_ui5-v1-19-1_day_picker_item_justify_content:flex-end;--_ui5-v1-19-1_dp_two_calendar_item_now_text_padding_top:0rem;--_ui5-v1-19-1_dp_two_calendar_item_primary_text_height:1rem;--_ui5-v1-19-1_dp_two_calendar_item_secondary_text_height:0.75rem;--_ui5-v1-19-1_dp_two_calendar_item_text_padding_top:0;--_ui5-v1-19-1_datetime_picker_height:17rem;--_ui5-v1-19-1_datetime_picker_width:34.0625rem;--_ui5-v1-19-1_datetime_timeview_width:17rem;--_ui5-v1-19-1_datetime_timeview_phonemode_width:18.5rem;--_ui5-v1-19-1_datetime_timeview_padding:0.5rem;--_ui5-v1-19-1_dialog_content_min_height:2.5rem;--_ui5-v1-19-1_dialog_footer_height:2.5rem;--_ui5-v1-19-1_input_height:var(--sapElement_Compact_Height);--_ui5-v1-19-1_input_inner_padding:0 0.5rem;--_ui5-v1-19-1_input_inner_padding_with_icon:0 0.2rem 0 0.5rem;--_ui5-v1-19-1_input_inner_space_to_tokenizer:0.125rem;--_ui5-v1-19-1_input_inner_space_to_n_more_text:0.125rem;--_ui5-v1-19-1_input_icon_min_width:var(--_ui5-v1-19-1_input_compact_min_width);--_ui5-v1-19-1_menu_item_padding:0 0.75rem 0 0.5rem;--_ui5-v1-19-1_menu_item_submenu_icon_right:0.75rem;--_ui5-v1-19-1-notification-overflow-popover-padding:0.25rem 0.5rem;--_ui5-v1-19-1_popup_default_header_height:2.5rem;--_ui5-v1-19-1_textarea_margin:.1875rem 0;--_ui5-v1-19-1_list_no_data_height:2rem;--_ui5-v1-19-1_list_item_cb_margin_right:.5rem;--_ui5-v1-19-1_list_item_title_size:var(--sapFontSize);--_ui5-v1-19-1_list_item_img_top_margin:0.55rem;--_ui5-v1-19-1_list_no_data_font_size:var(--sapFontSize);--_ui5-v1-19-1_list_item_dropdown_base_height:2rem;--_ui5-v1-19-1_list_item_base_height:2rem;--_ui5-v1-19-1_list_item_icon_size:1rem;--_ui5-v1-19-1_list_item_selection_btn_margin_top:calc(var(--_ui5-v1-19-1_checkbox_wrapper_padding)*-1);--_ui5-v1-19-1_list_item_content_vertical_offset:calc((var(--_ui5-v1-19-1_list_item_base_height) - var(--_ui5-v1-19-1_list_item_title_size))/2);--_ui5-v1-19-1_list_busy_row_height:2rem;--_ui5-v1-19-1_list_buttons_left_space:0.125rem;--_ui5-v1-19-1_month_picker_item_height:2rem;--_ui5-v1-19-1_year_picker_item_height:2rem;--_ui5-v1-19-1_panel_header_height:2.5rem;--_ui5-v1-19-1_token_height:1.25rem;--_ui5-v1-19-1_token_right_margin:0.25rem;--_ui5-v1-19-1_token_left_padding:0.25rem;--_ui5-v1-19-1_token_readonly_padding:0.125rem 0.25rem;--_ui5-v1-19-1_token_focus_offset:-0.125rem;--_ui5-v1-19-1_token_icon_size:.75rem;--_ui5-v1-19-1_token_icon_padding:0.125rem 0.25rem;--_ui5-v1-19-1_token_wrapper_right_padding:0.25rem;--_ui5-v1-19-1_token_wrapper_left_padding:0;--_ui5-v1-19-1_token_outline_offset:-0.125rem;--_ui5-v1-19-1_tl_bubble_padding:.5rem;--_ui5-v1-19-1_tl_indicator_before_bottom:-.5rem;--_ui5-v1-19-1_tl_padding:.5rem;--_ui5-v1-19-1_tl_li_margin_bottom:.5rem;--_ui5-v1-19-1_wheelslider_item_width:64px;--_ui5-v1-19-1_wheelslider_item_height:32px;--_ui5-v1-19-1_wheelslider_height:224px;--_ui5-v1-19-1_wheelslider_selection_frame_margin_top:calc(var(--_ui5-v1-19-1_wheelslider_item_height)*2);--_ui5-v1-19-1_wheelslider_arrows_visibility:visible;--_ui5-v1-19-1_wheelslider_mobile_selection_frame_margin_top:128px;--_ui5-v1-19-1_tc_item_text:2rem;--_ui5-v1-19-1_tc_item_text_line_height:1.325rem;--_ui5-v1-19-1_tc_item_add_text_margin_top:0.3125rem;--_ui5-v1-19-1_tc_item_height:4rem;--_ui5-v1-19-1_tc_header_height:var(--_ui5-v1-19-1_tc_item_height);--_ui5-v1-19-1_tc_item_icon_circle_size:2rem;--_ui5-v1-19-1_tc_item_icon_size:1rem;--_ui5-v1-19-1_radio_button_height:2rem;--_ui5-v1-19-1_radio_button_label_side_padding:.5rem;--_ui5-v1-19-1_radio_button_inner_size:2rem;--_ui5-v1-19-1_radio_button_svg_size:1rem;--_ui5-v1-19-1-responsive_popover_header_height:2.5rem;--ui5-v1-19-1_side_navigation_item_height:2rem;--_ui5-v1-19-1_slider_handle_height:1.25rem;--_ui5-v1-19-1_slider_handle_width:1.25rem;--_ui5-v1-19-1_slider_tooltip_padding:0.25rem;--_ui5-v1-19-1_slider_progress_outline_offset:-0.625rem;--_ui5-v1-19-1_slider_outer_height:1.3125rem;--_ui5-v1-19-1_step_input_min_width:6rem;--_ui5-v1-19-1_step_input_padding:2rem;--_ui5-v1-19-1_load_more_text_height:2.625rem;--_ui5-v1-19-1_load_more_text_font_size:var(--sapFontSize);--_ui5-v1-19-1_load_more_desc_padding:0 2rem 0.875rem 2rem;--ui5-v1-19-1_table_header_row_height:2rem;--ui5-v1-19-1_table_row_height:2rem;--_ui5-v1-19-1-tree-indent-step:0.5rem;--_ui5-v1-19-1-tree-toggle-box-width:2rem;--_ui5-v1-19-1-tree-toggle-box-height:1.5rem;--_ui5-v1-19-1-tree-toggle-icon-size:0.8125rem;--_ui5-v1-19-1_timeline_tli_indicator_before_bottom:-0.5rem;--_ui5-v1-19-1_timeline_tli_indicator_before_right:-0.5rem;--_ui5-v1-19-1_timeline_tli_indicator_before_without_icon_bottom:-0.75rem;--_ui5-v1-19-1_timeline_tli_indicator_before_without_icon_right:-0.8125rem;--_ui5-v1-19-1_vsd_header_container:2.5rem;--_ui5-v1-19-1_vsd_sub_header_container_height:2rem;--_ui5-v1-19-1_vsd_header_height:4rem;--_ui5-v1-19-1_vsd_expand_content_height:25.4375rem;--_ui5-v1-19-1-toolbar-separator-height:1.5rem;--_ui5-v1-19-1-toolbar-height:2rem;--_ui5-v1-19-1_toolbar_overflow_padding:0.1875rem 0.375rem;--_ui5-v1-19-1_textarea_padding_top:0.1875rem;--_ui5-v1-19-1_textarea_padding_bottom:0.125rem;--_ui5-v1-19-1_checkbox_focus_position:0.25rem;--_ui5-v1-19-1_split_button_middle_separator_top:0.3125rem;--_ui5-v1-19-1_split_button_middle_separator_height:1rem;--_ui5-v1-19-1_slider_handle_top:-.5rem;--_ui5-v1-19-1_slider_tooltip_height:1.375rem;--_ui5-v1-19-1_color-palette-item-height:1.25rem;--_ui5-v1-19-1_color-palette-item-focus-height:1rem;--_ui5-v1-19-1_color-palette-item-container-sides-padding:0.1875rem;--_ui5-v1-19-1_color-palette-item-container-rows-padding:0.8125rem;--_ui5-v1-19-1_color-palette-item-hover-height:1.625rem;--_ui5-v1-19-1_color-palette-item-margin:calc((var(--_ui5-v1-19-1_color-palette-item-hover-height) - var(--_ui5-v1-19-1_color-palette-item-height))/2 + 0.0625rem);--_ui5-v1-19-1_color-palette-row-width:8.75rem;--_ui5-v1-19-1_color-palette-swatch-container-padding:0.1875rem 0.5rem;--_ui5-v1-19-1_color-palette-item-hover-margin:0.0625rem;--_ui5-v1-19-1_color-palette-row-height:7.5rem;--_ui5-v1-19-1_color-palette-button-height:2rem;--_ui5-v1-19-1_color-palette-item-before-focus-offset:-0.25rem;--_ui5-v1-19-1_color-palette-item-after-focus-offset:-0.125rem;--_ui5-v1-19-1_color_picker_slider_container_margin_top:-9px}[dir=rtl]{--_ui5-v1-19-1_progress_indicator_bar_border_radius:0.5rem;--_ui5-v1-19-1_progress_indicator_remaining_bar_border_radius:0.25rem;--_ui5-v1-19-1_icon_transform_scale:scale(-1,1);--_ui5-v1-19-1_panel_toggle_btn_rotation:var(--_ui5-v1-19-1_rotation_minus_90deg);--_ui5-v1-19-1_li_notification_group_toggle_btn_rotation:var(--_ui5-v1-19-1_rotation_minus_90deg);--_ui5-v1-19-1_timeline_scroll_container_offset:-0.5rem;--_ui5-v1-19-1_popover_upward_arrow_margin:.1875rem .125rem 0 0;--_ui5-v1-19-1_popover_right_arrow_margin:.1875rem .25rem 0 0;--_ui5-v1-19-1_popover_downward_arrow_margin:-0.4375rem .125rem 0 0;--_ui5-v1-19-1_popover_left_arrow_margin:.1875rem -.375rem 0 0;--_ui5-v1-19-1_dialog_resize_cursor:sw-resize;--_ui5-v1-19-1_progress_indicator_bar_border_radius:0 0.5rem 0.5rem 0;--_ui5-v1-19-1_progress_indicator_remaining_bar_border_radius:0.5rem 0 0 0.5rem;--_ui5-v1-19-1_menu_submenu_margin_offset:0 -0.25rem;--_ui5-v1-19-1_menu_submenu_placement_type_left_margin_offset:0 0.25rem;--_ui5-v1-19-1-menu_item_icon_float:left;--_ui5-v1-19-1-shellbar-notification-btn-count-offset:auto;--_ui5-v1-19-1_split_text_button_hover_border_left:none;--_ui5-v1-19-1_split_text_button_emphasized_hover_border_left:none;--_ui5-v1-19-1_split_text_button_positive_hover_border_left:none;--_ui5-v1-19-1_split_text_button_negative_hover_border_left:none;--_ui5-v1-19-1_split_text_button_attention_hover_border_left:none;--_ui5-v1-19-1_split_text_button_transparent_hover_border_left:none;--_ui5-v1-19-1_split_text_button_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_split_text_button_emphasized_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-19-1_split_text_button_positive_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-19-1_split_text_button_negative_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-19-1_split_text_button_attention_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-19-1_split_text_button_transparent_hover_border_right:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-19-1_segmented_btn_item_border_left:0.0625rem;--_ui5-v1-19-1_segmented_btn_item_border_right:0.0625rem}:root,[dir=ltr]{--_ui5-v1-19-1_rotation_90deg:rotate(90deg);--_ui5-v1-19-1_rotation_minus_90deg:rotate(-90deg);--_ui5-v1-19-1_icon_transform_scale:none;--_ui5-v1-19-1_panel_toggle_btn_rotation:var(--_ui5-v1-19-1_rotation_90deg);--_ui5-v1-19-1_li_notification_group_toggle_btn_rotation:var(--_ui5-v1-19-1_rotation_90deg);--_ui5-v1-19-1_timeline_scroll_container_offset:0.5rem;--_ui5-v1-19-1_popover_upward_arrow_margin:0.1875rem 0 0 0.1875rem;--_ui5-v1-19-1_popover_right_arrow_margin:0.1875rem 0 0 -0.375rem;--_ui5-v1-19-1_popover_downward_arrow_margin:-0.375rem 0 0 0.125rem;--_ui5-v1-19-1_popover_left_arrow_margin:0.125rem 0 0 0.25rem;--_ui5-v1-19-1_dialog_resize_cursor:se-resize;--_ui5-v1-19-1_progress_indicator_bar_border_radius:0.5rem 0 0 0.5rem;--_ui5-v1-19-1_progress_indicator_remaining_bar_border_radius:0 0.5rem 0.5rem 0;--_ui5-v1-19-1_menu_submenu_margin_offset:-0.25rem 0;--_ui5-v1-19-1_menu_submenu_placement_type_left_margin_offset:0.25rem 0;--_ui5-v1-19-1-menu_item_icon_float:right;--_ui5-v1-19-1-shellbar-notification-btn-count-offset:-0.125rem}" };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleData);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/popup-utils/OpenedPopupsRegistry.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/popup-utils/OpenedPopupsRegistry.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addOpenedPopup: () => (/* binding */ addOpenedPopup),
/* harmony export */   getOpenedPopups: () => (/* binding */ getOpenedPopups),
/* harmony export */   removeOpenedPopup: () => (/* binding */ removeOpenedPopup)
/* harmony export */ });
/* harmony import */ var _ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui5/webcomponents-base/dist/Keys.js */ "./node_modules/@ui5/webcomponents-base/dist/Keys.js");

let openedRegistry = [];
const addOpenedPopup = (instance, parentPopovers = []) => {
    if (!openedRegistry.some(popup => popup.instance === instance)) {
        openedRegistry.push({
            instance,
            parentPopovers,
        });
    }
    _updateTopModalPopup();
    if (openedRegistry.length === 1) {
        attachGlobalListener();
    }
};
const removeOpenedPopup = (instance) => {
    openedRegistry = openedRegistry.filter(el => {
        return el.instance !== instance;
    });
    _updateTopModalPopup();
    if (!openedRegistry.length) {
        detachGlobalListener();
    }
};
const getOpenedPopups = () => {
    return [...openedRegistry];
};
const _keydownListener = (event) => {
    if (!openedRegistry.length) {
        return;
    }
    if ((0,_ui5_webcomponents_base_dist_Keys_js__WEBPACK_IMPORTED_MODULE_0__.isEscape)(event)) {
        openedRegistry[openedRegistry.length - 1].instance.close(true);
    }
};
const attachGlobalListener = () => {
    document.addEventListener("keydown", _keydownListener);
};
const detachGlobalListener = () => {
    document.removeEventListener("keydown", _keydownListener);
};
const _updateTopModalPopup = () => {
    let popup;
    let hasModal = false;
    for (let i = openedRegistry.length - 1; i >= 0; i--) {
        popup = openedRegistry[i].instance;
        if (!hasModal && popup.isModal) {
            popup.isTopModalPopup = true;
            hasModal = true;
        }
        else {
            popup.isTopModalPopup = false;
        }
    }
};



/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different BusyIndicator sizes.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.BusyIndicatorSize
 */
var BusyIndicatorSize;
(function (BusyIndicatorSize) {
    /**
     * small size
     * @public
     * @type {Small}
     */
    BusyIndicatorSize["Small"] = "Small";
    /**
     * medium size
     * @public
     * @type {Medium}
     */
    BusyIndicatorSize["Medium"] = "Medium";
    /**
     * large size
     * @public
     * @type {Large}
     */
    BusyIndicatorSize["Large"] = "Large";
})(BusyIndicatorSize || (BusyIndicatorSize = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BusyIndicatorSize);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different Button designs.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.ButtonDesign
 */
var ButtonDesign;
(function (ButtonDesign) {
    /**
     * default type (no special styling)
     * @public
     * @type {Default}
     */
    ButtonDesign["Default"] = "Default";
    /**
     * accept type (green button)
     * @public
     * @type {Positive}
     */
    ButtonDesign["Positive"] = "Positive";
    /**
     * reject style (red button)
     * @public
     * @type {Negative}
     */
    ButtonDesign["Negative"] = "Negative";
    /**
     * transparent type
     * @public
     * @type {Transparent}
     */
    ButtonDesign["Transparent"] = "Transparent";
    /**
     * emphasized type
     * @public
     * @type {Emphasized}
     */
    ButtonDesign["Emphasized"] = "Emphasized";
    /**
     * attention type
     * @public
     * @type {Attention}
     */
    ButtonDesign["Attention"] = "Attention";
})(ButtonDesign || (ButtonDesign = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ButtonDesign);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/ButtonType.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/ButtonType.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Determines if the button has special form-related functionality.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.ButtonType
 */
var ButtonType;
(function (ButtonType) {
    /**
     * The button does not do anything special when inside a form
     * @public
     * @type {Button}
     */
    ButtonType["Button"] = "Button";
    /**
     * The button acts as a submit button (submits a form)
     * @public
     * @type {Submit}
     */
    ButtonType["Submit"] = "Submit";
    /**
     * The button acts as a reset button (resets a form)
     * @public
     * @type {Reset}
     */
    ButtonType["Reset"] = "Reset";
})(ButtonType || (ButtonType = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ButtonType);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/IconDesign.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/IconDesign.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different Icon semantic designs.
*
* @readonly
* @enum {string}
* @public
* @author SAP SE
* @alias sap.ui.webc.main.types.IconDesign
*/
var IconDesign;
(function (IconDesign) {
    /**
     * Contrast design
     * @public
     * @type {Contrast}
     */
    IconDesign["Contrast"] = "Contrast";
    /**
     * Critical design
     * @public
     * @type {Critical}
     */
    IconDesign["Critical"] = "Critical";
    /**
     * Default design (brand design)
     * @public
     * @type {Default}
    */
    IconDesign["Default"] = "Default";
    /**
     * info type
     * @public
     * @type {Information}
     */
    IconDesign["Information"] = "Information";
    /**
     * Negative design
     * @public
     * @type {Negative}
     */
    IconDesign["Negative"] = "Negative";
    /**
     * Neutral design
     * @public
     * @type {Neutral}
     */
    IconDesign["Neutral"] = "Neutral";
    /**
     * Design that indicates an icon which isn't interactive
     * @public
     * @type {NonInteractive}
     */
    IconDesign["NonInteractive"] = "NonInteractive";
    /**
     * Positive design
     * @public
     * @type {Positive}
     */
    IconDesign["Positive"] = "Positive";
})(IconDesign || (IconDesign = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconDesign);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * MessageStrip designs.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.MessageStripDesign
 */
var MessageStripDesign;
(function (MessageStripDesign) {
    /**
     * Message should be just an information
     * @public
     * @type {Information}
     */
    MessageStripDesign["Information"] = "Information";
    /**
     * Message is a success message
     * @public
     * @type {Positive}
     */
    MessageStripDesign["Positive"] = "Positive";
    /**
     * Message is an error
     * @public
     * @type {Negative}
     */
    MessageStripDesign["Negative"] = "Negative";
    /**
     * Message is a warning
     * @public
     * @type {Warning}
     */
    MessageStripDesign["Warning"] = "Warning";
})(MessageStripDesign || (MessageStripDesign = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MessageStripDesign);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Popup accessible roles.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.PopupAccessibleRole
 */
var PopupAccessibleRole;
(function (PopupAccessibleRole) {
    /**
     * Represents no ARIA role.
     * @public
     * @type {None}
     */
    PopupAccessibleRole["None"] = "None";
    /**
     * Represents the ARIA role "dialog".
     * @public
     * @type {Dialog}
     */
    PopupAccessibleRole["Dialog"] = "Dialog";
    /**
     * Represents the ARIA role "alertdialog".
     * @public
     * @type {AlertDialog}
     */
    PopupAccessibleRole["AlertDialog"] = "AlertDialog";
})(PopupAccessibleRole || (PopupAccessibleRole = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PopupAccessibleRole);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/TitleLevel.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/TitleLevel.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different types of Title level.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.TitleLevel
 */
var TitleLevel;
(function (TitleLevel) {
    /**
     * Renders <code>h1</code> tag.
     * @public
     * @type {H1}
     */
    TitleLevel["H1"] = "H1";
    /**
     * Renders <code>h2</code> tag.
     * @public
     * @type {H2}
     */
    TitleLevel["H2"] = "H2";
    /**
     * Renders <code>h3</code> tag.
     * @public
     * @type {H3}
     */
    TitleLevel["H3"] = "H3";
    /**
     * Renders <code>h4</code> tag.
     * @public
     * @type {H4}
     */
    TitleLevel["H4"] = "H4";
    /**
     * Renders <code>h5</code> tag.
     * @public
     * @type {H5}
     */
    TitleLevel["H5"] = "H5";
    /**
     * Renders <code>h6</code> tag.
     * @public
     * @type {H6}
     */
    TitleLevel["H6"] = "H6";
})(TitleLevel || (TitleLevel = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TitleLevel);


/***/ }),

/***/ "./node_modules/@ui5/webcomponents/dist/types/WrappingType.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ui5/webcomponents/dist/types/WrappingType.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Different types of wrapping.
 *
 * @readonly
 * @enum {string}
 * @public
 * @author SAP SE
 * @alias sap.ui.webc.main.types.WrappingType
 */
var WrappingType;
(function (WrappingType) {
    /**
     * The text will be truncated with an ellipsis.
     * @public
     * @type {None}
     */
    WrappingType["None"] = "None";
    /**
     * The text will wrap. The words will not be broken based on hyphenation.
     * @public
     * @type {Normal}
     */
    WrappingType["Normal"] = "Normal";
})(WrappingType || (WrappingType = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WrappingType);


/***/ }),

/***/ "./node_modules/history/node_modules/@babel/runtime/helpers/esm/extends.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/history/node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/lit-html/development/directive-helpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/lit-html/development/directive-helpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TemplateResultType: () => (/* binding */ TemplateResultType),
/* harmony export */   clearPart: () => (/* binding */ clearPart),
/* harmony export */   getCommittedValue: () => (/* binding */ getCommittedValue),
/* harmony export */   getDirectiveClass: () => (/* binding */ getDirectiveClass),
/* harmony export */   insertPart: () => (/* binding */ insertPart),
/* harmony export */   isCompiledTemplateResult: () => (/* binding */ isCompiledTemplateResult),
/* harmony export */   isDirectiveResult: () => (/* binding */ isDirectiveResult),
/* harmony export */   isPrimitive: () => (/* binding */ isPrimitive),
/* harmony export */   isSingleExpression: () => (/* binding */ isSingleExpression),
/* harmony export */   isTemplateResult: () => (/* binding */ isTemplateResult),
/* harmony export */   removePart: () => (/* binding */ removePart),
/* harmony export */   setChildPartValue: () => (/* binding */ setChildPartValue),
/* harmony export */   setCommittedValue: () => (/* binding */ setCommittedValue)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var _a, _b;

const { _ChildPart: ChildPart } = _lit_html_js__WEBPACK_IMPORTED_MODULE_0__._$LH;
const ENABLE_SHADYDOM_NOPATCH = true;
const wrap = ENABLE_SHADYDOM_NOPATCH &&
    ((_a = window.ShadyDOM) === null || _a === void 0 ? void 0 : _a.inUse) &&
    ((_b = window.ShadyDOM) === null || _b === void 0 ? void 0 : _b.noPatch) === true
    ? window.ShadyDOM.wrap
    : (node) => node;
/**
 * Tests if a value is a primitive value.
 *
 * See https://tc39.github.io/ecma262/#sec-typeof-operator
 */
const isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');
const TemplateResultType = {
    HTML: 1,
    SVG: 2,
};
/**
 * Tests if a value is a TemplateResult or a CompiledTemplateResult.
 */
const isTemplateResult = (value, type) => type === undefined
    ? // This property needs to remain unminified.
        (value === null || value === void 0 ? void 0 : value['_$litType$']) !== undefined
    : (value === null || value === void 0 ? void 0 : value['_$litType$']) === type;
/**
 * Tests if a value is a CompiledTemplateResult.
 */
const isCompiledTemplateResult = (value) => {
    var _a;
    return ((_a = value === null || value === void 0 ? void 0 : value['_$litType$']) === null || _a === void 0 ? void 0 : _a.h) != null;
};
/**
 * Tests if a value is a DirectiveResult.
 */
const isDirectiveResult = (value) => 
// This property needs to remain unminified.
(value === null || value === void 0 ? void 0 : value['_$litDirective$']) !== undefined;
/**
 * Retrieves the Directive class for a DirectiveResult
 */
const getDirectiveClass = (value) => 
// This property needs to remain unminified.
value === null || value === void 0 ? void 0 : value['_$litDirective$'];
/**
 * Tests whether a part has only a single-expression with no strings to
 * interpolate between.
 *
 * Only AttributePart and PropertyPart can have multiple expressions.
 * Multi-expression parts have a `strings` property and single-expression
 * parts do not.
 */
const isSingleExpression = (part) => part.strings === undefined;
const createMarker = () => document.createComment('');
/**
 * Inserts a ChildPart into the given container ChildPart's DOM, either at the
 * end of the container ChildPart, or before the optional `refPart`.
 *
 * This does not add the part to the containerPart's committed value. That must
 * be done by callers.
 *
 * @param containerPart Part within which to add the new ChildPart
 * @param refPart Part before which to add the new ChildPart; when omitted the
 *     part added to the end of the `containerPart`
 * @param part Part to insert, or undefined to create a new part
 */
const insertPart = (containerPart, refPart, part) => {
    var _a;
    const container = wrap(containerPart._$startNode).parentNode;
    const refNode = refPart === undefined ? containerPart._$endNode : refPart._$startNode;
    if (part === undefined) {
        const startNode = wrap(container).insertBefore(createMarker(), refNode);
        const endNode = wrap(container).insertBefore(createMarker(), refNode);
        part = new ChildPart(startNode, endNode, containerPart, containerPart.options);
    }
    else {
        const endNode = wrap(part._$endNode).nextSibling;
        const oldParent = part._$parent;
        const parentChanged = oldParent !== containerPart;
        if (parentChanged) {
            (_a = part._$reparentDisconnectables) === null || _a === void 0 ? void 0 : _a.call(part, containerPart);
            // Note that although `_$reparentDisconnectables` updates the part's
            // `_$parent` reference after unlinking from its current parent, that
            // method only exists if Disconnectables are present, so we need to
            // unconditionally set it here
            part._$parent = containerPart;
            // Since the _$isConnected getter is somewhat costly, only
            // read it once we know the subtree has directives that need
            // to be notified
            let newConnectionState;
            if (part._$notifyConnectionChanged !== undefined &&
                (newConnectionState = containerPart._$isConnected) !==
                    oldParent._$isConnected) {
                part._$notifyConnectionChanged(newConnectionState);
            }
        }
        if (endNode !== refNode || parentChanged) {
            let start = part._$startNode;
            while (start !== endNode) {
                const n = wrap(start).nextSibling;
                wrap(container).insertBefore(start, refNode);
                start = n;
            }
        }
    }
    return part;
};
/**
 * Sets the value of a Part.
 *
 * Note that this should only be used to set/update the value of user-created
 * parts (i.e. those created using `insertPart`); it should not be used
 * by directives to set the value of the directive's container part. Directives
 * should return a value from `update`/`render` to update their part state.
 *
 * For directives that require setting their part value asynchronously, they
 * should extend `AsyncDirective` and call `this.setValue()`.
 *
 * @param part Part to set
 * @param value Value to set
 * @param index For `AttributePart`s, the index to set
 * @param directiveParent Used internally; should not be set by user
 */
const setChildPartValue = (part, value, directiveParent = part) => {
    part._$setValue(value, directiveParent);
    return part;
};
// A sentinel value that can never appear as a part value except when set by
// live(). Used to force a dirty-check to fail and cause a re-render.
const RESET_VALUE = {};
/**
 * Sets the committed value of a ChildPart directly without triggering the
 * commit stage of the part.
 *
 * This is useful in cases where a directive needs to update the part such
 * that the next update detects a value change or not. When value is omitted,
 * the next update will be guaranteed to be detected as a change.
 *
 * @param part
 * @param value
 */
const setCommittedValue = (part, value = RESET_VALUE) => (part._$committedValue = value);
/**
 * Returns the committed value of a ChildPart.
 *
 * The committed value is used for change detection and efficient updates of
 * the part. It can differ from the value set by the template or directive in
 * cases where the template value is transformed before being committed.
 *
 * - `TemplateResult`s are committed as a `TemplateInstance`
 * - Iterables are committed as `Array<ChildPart>`
 * - All other types are committed as the template value or value returned or
 *   set by a directive.
 *
 * @param part
 */
const getCommittedValue = (part) => part._$committedValue;
/**
 * Removes a ChildPart from the DOM, including any of its content.
 *
 * @param part The Part to remove
 */
const removePart = (part) => {
    var _a;
    (_a = part._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(part, false, true);
    let start = part._$startNode;
    const end = wrap(part._$endNode).nextSibling;
    while (start !== end) {
        const n = wrap(start).nextSibling;
        wrap(start).remove();
        start = n;
    }
};
const clearPart = (part) => {
    part._$clear();
};


/***/ }),

/***/ "./node_modules/lit-html/development/directive.js":
/*!********************************************************!*\
  !*** ./node_modules/lit-html/development/directive.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Directive: () => (/* binding */ Directive),
/* harmony export */   PartType: () => (/* binding */ PartType),
/* harmony export */   directive: () => (/* binding */ directive)
/* harmony export */ });
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const PartType = {
    ATTRIBUTE: 1,
    CHILD: 2,
    PROPERTY: 3,
    BOOLEAN_ATTRIBUTE: 4,
    EVENT: 5,
    ELEMENT: 6,
};
/**
 * Creates a user-facing directive function from a Directive class. This
 * function has the same parameters as the directive's render() method.
 */
const directive = (c) => (...values) => ({
    // This property needs to remain unminified.
    ['_$litDirective$']: c,
    values,
});
/**
 * Base class for creating custom directives. Users should extend this class,
 * implement `render` and/or `update`, and then pass their subclass to
 * `directive`.
 */
class Directive {
    constructor(_partInfo) { }
    // See comment in Disconnectable interface for why this is a getter
    get _$isConnected() {
        return this._$parent._$isConnected;
    }
    /** @internal */
    _$initialize(part, parent, attributeIndex) {
        this.__part = part;
        this._$parent = parent;
        this.__attributeIndex = attributeIndex;
    }
    /** @internal */
    _$resolve(part, props) {
        return this.update(part, props);
    }
    update(_part, props) {
        return this.render(...props);
    }
}


/***/ }),

/***/ "./node_modules/lit-html/development/directives/class-map.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/class-map.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   classMap: () => (/* binding */ classMap)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ "./node_modules/lit-html/development/directive.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */


class ClassMapDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {
    constructor(partInfo) {
        var _a;
        super(partInfo);
        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.ATTRIBUTE ||
            partInfo.name !== 'class' ||
            ((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {
            throw new Error('`classMap()` can only be used in the `class` attribute ' +
                'and must be the only part in the attribute.');
        }
    }
    render(classInfo) {
        // Add spaces to ensure separation from static classes
        return (' ' +
            Object.keys(classInfo)
                .filter((key) => classInfo[key])
                .join(' ') +
            ' ');
    }
    update(part, [classInfo]) {
        var _a, _b;
        // Remember dynamic classes on the first render
        if (this._previousClasses === undefined) {
            this._previousClasses = new Set();
            if (part.strings !== undefined) {
                this._staticClasses = new Set(part.strings
                    .join(' ')
                    .split(/\s/)
                    .filter((s) => s !== ''));
            }
            for (const name in classInfo) {
                if (classInfo[name] && !((_a = this._staticClasses) === null || _a === void 0 ? void 0 : _a.has(name))) {
                    this._previousClasses.add(name);
                }
            }
            return this.render(classInfo);
        }
        const classList = part.element.classList;
        // Remove old classes that no longer apply
        // We use forEach() instead of for-of so that we don't require down-level
        // iteration.
        this._previousClasses.forEach((name) => {
            if (!(name in classInfo)) {
                classList.remove(name);
                this._previousClasses.delete(name);
            }
        });
        // Add or remove classes based on their classMap value
        for (const name in classInfo) {
            // We explicitly want a loose truthy check of `value` because it seems
            // more convenient that '' and 0 are skipped.
            const value = !!classInfo[name];
            if (value !== this._previousClasses.has(name) &&
                !((_b = this._staticClasses) === null || _b === void 0 ? void 0 : _b.has(name))) {
                if (value) {
                    classList.add(name);
                    this._previousClasses.add(name);
                }
                else {
                    classList.remove(name);
                    this._previousClasses.delete(name);
                }
            }
        }
        return _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange;
    }
}
/**
 * A directive that applies dynamic CSS classes.
 *
 * This must be used in the `class` attribute and must be the only part used in
 * the attribute. It takes each property in the `classInfo` argument and adds
 * the property name to the element's `classList` if the property value is
 * truthy; if the property value is falsey, the property name is removed from
 * the element's `class`.
 *
 * For example `{foo: bar}` applies the class `foo` if the value of `bar` is
 * truthy.
 *
 * @param classInfo
 */
const classMap = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(ClassMapDirective);


/***/ }),

/***/ "./node_modules/lit-html/development/directives/if-defined.js":
/*!********************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/if-defined.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ifDefined: () => (/* binding */ ifDefined)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */

/**
 * For AttributeParts, sets the attribute if the value is defined and removes
 * the attribute if the value is undefined.
 *
 * For other part types, this directive is a no-op.
 */
const ifDefined = (value) => value !== null && value !== void 0 ? value : _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.nothing;


/***/ }),

/***/ "./node_modules/lit-html/development/directives/repeat.js":
/*!****************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/repeat.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   repeat: () => (/* binding */ repeat)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ "./node_modules/lit-html/development/directive.js");
/* harmony import */ var _directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../directive-helpers.js */ "./node_modules/lit-html/development/directive-helpers.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */



// Helper for generating a map of array item to its index over a subset
// of an array (used to lazily generate `newKeyToIndexMap` and
// `oldKeyToIndexMap`)
const generateMap = (list, start, end) => {
    const map = new Map();
    for (let i = start; i <= end; i++) {
        map.set(list[i], i);
    }
    return map;
};
class RepeatDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {
    constructor(partInfo) {
        super(partInfo);
        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.CHILD) {
            throw new Error('repeat() can only be used in text expressions');
        }
    }
    _getValuesAndKeys(items, keyFnOrTemplate, template) {
        let keyFn;
        if (template === undefined) {
            template = keyFnOrTemplate;
        }
        else if (keyFnOrTemplate !== undefined) {
            keyFn = keyFnOrTemplate;
        }
        const keys = [];
        const values = [];
        let index = 0;
        for (const item of items) {
            keys[index] = keyFn ? keyFn(item, index) : index;
            values[index] = template(item, index);
            index++;
        }
        return {
            values,
            keys,
        };
    }
    render(items, keyFnOrTemplate, template) {
        return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;
    }
    update(containerPart, [items, keyFnOrTemplate, template]) {
        var _a;
        // Old part & key lists are retrieved from the last update (which may
        // be primed by hydration)
        const oldParts = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getCommittedValue)(containerPart);
        const { values: newValues, keys: newKeys } = this._getValuesAndKeys(items, keyFnOrTemplate, template);
        // We check that oldParts, the committed value, is an Array as an
        // indicator that the previous value came from a repeat() call. If
        // oldParts is not an Array then this is the first render and we return
        // an array for lit-html's array handling to render, and remember the
        // keys.
        if (!Array.isArray(oldParts)) {
            this._itemKeys = newKeys;
            return newValues;
        }
        // In SSR hydration it's possible for oldParts to be an array but for us
        // to not have item keys because the update() hasn't run yet. We set the
        // keys to an empty array. This will cause all oldKey/newKey comparisons
        // to fail and execution to fall to the last nested brach below which
        // reuses the oldPart.
        const oldKeys = ((_a = this._itemKeys) !== null && _a !== void 0 ? _a : (this._itemKeys = []));
        // New part list will be built up as we go (either reused from
        // old parts or created for new keys in this update). This is
        // saved in the above cache at the end of the update.
        const newParts = [];
        // Maps from key to index for current and previous update; these
        // are generated lazily only when needed as a performance
        // optimization, since they are only required for multiple
        // non-contiguous changes in the list, which are less common.
        let newKeyToIndexMap;
        let oldKeyToIndexMap;
        // Head and tail pointers to old parts and new values
        let oldHead = 0;
        let oldTail = oldParts.length - 1;
        let newHead = 0;
        let newTail = newValues.length - 1;
        // Overview of O(n) reconciliation algorithm (general approach
        // based on ideas found in ivi, vue, snabbdom, etc.):
        //
        // * We start with the list of old parts and new values (and
        //   arrays of their respective keys), head/tail pointers into
        //   each, and we build up the new list of parts by updating
        //   (and when needed, moving) old parts or creating new ones.
        //   The initial scenario might look like this (for brevity of
        //   the diagrams, the numbers in the array reflect keys
        //   associated with the old parts or new values, although keys
        //   and parts/values are actually stored in parallel arrays
        //   indexed using the same head/tail pointers):
        //
        //      oldHead v                 v oldTail
        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
        //   newParts: [ ,  ,  ,  ,  ,  ,  ]
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new
        //                                      item order
        //      newHead ^                 ^ newTail
        //
        // * Iterate old & new lists from both sides, updating,
        //   swapping, or removing parts at the head/tail locations
        //   until neither head nor tail can move.
        //
        // * Example below: keys at head pointers match, so update old
        //   part 0 in-place (no need to move it) and record part 0 in
        //   the `newParts` list. The last thing we do is advance the
        //   `oldHead` and `newHead` pointers (will be reflected in the
        //   next diagram).
        //
        //      oldHead v                 v oldTail
        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead
        //                                      & newHead
        //      newHead ^                 ^ newTail
        //
        // * Example below: head pointers don't match, but tail
        //   pointers do, so update part 6 in place (no need to move
        //   it), and record part 6 in the `newParts` list. Last,
        //   advance the `oldTail` and `oldHead` pointers.
        //
        //         oldHead v              v oldTail
        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail
        //                                      & newTail
        //         newHead ^              ^ newTail
        //
        // * If neither head nor tail match; next check if one of the
        //   old head/tail items was removed. We first need to generate
        //   the reverse map of new keys to index (`newKeyToIndexMap`),
        //   which is done once lazily as a performance optimization,
        //   since we only hit this case if multiple non-contiguous
        //   changes were made. Note that for contiguous removal
        //   anywhere in the list, the head and tails would advance
        //   from either end and pass each other before we get to this
        //   case and removals would be handled in the final while loop
        //   without needing to generate the map.
        //
        // * Example below: The key at `oldTail` was removed (no longer
        //   in the `newKeyToIndexMap`), so remove that part from the
        //   DOM and advance just the `oldTail` pointer.
        //
        //         oldHead v           v oldTail
        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail
        //         newHead ^           ^ newTail
        //
        // * Once head and tail cannot move, any mismatches are due to
        //   either new or moved items; if a new key is in the previous
        //   "old key to old index" map, move the old part to the new
        //   location, otherwise create and insert a new part. Note
        //   that when moving an old part we null its position in the
        //   oldParts array if it lies between the head and tail so we
        //   know to skip it when the pointers get there.
        //
        // * Example below: neither head nor tail match, and neither
        //   were removed; so find the `newHead` key in the
        //   `oldKeyToIndexMap`, and move that old part's DOM into the
        //   next head position (before `oldParts[oldHead]`). Last,
        //   null the part in the `oldPart` array since it was
        //   somewhere in the remaining oldParts still to be scanned
        //   (between the head and tail pointers) so that we know to
        //   skip that old part on future iterations.
        //
        //         oldHead v        v oldTail
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance
        //                                      newHead
        //         newHead ^           ^ newTail
        //
        // * Note that for moves/insertions like the one above, a part
        //   inserted at the head pointer is inserted before the
        //   current `oldParts[oldHead]`, and a part inserted at the
        //   tail pointer is inserted before `newParts[newTail+1]`. The
        //   seeming asymmetry lies in the fact that new parts are
        //   moved into place outside in, so to the right of the head
        //   pointer are old parts, and to the right of the tail
        //   pointer are new parts.
        //
        // * We always restart back from the top of the algorithm,
        //   allowing matching and simple updates in place to
        //   continue...
        //
        // * Example below: the head pointers once again match, so
        //   simply update part 1 and record it in the `newParts`
        //   array.  Last, advance both head pointers.
        //
        //         oldHead v        v oldTail
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead
        //                                      & newHead
        //            newHead ^        ^ newTail
        //
        // * As mentioned above, items that were moved as a result of
        //   being stuck (the final else clause in the code below) are
        //   marked with null, so we always advance old pointers over
        //   these so we're comparing the next actual old value on
        //   either end.
        //
        // * Example below: `oldHead` is null (already placed in
        //   newParts), so advance `oldHead`.
        //
        //            oldHead v     v oldTail
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:
        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]
        //               newHead ^     ^ newTail
        //
        // * Note it's not critical to mark old parts as null when they
        //   are moved from head to tail or tail to head, since they
        //   will be outside the pointer range and never visited again.
        //
        // * Example below: Here the old tail key matches the new head
        //   key, so the part at the `oldTail` position and move its
        //   DOM to the new head position (before `oldParts[oldHead]`).
        //   Last, advance `oldTail` and `newHead` pointers.
        //
        //               oldHead v  v oldTail
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,
        //                                     advance oldTail & newHead
        //               newHead ^     ^ newTail
        //
        // * Example below: Old and new head keys match, so update the
        //   old head part in place, and advance the `oldHead` and
        //   `newHead` pointers.
        //
        //               oldHead v oldTail
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &
        //                                      newHead
        //                  newHead ^  ^ newTail
        //
        // * Once the new or old pointers move past each other then all
        //   we have left is additions (if old list exhausted) or
        //   removals (if new list exhausted). Those are handled in the
        //   final while loops at the end.
        //
        // * Example below: `oldHead` exceeded `oldTail`, so we're done
        //   with the main loop.  Create the remaining part and insert
        //   it at the new head position, and the update is complete.
        //
        //                   (oldHead > oldTail)
        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7
        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]
        //                     newHead ^ newTail
        //
        // * Note that the order of the if/else clauses is not
        //   important to the algorithm, as long as the null checks
        //   come first (to ensure we're always working on valid old
        //   parts) and that the final else clause comes last (since
        //   that's where the expensive moves occur). The order of
        //   remaining clauses is is just a simple guess at which cases
        //   will be most common.
        //
        // * Note, we could calculate the longest
        //   increasing subsequence (LIS) of old items in new position,
        //   and only move those not in the LIS set. However that costs
        //   O(nlogn) time and adds a bit more code, and only helps
        //   make rare types of mutations require fewer moves. The
        //   above handles removes, adds, reversal, swaps, and single
        //   moves of contiguous items in linear time, in the minimum
        //   number of moves. As the number of multiple moves where LIS
        //   might help approaches a random shuffle, the LIS
        //   optimization becomes less helpful, so it seems not worth
        //   the code at this point. Could reconsider if a compelling
        //   case arises.
        while (oldHead <= oldTail && newHead <= newTail) {
            if (oldParts[oldHead] === null) {
                // `null` means old part at head has already been used
                // below; skip
                oldHead++;
            }
            else if (oldParts[oldTail] === null) {
                // `null` means old part at tail has already been used
                // below; skip
                oldTail--;
            }
            else if (oldKeys[oldHead] === newKeys[newHead]) {
                // Old head matches new head; update in place
                newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldHead], newValues[newHead]);
                oldHead++;
                newHead++;
            }
            else if (oldKeys[oldTail] === newKeys[newTail]) {
                // Old tail matches new tail; update in place
                newParts[newTail] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldTail], newValues[newTail]);
                oldTail--;
                newTail--;
            }
            else if (oldKeys[oldHead] === newKeys[newTail]) {
                // Old head matches new tail; update and move to new tail
                newParts[newTail] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldHead], newValues[newTail]);
                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, newParts[newTail + 1], oldParts[oldHead]);
                oldHead++;
                newTail--;
            }
            else if (oldKeys[oldTail] === newKeys[newHead]) {
                // Old tail matches new head; update and move to new head
                newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldTail], newValues[newHead]);
                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead], oldParts[oldTail]);
                oldTail--;
                newHead++;
            }
            else {
                if (newKeyToIndexMap === undefined) {
                    // Lazily generate key-to-index maps, used for removals &
                    // moves below
                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);
                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);
                }
                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {
                    // Old head is no longer in new list; remove
                    (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldParts[oldHead]);
                    oldHead++;
                }
                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {
                    // Old tail is no longer in new list; remove
                    (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldParts[oldTail]);
                    oldTail--;
                }
                else {
                    // Any mismatches at this point are due to additions or
                    // moves; see if we have an old part we can reuse and move
                    // into place
                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);
                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;
                    if (oldPart === null) {
                        // No old part for this value; create a new one and
                        // insert it
                        const newPart = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead]);
                        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(newPart, newValues[newHead]);
                        newParts[newHead] = newPart;
                    }
                    else {
                        // Reuse old part
                        newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldPart, newValues[newHead]);
                        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead], oldPart);
                        // This marks the old part as having been used, so that
                        // it will be skipped in the first two checks above
                        oldParts[oldIndex] = null;
                    }
                    newHead++;
                }
            }
        }
        // Add parts for any remaining new values
        while (newHead <= newTail) {
            // For all remaining additions, we insert before last new
            // tail, since old pointers are no longer valid
            const newPart = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, newParts[newTail + 1]);
            (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(newPart, newValues[newHead]);
            newParts[newHead++] = newPart;
        }
        // Remove any remaining unused old parts
        while (oldHead <= oldTail) {
            const oldPart = oldParts[oldHead++];
            if (oldPart !== null) {
                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldPart);
            }
        }
        // Save order of new parts for next round
        this._itemKeys = newKeys;
        // Directly set part value, bypassing it's dirty-checking
        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setCommittedValue)(containerPart, newParts);
        return _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange;
    }
}
/**
 * A directive that repeats a series of values (usually `TemplateResults`)
 * generated from an iterable, and updates those items efficiently when the
 * iterable changes based on user-provided `keys` associated with each item.
 *
 * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,
 * meaning previous DOM for a given key is moved into the new position if
 * needed, and DOM will never be reused with values for different keys (new DOM
 * will always be created for new keys). This is generally the most efficient
 * way to use `repeat` since it performs minimum unnecessary work for insertions
 * and removals.
 *
 * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.
 *
 * ```js
 * html`
 *   <ol>
 *     ${repeat(this.items, (item) => item.id, (item, index) => {
 *       return html`<li>${index}: ${item.name}</li>`;
 *     })}
 *   </ol>
 * `
 * ```
 *
 * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a
 * given call to `repeat`. The behavior when two or more items have the same key
 * is undefined.
 *
 * If no `keyFn` is provided, this directive will perform similar to mapping
 * items to values, and DOM will be reused against potentially different items.
 */
const repeat = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(RepeatDirective);


/***/ }),

/***/ "./node_modules/lit-html/development/directives/unsafe-html.js":
/*!*********************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/unsafe-html.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UnsafeHTMLDirective: () => (/* binding */ UnsafeHTMLDirective),
/* harmony export */   unsafeHTML: () => (/* binding */ unsafeHTML)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ "./node_modules/lit-html/development/directive.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */


const HTML_RESULT = 1;
class UnsafeHTMLDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {
    constructor(partInfo) {
        super(partInfo);
        this._value = _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.nothing;
        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.CHILD) {
            throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);
        }
    }
    render(value) {
        if (value === _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.nothing || value == null) {
            this._templateResult = undefined;
            return (this._value = value);
        }
        if (value === _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange) {
            return value;
        }
        if (typeof value != 'string') {
            throw new Error(`${this.constructor.directiveName}() called with a non-string value`);
        }
        if (value === this._value) {
            return this._templateResult;
        }
        this._value = value;
        const strings = [value];
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        strings.raw = strings;
        // WARNING: impersonating a TemplateResult like this is extremely
        // dangerous. Third-party directives should not do this.
        return (this._templateResult = {
            // Cast to a known set of integers that satisfy ResultType so that we
            // don't have to export ResultType and possibly encourage this pattern.
            // This property needs to remain unminified.
            ['_$litType$']: this.constructor
                .resultType,
            strings,
            values: [],
        });
    }
}
UnsafeHTMLDirective.directiveName = 'unsafeHTML';
UnsafeHTMLDirective.resultType = HTML_RESULT;
/**
 * Renders the result as HTML, rather than text.
 *
 * The values `undefined`, `null`, and `nothing`, will all result in no content
 * (empty string) being rendered.
 *
 * Note, this is unsafe to use with any user-provided input that hasn't been
 * sanitized or escaped, as it may lead to cross-site-scripting
 * vulnerabilities.
 */
const unsafeHTML = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(UnsafeHTMLDirective);


/***/ }),

/***/ "./node_modules/lit-html/development/lit-html.js":
/*!*******************************************************!*\
  !*** ./node_modules/lit-html/development/lit-html.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _$LH: () => (/* binding */ _$LH),
/* harmony export */   html: () => (/* binding */ html),
/* harmony export */   noChange: () => (/* binding */ noChange),
/* harmony export */   nothing: () => (/* binding */ nothing),
/* harmony export */   render: () => (/* binding */ render),
/* harmony export */   svg: () => (/* binding */ svg)
/* harmony export */ });
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var _a, _b, _c, _d;
const DEV_MODE = true;
const ENABLE_EXTRA_SECURITY_HOOKS = true;
const ENABLE_SHADYDOM_NOPATCH = true;
const NODE_MODE = false;
// Use window for browser builds because IE11 doesn't have globalThis.
const global = NODE_MODE ? globalThis : window;
/**
 * Useful for visualizing and logging insights into what the Lit template system is doing.
 *
 * Compiled out of prod mode builds.
 */
const debugLogEvent = DEV_MODE
    ? (event) => {
        const shouldEmit = global
            .emitLitDebugLogEvents;
        if (!shouldEmit) {
            return;
        }
        global.dispatchEvent(new CustomEvent('lit-debug', {
            detail: event,
        }));
    }
    : undefined;
// Used for connecting beginRender and endRender events when there are nested
// renders when errors are thrown preventing an endRender event from being
// called.
let debugLogRenderId = 0;
let issueWarning;
if (DEV_MODE) {
    (_a = global.litIssuedWarnings) !== null && _a !== void 0 ? _a : (global.litIssuedWarnings = new Set());
    // Issue a warning, if we haven't already.
    issueWarning = (code, warning) => {
        warning += code
            ? ` See https://lit.dev/msg/${code} for more information.`
            : '';
        if (!global.litIssuedWarnings.has(warning)) {
            console.warn(warning);
            global.litIssuedWarnings.add(warning);
        }
    };
    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);
}
const wrap = ENABLE_SHADYDOM_NOPATCH &&
    ((_b = global.ShadyDOM) === null || _b === void 0 ? void 0 : _b.inUse) &&
    ((_c = global.ShadyDOM) === null || _c === void 0 ? void 0 : _c.noPatch) === true
    ? global.ShadyDOM.wrap
    : (node) => node;
const trustedTypes = global.trustedTypes;
/**
 * Our TrustedTypePolicy for HTML which is declared using the html template
 * tag function.
 *
 * That HTML is a developer-authored constant, and is parsed with innerHTML
 * before any untrusted expressions have been mixed in. Therefor it is
 * considered safe by construction.
 */
const policy = trustedTypes
    ? trustedTypes.createPolicy('lit-html', {
        createHTML: (s) => s,
    })
    : undefined;
const identityFunction = (value) => value;
const noopSanitizer = (_node, _name, _type) => identityFunction;
/** Sets the global sanitizer factory. */
const setSanitizer = (newSanitizer) => {
    if (!ENABLE_EXTRA_SECURITY_HOOKS) {
        return;
    }
    if (sanitizerFactoryInternal !== noopSanitizer) {
        throw new Error(`Attempted to overwrite existing lit-html security policy.` +
            ` setSanitizeDOMValueFactory should be called at most once.`);
    }
    sanitizerFactoryInternal = newSanitizer;
};
/**
 * Only used in internal tests, not a part of the public API.
 */
const _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {
    sanitizerFactoryInternal = noopSanitizer;
};
const createSanitizer = (node, name, type) => {
    return sanitizerFactoryInternal(node, name, type);
};
// Added to an attribute name to mark the attribute as bound so we can find
// it easily.
const boundAttributeSuffix = '$lit$';
// This marker is used in many syntactic positions in HTML, so it must be
// a valid element name and attribute name. We don't support dynamic names (yet)
// but this at least ensures that the parse tree is closer to the template
// intention.
const marker = `lit$${String(Math.random()).slice(9)}$`;
// String used to tell if a comment is a marker comment
const markerMatch = '?' + marker;
// Text used to insert a comment marker node. We use processing instruction
// syntax because it's slightly smaller, but parses as a comment node.
const nodeMarker = `<${markerMatch}>`;
const d = NODE_MODE && global.document === undefined
    ? {
        createTreeWalker() {
            return {};
        },
    }
    : document;
// Creates a dynamic marker. We never have to search for these in the DOM.
const createMarker = () => d.createComment('');
const isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');
const isArray = Array.isArray;
const isIterable = (value) => isArray(value) ||
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    typeof (value === null || value === void 0 ? void 0 : value[Symbol.iterator]) === 'function';
const SPACE_CHAR = `[ \t\n\f\r]`;
const ATTR_VALUE_CHAR = `[^ \t\n\f\r"'\`<>=]`;
const NAME_CHAR = `[^\\s"'>=/]`;
// These regexes represent the five parsing states that we care about in the
// Template's HTML scanner. They match the *end* of the state they're named
// after.
// Depending on the match, we transition to a new state. If there's no match,
// we stay in the same state.
// Note that the regexes are stateful. We utilize lastIndex and sync it
// across the multiple regexes used. In addition to the five regexes below
// we also dynamically create a regex to find the matching end tags for raw
// text elements.
/**
 * End of text is: `<` followed by:
 *   (comment start) or (tag) or (dynamic tag binding)
 */
const textEndRegex = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
const COMMENT_START = 1;
const TAG_NAME = 2;
const DYNAMIC_TAG_NAME = 3;
const commentEndRegex = /-->/g;
/**
 * Comments not started with <!--, like </{, can be ended by a single `>`
 */
const comment2EndRegex = />/g;
/**
 * The tagEnd regex matches the end of the "inside an opening" tag syntax
 * position. It either matches a `>`, an attribute-like sequence, or the end
 * of the string after a space (attribute-name position ending).
 *
 * See attributes in the HTML spec:
 * https://www.w3.org/TR/html5/syntax.html#elements-attributes
 *
 * " \t\n\f\r" are HTML space characters:
 * https://infra.spec.whatwg.org/#ascii-whitespace
 *
 * So an attribute is:
 *  * The name: any character except a whitespace character, ("), ('), ">",
 *    "=", or "/". Note: this is different from the HTML spec which also excludes control characters.
 *  * Followed by zero or more space characters
 *  * Followed by "="
 *  * Followed by zero or more space characters
 *  * Followed by:
 *    * Any character except space, ('), ("), "<", ">", "=", (`), or
 *    * (") then any non-("), or
 *    * (') then any non-(')
 */
const tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|("|')|))|$)`, 'g');
const ENTIRE_MATCH = 0;
const ATTRIBUTE_NAME = 1;
const SPACES_AND_EQUALS = 2;
const QUOTE_CHAR = 3;
const singleQuoteAttrEndRegex = /'/g;
const doubleQuoteAttrEndRegex = /"/g;
/**
 * Matches the raw text elements.
 *
 * Comments are not parsed within raw text elements, so we need to search their
 * text content for marker strings.
 */
const rawTextElement = /^(?:script|style|textarea|title)$/i;
/** TemplateResult types */
const HTML_RESULT = 1;
const SVG_RESULT = 2;
// TemplatePart types
// IMPORTANT: these must match the values in PartType
const ATTRIBUTE_PART = 1;
const CHILD_PART = 2;
const PROPERTY_PART = 3;
const BOOLEAN_ATTRIBUTE_PART = 4;
const EVENT_PART = 5;
const ELEMENT_PART = 6;
const COMMENT_PART = 7;
/**
 * Generates a template literal tag function that returns a TemplateResult with
 * the given result type.
 */
const tag = (type) => (strings, ...values) => {
    // Warn against templates octal escape sequences
    // We do this here rather than in render so that the warning is closer to the
    // template definition.
    if (DEV_MODE && strings.some((s) => s === undefined)) {
        console.warn('Some template strings are undefined.\n' +
            'This is probably caused by illegal octal escape sequences.');
    }
    return {
        // This property needs to remain unminified.
        ['_$litType$']: type,
        strings,
        values,
    };
};
/**
 * Interprets a template literal as an HTML template that can efficiently
 * render to and update a container.
 *
 * ```ts
 * const header = (title: string) => html`<h1>${title}</h1>`;
 * ```
 *
 * The `html` tag returns a description of the DOM to render as a value. It is
 * lazy, meaning no work is done until the template is rendered. When rendering,
 * if a template comes from the same expression as a previously rendered result,
 * it's efficiently updated instead of replaced.
 */
const html = tag(HTML_RESULT);
/**
 * Interprets a template literal as an SVG fragment that can efficiently
 * render to and update a container.
 *
 * ```ts
 * const rect = svg`<rect width="10" height="10"></rect>`;
 *
 * const myImage = html`
 *   <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
 *     ${rect}
 *   </svg>`;
 * ```
 *
 * The `svg` *tag function* should only be used for SVG fragments, or elements
 * that would be contained **inside** an `<svg>` HTML element. A common error is
 * placing an `<svg>` *element* in a template tagged with the `svg` tag
 * function. The `<svg>` element is an HTML element and should be used within a
 * template tagged with the {@linkcode html} tag function.
 *
 * In LitElement usage, it's invalid to return an SVG fragment from the
 * `render()` method, as the SVG fragment will be contained within the element's
 * shadow root and thus cannot be used within an `<svg>` HTML element.
 */
const svg = tag(SVG_RESULT);
/**
 * A sentinel value that signals that a value was handled by a directive and
 * should not be written to the DOM.
 */
const noChange = Symbol.for('lit-noChange');
/**
 * A sentinel value that signals a ChildPart to fully clear its content.
 *
 * ```ts
 * const button = html`${
 *  user.isAdmin
 *    ? html`<button>DELETE</button>`
 *    : nothing
 * }`;
 * ```
 *
 * Prefer using `nothing` over other falsy values as it provides a consistent
 * behavior between various expression binding contexts.
 *
 * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the
 * same and render no nodes. In attribute expressions, `nothing` _removes_ the
 * attribute, while `undefined` and `null` will render an empty string. In
 * property expressions `nothing` becomes `undefined`.
 */
const nothing = Symbol.for('lit-nothing');
/**
 * The cache of prepared templates, keyed by the tagged TemplateStringsArray
 * and _not_ accounting for the specific template tag used. This means that
 * template tags cannot be dynamic - the must statically be one of html, svg,
 * or attr. This restriction simplifies the cache lookup, which is on the hot
 * path for rendering.
 */
const templateCache = new WeakMap();
const walker = d.createTreeWalker(d, 129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */, null, false);
let sanitizerFactoryInternal = noopSanitizer;
function trustFromTemplateString(tsa, stringFromTSA) {
    // A security check to prevent spoofing of Lit template results.
    // In the future, we may be able to replace this with Array.isTemplateObject,
    // though we might need to make that check inside of the html and svg
    // functions, because precompiled templates don't come in as
    // TemplateStringArray objects.
    if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {
        let message = 'invalid template strings array';
        if (DEV_MODE) {
            message = `
          Internal Error: expected template strings to be an array
          with a 'raw' field. Faking a template strings array by
          calling html or svg like an ordinary function is effectively
          the same as calling unsafeHtml and can lead to major security
          issues, e.g. opening your code up to XSS attacks.
          If you're using the html or svg tagged template functions normally
          and still seeing this error, please file a bug at
          https://github.com/lit/lit/issues/new?template=bug_report.md
          and include information about your build tooling, if any.
        `
                .trim()
                .replace(/\n */g, '\n');
        }
        throw new Error(message);
    }
    return policy !== undefined
        ? policy.createHTML(stringFromTSA)
        : stringFromTSA;
}
/**
 * Returns an HTML string for the given TemplateStringsArray and result type
 * (HTML or SVG), along with the case-sensitive bound attribute names in
 * template order. The HTML contains comment markers denoting the `ChildPart`s
 * and suffixes on bound attributes denoting the `AttributeParts`.
 *
 * @param strings template strings array
 * @param type HTML or SVG
 * @return Array containing `[html, attrNames]` (array returned for terseness,
 *     to avoid object fields since this code is shared with non-minified SSR
 *     code)
 */
const getTemplateHtml = (strings, type) => {
    // Insert makers into the template HTML to represent the position of
    // bindings. The following code scans the template strings to determine the
    // syntactic position of the bindings. They can be in text position, where
    // we insert an HTML comment, attribute value position, where we insert a
    // sentinel string and re-write the attribute name, or inside a tag where
    // we insert the sentinel string.
    const l = strings.length - 1;
    // Stores the case-sensitive bound attribute names in the order of their
    // parts. ElementParts are also reflected in this array as undefined
    // rather than a string, to disambiguate from attribute bindings.
    const attrNames = [];
    let html = type === SVG_RESULT ? '<svg>' : '';
    // When we're inside a raw text tag (not it's text content), the regex
    // will still be tagRegex so we can find attributes, but will switch to
    // this regex when the tag ends.
    let rawTextEndRegex;
    // The current parsing state, represented as a reference to one of the
    // regexes
    let regex = textEndRegex;
    for (let i = 0; i < l; i++) {
        const s = strings[i];
        // The index of the end of the last attribute name. When this is
        // positive at end of a string, it means we're in an attribute value
        // position and need to rewrite the attribute name.
        // We also use a special value of -2 to indicate that we encountered
        // the end of a string in attribute name position.
        let attrNameEndIndex = -1;
        let attrName;
        let lastIndex = 0;
        let match;
        // The conditions in this loop handle the current parse state, and the
        // assignments to the `regex` variable are the state transitions.
        while (lastIndex < s.length) {
            // Make sure we start searching from where we previously left off
            regex.lastIndex = lastIndex;
            match = regex.exec(s);
            if (match === null) {
                break;
            }
            lastIndex = regex.lastIndex;
            if (regex === textEndRegex) {
                if (match[COMMENT_START] === '!--') {
                    regex = commentEndRegex;
                }
                else if (match[COMMENT_START] !== undefined) {
                    // We started a weird comment, like </{
                    regex = comment2EndRegex;
                }
                else if (match[TAG_NAME] !== undefined) {
                    if (rawTextElement.test(match[TAG_NAME])) {
                        // Record if we encounter a raw-text element. We'll switch to
                        // this regex at the end of the tag.
                        rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');
                    }
                    regex = tagEndRegex;
                }
                else if (match[DYNAMIC_TAG_NAME] !== undefined) {
                    if (DEV_MODE) {
                        throw new Error('Bindings in tag names are not supported. Please use static templates instead. ' +
                            'See https://lit.dev/docs/templates/expressions/#static-expressions');
                    }
                    regex = tagEndRegex;
                }
            }
            else if (regex === tagEndRegex) {
                if (match[ENTIRE_MATCH] === '>') {
                    // End of a tag. If we had started a raw-text element, use that
                    // regex
                    regex = rawTextEndRegex !== null && rawTextEndRegex !== void 0 ? rawTextEndRegex : textEndRegex;
                    // We may be ending an unquoted attribute value, so make sure we
                    // clear any pending attrNameEndIndex
                    attrNameEndIndex = -1;
                }
                else if (match[ATTRIBUTE_NAME] === undefined) {
                    // Attribute name position
                    attrNameEndIndex = -2;
                }
                else {
                    attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;
                    attrName = match[ATTRIBUTE_NAME];
                    regex =
                        match[QUOTE_CHAR] === undefined
                            ? tagEndRegex
                            : match[QUOTE_CHAR] === '"'
                                ? doubleQuoteAttrEndRegex
                                : singleQuoteAttrEndRegex;
                }
            }
            else if (regex === doubleQuoteAttrEndRegex ||
                regex === singleQuoteAttrEndRegex) {
                regex = tagEndRegex;
            }
            else if (regex === commentEndRegex || regex === comment2EndRegex) {
                regex = textEndRegex;
            }
            else {
                // Not one of the five state regexes, so it must be the dynamically
                // created raw text regex and we're at the close of that element.
                regex = tagEndRegex;
                rawTextEndRegex = undefined;
            }
        }
        if (DEV_MODE) {
            // If we have a attrNameEndIndex, which indicates that we should
            // rewrite the attribute name, assert that we're in a valid attribute
            // position - either in a tag, or a quoted attribute value.
            console.assert(attrNameEndIndex === -1 ||
                regex === tagEndRegex ||
                regex === singleQuoteAttrEndRegex ||
                regex === doubleQuoteAttrEndRegex, 'unexpected parse state B');
        }
        // We have four cases:
        //  1. We're in text position, and not in a raw text element
        //     (regex === textEndRegex): insert a comment marker.
        //  2. We have a non-negative attrNameEndIndex which means we need to
        //     rewrite the attribute name to add a bound attribute suffix.
        //  3. We're at the non-first binding in a multi-binding attribute, use a
        //     plain marker.
        //  4. We're somewhere else inside the tag. If we're in attribute name
        //     position (attrNameEndIndex === -2), add a sequential suffix to
        //     generate a unique attribute name.
        // Detect a binding next to self-closing tag end and insert a space to
        // separate the marker from the tag end:
        const end = regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';
        html +=
            regex === textEndRegex
                ? s + nodeMarker
                : attrNameEndIndex >= 0
                    ? (attrNames.push(attrName),
                        s.slice(0, attrNameEndIndex) +
                            boundAttributeSuffix +
                            s.slice(attrNameEndIndex)) +
                        marker +
                        end
                    : s +
                        marker +
                        (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);
    }
    const htmlResult = html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');
    // Returned as an array for terseness
    return [trustFromTemplateString(strings, htmlResult), attrNames];
};
class Template {
    constructor(
    // This property needs to remain unminified.
    { strings, ['_$litType$']: type }, options) {
        this.parts = [];
        let node;
        let nodeIndex = 0;
        let attrNameIndex = 0;
        const partCount = strings.length - 1;
        const parts = this.parts;
        // Create template element
        const [html, attrNames] = getTemplateHtml(strings, type);
        this.el = Template.createElement(html, options);
        walker.currentNode = this.el.content;
        // Reparent SVG nodes into template root
        if (type === SVG_RESULT) {
            const content = this.el.content;
            const svgElement = content.firstChild;
            svgElement.remove();
            content.append(...svgElement.childNodes);
        }
        // Walk the template to find binding markers and create TemplateParts
        while ((node = walker.nextNode()) !== null && parts.length < partCount) {
            if (node.nodeType === 1) {
                if (DEV_MODE) {
                    const tag = node.localName;
                    // Warn if `textarea` includes an expression and throw if `template`
                    // does since these are not supported. We do this by checking
                    // innerHTML for anything that looks like a marker. This catches
                    // cases like bindings in textarea there markers turn into text nodes.
                    if (/^(?:textarea|template)$/i.test(tag) &&
                        node.innerHTML.includes(marker)) {
                        const m = `Expressions are not supported inside \`${tag}\` ` +
                            `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +
                            `information.`;
                        if (tag === 'template') {
                            throw new Error(m);
                        }
                        else
                            issueWarning('', m);
                    }
                }
                // TODO (justinfagnani): for attempted dynamic tag names, we don't
                // increment the bindingIndex, and it'll be off by 1 in the element
                // and off by two after it.
                if (node.hasAttributes()) {
                    // We defer removing bound attributes because on IE we might not be
                    // iterating attributes in their template order, and would sometimes
                    // remove an attribute that we still need to create a part for.
                    const attrsToRemove = [];
                    for (const name of node.getAttributeNames()) {
                        // `name` is the name of the attribute we're iterating over, but not
                        // _necessarily_ the name of the attribute we will create a part
                        // for. They can be different in browsers that don't iterate on
                        // attributes in source order. In that case the attrNames array
                        // contains the attribute name we'll process next. We only need the
                        // attribute name here to know if we should process a bound attribute
                        // on this element.
                        if (name.endsWith(boundAttributeSuffix) ||
                            name.startsWith(marker)) {
                            const realName = attrNames[attrNameIndex++];
                            attrsToRemove.push(name);
                            if (realName !== undefined) {
                                // Lowercase for case-sensitive SVG attributes like viewBox
                                const value = node.getAttribute(realName.toLowerCase() + boundAttributeSuffix);
                                const statics = value.split(marker);
                                const m = /([.?@])?(.*)/.exec(realName);
                                parts.push({
                                    type: ATTRIBUTE_PART,
                                    index: nodeIndex,
                                    name: m[2],
                                    strings: statics,
                                    ctor: m[1] === '.'
                                        ? PropertyPart
                                        : m[1] === '?'
                                            ? BooleanAttributePart
                                            : m[1] === '@'
                                                ? EventPart
                                                : AttributePart,
                                });
                            }
                            else {
                                parts.push({
                                    type: ELEMENT_PART,
                                    index: nodeIndex,
                                });
                            }
                        }
                    }
                    for (const name of attrsToRemove) {
                        node.removeAttribute(name);
                    }
                }
                // TODO (justinfagnani): benchmark the regex against testing for each
                // of the 3 raw text element names.
                if (rawTextElement.test(node.tagName)) {
                    // For raw text elements we need to split the text content on
                    // markers, create a Text node for each segment, and create
                    // a TemplatePart for each marker.
                    const strings = node.textContent.split(marker);
                    const lastIndex = strings.length - 1;
                    if (lastIndex > 0) {
                        node.textContent = trustedTypes
                            ? trustedTypes.emptyScript
                            : '';
                        // Generate a new text node for each literal section
                        // These nodes are also used as the markers for node parts
                        // We can't use empty text nodes as markers because they're
                        // normalized when cloning in IE (could simplify when
                        // IE is no longer supported)
                        for (let i = 0; i < lastIndex; i++) {
                            node.append(strings[i], createMarker());
                            // Walk past the marker node we just added
                            walker.nextNode();
                            parts.push({ type: CHILD_PART, index: ++nodeIndex });
                        }
                        // Note because this marker is added after the walker's current
                        // node, it will be walked to in the outer loop (and ignored), so
                        // we don't need to adjust nodeIndex here
                        node.append(strings[lastIndex], createMarker());
                    }
                }
            }
            else if (node.nodeType === 8) {
                const data = node.data;
                if (data === markerMatch) {
                    parts.push({ type: CHILD_PART, index: nodeIndex });
                }
                else {
                    let i = -1;
                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {
                        // Comment node has a binding marker inside, make an inactive part
                        // The binding won't work, but subsequent bindings will
                        parts.push({ type: COMMENT_PART, index: nodeIndex });
                        // Move to the end of the match
                        i += marker.length - 1;
                    }
                }
            }
            nodeIndex++;
        }
        // We could set walker.currentNode to another node here to prevent a memory
        // leak, but every time we prepare a template, we immediately render it
        // and re-use the walker in new TemplateInstance._clone().
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: 'template prep',
            template: this,
            clonableTemplate: this.el,
            parts: this.parts,
            strings,
        });
    }
    // Overridden via `litHtmlPolyfillSupport` to provide platform support.
    /** @nocollapse */
    static createElement(html, _options) {
        const el = d.createElement('template');
        el.innerHTML = html;
        return el;
    }
}
function resolveDirective(part, value, parent = part, attributeIndex) {
    var _a, _b, _c;
    var _d;
    // Bail early if the value is explicitly noChange. Note, this means any
    // nested directive is still attached and is not run.
    if (value === noChange) {
        return value;
    }
    let currentDirective = attributeIndex !== undefined
        ? (_a = parent.__directives) === null || _a === void 0 ? void 0 : _a[attributeIndex]
        : parent.__directive;
    const nextDirectiveConstructor = isPrimitive(value)
        ? undefined
        : // This property needs to remain unminified.
            value['_$litDirective$'];
    if ((currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective.constructor) !== nextDirectiveConstructor) {
        // This property needs to remain unminified.
        (_b = currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective['_$notifyDirectiveConnectionChanged']) === null || _b === void 0 ? void 0 : _b.call(currentDirective, false);
        if (nextDirectiveConstructor === undefined) {
            currentDirective = undefined;
        }
        else {
            currentDirective = new nextDirectiveConstructor(part);
            currentDirective._$initialize(part, parent, attributeIndex);
        }
        if (attributeIndex !== undefined) {
            ((_c = (_d = parent).__directives) !== null && _c !== void 0 ? _c : (_d.__directives = []))[attributeIndex] =
                currentDirective;
        }
        else {
            parent.__directive = currentDirective;
        }
    }
    if (currentDirective !== undefined) {
        value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);
    }
    return value;
}
/**
 * An updateable instance of a Template. Holds references to the Parts used to
 * update the template instance.
 */
class TemplateInstance {
    constructor(template, parent) {
        this._$parts = [];
        /** @internal */
        this._$disconnectableChildren = undefined;
        this._$template = template;
        this._$parent = parent;
    }
    // Called by ChildPart parentNode getter
    get parentNode() {
        return this._$parent.parentNode;
    }
    // See comment in Disconnectable interface for why this is a getter
    get _$isConnected() {
        return this._$parent._$isConnected;
    }
    // This method is separate from the constructor because we need to return a
    // DocumentFragment and we don't want to hold onto it with an instance field.
    _clone(options) {
        var _a;
        const { el: { content }, parts: parts, } = this._$template;
        const fragment = ((_a = options === null || options === void 0 ? void 0 : options.creationScope) !== null && _a !== void 0 ? _a : d).importNode(content, true);
        walker.currentNode = fragment;
        let node = walker.nextNode();
        let nodeIndex = 0;
        let partIndex = 0;
        let templatePart = parts[0];
        while (templatePart !== undefined) {
            if (nodeIndex === templatePart.index) {
                let part;
                if (templatePart.type === CHILD_PART) {
                    part = new ChildPart(node, node.nextSibling, this, options);
                }
                else if (templatePart.type === ATTRIBUTE_PART) {
                    part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);
                }
                else if (templatePart.type === ELEMENT_PART) {
                    part = new ElementPart(node, this, options);
                }
                this._$parts.push(part);
                templatePart = parts[++partIndex];
            }
            if (nodeIndex !== (templatePart === null || templatePart === void 0 ? void 0 : templatePart.index)) {
                node = walker.nextNode();
                nodeIndex++;
            }
        }
        // We need to set the currentNode away from the cloned tree so that we
        // don't hold onto the tree even if the tree is detached and should be
        // freed.
        walker.currentNode = d;
        return fragment;
    }
    _update(values) {
        let i = 0;
        for (const part of this._$parts) {
            if (part !== undefined) {
                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                    kind: 'set part',
                    part,
                    value: values[i],
                    valueIndex: i,
                    values,
                    templateInstance: this,
                });
                if (part.strings !== undefined) {
                    part._$setValue(values, part, i);
                    // The number of values the part consumes is part.strings.length - 1
                    // since values are in between template spans. We increment i by 1
                    // later in the loop, so increment it by part.strings.length - 2 here
                    i += part.strings.length - 2;
                }
                else {
                    part._$setValue(values[i]);
                }
            }
            i++;
        }
    }
}
class ChildPart {
    constructor(startNode, endNode, parent, options) {
        var _a;
        this.type = CHILD_PART;
        this._$committedValue = nothing;
        // The following fields will be patched onto ChildParts when required by
        // AsyncDirective
        /** @internal */
        this._$disconnectableChildren = undefined;
        this._$startNode = startNode;
        this._$endNode = endNode;
        this._$parent = parent;
        this.options = options;
        // Note __isConnected is only ever accessed on RootParts (i.e. when there is
        // no _$parent); the value on a non-root-part is "don't care", but checking
        // for parent would be more code
        this.__isConnected = (_a = options === null || options === void 0 ? void 0 : options.isConnected) !== null && _a !== void 0 ? _a : true;
        if (ENABLE_EXTRA_SECURITY_HOOKS) {
            // Explicitly initialize for consistent class shape.
            this._textSanitizer = undefined;
        }
    }
    // See comment in Disconnectable interface for why this is a getter
    get _$isConnected() {
        var _a, _b;
        // ChildParts that are not at the root should always be created with a
        // parent; only RootChildNode's won't, so they return the local isConnected
        // state
        return (_b = (_a = this._$parent) === null || _a === void 0 ? void 0 : _a._$isConnected) !== null && _b !== void 0 ? _b : this.__isConnected;
    }
    /**
     * The parent node into which the part renders its content.
     *
     * A ChildPart's content consists of a range of adjacent child nodes of
     * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and
     * `.endNode`).
     *
     * - If both `.startNode` and `.endNode` are non-null, then the part's content
     * consists of all siblings between `.startNode` and `.endNode`, exclusively.
     *
     * - If `.startNode` is non-null but `.endNode` is null, then the part's
     * content consists of all siblings following `.startNode`, up to and
     * including the last child of `.parentNode`. If `.endNode` is non-null, then
     * `.startNode` will always be non-null.
     *
     * - If both `.endNode` and `.startNode` are null, then the part's content
     * consists of all child nodes of `.parentNode`.
     */
    get parentNode() {
        let parentNode = wrap(this._$startNode).parentNode;
        const parent = this._$parent;
        if (parent !== undefined &&
            (parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeType) === 11 /* Node.DOCUMENT_FRAGMENT */) {
            // If the parentNode is a DocumentFragment, it may be because the DOM is
            // still in the cloned fragment during initial render; if so, get the real
            // parentNode the part will be committed into by asking the parent.
            parentNode = parent.parentNode;
        }
        return parentNode;
    }
    /**
     * The part's leading marker node, if any. See `.parentNode` for more
     * information.
     */
    get startNode() {
        return this._$startNode;
    }
    /**
     * The part's trailing marker node, if any. See `.parentNode` for more
     * information.
     */
    get endNode() {
        return this._$endNode;
    }
    _$setValue(value, directiveParent = this) {
        var _a;
        if (DEV_MODE && this.parentNode === null) {
            throw new Error(`This \`ChildPart\` has no \`parentNode\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \`innerHTML\` or \`textContent\` can do this.`);
        }
        value = resolveDirective(this, value, directiveParent);
        if (isPrimitive(value)) {
            // Non-rendering child values. It's important that these do not render
            // empty text nodes to avoid issues with preventing default <slot>
            // fallback content.
            if (value === nothing || value == null || value === '') {
                if (this._$committedValue !== nothing) {
                    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                        kind: 'commit nothing to child',
                        start: this._$startNode,
                        end: this._$endNode,
                        parent: this._$parent,
                        options: this.options,
                    });
                    this._$clear();
                }
                this._$committedValue = nothing;
            }
            else if (value !== this._$committedValue && value !== noChange) {
                this._commitText(value);
            }
            // This property needs to remain unminified.
        }
        else if (value['_$litType$'] !== undefined) {
            this._commitTemplateResult(value);
        }
        else if (value.nodeType !== undefined) {
            if (DEV_MODE && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.host) === value) {
                this._commitText(`[probable mistake: rendered a template's host in itself ` +
                    `(commonly caused by writing \${this} in a template]`);
                console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);
                return;
            }
            this._commitNode(value);
        }
        else if (isIterable(value)) {
            this._commitIterable(value);
        }
        else {
            // Fallback, will render the string representation
            this._commitText(value);
        }
    }
    _insert(node) {
        return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);
    }
    _commitNode(value) {
        var _a;
        if (this._$committedValue !== value) {
            this._$clear();
            if (ENABLE_EXTRA_SECURITY_HOOKS &&
                sanitizerFactoryInternal !== noopSanitizer) {
                const parentNodeName = (_a = this._$startNode.parentNode) === null || _a === void 0 ? void 0 : _a.nodeName;
                if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {
                    let message = 'Forbidden';
                    if (DEV_MODE) {
                        if (parentNodeName === 'STYLE') {
                            message =
                                `Lit does not support binding inside style nodes. ` +
                                    `This is a security risk, as style injection attacks can ` +
                                    `exfiltrate data and spoof UIs. ` +
                                    `Consider instead using css\`...\` literals ` +
                                    `to compose styles, and make do dynamic styling with ` +
                                    `css custom properties, ::parts, <slot>s, ` +
                                    `and by mutating the DOM rather than stylesheets.`;
                        }
                        else {
                            message =
                                `Lit does not support binding inside script nodes. ` +
                                    `This is a security risk, as it could allow arbitrary ` +
                                    `code execution.`;
                        }
                    }
                    throw new Error(message);
                }
            }
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'commit node',
                start: this._$startNode,
                parent: this._$parent,
                value: value,
                options: this.options,
            });
            this._$committedValue = this._insert(value);
        }
    }
    _commitText(value) {
        // If the committed value is a primitive it means we called _commitText on
        // the previous render, and we know that this._$startNode.nextSibling is a
        // Text node. We can now just replace the text content (.data) of the node.
        if (this._$committedValue !== nothing &&
            isPrimitive(this._$committedValue)) {
            const node = wrap(this._$startNode).nextSibling;
            if (ENABLE_EXTRA_SECURITY_HOOKS) {
                if (this._textSanitizer === undefined) {
                    this._textSanitizer = createSanitizer(node, 'data', 'property');
                }
                value = this._textSanitizer(value);
            }
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'commit text',
                node,
                value,
                options: this.options,
            });
            node.data = value;
        }
        else {
            if (ENABLE_EXTRA_SECURITY_HOOKS) {
                const textNode = d.createTextNode('');
                this._commitNode(textNode);
                // When setting text content, for security purposes it matters a lot
                // what the parent is. For example, <style> and <script> need to be
                // handled with care, while <span> does not. So first we need to put a
                // text node into the document, then we can sanitize its content.
                if (this._textSanitizer === undefined) {
                    this._textSanitizer = createSanitizer(textNode, 'data', 'property');
                }
                value = this._textSanitizer(value);
                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                    kind: 'commit text',
                    node: textNode,
                    value,
                    options: this.options,
                });
                textNode.data = value;
            }
            else {
                this._commitNode(d.createTextNode(value));
                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                    kind: 'commit text',
                    node: wrap(this._$startNode).nextSibling,
                    value,
                    options: this.options,
                });
            }
        }
        this._$committedValue = value;
    }
    _commitTemplateResult(result) {
        var _a;
        // This property needs to remain unminified.
        const { values, ['_$litType$']: type } = result;
        // If $litType$ is a number, result is a plain TemplateResult and we get
        // the template from the template cache. If not, result is a
        // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need
        // to create the <template> element the first time we see it.
        const template = typeof type === 'number'
            ? this._$getTemplate(result)
            : (type.el === undefined &&
                (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)),
                type);
        if (((_a = this._$committedValue) === null || _a === void 0 ? void 0 : _a._$template) === template) {
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'template updating',
                template,
                instance: this._$committedValue,
                parts: this._$committedValue._$parts,
                options: this.options,
                values,
            });
            this._$committedValue._update(values);
        }
        else {
            const instance = new TemplateInstance(template, this);
            const fragment = instance._clone(this.options);
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'template instantiated',
                template,
                instance,
                parts: instance._$parts,
                options: this.options,
                fragment,
                values,
            });
            instance._update(values);
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'template instantiated and updated',
                template,
                instance,
                parts: instance._$parts,
                options: this.options,
                fragment,
                values,
            });
            this._commitNode(fragment);
            this._$committedValue = instance;
        }
    }
    // Overridden via `litHtmlPolyfillSupport` to provide platform support.
    /** @internal */
    _$getTemplate(result) {
        let template = templateCache.get(result.strings);
        if (template === undefined) {
            templateCache.set(result.strings, (template = new Template(result)));
        }
        return template;
    }
    _commitIterable(value) {
        // For an Iterable, we create a new InstancePart per item, then set its
        // value to the item. This is a little bit of overhead for every item in
        // an Iterable, but it lets us recurse easily and efficiently update Arrays
        // of TemplateResults that will be commonly returned from expressions like:
        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.
        // If value is an array, then the previous render was of an
        // iterable and value will contain the ChildParts from the previous
        // render. If value is not an array, clear this part and make a new
        // array for ChildParts.
        if (!isArray(this._$committedValue)) {
            this._$committedValue = [];
            this._$clear();
        }
        // Lets us keep track of how many items we stamped so we can clear leftover
        // items from a previous render
        const itemParts = this._$committedValue;
        let partIndex = 0;
        let itemPart;
        for (const item of value) {
            if (partIndex === itemParts.length) {
                // If no existing part, create a new one
                // TODO (justinfagnani): test perf impact of always creating two parts
                // instead of sharing parts between nodes
                // https://github.com/lit/lit/issues/1266
                itemParts.push((itemPart = new ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options)));
            }
            else {
                // Reuse an existing part
                itemPart = itemParts[partIndex];
            }
            itemPart._$setValue(item);
            partIndex++;
        }
        if (partIndex < itemParts.length) {
            // itemParts always have end nodes
            this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);
            // Truncate the parts array so _value reflects the current state
            itemParts.length = partIndex;
        }
    }
    /**
     * Removes the nodes contained within this Part from the DOM.
     *
     * @param start Start node to clear from, for clearing a subset of the part's
     *     DOM (used when truncating iterables)
     * @param from  When `start` is specified, the index within the iterable from
     *     which ChildParts are being removed, used for disconnecting directives in
     *     those Parts.
     *
     * @internal
     */
    _$clear(start = wrap(this._$startNode).nextSibling, from) {
        var _a;
        (_a = this._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(this, false, true, from);
        while (start && start !== this._$endNode) {
            const n = wrap(start).nextSibling;
            wrap(start).remove();
            start = n;
        }
    }
    /**
     * Implementation of RootPart's `isConnected`. Note that this metod
     * should only be called on `RootPart`s (the `ChildPart` returned from a
     * top-level `render()` call). It has no effect on non-root ChildParts.
     * @param isConnected Whether to set
     * @internal
     */
    setConnected(isConnected) {
        var _a;
        if (this._$parent === undefined) {
            this.__isConnected = isConnected;
            (_a = this._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(this, isConnected);
        }
        else if (DEV_MODE) {
            throw new Error('part.setConnected() may only be called on a ' +
                'RootPart returned from render().');
        }
    }
}
class AttributePart {
    constructor(element, name, strings, parent, options) {
        this.type = ATTRIBUTE_PART;
        /** @internal */
        this._$committedValue = nothing;
        /** @internal */
        this._$disconnectableChildren = undefined;
        this.element = element;
        this.name = name;
        this._$parent = parent;
        this.options = options;
        if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {
            this._$committedValue = new Array(strings.length - 1).fill(new String());
            this.strings = strings;
        }
        else {
            this._$committedValue = nothing;
        }
        if (ENABLE_EXTRA_SECURITY_HOOKS) {
            this._sanitizer = undefined;
        }
    }
    get tagName() {
        return this.element.tagName;
    }
    // See comment in Disconnectable interface for why this is a getter
    get _$isConnected() {
        return this._$parent._$isConnected;
    }
    /**
     * Sets the value of this part by resolving the value from possibly multiple
     * values and static strings and committing it to the DOM.
     * If this part is single-valued, `this._strings` will be undefined, and the
     * method will be called with a single value argument. If this part is
     * multi-value, `this._strings` will be defined, and the method is called
     * with the value array of the part's owning TemplateInstance, and an offset
     * into the value array from which the values should be read.
     * This method is overloaded this way to eliminate short-lived array slices
     * of the template instance values, and allow a fast-path for single-valued
     * parts.
     *
     * @param value The part value, or an array of values for multi-valued parts
     * @param valueIndex the index to start reading values from. `undefined` for
     *   single-valued parts
     * @param noCommit causes the part to not commit its value to the DOM. Used
     *   in hydration to prime attribute parts with their first-rendered value,
     *   but not set the attribute, and in SSR to no-op the DOM operation and
     *   capture the value for serialization.
     *
     * @internal
     */
    _$setValue(value, directiveParent = this, valueIndex, noCommit) {
        const strings = this.strings;
        // Whether any of the values has changed, for dirty-checking
        let change = false;
        if (strings === undefined) {
            // Single-value binding case
            value = resolveDirective(this, value, directiveParent, 0);
            change =
                !isPrimitive(value) ||
                    (value !== this._$committedValue && value !== noChange);
            if (change) {
                this._$committedValue = value;
            }
        }
        else {
            // Interpolation case
            const values = value;
            value = strings[0];
            let i, v;
            for (i = 0; i < strings.length - 1; i++) {
                v = resolveDirective(this, values[valueIndex + i], directiveParent, i);
                if (v === noChange) {
                    // If the user-provided value is `noChange`, use the previous value
                    v = this._$committedValue[i];
                }
                change || (change = !isPrimitive(v) || v !== this._$committedValue[i]);
                if (v === nothing) {
                    value = nothing;
                }
                else if (value !== nothing) {
                    value += (v !== null && v !== void 0 ? v : '') + strings[i + 1];
                }
                // We always record each value, even if one is `nothing`, for future
                // change detection.
                this._$committedValue[i] = v;
            }
        }
        if (change && !noCommit) {
            this._commitValue(value);
        }
    }
    /** @internal */
    _commitValue(value) {
        if (value === nothing) {
            wrap(this.element).removeAttribute(this.name);
        }
        else {
            if (ENABLE_EXTRA_SECURITY_HOOKS) {
                if (this._sanitizer === undefined) {
                    this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'attribute');
                }
                value = this._sanitizer(value !== null && value !== void 0 ? value : '');
            }
            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
                kind: 'commit attribute',
                element: this.element,
                name: this.name,
                value,
                options: this.options,
            });
            wrap(this.element).setAttribute(this.name, (value !== null && value !== void 0 ? value : ''));
        }
    }
}
class PropertyPart extends AttributePart {
    constructor() {
        super(...arguments);
        this.type = PROPERTY_PART;
    }
    /** @internal */
    _commitValue(value) {
        if (ENABLE_EXTRA_SECURITY_HOOKS) {
            if (this._sanitizer === undefined) {
                this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'property');
            }
            value = this._sanitizer(value);
        }
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: 'commit property',
            element: this.element,
            name: this.name,
            value,
            options: this.options,
        });
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.element[this.name] = value === nothing ? undefined : value;
    }
}
// Temporary workaround for https://crbug.com/993268
// Currently, any attribute starting with "on" is considered to be a
// TrustedScript source. Such boolean attributes must be set to the equivalent
// trusted emptyScript value.
const emptyStringForBooleanAttribute = trustedTypes
    ? trustedTypes.emptyScript
    : '';
class BooleanAttributePart extends AttributePart {
    constructor() {
        super(...arguments);
        this.type = BOOLEAN_ATTRIBUTE_PART;
    }
    /** @internal */
    _commitValue(value) {
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: 'commit boolean attribute',
            element: this.element,
            name: this.name,
            value: !!(value && value !== nothing),
            options: this.options,
        });
        if (value && value !== nothing) {
            wrap(this.element).setAttribute(this.name, emptyStringForBooleanAttribute);
        }
        else {
            wrap(this.element).removeAttribute(this.name);
        }
    }
}
class EventPart extends AttributePart {
    constructor(element, name, strings, parent, options) {
        super(element, name, strings, parent, options);
        this.type = EVENT_PART;
        if (DEV_MODE && this.strings !== undefined) {
            throw new Error(`A \`<${element.localName}>\` has a \`@${name}=...\` listener with ` +
                'invalid content. Event listeners in templates must have exactly ' +
                'one expression and no surrounding text.');
        }
    }
    // EventPart does not use the base _$setValue/_resolveValue implementation
    // since the dirty checking is more complex
    /** @internal */
    _$setValue(newListener, directiveParent = this) {
        var _a;
        newListener =
            (_a = resolveDirective(this, newListener, directiveParent, 0)) !== null && _a !== void 0 ? _a : nothing;
        if (newListener === noChange) {
            return;
        }
        const oldListener = this._$committedValue;
        // If the new value is nothing or any options change we have to remove the
        // part as a listener.
        const shouldRemoveListener = (newListener === nothing && oldListener !== nothing) ||
            newListener.capture !==
                oldListener.capture ||
            newListener.once !==
                oldListener.once ||
            newListener.passive !==
                oldListener.passive;
        // If the new value is not nothing and we removed the listener, we have
        // to add the part as a listener.
        const shouldAddListener = newListener !== nothing &&
            (oldListener === nothing || shouldRemoveListener);
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: 'commit event listener',
            element: this.element,
            name: this.name,
            value: newListener,
            options: this.options,
            removeListener: shouldRemoveListener,
            addListener: shouldAddListener,
            oldListener,
        });
        if (shouldRemoveListener) {
            this.element.removeEventListener(this.name, this, oldListener);
        }
        if (shouldAddListener) {
            // Beware: IE11 and Chrome 41 don't like using the listener as the
            // options object. Figure out how to deal w/ this in IE11 - maybe
            // patch addEventListener?
            this.element.addEventListener(this.name, this, newListener);
        }
        this._$committedValue = newListener;
    }
    handleEvent(event) {
        var _a, _b;
        if (typeof this._$committedValue === 'function') {
            this._$committedValue.call((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : this.element, event);
        }
        else {
            this._$committedValue.handleEvent(event);
        }
    }
}
class ElementPart {
    constructor(element, parent, options) {
        this.element = element;
        this.type = ELEMENT_PART;
        /** @internal */
        this._$disconnectableChildren = undefined;
        this._$parent = parent;
        this.options = options;
    }
    // See comment in Disconnectable interface for why this is a getter
    get _$isConnected() {
        return this._$parent._$isConnected;
    }
    _$setValue(value) {
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: 'commit to element binding',
            element: this.element,
            value,
            options: this.options,
        });
        resolveDirective(this, value);
    }
}
/**
 * END USERS SHOULD NOT RELY ON THIS OBJECT.
 *
 * Private exports for use by other Lit packages, not intended for use by
 * external users.
 *
 * We currently do not make a mangled rollup build of the lit-ssr code. In order
 * to keep a number of (otherwise private) top-level exports  mangled in the
 * client side code, we export a _$LH object containing those members (or
 * helper methods for accessing private fields of those members), and then
 * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the
 * client-side code is being used in `dev` mode or `prod` mode.
 *
 * This has a unique name, to disambiguate it from private exports in
 * lit-element, which re-exports all of lit-html.
 *
 * @private
 */
const _$LH = {
    // Used in lit-ssr
    _boundAttributeSuffix: boundAttributeSuffix,
    _marker: marker,
    _markerMatch: markerMatch,
    _HTML_RESULT: HTML_RESULT,
    _getTemplateHtml: getTemplateHtml,
    // Used in tests and private-ssr-support
    _TemplateInstance: TemplateInstance,
    _isIterable: isIterable,
    _resolveDirective: resolveDirective,
    _ChildPart: ChildPart,
    _AttributePart: AttributePart,
    _BooleanAttributePart: BooleanAttributePart,
    _EventPart: EventPart,
    _PropertyPart: PropertyPart,
    _ElementPart: ElementPart,
};
// Apply polyfills if available
const polyfillSupport = DEV_MODE
    ? global.litHtmlPolyfillSupportDevMode
    : global.litHtmlPolyfillSupport;
polyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport(Template, ChildPart);
// IMPORTANT: do not change the property name or the assignment expression.
// This line will be used in regexes to search for lit-html usage.
((_d = global.litHtmlVersions) !== null && _d !== void 0 ? _d : (global.litHtmlVersions = [])).push('2.8.0');
if (DEV_MODE && global.litHtmlVersions.length > 1) {
    issueWarning('multiple-versions', `Multiple versions of Lit loaded. ` +
        `Loading multiple versions is not recommended.`);
}
/**
 * Renders a value, usually a lit-html TemplateResult, to the container.
 *
 * This example renders the text "Hello, Zoe!" inside a paragraph tag, appending
 * it to the container `document.body`.
 *
 * ```js
 * import {html, render} from 'lit';
 *
 * const name = "Zoe";
 * render(html`<p>Hello, ${name}!</p>`, document.body);
 * ```
 *
 * @param value Any [renderable
 *   value](https://lit.dev/docs/templates/expressions/#child-expressions),
 *   typically a {@linkcode TemplateResult} created by evaluating a template tag
 *   like {@linkcode html} or {@linkcode svg}.
 * @param container A DOM container to render to. The first render will append
 *   the rendered value to the container, and subsequent renders will
 *   efficiently update the rendered value if the same result type was
 *   previously rendered there.
 * @param options See {@linkcode RenderOptions} for options documentation.
 * @see
 * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}
 */
const render = (value, container, options) => {
    var _a, _b;
    if (DEV_MODE && container == null) {
        // Give a clearer error message than
        //     Uncaught TypeError: Cannot read properties of null (reading
        //     '_$litPart$')
        // which reads like an internal Lit error.
        throw new TypeError(`The container to render into may not be ${container}`);
    }
    const renderId = DEV_MODE ? debugLogRenderId++ : 0;
    const partOwnerNode = (_a = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _a !== void 0 ? _a : container;
    // This property needs to remain unminified.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let part = partOwnerNode['_$litPart$'];
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: 'begin render',
        id: renderId,
        value,
        container,
        options,
        part,
    });
    if (part === undefined) {
        const endNode = (_b = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _b !== void 0 ? _b : null;
        // This property needs to remain unminified.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        partOwnerNode['_$litPart$'] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, undefined, options !== null && options !== void 0 ? options : {});
    }
    part._$setValue(value);
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: 'end render',
        id: renderId,
        value,
        container,
        options,
        part,
    });
    return part;
};
if (ENABLE_EXTRA_SECURITY_HOOKS) {
    render.setSanitizer = setSanitizer;
    render.createSanitizer = createSanitizer;
    if (DEV_MODE) {
        render._testOnlyClearSanitizerFactoryDoNotCallOrElse =
            _testOnlyClearSanitizerFactoryDoNotCallOrElse;
    }
}


/***/ }),

/***/ "./node_modules/lit-html/development/static.js":
/*!*****************************************************!*\
  !*** ./node_modules/lit-html/development/static.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   html: () => (/* binding */ html),
/* harmony export */   literal: () => (/* binding */ literal),
/* harmony export */   svg: () => (/* binding */ svg),
/* harmony export */   unsafeStatic: () => (/* binding */ unsafeStatic),
/* harmony export */   withStatic: () => (/* binding */ withStatic)
/* harmony export */ });
/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lit-html.js */ "./node_modules/lit-html/development/lit-html.js");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
// Any new exports need to be added to the export statement in
// `packages/lit/src/index.all.ts`.

/**
 * Prevents JSON injection attacks.
 *
 * The goals of this brand:
 *   1) fast to check
 *   2) code is small on the wire
 *   3) multiple versions of Lit in a single page will all produce mutually
 *      interoperable StaticValues
 *   4) normal JSON.parse (without an unusual reviver) can not produce a
 *      StaticValue
 *
 * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but
 * we don't care about the key, so we break ties via (2) and use the empty
 * string.
 */
const brand = Symbol.for('');
/** Safely extracts the string part of a StaticValue. */
const unwrapStaticValue = (value) => {
    if ((value === null || value === void 0 ? void 0 : value.r) !== brand) {
        return undefined;
    }
    return value === null || value === void 0 ? void 0 : value['_$litStatic$'];
};
/**
 * Wraps a string so that it behaves like part of the static template
 * strings instead of a dynamic value.
 *
 * Users must take care to ensure that adding the static string to the template
 * results in well-formed HTML, or else templates may break unexpectedly.
 *
 * Note that this function is unsafe to use on untrusted content, as it will be
 * directly parsed into HTML. Do not pass user input to this function
 * without sanitizing it.
 *
 * Static values can be changed, but they will cause a complete re-render
 * since they effectively create a new template.
 */
const unsafeStatic = (value) => ({
    ['_$litStatic$']: value,
    r: brand,
});
const textFromStatic = (value) => {
    if (value['_$litStatic$'] !== undefined) {
        return value['_$litStatic$'];
    }
    else {
        throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but
            take care to ensure page security.`);
    }
};
/**
 * Tags a string literal so that it behaves like part of the static template
 * strings instead of a dynamic value.
 *
 * The only values that may be used in template expressions are other tagged
 * `literal` results or `unsafeStatic` values (note that untrusted content
 * should never be passed to `unsafeStatic`).
 *
 * Users must take care to ensure that adding the static string to the template
 * results in well-formed HTML, or else templates may break unexpectedly.
 *
 * Static values can be changed, but they will cause a complete re-render since
 * they effectively create a new template.
 */
const literal = (strings, ...values) => ({
    ['_$litStatic$']: values.reduce((acc, v, idx) => acc + textFromStatic(v) + strings[idx + 1], strings[0]),
    r: brand,
});
const stringsCache = new Map();
/**
 * Wraps a lit-html template tag (`html` or `svg`) to add static value support.
 */
const withStatic = (coreTag) => (strings, ...values) => {
    const l = values.length;
    let staticValue;
    let dynamicValue;
    const staticStrings = [];
    const dynamicValues = [];
    let i = 0;
    let hasStatics = false;
    let s;
    while (i < l) {
        s = strings[i];
        // Collect any unsafeStatic values, and their following template strings
        // so that we treat a run of template strings and unsafe static values as
        // a single template string.
        while (i < l &&
            ((dynamicValue = values[i]),
                (staticValue = unwrapStaticValue(dynamicValue))) !== undefined) {
            s += staticValue + strings[++i];
            hasStatics = true;
        }
        // If the last value is static, we don't need to push it.
        if (i !== l) {
            dynamicValues.push(dynamicValue);
        }
        staticStrings.push(s);
        i++;
    }
    // If the last value isn't static (which would have consumed the last
    // string), then we need to add the last string.
    if (i === l) {
        staticStrings.push(strings[l]);
    }
    if (hasStatics) {
        const key = staticStrings.join('$$lit$$');
        strings = stringsCache.get(key);
        if (strings === undefined) {
            // Beware: in general this pattern is unsafe, and doing so may bypass
            // lit's security checks and allow an attacker to execute arbitrary
            // code and inject arbitrary content.
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            staticStrings.raw = staticStrings;
            stringsCache.set(key, (strings = staticStrings));
        }
        values = dynamicValues;
    }
    return coreTag(strings, ...values);
};
/**
 * Interprets a template literal as an HTML template that can efficiently
 * render to and update a container.
 *
 * Includes static value support from `lit-html/static.js`.
 */
const html = withStatic(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.html);
/**
 * Interprets a template literal as an SVG template that can efficiently
 * render to and update a container.
 *
 * Includes static value support from `lit-html/static.js`.
 */
const svg = withStatic(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.svg);


/***/ }),

/***/ "./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inheritsLoose)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/mini-create-react-context/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/extends.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inheritsLoose)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _objectWithoutPropertiesLoose)
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

/***/ }),

/***/ "./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/tiny-invariant/dist/esm/tiny-invariant.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/esm/tiny-invariant.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ invariant)
/* harmony export */ });
var isProduction = "development" === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
    throw new Error(value);
}




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 		} catch(e) {
/******/ 			module.error = e;
/******/ 			throw e;
/******/ 		}
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("main." + __webpack_require__.h() + ".hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("47c94e1845737565b8f5")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "test-for-hpa:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results);
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							},
/******/ 							[])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								} else {
/******/ 									return setStatus("ready").then(function () {
/******/ 										return updatedModules;
/******/ 									});
/******/ 								}
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			currentUpdatedModulesList = updatedModulesList;
/******/ 			return new Promise((resolve, reject) => {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = (event) => {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdatetest_for_hpa"] = (chunkId, moreModules, runtime) => {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result;
/******/ 					if (newModuleFactory) {
/******/ 						result = getAffectedModuleEffects(moduleId);
/******/ 					} else {
/******/ 						result = {
/******/ 							type: "disposed",
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err2) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err2,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err2);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				} else {
/******/ 					currentUpdateChunks[chunkId] = false;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						!currentUpdateChunks[chunkId]
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3500&pathname=%2Fws&logging=info&overlay=false&reconnect=10&hot=true&live-reload=true");
/******/ 	__webpack_require__("./node_modules/webpack/hot/dev-server.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=main.js.map